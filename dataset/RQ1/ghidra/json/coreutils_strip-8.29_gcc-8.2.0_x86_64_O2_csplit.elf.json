{
    "funcCount": 212,
    "funcInfo": [
        {
            "funcStartAddr": "0x401ed5",
            "funcEndAddr": "0x401eda",
            "decompiledFuncCode": "\nvoid FUN_00401ed5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401ed5"
        },
        {
            "funcStartAddr": "0x401eda",
            "funcEndAddr": "0x401edf",
            "decompiledFuncCode": "\nvoid FUN_00401eda(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401eda"
        },
        {
            "funcStartAddr": "0x401edf",
            "funcEndAddr": "0x401ee4",
            "decompiledFuncCode": "\nvoid FUN_00401edf(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401edf"
        },
        {
            "funcStartAddr": "0x401ee4",
            "funcEndAddr": "0x401ee9",
            "decompiledFuncCode": "\nvoid FUN_00401ee4(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401ee4"
        },
        {
            "funcStartAddr": "0x401ef3",
            "funcEndAddr": "0x401ef8",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401ef3"
        },
        {
            "funcStartAddr": "0x401f00",
            "funcEndAddr": "0x402d17",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_00401f00(uint param_1,undefined8 *param_2)\n\n{\n  long *plVar1;\n  char cVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  ushort **ppuVar7;\n  long lVar8;\n  undefined8 *puVar9;\n  ulong uVar10;\n  long lVar11;\n  long lVar12;\n  undefined8 uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  byte bVar16;\n  ulong uVar17;\n  byte *pbVar18;\n  byte *pbVar19;\n  byte *extraout_RDX;\n  ulong uVar20;\n  int *piVar21;\n  long *unaff_RBP;\n  int *piVar22;\n  undefined4 *puVar23;\n  undefined4 *puVar24;\n  char *pcVar25;\n  long *unaff_R13;\n  long lVar26;\n  ulong unaff_R14;\n  char *pcVar27;\n  bool bVar28;\n  bool bVar29;\n  byte bVar30;\n  undefined auVar31 [16];\n  undefined8 uStack_108;\n  ulong local_100;\n  ulong local_f8;\n  char *local_f0;\n  ulong local_e0;\n  undefined local_d8 [136];\n  int local_50;\n  \n  bVar30 = 0;\n  local_100 = local_100 & 0xffffffff00000000 | (ulong)param_1;\n  FUN_00404260(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00416950(FUN_00404060);\n  DAT_0061d432 = 1;\n  DAT_0061d428 = 0;\n  DAT_0061d420 = 0;\n  DAT_0061d433 = 0;\n  DAT_0061d430 = '\\0';\n  DAT_0061d468 = &DAT_00416ab5;\n  DAT_0061d438 = param_2;\nLAB_00401f90:\n  iVar3 = FUN_00408360(local_100 & 0xffffffff,param_2,\"f:b:kn:sqz\",&PTR_s_digits_004175a0,0);\n  if (iVar3 != -1) {\n    if (iVar3 == 0x6b) {\n      DAT_0061d432 = 0;\n      goto LAB_00401f90;\n    }\n    if (0x6b < iVar3) {\n      if (iVar3 != 0x73) {\n        if (0x73 < iVar3) {\n          if (iVar3 == 0x7a) {\n            DAT_0061d431 = 1;\n          }\n          else {\n            if (iVar3 != 0x80) goto LAB_00402ac0;\n            DAT_0061d430 = '\\x01';\n          }\n          goto LAB_00401f90;\n        }\n        if (iVar3 == 0x6e) {\n          dcgettext(0,\"invalid number\",5);\n          DAT_0061d2b0 = FUN_004067f0(DAT_0061d640,0,0x7fffffff,\"\");\n          goto LAB_00401f90;\n        }\n        if (iVar3 != 0x71) goto LAB_00402ac0;\n      }\n      DAT_0061d433 = 1;\n      goto LAB_00401f90;\n    }\n    if (iVar3 == -0x82) goto LAB_00402a90;\n    if (iVar3 < -0x81) {\n      if (iVar3 == -0x83) {\n        FUN_00406370(stdout,\"csplit\",\"GNU coreutils\",PTR_DAT_0061d2b8,\"Stuart Kemp\",\n                     \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      goto LAB_00402ac0;\n    }\n    if (iVar3 == 0x62) {\n      DAT_0061d460 = DAT_0061d640;\n    }\n    else {\n      if (iVar3 != 0x66) goto LAB_00402ac0;\n      DAT_0061d468 = DAT_0061d640;\n    }\n    goto LAB_00401f90;\n  }\n  uVar6 = DAT_0061d33c;\n  if (1 < (int)((int)local_100 - DAT_0061d33c)) {\n    uVar17 = 0xffffffffffffffff;\n    pbVar18 = DAT_0061d468;\n    do {\n      if (uVar17 == 0) break;\n      uVar17 = uVar17 - 1;\n      bVar16 = *pbVar18;\n      pbVar18 = pbVar18 + (ulong)bVar30 * -2 + 1;\n    } while (bVar16 != 0);\n    if (DAT_0061d460 == (byte *)0x0) {\n      if (DAT_0061d2b0 < 10) {\n        uVar20 = 10;\n      }\n      else {\n        uVar20 = (ulong)(int)DAT_0061d2b0;\n        if (-(~uVar17 - 1) - 2 < uVar20) {\nLAB_004022d9:\n                    /* WARNING: Subroutine does not return */\n          FUN_00403510();\n        }\n      }\nLAB_0040230d:\n      DAT_0061d470 = FUN_004064b0(~uVar17 + uVar20);\n      pcVar27 = (char *)param_2[(int)DAT_0061d33c];\n      uVar6 = DAT_0061d33c + 1;\n      DAT_0061d33c = uVar6;\n      iVar3 = strcmp(pcVar27,\"-\");\n      if ((iVar3 == 0) || (iVar3 = FUN_00404100(0,pcVar27,0), uVar6 = DAT_0061d33c, -1 < iVar3)) {\n        if ((int)local_100 <= (int)uVar6) {\nLAB_00402423:\n          piVar21 = &DAT_00417560;\n          sigemptyset((sigset_t *)&DAT_0061d3a0);\n          piVar22 = &DAT_00417560;\n          do {\n            iVar3 = *piVar22;\n            sigaction(iVar3,(sigaction *)0x0,(sigaction *)local_d8);\n            if (local_d8._0_8_ != (__sighandler_t)0x1) {\n              sigaddset((sigset_t *)&DAT_0061d3a0,iVar3);\n            }\n            piVar22 = piVar22 + 1;\n          } while (piVar22 != (int *)&DAT_0041758c);\n          local_d8._0_8_ = FUN_00403260;\n          puVar23 = &DAT_0061d3a0;\n          puVar24 = (undefined4 *)(local_d8 + 8);\n          for (lVar8 = 0x20; lVar8 != 0; lVar8 = lVar8 + -1) {\n            *puVar24 = *puVar23;\n            puVar23 = puVar23 + (ulong)bVar30 * -2 + 1;\n            puVar24 = puVar24 + (ulong)bVar30 * -2 + 1;\n          }\n          local_50 = 0;\n          do {\n            iVar3 = *piVar21;\n            iVar5 = sigismember((sigset_t *)&DAT_0061d3a0,iVar3);\n            if (iVar5 != 0) {\n              sigaction(iVar3,(sigaction *)local_d8,(sigaction *)0x0);\n            }\n            piVar21 = piVar21 + 1;\n          } while (piVar21 != (int *)&DAT_0041758c);\n          local_100 = 0;\n          do {\n            if (DAT_0061d420 <= local_100) {\n              FUN_00403190();\n              FUN_00403a40();\n              FUN_00403000();\n              iVar3 = close(0);\n              if (iVar3 == 0) {\n                return 0;\n              }\nLAB_00402c6f:\n              uVar13 = dcgettext(0,\"read error\",5);\n              piVar21 = __errno_location();\n              error(0,*piVar21,uVar13);\n                    /* WARNING: Subroutine does not return */\n              FUN_00402fb0();\n            }\n            lVar8 = local_100 * 0x60;\n            unaff_R14 = 0;\n            if (*(char *)(DAT_0061d428 + 0x1e + lVar8) == '\\0') {\n              while ((uVar17 = unaff_R14, lVar11 = DAT_0061d428 + lVar8,\n                     *(char *)(lVar11 + 0x1c) != '\\0' ||\n                     (uVar17 < *(ulong *)(lVar11 + 0x10) || uVar17 == *(ulong *)(lVar11 + 0x10)))) {\n                lVar26 = *(long *)(lVar11 + 8);\n                unaff_R14 = uVar17 + 1;\n                FUN_00403190();\n                uVar20 = lVar26 * unaff_R14;\n                lVar26 = FUN_00403b30(DAT_0061d480 + 1);\n                if ((lVar26 == 0) && (DAT_0061d430 != '\\0')) goto LAB_004028b2;\n                uVar10 = FUN_00403c10();\n                if (uVar20 < uVar10 || uVar20 - uVar10 == 0) {\n                  FUN_00403000();\n                }\n                else {\n                  do {\n                    uVar10 = uVar10 + 1;\n                    lVar26 = FUN_00403960();\n                    if (lVar26 == 0) goto LAB_004028b2;\n                    FUN_00403480(lVar26,lVar26 + 8);\n                  } while (uVar20 - uVar10 != 0);\n                  FUN_00403000();\n                }\n                if (DAT_0061d430 != '\\0') {\n                  FUN_00403960();\n                }\n                lVar26 = FUN_00403b30();\n                if (lVar26 == 0) {\n                  while (DAT_0061d430 == '\\0') {\nLAB_004028b2:\n                    FUN_00403290(*(undefined8 *)(lVar11 + 8),uVar17);\n                  }\n                }\n              }\n            }\n            else {\n              for (; (unaff_RBP = (long *)(DAT_0061d428 + lVar8),\n                     *(char *)((long)unaff_RBP + 0x1c) != '\\0' ||\n                     (unaff_R14 < (ulong)unaff_RBP[2] || unaff_R14 == unaff_RBP[2]));\n                  unaff_R14 = unaff_R14 + 1) {\n                bVar30 = *(byte *)((long)unaff_RBP + 0x1d);\n                param_2 = (undefined8 *)(ulong)bVar30;\n                if (bVar30 == 0) {\n                  FUN_00403190();\n                }\n                if ((DAT_0061d430 != '\\0') && (DAT_0061d480 != 0)) {\n                  FUN_00403960();\n                }\n                if (*unaff_RBP < 0) {\n                  do {\n                    DAT_0061d480 = DAT_0061d480 + 1;\n                    lVar11 = FUN_00403b30();\n                    if (lVar11 == 0) goto LAB_0040275a;\n                    lVar11 = FUN_00416210();\n                    if (lVar11 == -2) goto LAB_00402aca;\n                  } while (lVar11 == -1);\n                }\n                else {\n                  while( true ) {\n                    DAT_0061d480 = DAT_0061d480 + 1;\n                    lVar11 = FUN_00403b30();\n                    if (lVar11 == 0) goto LAB_0040275a;\n                    lVar11 = FUN_00416210();\n                    if (lVar11 == -2) goto LAB_00402aca;\n                    if (lVar11 != -1) break;\n                    lVar11 = FUN_00403960();\n                    if (bVar30 == 0) {\n                      FUN_00403480(lVar11,lVar11 + 8);\n                    }\n                  }\n                }\n                uVar17 = DAT_0061d480 + *unaff_RBP;\n                local_f0 = (char *)((ulong)local_f0 & 0xffffffff00000000 |\n                                   (ulong)*(uint *)(unaff_RBP + 3));\n                local_f8 = uVar17;\n                uVar20 = FUN_00403c10();\n                if (uVar17 < uVar20) goto LAB_00402c25;\n                lVar11 = 0;\n                lVar26 = local_f8 - uVar20;\n                if (local_f8 != uVar20) {\n                  do {\n                    lVar12 = FUN_00403960();\n                    if (lVar12 == 0) {\n                      uVar13 = DAT_0061d438[(int)local_f0];\n                      goto LAB_00402afe;\n                    }\n                    if (bVar30 == 0) {\n                      FUN_00403480(lVar12,lVar12 + 8);\n                    }\n                    lVar11 = lVar11 + 1;\n                  } while (lVar26 != lVar11);\n                }\n                if (bVar30 == 0) {\n                  FUN_00403000();\n                }\n                if (0 < *unaff_RBP) {\n                  DAT_0061d480 = local_f8;\n                }\n              }\n            }\n            local_100 = local_100 + 1;\n          } while( true );\n        }\n        local_f8 = (ulong)(int)uVar6;\n        pcVar27 = (char *)param_2[local_f8];\n        do {\n          uVar20 = (ulong)uVar6;\n          cVar2 = *pcVar27;\n          bVar29 = cVar2 == '%';\n          uVar17 = (ulong)unaff_R13 & 0xffffffffffffff00 | (ulong)bVar29;\n          if ((cVar2 != '/') && (!bVar29)) {\n            puVar9 = param_2 + local_f8;\n            lVar8 = FUN_00403540();\n            uVar13 = *puVar9;\n            *(uint *)(lVar8 + 0x18) = uVar6;\n            iVar3 = FUN_00406f70(uVar13,0,10,&local_e0,\"\");\n            if (iVar3 == 0) {\n              if (local_e0 != 0) {\n                if (local_e0 < DAT_0061d390) goto LAB_00402be4;\n                if (local_e0 == DAT_0061d390) goto LAB_004025b7;\nLAB_0040240b:\n                DAT_0061d390 = local_e0;\n                *(ulong *)(lVar8 + 8) = local_e0;\n                goto LAB_00402416;\n              }\n              uVar13 = *puVar9;\n              uVar15 = dcgettext(0,\"%s: line number must be greater than zero\",5);\n              error(1,0,uVar15,uVar13);\n            }\n            uVar13 = FUN_00405e80(*puVar9);\n            uVar15 = dcgettext(0,\"%s: invalid pattern\",5);\n            error(1,0,uVar15,uVar13);\nLAB_00402b87:\n            uVar13 = FUN_00405e80(pcVar27);\n            uVar15 = dcgettext(0,\"%s: invalid regular expression: %s\",5);\n            error(0,0,uVar15,uVar13,uVar17);\n                    /* WARNING: Subroutine does not return */\n            FUN_00402fb0();\n          }\n          local_f0 = pcVar27 + 1;\n          puVar9 = (undefined8 *)strrchr(local_f0,(int)cVar2);\n          if (puVar9 == (undefined8 *)0x0) {\n            uVar13 = dcgettext(0,\"%s: closing delimiter \\'%c\\' missing\",5);\n            error(1,0,uVar13,pcVar27,(int)cVar2);\nLAB_00402be4:\n            uVar13 = FUN_00404210();\n            uVar15 = FUN_00405e80(*puVar9);\n            uVar14 = dcgettext(0,\"line number %s is smaller than preceding line number, %s\",5);\n            error(1,0,uVar14,uVar15,uVar13);\nLAB_00402c25:\n            uVar13 = DAT_0061d438[(int)local_f0];\nLAB_00402afe:\n            uVar13 = FUN_00405e80(uVar13);\n            uVar15 = dcgettext(0,\"%s: line number out of range\",5);\n            error(0,0,uVar15,uVar13);\n                    /* WARNING: Subroutine does not return */\n            FUN_00402fb0();\n          }\n          lVar8 = FUN_00403540();\n          *(bool *)(lVar8 + 0x1d) = bVar29;\n          *(uint *)(lVar8 + 0x18) = uVar6;\n          *(undefined *)(lVar8 + 0x1e) = 1;\n          *(undefined8 *)(lVar8 + 0x20) = 0;\n          *(undefined8 *)(lVar8 + 0x28) = 0;\n          uVar13 = FUN_004064b0(0x100);\n          *(undefined8 *)(lVar8 + 0x48) = 0;\n          *(undefined8 *)(lVar8 + 0x40) = uVar13;\n          DAT_0061d648 = 0x2c6;\n          uVar17 = FUN_00415890(local_f0,(long)puVar9 + (-1 - (long)pcVar27),lVar8 + 0x20);\n          if (uVar17 != 0) goto LAB_00402b87;\n          if ((*(char *)((long)puVar9 + 1) != '\\0') &&\n             (iVar3 = FUN_00406820((long)puVar9 + 1,0,10,lVar8,\"\"), iVar3 != 0)) {\n            uVar20 = FUN_00405e80(pcVar27);\n            uVar13 = dcgettext(0,\"%s: integer expected after delimiter\",5);\n            error(1,0,uVar13,uVar20);\nLAB_004025b7:\n            uVar6 = (uint)uVar20;\n            FUN_00405e80(*puVar9);\n            uVar13 = dcgettext(0,\"warning: line number %s is the same as preceding line number\",5);\n            error(0,0,uVar13);\n            goto LAB_0040240b;\n          }\nLAB_00402416:\n          uVar17 = local_f8;\n          uVar4 = uVar6 + 1;\n          if ((int)local_100 <= (int)uVar4) goto LAB_00402423;\n          unaff_R13 = (long *)(local_f8 + 1);\n          pcVar27 = (char *)param_2[(long)unaff_R13];\n          if (*pcVar27 == '{') {\n            uVar20 = 0xffffffffffffffff;\n            pcVar25 = pcVar27;\n            do {\n              if (uVar20 == 0) break;\n              uVar20 = uVar20 - 1;\n              cVar2 = *pcVar25;\n              pcVar25 = pcVar25 + (ulong)bVar30 * -2 + 1;\n            } while (cVar2 != '\\0');\n            plVar1 = (long *)(pcVar27 + (~uVar20 - 2));\n            if (*(char *)plVar1 != '}') {\nLAB_00402d3d:\n              uVar13 = FUN_00405e80(pcVar27);\n              uVar15 = dcgettext(0,\"%s: \\'}\\' is required in repeat count\",5);\n              auVar31 = error(1,0,uVar15,uVar13);\n              uVar13 = uStack_108;\n              uStack_108 = SUB168(auVar31,0);\n              (*(code *)PTR___libc_start_main_0061cff0)\n                        (FUN_00401f00,uVar13,&local_100,FUN_004168e0,FUN_00416940,\n                         SUB168(auVar31 >> 0x40,0),&uStack_108);\n              do {\n                    /* WARNING: Do nothing block with infinite loop */\n              } while( true );\n            }\n            *(char *)plVar1 = '\\0';\n            if ((pcVar27 + 1 == (char *)((long)plVar1 + -1)) && (pcVar27[1] == '*')) {\n              *(undefined *)(lVar8 + 0x1c) = 1;\n            }\n            else {\n              iVar3 = FUN_00406f70(pcVar27 + 1,0,10,local_d8,\"\");\n              if (iVar3 != 0) {\n                uVar13 = FUN_00405e80(DAT_0061d438[(long)unaff_R13]);\n                uVar15 = dcgettext(0,\"%s}: integer required between \\'{\\' and \\'}\\'\",5);\n                error(1,0,uVar15,uVar13);\n                goto LAB_00402d3d;\n              }\n              *(code **)(lVar8 + 0x10) = local_d8._0_8_;\n            }\n            *(char *)plVar1 = '}';\n            uVar4 = uVar6 + 2;\n            if ((int)local_100 <= (int)uVar4) goto LAB_00402423;\n            pcVar27 = (char *)param_2[uVar17 + 2];\n            unaff_R13 = plVar1;\n          }\n          local_f8 = (ulong)(int)uVar4;\n          uVar6 = uVar4;\n        } while( true );\n      }\n      uVar13 = FUN_00405c30(4,pcVar27);\n      uVar15 = dcgettext(0,\"cannot open %s for reading\",5);\n      piVar21 = __errno_location();\n      error(1,*piVar21,uVar15,uVar13);\n      goto LAB_00402a19;\n    }\n    bVar29 = false;\n    bVar16 = *DAT_0061d460;\n    pbVar18 = DAT_0061d460;\n    if (bVar16 != 0) {\n      do {\n        pbVar19 = pbVar18 + 1;\n        bVar28 = bVar16 == 0x25;\n        bVar16 = pbVar18[1];\n        if (bVar28) {\n          if (pbVar18[1] != 0x25) {\n            if (!bVar29) {\n              uVar20 = 0;\nLAB_00402198:\n              uVar6 = (uint)uVar20;\n              bVar16 = *pbVar19;\n              if (bVar16 == 0x27) goto LAB_0040224e;\n              if ((char)bVar16 < '(') {\n                if (bVar16 != 0x23) {\njoined_r0x004021c6:\n                  while ((int)(char)bVar16 - 0x30U < 10) {\n                    pbVar19 = pbVar19 + 1;\n                    bVar16 = *pbVar19;\n                  }\n                  if (bVar16 == 0x2e) goto LAB_004029ab;\n                  do {\n                    uVar6 = (uint)uVar20;\n                    bVar16 = *pbVar19;\n                    unaff_RBP = (long *)(ulong)bVar16;\n                    if (bVar16 == 0x69) {\nLAB_00402262:\n                      *pbVar19 = 0x75;\n                      uVar4 = 1;\nLAB_0040226a:\n                      if ((uVar6 & ~uVar4) != 0) {\n                        uVar13 = dcgettext(0,\"invalid flags in conversion specification: %%%c%c\",5);\n                        error(1,0,uVar13,(-((uVar6 & ~uVar4 & 2) == 0) & 4U) + 0x23,unaff_RBP);\n                        goto LAB_00402c6f;\n                      }\n                      pbVar18 = pbVar19 + 1;\n                      pbVar19 = pbVar19 + 1;\n                      bVar29 = true;\n                      unaff_R13 = unaff_RBP;\n                      bVar16 = *pbVar18;\n                      goto LAB_00402162;\n                    }\n                    if ((char)bVar16 < 'j') {\n                      if (bVar16 != 0x58) {\n                        if (bVar16 == 100) goto LAB_00402262;\n                        if (bVar16 != 0) goto LAB_00402216;\n                        uVar13 = dcgettext(0,\"missing conversion specifier in suffix\",5);\n                        pbVar19 = (byte *)0x0;\n                        uVar6 = 1;\n                        error(1,0,uVar13);\n                      }\nLAB_004022ad:\n                      uVar4 = 2;\n                      goto LAB_0040226a;\n                    }\n                    if (bVar16 == 0x75) {\n                      uVar4 = 1;\n                      goto LAB_0040226a;\n                    }\n                    if ((bVar16 == 0x78) || (bVar16 == 0x6f)) goto LAB_004022ad;\nLAB_00402216:\n                    ppuVar7 = __ctype_b_loc();\n                    if ((*(byte *)((long)*ppuVar7 + (long)unaff_RBP * 2 + 1) & 0x40) != 0)\n                    goto code_r0x0040222e;\n                    uVar13 = dcgettext(0,\"invalid conversion specifier in suffix: \\\\%.3o\",5);\n                    pbVar19 = (byte *)0x0;\n                    uVar20 = 1;\n                    error(1,0,uVar13,unaff_RBP);\nLAB_004029ab:\n                    do {\n                      pbVar19 = pbVar19 + 1;\n                    } while ((int)(char)*pbVar19 - 0x30U < 10);\n                  } while( true );\n                }\n                uVar20 = (ulong)(uVar6 | 2);\n              }\n              else if ((bVar16 != 0x2d) && (bVar16 != 0x30)) goto joined_r0x004021c6;\n              goto LAB_004021af;\n            }\n            uVar13 = dcgettext(0,\"too many %% conversion specifications in suffix\",5);\n            error(1,0,uVar13);\n            goto LAB_00402cbd;\n          }\n          pbVar19 = pbVar18 + 2;\n          bVar16 = pbVar18[2];\n        }\nLAB_00402162:\n        pbVar18 = pbVar19;\n      } while (bVar16 != 0);\n      if (bVar29) {\n        iVar3 = __snprintf_chk(0,0,1);\n        uVar20 = (ulong)iVar3;\n        if (iVar3 < 0) goto LAB_004022d9;\n        goto LAB_0040230d;\n      }\n    }\n    uVar13 = dcgettext(0,\"missing %% conversion specification in suffix\",5);\n    error(1,0,uVar13);\nLAB_00402a90:\n    uVar6 = FUN_00403c80(0);\n  }\n  if ((int)local_100 <= (int)uVar6) {\n    uVar13 = dcgettext(0,\"missing operand\",5);\n    error(0,0,uVar13);\n    goto LAB_00402ac0;\n  }\nLAB_00402ccc:\n  uVar13 = FUN_00405e80(param_2[(long)(int)local_100 + -1]);\n  uVar15 = dcgettext(0,\"missing operand after %s\",5);\n  error(0,0,uVar15,uVar13);\nLAB_00402ac0:\n  FUN_00403c80(1);\nLAB_00402aca:\n  uVar13 = dcgettext(0,\"error in regular expression search\",5);\n  error(0,0,uVar13);\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\ncode_r0x0040222e:\n  uVar13 = dcgettext(0,\"invalid conversion specifier in suffix: %c\",5);\n  uVar6 = 1;\n  error(1,0,uVar13,unaff_RBP);\n  pbVar19 = extraout_RDX;\nLAB_0040224e:\n  uVar20 = (ulong)(uVar6 | 1);\nLAB_004021af:\n  pbVar19 = pbVar19 + 1;\n  goto LAB_00402198;\nLAB_0040275a:\n  if (*(char *)((long)unaff_RBP + 0x1c) != '\\0') {\n    if (bVar30 != 0) goto LAB_0040276d;\nLAB_00402a19:\n    FUN_00403a40();\n    FUN_00403000();\nLAB_0040276d:\n                    /* WARNING: Subroutine does not return */\n    exit(0);\n  }\nLAB_00402cbd:\n  FUN_00403a70(unaff_RBP,unaff_R14,(ulong)param_2 & 0xff);\n  goto LAB_00402ccc;\n}\n\n",
            "funcName": "FUN_00401f00"
        },
        {
            "funcStartAddr": "0x402d70",
            "funcEndAddr": "0x402d9b",
            "decompiledFuncCode": "\nvoid FUN_00402d70(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0061cff0)\n            (FUN_00401f00,unaff_retaddr,&stack0x00000008,FUN_004168e0,FUN_00416940,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402d70"
        },
        {
            "funcStartAddr": "0x402d9b",
            "funcEndAddr": "0x402dba",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402da8) */\n/* WARNING: Removing unreachable block (ram,0x00402db2) */\n\nvoid FUN_00402d9b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402d9b"
        },
        {
            "funcStartAddr": "0x402dba",
            "funcEndAddr": "0x402df1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402de9) */\n\nvoid FUN_00402dba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402dba"
        },
        {
            "funcStartAddr": "0x402df1",
            "funcEndAddr": "0x402e48",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402e26) */\n\nvoid FUN_00402df1(void)\n\n{\n  if (DAT_0061d368 != '\\0') {\n    return;\n  }\n  FUN_00402d9b();\n  DAT_0061d368 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402df1"
        },
        {
            "funcStartAddr": "0x402e48",
            "funcEndAddr": "0x402e4d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402de9) */\n\nvoid thunk_FUN_00402dba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402e48"
        },
        {
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x402f00",
            "decompiledFuncCode": "\nchar * FUN_00402e50(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  long lVar2;\n  char *pcVar3;\n  size_t sVar4;\n  \n  strcpy(DAT_0061d470,DAT_0061d468);\n  pcVar3 = DAT_0061d470;\n  lVar2 = DAT_0061d460;\n  uVar1 = DAT_0061d2b0;\n  if (DAT_0061d460 != 0) {\n    sVar4 = strlen(DAT_0061d468);\n    __sprintf_chk(pcVar3 + sVar4,1,0xffffffffffffffff,lVar2,param_1);\n    return DAT_0061d470;\n  }\n  sVar4 = strlen(DAT_0061d468);\n  __sprintf_chk(pcVar3 + sVar4,1,0xffffffffffffffff,&DAT_004169a4,uVar1,param_1);\n  return DAT_0061d470;\n}\n\n",
            "funcName": "FUN_00402e50"
        },
        {
            "funcStartAddr": "0x402f10",
            "funcEndAddr": "0x402fa2",
            "decompiledFuncCode": "\nvoid FUN_00402f10(char param_1)\n\n{\n  int iVar1;\n  char *__name;\n  undefined8 uVar2;\n  int *piVar3;\n  uint uVar4;\n  \n  if (DAT_0061d458 == 0) {\n    DAT_0061d458 = 0;\n    return;\n  }\n  uVar4 = 0;\n  do {\n    while( true ) {\n      __name = (char *)FUN_00402e50(uVar4);\n      iVar1 = unlink(__name);\n      if ((iVar1 != 0) && (param_1 == '\\0')) break;\n      uVar4 = uVar4 + 1;\n      if (DAT_0061d458 <= uVar4) {\n        DAT_0061d458 = 0;\n        return;\n      }\n    }\n    uVar4 = uVar4 + 1;\n    uVar2 = FUN_00405d00(0,3,__name);\n    piVar3 = __errno_location();\n    error(0,*piVar3,\"%s\",uVar2);\n  } while (uVar4 < DAT_0061d458);\n  DAT_0061d458 = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00402f10"
        },
        {
            "funcStartAddr": "0x402fb0",
            "funcEndAddr": "0x402ff6",
            "decompiledFuncCode": "\nvoid FUN_00402fb0(void)\n\n{\n  sigset_t sStack_88;\n  \n  FUN_00403000();\n  sigprocmask(0,(sigset_t *)&DAT_0061d3a0,&sStack_88);\n  if (DAT_0061d432 != '\\0') {\n    FUN_00402f10(0);\n  }\n  sigprocmask(2,&sStack_88,(sigset_t *)0x0);\n                    /* WARNING: Subroutine does not return */\n  exit(1);\n}\n\n",
            "funcName": "FUN_00402fb0"
        },
        {
            "funcStartAddr": "0x403000",
            "funcEndAddr": "0x403180",
            "decompiledFuncCode": "\nvoid FUN_00403000(void)\n\n{\n  char *pcVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  sigset_t sStack_98;\n  \n  if (DAT_0061d448 == (byte *)0x0) {\n    return;\n  }\n  if ((*DAT_0061d448 & 0x20) == 0) {\n    iVar2 = FUN_004073b0();\n    if (iVar2 == 0) {\n      if ((DAT_0061d450 == 0) && (DAT_0061d431 != '\\0')) {\n        sigprocmask(0,(sigset_t *)&DAT_0061d3a0,&sStack_98);\n        pcVar1 = DAT_0061d440;\n        iVar3 = unlink(DAT_0061d440);\n        piVar5 = __errno_location();\n        iVar2 = *piVar5;\n        DAT_0061d458 = DAT_0061d458 - (uint)(iVar3 == 0);\n        sigprocmask(2,&sStack_98,(sigset_t *)0x0);\n        if (iVar3 != 0) {\n          uVar4 = FUN_00405d00(0,3,pcVar1);\n          error(0,iVar2,\"%s\",uVar4);\n        }\n      }\n      else if (DAT_0061d433 == '\\0') {\n        uVar4 = FUN_00404210(DAT_0061d450,&sStack_98);\n        __fprintf_chk(stdout,1,\"%s\\n\",uVar4);\n      }\n      DAT_0061d448 = (byte *)0x0;\n      return;\n    }\n    uVar4 = FUN_00405d00(0,3,DAT_0061d440);\n    piVar5 = __errno_location();\n    error(0,*piVar5,\"%s\",uVar4);\n    DAT_0061d448 = (byte *)0x0;\n                    /* WARNING: Subroutine does not return */\n    FUN_00402fb0();\n  }\n  uVar4 = FUN_00405c30(4,DAT_0061d440);\n  uVar6 = dcgettext(0,\"write error for %s\",5);\n  error(0,0,uVar6,uVar4);\n  DAT_0061d448 = (byte *)0x0;\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403000"
        },
        {
            "funcStartAddr": "0x403190",
            "funcEndAddr": "0x40325d",
            "decompiledFuncCode": "\nvoid FUN_00403190(void)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  int *piVar3;\n  int iVar4;\n  sigset_t sStack_98;\n  \n  iVar4 = 0x4b;\n  uVar1 = FUN_00402e50();\n  DAT_0061d440 = uVar1;\n  if (DAT_0061d458 != -1) {\n    sigprocmask(0,(sigset_t *)&DAT_0061d3a0,&sStack_98);\n    lVar2 = FUN_00404170(uVar1,&DAT_004169bc);\n    DAT_0061d448 = lVar2;\n    piVar3 = __errno_location();\n    iVar4 = *piVar3;\n    DAT_0061d458 = (uint)(lVar2 != 0) + DAT_0061d458;\n    sigprocmask(2,&sStack_98,(sigset_t *)0x0);\n    if (lVar2 != 0) {\n      DAT_0061d450 = 0;\n      return;\n    }\n  }\n  uVar1 = FUN_00405d00(0,3,DAT_0061d440);\n  error(0,iVar4,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403190"
        },
        {
            "funcStartAddr": "0x403260",
            "funcEndAddr": "0x403289",
            "decompiledFuncCode": "\nvoid FUN_00403260(int param_1)\n\n{\n  if (DAT_0061d432 != '\\0') {\n    FUN_00402f10(1);\n  }\n  signal(param_1,(__sighandler_t)0x0);\n  raise(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00403260"
        },
        {
            "funcStartAddr": "0x403290",
            "funcEndAddr": "0x403337",
            "decompiledFuncCode": "\nvoid FUN_00403290(undefined8 param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined auStack_38 [32];\n  \n  uVar1 = FUN_00404210(param_1,auStack_38);\n  uVar2 = FUN_00405e80(uVar1);\n  uVar1 = DAT_0061d4b8;\n  uVar3 = dcgettext(0,\"%s: %s: line number out of range\",5);\n  __fprintf_chk(stderr,1,uVar3,uVar1,uVar2);\n  if (param_2 == 0) {\n    fputc(10,stderr);\n  }\n  else {\n    uVar1 = FUN_00404210(param_2,auStack_38);\n    uVar2 = dcgettext(0,\" on repetition %s\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar1);\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403290"
        },
        {
            "funcStartAddr": "0x403340",
            "funcEndAddr": "0x40341c",
            "decompiledFuncCode": "\nvoid FUN_00403340(long **param_1,long **param_2,long param_3,long param_4)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 *puVar3;\n  long *plVar4;\n  \n  if (*param_1 == (long *)0x0) {\n    plVar4 = (long *)FUN_004064b0(0x520);\n    *param_2 = plVar4;\n    plVar4[0xa3] = 0;\n    *plVar4 = 0;\n    plVar4[1] = 0;\n    plVar4[2] = 0;\n    *param_1 = plVar4;\n  }\n  plVar4 = *param_2;\n  lVar2 = *plVar4;\n  if (lVar2 == 0x50) {\n    puVar3 = (undefined8 *)FUN_004064b0(0x520);\n    puVar3[0xa3] = 0;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    plVar4[0xa3] = (long)puVar3;\n    plVar4 = (long *)(*param_2)[0xa3];\n    *param_2 = plVar4;\n    lVar2 = *plVar4;\n  }\n  lVar1 = plVar4[1];\n  plVar4[lVar1 * 2 + 4] = param_3;\n  plVar4[lVar1 * 2 + 3] = param_4;\n  *plVar4 = lVar2 + 1;\n  plVar4[1] = lVar1 + 1;\n  return;\n}\n\n",
            "funcName": "FUN_00403340"
        },
        {
            "funcStartAddr": "0x403430",
            "funcEndAddr": "0x40347a",
            "decompiledFuncCode": "\nvoid FUN_00403430(void **param_1,void **param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  \n  __ptr = *param_2;\n  while (__ptr != (void *)0x0) {\n    pvVar1 = *(void **)((long)__ptr + 0x518);\n    free(__ptr);\n    __ptr = pvVar1;\n  }\n  *param_2 = (void *)0x0;\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_00403430"
        },
        {
            "funcStartAddr": "0x403480",
            "funcEndAddr": "0x403504",
            "decompiledFuncCode": "\nvoid FUN_00403480(size_t *param_1,void **param_2)\n\n{\n  size_t sVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  sVar1 = fwrite_unlocked(*param_2,1,*param_1,DAT_0061d448);\n  if (sVar1 == *param_1) {\n    DAT_0061d450 = DAT_0061d450 + sVar1;\n    return;\n  }\n  uVar2 = FUN_00405c30(4,DAT_0061d440);\n  uVar3 = dcgettext(0,\"write error for %s\",5);\n  piVar4 = __errno_location();\n  error(0,*piVar4,uVar3,uVar2);\n  DAT_0061d448 = (FILE *)0x0;\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403480"
        },
        {
            "funcStartAddr": "0x403510",
            "funcEndAddr": "0x40353d",
            "decompiledFuncCode": "\nvoid FUN_00403510(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(0,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403510"
        },
        {
            "funcStartAddr": "0x403540",
            "funcEndAddr": "0x403612",
            "decompiledFuncCode": "\nvoid FUN_00403540(void)\n\n{\n  undefined8 *puVar1;\n  long lVar2;\n  \n  if (DAT_0061d420 != DAT_0061d388) goto LAB_0040355e;\n  if (DAT_0061d428 == 0) {\n    if (DAT_0061d388 != 0) {\n      if ((SUB168(ZEXT816(0x60) * ZEXT816(DAT_0061d388),0) < 0) ||\n         (SUB168(ZEXT816(0x60) * ZEXT816(DAT_0061d388) >> 0x40,0) != 0)) goto LAB_00403610;\n      goto LAB_004035bf;\n    }\n    lVar2 = 0x60;\n    DAT_0061d388 = 1;\n  }\n  else {\n    if (0xe38e38e38e38e2 < DAT_0061d388) {\nLAB_00403610:\n                    /* WARNING: Subroutine does not return */\n      FUN_00403510();\n    }\n    DAT_0061d388 = DAT_0061d388 + 1 + (DAT_0061d388 >> 1);\nLAB_004035bf:\n    lVar2 = DAT_0061d388 * 0x60;\n  }\n  DAT_0061d428 = FUN_00406510(DAT_0061d428,lVar2);\nLAB_0040355e:\n  puVar1 = (undefined8 *)(DAT_0061d420 * 0x60 + DAT_0061d428);\n  DAT_0061d420 = DAT_0061d420 + 1;\n  *(undefined *)((long)puVar1 + 0x1e) = 0;\n  puVar1[2] = 0;\n  *(undefined *)((long)puVar1 + 0x1c) = 0;\n  puVar1[1] = 0;\n  *puVar1 = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00403540"
        },
        {
            "funcStartAddr": "0x403630",
            "funcEndAddr": "0x403934",
            "decompiledFuncCode": "\nundefined8 FUN_00403630(void)\n\n{\n  long *__ptr;\n  void *pvVar1;\n  size_t __n;\n  undefined8 uVar2;\n  int *piVar3;\n  ulong uVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  \n  uVar4 = 0x1fff;\n  if (0x1ffe < DAT_0061d490) {\n    uVar4 = DAT_0061d490;\n  }\n  do {\n    if (uVar4 < 0x2000) {\n      lVar5 = 0x2000;\n      lVar6 = 0x1fff;\n    }\n    else {\n      uVar4 = uVar4 - 0x1800 & 0xfffffffffffff800;\n      lVar6 = uVar4 + 0x1fff;\n      lVar5 = uVar4 + 0x2000;\n    }\n    __ptr = (long *)FUN_004064b0(0x48);\n    pvVar1 = (void *)FUN_004064b0(lVar5);\n    __n = DAT_0061d490;\n    *__ptr = lVar6;\n    __ptr[5] = (long)pvVar1;\n    lVar5 = DAT_0061d488;\n    __ptr[7] = 0;\n    __ptr[6] = 0;\n    __ptr[4] = 0;\n    __ptr[1] = 0;\n    __ptr[3] = lVar5 + 1;\n    __ptr[2] = lVar5 + 1;\n    __ptr[8] = 0;\n    if (__n == 0) {\nLAB_004036e6:\n      lVar6 = FUN_00405ea0(0,pvVar1,lVar6);\n      if (lVar6 == 0) {\n        DAT_0061d478 = '\\x01';\n      }\n      else if (lVar6 == -1) {\n        uVar2 = dcgettext(0,\"read error\",5);\n        piVar3 = __errno_location();\n        error(0,*piVar3,uVar2);\n                    /* WARNING: Subroutine does not return */\n        FUN_00402fb0();\n      }\n      __n = lVar6 + __ptr[1];\n      __ptr[1] = __n;\n      if (__n != 0) {\n        pvVar1 = (void *)__ptr[5];\n        goto LAB_004037a2;\n      }\n    }\n    else {\n      memcpy(pvVar1,DAT_0061d498,__n);\n      __ptr[1] = __n;\n      DAT_0061d490 = 0;\n      lVar6 = lVar6 - __n;\n      if (lVar6 != 0) {\n        pvVar1 = (void *)((long)pvVar1 + __n);\n        goto LAB_004036e6;\n      }\nLAB_004037a2:\n      lVar6 = 0;\n      while (lVar5 = FUN_00408460(pvVar1,10,__n), lVar5 != 0) {\n        lVar6 = lVar6 + 1;\n        lVar7 = (lVar5 - (long)pvVar1) + 1;\n        __n = __n - lVar7;\n        FUN_00403340(__ptr + 6,__ptr + 7,pvVar1,lVar7);\n        pvVar1 = (void *)(lVar5 + 1);\n      }\n      if (__n != 0) {\n        if (DAT_0061d478 == '\\0') {\n          pvVar1 = (void *)FUN_004066b0(pvVar1,__n);\n          free(DAT_0061d498);\n          DAT_0061d490 = __n;\n          DAT_0061d498 = pvVar1;\n        }\n        else {\n          FUN_00403340(__ptr + 6,__ptr + 7,pvVar1,__n);\n          lVar6 = lVar6 + 1;\n        }\n      }\n      __ptr[4] = lVar6;\n      lVar5 = DAT_0061d488 + 1;\n      DAT_0061d488 = DAT_0061d488 + lVar6;\n      __ptr[2] = lVar5;\n      __ptr[3] = lVar5;\n      lVar5 = (long)DAT_0061d4a0;\n      if (lVar6 != 0) {\n        __ptr[8] = 0;\n        __ptr[7] = __ptr[6];\n        if (lVar5 != 0) {\n          do {\n            lVar6 = lVar5;\n            lVar5 = *(long *)(lVar6 + 0x40);\n          } while (lVar5 != 0);\n          *(long **)(lVar6 + 0x40) = __ptr;\n          return 1;\n        }\n        DAT_0061d4a0 = __ptr;\n        return 1;\n      }\n    }\n    if (DAT_0061d478 != '\\0') {\n      FUN_00403430(__ptr + 5,__ptr + 6);\n      free(__ptr);\n      return 0;\n    }\n    uVar4 = *__ptr * 2;\n    if (((long)uVar4 < 0) || (*__ptr < 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00403510();\n    }\n    FUN_00403430(__ptr + 5,__ptr + 6);\n    free(__ptr);\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403630"
        },
        {
            "funcStartAddr": "0x403960",
            "funcEndAddr": "0x403a24",
            "decompiledFuncCode": "\nlong * FUN_00403960(void)\n\n{\n  long lVar1;\n  ulong uVar2;\n  long *plVar3;\n  long *plVar4;\n  void *__ptr;\n  long lVar5;\n  char cVar6;\n  \n  __ptr = DAT_0061d380;\n  if (DAT_0061d380 != (void *)0x0) {\n    FUN_00403430((long)DAT_0061d380 + 0x28,(long)DAT_0061d380 + 0x30);\n    free(__ptr);\n    DAT_0061d380 = (void *)0x0;\n  }\n  if ((DAT_0061d4a0 == 0) && ((DAT_0061d478 != '\\0' || (cVar6 = FUN_00403630(), cVar6 == '\\0')))) {\n    return (long *)0x0;\n  }\n  lVar5 = DAT_0061d4a0;\n  uVar2 = *(ulong *)(DAT_0061d4a0 + 0x18);\n  if (DAT_0061d480 < uVar2) {\n    DAT_0061d480 = uVar2;\n  }\n  plVar3 = *(long **)(DAT_0061d4a0 + 0x38);\n  *(ulong *)(DAT_0061d4a0 + 0x18) = uVar2 + 1;\n  lVar1 = plVar3[2] + 1;\n  plVar3[2] = lVar1;\n  if (*plVar3 == lVar1) {\n    plVar4 = (long *)plVar3[0xa3];\n    *(long **)(lVar5 + 0x38) = plVar4;\n    if ((plVar4 == (long *)0x0) || (*plVar4 == 0)) {\n      DAT_0061d380 = (void *)lVar5;\n      DAT_0061d4a0 = *(undefined8 *)(lVar5 + 0x40);\n      return plVar3 + lVar1 * 2 + 1;\n    }\n  }\n  return plVar3 + lVar1 * 2 + 1;\n}\n\n",
            "funcName": "FUN_00403960"
        },
        {
            "funcStartAddr": "0x403a40",
            "funcEndAddr": "0x403a61",
            "decompiledFuncCode": "\nvoid FUN_00403a40(void)\n\n{\n  long lVar1;\n  \n  while( true ) {\n    lVar1 = FUN_00403960();\n    if (lVar1 == 0) break;\n    FUN_00403480(lVar1,lVar1 + 8);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403a40"
        },
        {
            "funcStartAddr": "0x403a70",
            "funcEndAddr": "0x403b30",
            "decompiledFuncCode": "\nvoid FUN_00403a70(long param_1,long param_2,char param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined auStack_48 [40];\n  \n  uVar1 = FUN_00405e80(*(undefined8 *)(DAT_0061d438 + (long)*(int *)(param_1 + 0x18) * 8));\n  uVar3 = DAT_0061d4b8;\n  uVar2 = dcgettext(0,\"%s: %s: match not found\",5);\n  __fprintf_chk(stderr,1,uVar2,uVar3,uVar1);\n  if (param_2 == 0) {\n    fputc(10,stderr);\n  }\n  else {\n    uVar3 = FUN_00404210(param_2,auStack_48);\n    uVar1 = dcgettext(0,\" on repetition %s\\n\",5);\n    __fprintf_chk(stderr,1,uVar1,uVar3);\n  }\n  if (param_3 == '\\0') {\n    FUN_00403a40();\n    FUN_00403000();\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00402fb0();\n}\n\n",
            "funcName": "FUN_00403a70"
        },
        {
            "funcStartAddr": "0x403b30",
            "funcEndAddr": "0x403bf8",
            "decompiledFuncCode": "\nlong FUN_00403b30(ulong param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  \n  if (((DAT_0061d4a0 == 0) && ((DAT_0061d478 != '\\0' || (cVar1 = FUN_00403630(), cVar1 == '\\0'))))\n     || (uVar3 = *(ulong *)(DAT_0061d4a0 + 0x10), lVar4 = DAT_0061d4a0, param_1 < uVar3)) {\n    return 0;\n  }\n  do {\n    if (param_1 < *(long *)(lVar4 + 0x20) + uVar3) {\n      lVar4 = *(long *)(lVar4 + 0x30);\n      for (param_1 = param_1 - uVar3; 0x4f < param_1; param_1 = param_1 - 0x50) {\n        lVar4 = *(long *)(lVar4 + 0x518);\n      }\n      return lVar4 + 0x18 + param_1 * 0x10;\n    }\n    lVar2 = *(long *)(lVar4 + 0x40);\n    if (lVar2 == 0) {\n      if (DAT_0061d478 != '\\0') {\n        return 0;\n      }\n      cVar1 = FUN_00403630();\n      if (cVar1 == '\\0') {\n        return 0;\n      }\n      lVar2 = *(long *)(lVar4 + 0x40);\n      if (lVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"b\",\"src/csplit.c\",0x26a,\"find_line\");\n      }\n    }\n    uVar3 = *(ulong *)(lVar2 + 0x10);\n    lVar4 = lVar2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403b30"
        },
        {
            "funcStartAddr": "0x403c10",
            "funcEndAddr": "0x403c71",
            "decompiledFuncCode": "\nundefined8 FUN_00403c10(void)\n\n{\n  FILE *pFVar1;\n  char cVar2;\n  int iVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  char *pcVar6;\n  byte **ppbVar7;\n  undefined8 uVar9;\n  char *pcVar10;\n  long lVar11;\n  byte *pbVar12;\n  int __status;\n  byte *pbVar13;\n  bool bVar14;\n  bool bVar15;\n  byte bVar16;\n  byte *pbStack_90;\n  char *pcStack_88;\n  byte *apbStack_80 [5];\n  char *pcStack_58;\n  char *pcStack_50;\n  char *pcStack_48;\n  char *pcStack_40;\n  char *pcStack_38;\n  undefined8 uStack_30;\n  undefined8 uStack_28;\n  undefined8 uStack_20;\n  byte **ppbVar8;\n  \n  bVar16 = 0;\n  if (DAT_0061d4a0 != 0) {\n    return *(undefined8 *)(DAT_0061d4a0 + 0x18);\n  }\n  if (DAT_0061d478 == '\\0') {\n    cVar2 = FUN_00403630();\n    if (cVar2 != '\\0') {\n      return *(undefined8 *)(DAT_0061d4a0 + 0x18);\n    }\n  }\n  uStack_20 = dcgettext(0,\"input disappeared\",5);\n  piVar4 = __errno_location();\n  __status = 1;\n  error(1,*piVar4,uStack_20);\n  uVar9 = DAT_0061d4b8;\n  if (__status != 0) {\n    uVar5 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar5,uVar9);\n    goto LAB_00403cbf;\n  }\n  uVar5 = dcgettext(0,\"Usage: %s [OPTION]... FILE PATTERN...\\n\",5);\n  __printf_chk(1,uVar5,uVar9);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\n                             \"Output pieces of FILE separated by PATTERN(s) to files \\'xx00\\', \\'xx01\\', ...,\\nand output byte counts of each piece to standard output.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\"\\nRead standard input if FILE is -\\n\",5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\n                             \"  -b, --suffix-format=FORMAT  use sprintf FORMAT instead of %02d\\n  -f, --prefix=PREFIX        use PREFIX instead of \\'xx\\'\\n  -k, --keep-files           do not remove output files on errors\\n\"\n                             ,5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\"      --suppress-matched     suppress the lines matching PATTERN\\n\",\n                             5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\n                             \"  -n, --digits=DIGITS        use specified number of digits instead of 2\\n  -s, --quiet, --silent      do not print counts of output file sizes\\n  -z, --elide-empty-files    remove empty output files\\n\"\n                             ,5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pFVar1 = stdout;\n  pcVar6 = (char *)dcgettext(0,\n                             \"\\nEach PATTERN may be:\\n  INTEGER            copy up to but not including specified line number\\n  /REGEXP/[OFFSET]   copy up to but not including a matching line\\n  %REGEXP%[OFFSET]   skip to, but not including a matching line\\n  {INTEGER}          repeat the previous pattern specified number of times\\n  {*}                repeat the previous pattern as many times as possible\\n\\nA line OFFSET is a required \\'+\\' or \\'-\\' followed by a positive integer.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar6,pFVar1);\n  pbStack_90 = &DAT_00416a2d;\n  pcStack_88 = \"test invocation\";\n  apbStack_80[0] = (byte *)0x416aa7;\n  apbStack_80[1] = (byte *)0x416a3f;\n  apbStack_80[2] = (byte *)0x416a55;\n  apbStack_80[3] = (byte *)0x416a5f;\n  apbStack_80[4] = (byte *)0x416a6e;\n  pcStack_58 = \"sha2 utilities\";\n  pcStack_50 = \"sha384sum\";\n  pcStack_48 = \"sha2 utilities\";\n  pcStack_40 = \"sha512sum\";\n  pcStack_38 = \"sha2 utilities\";\n  uStack_30 = 0;\n  uStack_28 = 0;\n  ppbVar7 = &pbStack_90;\n  do {\n    ppbVar8 = ppbVar7;\n    ppbVar7 = ppbVar8 + 2;\n    pbVar13 = *ppbVar7;\n    bVar14 = false;\n    bVar15 = pbVar13 == (byte *)0x0;\n    if (bVar15) break;\n    lVar11 = 7;\n    pbVar12 = (byte *)\"csplit\";\n    do {\n      if (lVar11 == 0) break;\n      lVar11 = lVar11 + -1;\n      bVar14 = *pbVar12 < *pbVar13;\n      bVar15 = *pbVar12 == *pbVar13;\n      pbVar12 = pbVar12 + (ulong)bVar16 * -2 + 1;\n      pbVar13 = pbVar13 + (ulong)bVar16 * -2 + 1;\n    } while (bVar15);\n  } while ((!bVar14 && !bVar15) != bVar14);\n  pcVar6 = (char *)ppbVar8[3];\n  if ((byte *)pcVar6 == (byte *)0x0) {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar6 = setlocale(5,(char *)0x0);\n    if (pcVar6 != (char *)0x0) {\n      iVar3 = strncmp(pcVar6,\"en_\",3);\n      if (iVar3 != 0) {\n        pcVar6 = \"csplit\";\n        goto LAB_00404013;\n      }\n    }\n    pcVar6 = \"csplit\";\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar10 = \" invocation\";\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",\"csplit\");\n  }\n  else {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar10 = setlocale(5,(char *)0x0);\n    if (pcVar10 != (char *)0x0) {\n      iVar3 = strncmp(pcVar10,\"en_\",3);\n      if (iVar3 != 0) {\nLAB_00404013:\n        uVar9 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar9,\"csplit\");\n      }\n    }\n    pcVar10 = \" invocation\";\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",\"csplit\");\n    if (pcVar6 != \"csplit\") {\n      pcVar10 = \"\";\n    }\n  }\n  uVar9 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar9,pcVar6,pcVar10);\nLAB_00403cbf:\n                    /* WARNING: Subroutine does not return */\n  exit(__status);\n}\n\n",
            "funcName": "FUN_00403c10"
        },
        {
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x40403d",
            "decompiledFuncCode": "\nvoid FUN_00403c80(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0061d4b8;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_00403cbf;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... FILE PATTERN...\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Output pieces of FILE separated by PATTERN(s) to files \\'xx00\\', \\'xx01\\', ...,\\nand output byte counts of each piece to standard output.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nRead standard input if FILE is -\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -b, --suffix-format=FORMAT  use sprintf FORMAT instead of %02d\\n  -f, --prefix=PREFIX        use PREFIX instead of \\'xx\\'\\n  -k, --keep-files           do not remove output files on errors\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --suppress-matched     suppress the lines matching PATTERN\\n\",\n                             5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -n, --digits=DIGITS        use specified number of digits instead of 2\\n  -s, --quiet, --silent      do not print counts of output file sizes\\n  -z, --elide-empty-files    remove empty output files\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nEach PATTERN may be:\\n  INTEGER            copy up to but not including specified line number\\n  /REGEXP/[OFFSET]   copy up to but not including a matching line\\n  %REGEXP%[OFFSET]   skip to, but not including a matching line\\n  {INTEGER}          repeat the previous pattern specified number of times\\n  {*}                repeat the previous pattern as many times as possible\\n\\nA line OFFSET is a required \\'+\\' or \\'-\\' followed by a positive integer.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00416a2d;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x416aa7;\n  local_78[1] = (byte *)0x416a3f;\n  local_78[2] = (byte *)0x416a55;\n  local_78[3] = (byte *)0x416a5f;\n  local_78[4] = (byte *)0x416a6e;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar11 = *ppbVar5;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 7;\n    pbVar10 = (byte *)\"csplit\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar6[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"csplit\";\n        goto LAB_00404013;\n      }\n    }\n    pcVar4 = \"csplit\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"csplit\");\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00404013:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,\"csplit\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"csplit\");\n    if (pcVar4 != \"csplit\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pcVar4,pcVar8);\nLAB_00403cbf:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00403c80"
        },
        {
            "funcStartAddr": "0x404040",
            "funcEndAddr": "0x404048",
            "decompiledFuncCode": "\nvoid FUN_00404040(undefined8 param_1)\n\n{\n  DAT_0061d4b0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404040"
        },
        {
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x404058",
            "decompiledFuncCode": "\nvoid FUN_00404050(undefined param_1)\n\n{\n  DAT_0061d4a8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404050"
        },
        {
            "funcStartAddr": "0x404060",
            "funcEndAddr": "0x4040fe",
            "decompiledFuncCode": "\nvoid FUN_00404060(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004162b0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0061d4a8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0061d4b0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00405cd0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_004040de;\n    }\n  }\n  iVar1 = FUN_004162b0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_004040de:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0061d2c0);\n}\n\n",
            "funcName": "FUN_00404060"
        },
        {
            "funcStartAddr": "0x404100",
            "funcEndAddr": "0x404163",
            "decompiledFuncCode": "\nint FUN_00404100(int param_1,char *param_2,int param_3,uint param_4)\n\n{\n  int iVar1;\n  int __fd;\n  int iVar2;\n  int *piVar3;\n  \n  __fd = open(param_2,param_3,(ulong)param_4);\n  if ((param_1 != __fd) && (-1 < __fd)) {\n    iVar2 = dup2(__fd,param_1);\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    close(__fd);\n    *piVar3 = iVar1;\n    return iVar2;\n  }\n  return __fd;\n}\n\n",
            "funcName": "FUN_00404100"
        },
        {
            "funcStartAddr": "0x404170",
            "funcEndAddr": "0x4041f9",
            "decompiledFuncCode": "\nFILE * FUN_00404170(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00405f00(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_004073b0(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_004073b0(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_00404170"
        },
        {
            "funcStartAddr": "0x404210",
            "funcEndAddr": "0x404254",
            "decompiledFuncCode": "\nchar * FUN_00404210(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00404210"
        },
        {
            "funcStartAddr": "0x404260",
            "funcEndAddr": "0x4042f9",
            "decompiledFuncCode": "\nvoid FUN_00404260(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00417758;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0061d4b8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404260"
        },
        {
            "funcStartAddr": "0x404300",
            "funcEndAddr": "0x4043df",
            "decompiledFuncCode": "\nchar * FUN_00404300(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00416370();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004043d8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00417769;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0041775e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004043d8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00417765;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00417762;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00404300"
        },
        {
            "funcStartAddr": "0x404400",
            "funcEndAddr": "0x405533",
            "decompiledFuncCode": "\nulong FUN_00404400(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00405051:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00404c86;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00405051;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00404300(&DAT_0041776d,param_5);\n      param_9 = (char *)FUN_00404300(&DAT_00418fdf);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00404498:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_004044a8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404c28;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00404ba0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404bb2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00404a1e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004048b5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404bb2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404bb2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404bb2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_004048b5;\n      case 0xc:\nswitchD_00404bb2_caseD_c:\n        bVar17 = 0x66;\nLAB_004048b5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00404808;\n        }\nLAB_004048c0:\n        bVar23 = false;\n        goto LAB_0040467b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00404598_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004047d0;\n      case 0x20:\n        bVar25 = false;\nLAB_00404bfa:\n        uVar19 = 0x20;\n        goto LAB_00404bc2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00404598_caseD_21:\n        bVar25 = false;\n        goto LAB_004047db;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00404bda:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004045e8;\n        }\n        bVar23 = false;\n        goto LAB_004045ff;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00404bc2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00404601;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00404a1e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00404a1e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00404598_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00404a1e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004047f7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00404ba0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404598_caseD_0;\n      default:\n        goto switchD_00404a1e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004048c0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404bb2_caseD_9;\n      case 10:\n        goto switchD_00404bb2_caseD_a;\n      case 0xb:\n        goto switchD_00404bb2_caseD_b;\n      case 0xc:\n        goto switchD_00404bb2_caseD_c;\n      case 0xd:\n        goto switchD_00404598_caseD_d;\n      case 0x20:\n        goto LAB_00404bfa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00404598_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00404bda;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00404bc2;\n      case 0x27:\n        goto switchD_00404a1e_caseD_27;\n      case 0x3f:\n        goto switchD_00404a1e_caseD_3f;\n      case 0x5c:\n        goto switchD_00404598_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00404a1e_caseD_7b;\n      }\n      goto LAB_00404642;\n    }\n    goto LAB_0040481a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404bb2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00404598_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004046f8;\n          }\nLAB_0040493a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040493a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004046f8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00404979:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004046f8;\n        goto LAB_00404601;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040480c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004045e8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_004044a8;\n  default:\nswitchD_00404a1e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_004083e0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040532a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00405467;\n          goto LAB_00405457;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040480c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040532a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004049f4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404a32;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404a32;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404a32:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00404a4a:\n      param_5 = 2;\n      goto LAB_0040480c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004045d6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004045d6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00404a4a;\n    goto LAB_004045e8;\n  case 0x23:\n  case 0x7e:\nLAB_004045cd:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004045d6;\n    goto LAB_004047db;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00404a1e_caseD_25;\n  case 0x27:\nswitchD_00404a1e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004045e8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004046f8;\n    }\n    goto LAB_0040480c;\n  case 0x3f:\nswitchD_00404a1e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004046f8;\n      }\n      goto LAB_0040480c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004045e8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00404979;\n      }\n      goto LAB_0040481a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004045e8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00404598_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00404714;\n    }\n    if (local_5c) goto LAB_0040480c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00404714;\n  case 0x7b:\n  case 0x7d:\nswitchD_00404a1e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_004045cd;\n    goto LAB_004047db;\n  }\nLAB_004047d0:\n  if (!bVar6) {\nLAB_004047db:\n    bVar23 = false;\n    goto LAB_004045e8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004047f7;\nLAB_00404c28:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040480c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040481a:\n    uVar9 = FUN_00404400(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004054fd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00404400(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004054fd;\nLAB_00404c86:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00404498;\n  while (__s1[uVar21] != 0) {\nLAB_00405457:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00405467:\n  bVar23 = false;\nLAB_0040532a:\n  if (1 < uVar21) {\nLAB_00404eee:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040480c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040468d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00404714;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004049f4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00404eee;\n  }\nswitchD_00404a1e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004045e8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004045ff:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00404601:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004046f8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004046f8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00404714:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040468d;\n    }\n  }\njoined_r0x004047f7:\n  if (local_5c) {\nLAB_00404808:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040480c;\n  }\nLAB_00404642:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040467b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040468d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_004044a8;\n}\n\n",
            "funcName": "FUN_00404400"
        },
        {
            "funcStartAddr": "0x405630",
            "funcEndAddr": "0x4057cb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00405630(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0061d318;\n  if (DAT_0061d330 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00403510();\n    }\n    if (PTR_DAT_0061d318 == &DAT_0061d320) {\n      puVar8 = (undefined4 *)FUN_00406510(0);\n      uVar6 = PTR_DAT_0061d328._4_4_;\n      uVar5 = PTR_DAT_0061d328._0_4_;\n      uVar3 = _UNK_0061d324;\n      PTR_DAT_0061d318 = (undefined *)puVar8;\n      *puVar8 = _DAT_0061d320;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00406510(PTR_DAT_0061d318);\n      PTR_DAT_0061d318 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0061d330 * 4,0,(long)((param_1 + 1) - DAT_0061d330) << 4);\n    DAT_0061d330 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00404400(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0061d4c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_004064b0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00404400(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00405630"
        },
        {
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x405804",
            "decompiledFuncCode": "\nvoid FUN_004057d0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061d5c0;\n  }\n  FUN_004066b0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004057d0"
        },
        {
            "funcStartAddr": "0x405810",
            "funcEndAddr": "0x40581f",
            "decompiledFuncCode": "\nundefined4 FUN_00405810(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061d5c0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00405810"
        },
        {
            "funcStartAddr": "0x405820",
            "funcEndAddr": "0x40582f",
            "decompiledFuncCode": "\nvoid FUN_00405820(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061d5c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405820"
        },
        {
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x405863",
            "decompiledFuncCode": "\nuint FUN_00405830(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061d5c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405830"
        },
        {
            "funcStartAddr": "0x405870",
            "funcEndAddr": "0x405883",
            "decompiledFuncCode": "\nundefined4 FUN_00405870(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061d5c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405870"
        },
        {
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x4058bb",
            "decompiledFuncCode": "\nvoid FUN_00405890(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061d5c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405890"
        },
        {
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x405932",
            "decompiledFuncCode": "\nvoid FUN_004058c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0061d5c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00404400(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004058c0"
        },
        {
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x405a21",
            "decompiledFuncCode": "\nundefined8 FUN_00405940(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0061d5c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00404400(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_004064b0(lVar3 + 1);\n  FUN_00404400(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405940"
        },
        {
            "funcStartAddr": "0x405a30",
            "funcEndAddr": "0x405a3a",
            "decompiledFuncCode": "\nvoid FUN_00405a30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405940(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405a30"
        },
        {
            "funcStartAddr": "0x405a40",
            "funcEndAddr": "0x405ad5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405a40(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0061d318;\n  if (1 < DAT_0061d330) {\n    ppvVar2 = (void **)(PTR_DAT_0061d318 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0061d318 + (ulong)(DAT_0061d330 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0061d4c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0061d320 = 0x100;\n    PTR_DAT_0061d328 = &DAT_0061d4c0;\n  }\n  if (__ptr_00 != &DAT_0061d320) {\n    free(__ptr_00);\n    PTR_DAT_0061d318 = &DAT_0061d320;\n  }\n  DAT_0061d330 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405a40"
        },
        {
            "funcStartAddr": "0x405ae0",
            "funcEndAddr": "0x405af1",
            "decompiledFuncCode": "\nvoid FUN_00405ae0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405630(param_1,param_2,0xffffffffffffffff,&DAT_0061d5c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405ae0"
        },
        {
            "funcStartAddr": "0x405b00",
            "funcEndAddr": "0x405b0a",
            "decompiledFuncCode": "\nvoid FUN_00405b00(void)\n\n{\n  FUN_00405630();\n  return;\n}\n\n",
            "funcName": "FUN_00405b00"
        },
        {
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b26",
            "decompiledFuncCode": "\nvoid FUN_00405b10(undefined8 param_1)\n\n{\n  FUN_00405630(0,param_1,0xffffffffffffffff,&DAT_0061d5c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405b10"
        },
        {
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405b42",
            "decompiledFuncCode": "\nvoid FUN_00405b30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405630(0,param_1,param_2,&DAT_0061d5c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405b30"
        },
        {
            "funcStartAddr": "0x405b50",
            "funcEndAddr": "0x405bb8",
            "decompiledFuncCode": "\nvoid FUN_00405b50(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405630(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405b50"
        },
        {
            "funcStartAddr": "0x405bc0",
            "funcEndAddr": "0x405c24",
            "decompiledFuncCode": "\nvoid FUN_00405bc0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405630(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405bc0"
        },
        {
            "funcStartAddr": "0x405c30",
            "funcEndAddr": "0x405c3c",
            "decompiledFuncCode": "\nvoid FUN_00405c30(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00405b50(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405c30"
        },
        {
            "funcStartAddr": "0x405c40",
            "funcEndAddr": "0x405c4f",
            "decompiledFuncCode": "\nvoid FUN_00405c40(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405bc0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405c40"
        },
        {
            "funcStartAddr": "0x405c50",
            "funcEndAddr": "0x405cc0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405c50(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0061d5f0;\n  local_48 = _DAT_0061d5c0;\n  uStack_40 = uRam000000000061d5c8;\n  local_38 = _DAT_0061d5d0;\n  uStack_30 = uRam000000000061d5d8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0061d5e0;\n  uStack_20 = uRam000000000061d5e8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00405630(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00405c50"
        },
        {
            "funcStartAddr": "0x405cc0",
            "funcEndAddr": "0x405ccd",
            "decompiledFuncCode": "\nvoid FUN_00405cc0(undefined8 param_1,char param_2)\n\n{\n  FUN_00405c50(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405cc0"
        },
        {
            "funcStartAddr": "0x405cd0",
            "funcEndAddr": "0x405ce1",
            "decompiledFuncCode": "\nvoid FUN_00405cd0(undefined8 param_1)\n\n{\n  FUN_00405c50(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405cd0"
        },
        {
            "funcStartAddr": "0x405cf0",
            "funcEndAddr": "0x405cfa",
            "decompiledFuncCode": "\nvoid FUN_00405cf0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405c50(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405cf0"
        },
        {
            "funcStartAddr": "0x405d00",
            "funcEndAddr": "0x405d6e",
            "decompiledFuncCode": "\nvoid FUN_00405d00(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405630(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405d00"
        },
        {
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x405ddc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405d70(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000061d5c8;\n  local_38 = _DAT_0061d5d0;\n  uStack_30 = uRam000000000061d5d8;\n  local_28 = _DAT_0061d5e0;\n  lStack_20 = uRam000000000061d5e8;\n  local_18 = DAT_0061d5f0;\n  local_48 = CONCAT44((int)((ulong)_DAT_0061d5c0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00405630(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405d70"
        },
        {
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x405de9",
            "decompiledFuncCode": "\nvoid FUN_00405de0(void)\n\n{\n  FUN_00405d70();\n  return;\n}\n\n",
            "funcName": "FUN_00405de0"
        },
        {
            "funcStartAddr": "0x405df0",
            "funcEndAddr": "0x405e07",
            "decompiledFuncCode": "\nvoid FUN_00405df0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405d70(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405df0"
        },
        {
            "funcStartAddr": "0x405e10",
            "funcEndAddr": "0x405e23",
            "decompiledFuncCode": "\nvoid FUN_00405e10(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00405d70(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405e10"
        },
        {
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e3a",
            "decompiledFuncCode": "\nvoid FUN_00405e30(void)\n\n{\n  FUN_00405630();\n  return;\n}\n\n",
            "funcName": "FUN_00405e30"
        },
        {
            "funcStartAddr": "0x405e40",
            "funcEndAddr": "0x405e52",
            "decompiledFuncCode": "\nvoid FUN_00405e40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405630(0,param_1,param_2,&DAT_0061d2e0);\n  return;\n}\n\n",
            "funcName": "FUN_00405e40"
        },
        {
            "funcStartAddr": "0x405e60",
            "funcEndAddr": "0x405e71",
            "decompiledFuncCode": "\nvoid FUN_00405e60(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405630(param_1,param_2,0xffffffffffffffff,&DAT_0061d2e0);\n  return;\n}\n\n",
            "funcName": "FUN_00405e60"
        },
        {
            "funcStartAddr": "0x405e80",
            "funcEndAddr": "0x405e96",
            "decompiledFuncCode": "\nvoid FUN_00405e80(undefined8 param_1)\n\n{\n  FUN_00405630(0,param_1,0xffffffffffffffff,&DAT_0061d2e0);\n  return;\n}\n\n",
            "funcName": "FUN_00405e80"
        },
        {
            "funcStartAddr": "0x405ea0",
            "funcEndAddr": "0x405efd",
            "decompiledFuncCode": "\nssize_t FUN_00405ea0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7fffe001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00405ea0"
        },
        {
            "funcStartAddr": "0x405f00",
            "funcEndAddr": "0x405f0e",
            "decompiledFuncCode": "\nvoid FUN_00405f00(undefined8 param_1)\n\n{\n  FUN_00407430(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00405f00"
        },
        {
            "funcStartAddr": "0x405f10",
            "funcEndAddr": "0x4062b4",
            "decompiledFuncCode": "\nundefined8\nFUN_00405f10(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_004184ab,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040618c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040618c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00406229;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00406229:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040600a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040600a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405f10"
        },
        {
            "funcStartAddr": "0x4062f0",
            "funcEndAddr": "0x406310",
            "decompiledFuncCode": "\nvoid FUN_004062f0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405f10();\n  return;\n}\n\n",
            "funcName": "FUN_004062f0"
        },
        {
            "funcStartAddr": "0x406310",
            "funcEndAddr": "0x406369",
            "decompiledFuncCode": "\nvoid FUN_00406310(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405f10();\n  return;\n}\n\n",
            "funcName": "FUN_00406310"
        },
        {
            "funcStartAddr": "0x406370",
            "funcEndAddr": "0x406428",
            "decompiledFuncCode": "\nvoid FUN_00406370(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405f10();\n  return;\n}\n\n",
            "funcName": "FUN_00406370"
        },
        {
            "funcStartAddr": "0x406430",
            "funcEndAddr": "0x4064a4",
            "decompiledFuncCode": "\nvoid FUN_00406430(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00406430"
        },
        {
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064ca",
            "decompiledFuncCode": "\nvoid FUN_004064b0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00403510();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004064b0"
        },
        {
            "funcStartAddr": "0x4064d0",
            "funcEndAddr": "0x4064f1",
            "decompiledFuncCode": "\nvoid FUN_004064d0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_004064b0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00403510();\n}\n\n",
            "funcName": "FUN_004064d0"
        },
        {
            "funcStartAddr": "0x406500",
            "funcEndAddr": "0x406502",
            "decompiledFuncCode": "\nvoid thunk_FUN_004064b0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00403510();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_406500"
        },
        {
            "funcStartAddr": "0x406510",
            "funcEndAddr": "0x406540",
            "decompiledFuncCode": "\nvoid * FUN_00406510(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00403510();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00406510"
        },
        {
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406571",
            "decompiledFuncCode": "\nvoid FUN_00406550(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00406510();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00403510();\n}\n\n",
            "funcName": "FUN_00406550"
        },
        {
            "funcStartAddr": "0x406580",
            "funcEndAddr": "0x4065f8",
            "decompiledFuncCode": "\nvoid FUN_00406580(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004065db;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004065db:\n                    /* WARNING: Subroutine does not return */\n      FUN_00403510(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00406510(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406580"
        },
        {
            "funcStartAddr": "0x406610",
            "funcEndAddr": "0x40665a",
            "decompiledFuncCode": "\nvoid FUN_00406610(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00406510(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040665a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040665a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00403510();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00406510(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00406610"
        },
        {
            "funcStartAddr": "0x406660",
            "funcEndAddr": "0x406677",
            "decompiledFuncCode": "\nvoid FUN_00406660(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_004064b0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406660"
        },
        {
            "funcStartAddr": "0x406680",
            "funcEndAddr": "0x4066ae",
            "decompiledFuncCode": "\nvoid FUN_00406680(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00403510();\n}\n\n",
            "funcName": "FUN_00406680"
        },
        {
            "funcStartAddr": "0x4066b0",
            "funcEndAddr": "0x4066d8",
            "decompiledFuncCode": "\nvoid FUN_004066b0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_004064b0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004066b0"
        },
        {
            "funcStartAddr": "0x4066e0",
            "funcEndAddr": "0x4066f3",
            "decompiledFuncCode": "\nvoid FUN_004066e0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_004064b0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004066e0"
        },
        {
            "funcStartAddr": "0x406700",
            "funcEndAddr": "0x4067da",
            "decompiledFuncCode": "\nlong FUN_00406700(undefined8 param_1,undefined4 param_2,long param_3,long param_4,undefined8 param_5\n                 ,undefined8 param_6,int param_7)\n\n{\n  long lVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  long local_40 [2];\n  \n  iVar2 = FUN_00406820(param_1,0,param_2,local_40);\n  lVar1 = local_40[0];\n  if (iVar2 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar3 = __errno_location();\n    if (lVar1 < 0x40000000) {\n      iVar2 = 0x22;\n      if (lVar1 < -0x40000000) {\n        iVar2 = 0x4b;\n      }\n      *piVar3 = iVar2;\n      goto LAB_00406757;\n    }\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 != 1) {\n      if (iVar2 == 3) {\n        *piVar3 = 0;\n      }\n      goto LAB_00406757;\n    }\n  }\n  *piVar3 = 0x4b;\nLAB_00406757:\n  uVar4 = FUN_00405e80(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\n  return local_40[0];\n}\n\n",
            "funcName": "FUN_00406700"
        },
        {
            "funcStartAddr": "0x4067f0",
            "funcEndAddr": "0x406811",
            "decompiledFuncCode": "\nvoid FUN_004067f0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00406700(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_004067f0"
        },
        {
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x406e0d",
            "decompiledFuncCode": "\nulong FUN_00406820(byte *param_1,byte **param_2,uint param_3,long *param_4,char *param_5)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte *pbVar3;\n  int *piVar4;\n  long lVar5;\n  ulong uVar6;\n  char *pcVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  byte bVar11;\n  uint uVar12;\n  int iVar13;\n  int iVar14;\n  uint uVar15;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoimax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  lVar5 = __strtol_internal(param_1,param_2,param_3,0);\n  pbVar3 = *param_2;\n  if (pbVar3 == param_1) {\n    if (param_5 == (char *)0x0) {\n      return 4;\n    }\n    bVar1 = *pbVar3;\n    if (bVar1 == 0) {\n      return 4;\n    }\n    lVar5 = 1;\n    uVar6 = 0;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar4 == 0) {\n      uVar6 = 0;\n    }\n    else {\n      if (*piVar4 != 0x22) {\n        return 4;\n      }\n      uVar6 = 1;\n    }\n    uVar15 = (uint)uVar6;\n    if ((param_5 == (char *)0x0) || (bVar1 = *pbVar3, bVar1 == 0)) goto LAB_00406897;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) goto switchD_00406922_caseD_1;\n  }\n  uVar15 = (uint)uVar6;\n  uVar12 = bVar1 - 0x45;\n  bVar11 = (byte)uVar12;\n  if (((bVar11 < 0x30) && ((0x814400308945U >> ((ulong)uVar12 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar2 = pbVar3[1];\n    if (bVar2 != 0x44) {\n      if (bVar2 == 0x69) {\n        iVar14 = 0x400;\n        iVar13 = (pbVar3[2] == 0x42) + 1 + (uint)(pbVar3[2] == 0x42);\n        goto LAB_00406910;\n      }\n      if (bVar2 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00406978. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_00418a18)[bVar11])();\n        return uVar6;\n      }\n    }\n    iVar13 = 2;\n    iVar14 = 1000;\n  }\n  else {\n    iVar13 = 1;\n    iVar14 = 0x400;\n  }\nLAB_00406910:\n  switch(bVar1 - 0x42 & 0xff) {\n  case 0:\n    if (lVar5 < -0x20000000000000) goto LAB_00406ab8;\n    if (lVar5 < 0x20000000000000) {\n      lVar5 = lVar5 << 10;\n    }\n    else {\nLAB_00406e70:\n      lVar5 = 0x7fffffffffffffff;\n      uVar6 = 1;\n    }\n    break;\n  default:\nswitchD_00406922_caseD_1:\n    *param_4 = lVar5;\n    return (ulong)(uVar15 | 2);\n  case 3:\n    lVar10 = (long)iVar14;\n    iVar14 = 6;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00406e60;\n  case 5:\n  case 0x25:\n    lVar10 = (long)iVar14;\n    iVar14 = 3;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00406e60;\n  case 9:\n  case 0x29:\n    if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                       ZEXT816(0x8000000000000000)) / SEXT816((long)iVar14),0)) goto LAB_00406ab8;\n    lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                   ZEXT816(0x7fffffffffffffff)) / SEXT816((long)iVar14),0);\nLAB_00406a5c:\n    if (lVar8 < lVar5) goto LAB_00406e70;\n    lVar5 = lVar5 * iVar14;\n    break;\n  case 0xb:\n  case 0x2b:\n    lVar9 = (long)iVar14;\n    lVar10 = SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                    ZEXT816(0x8000000000000000)) / SEXT816(lVar9),0);\n    if (lVar10 <= lVar5) {\n      lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                     ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar9),0);\n      if (lVar8 < lVar5) goto LAB_00406e70;\n      lVar5 = lVar5 * lVar9;\n      if (lVar10 <= lVar5) goto LAB_00406a5c;\n    }\nLAB_00406ab8:\n    lVar5 = -0x8000000000000000;\n    uVar6 = 1;\n    break;\n  case 0xe:\n    lVar10 = (long)iVar14;\n    iVar14 = 5;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00406e60;\n  case 0x12:\n  case 0x32:\n    lVar10 = (long)iVar14;\n    iVar14 = 4;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00406e60;\n  case 0x17:\n    lVar10 = (long)iVar14;\n    iVar14 = 8;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00406e60;\n  case 0x18:\n    lVar10 = (long)iVar14;\n    iVar14 = 7;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\nLAB_00406e60:\n    uVar6 = (ulong)(uVar15 | uVar12);\n    break;\n  case 0x20:\n    if (lVar5 < -0x40000000000000) goto LAB_00406ab8;\n    if (0x3fffffffffffff < lVar5) goto LAB_00406e70;\n    lVar5 = lVar5 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if (lVar5 < -0x4000000000000000) goto LAB_00406ab8;\n    if (0x3fffffffffffffff < lVar5) goto LAB_00406e70;\n    lVar5 = lVar5 * 2;\n  }\n  *param_2 = pbVar3 + iVar13;\n  if (pbVar3[iVar13] != 0) {\n    uVar6 = (ulong)((uint)uVar6 | 2);\n  }\nLAB_00406897:\n  *param_4 = lVar5;\n  return uVar6;\n}\n\n",
            "funcName": "FUN_00406820"
        },
        {
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x40731e",
            "decompiledFuncCode": "\nulong FUN_00406f70(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00407012;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_004070fc_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_004070ea;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x004070d1. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_00418ba8)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_004070ea:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00407157;\n  default:\nswitchD_004070fc_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071e4;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040711c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00407157;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040711c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00407157:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071e4;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071e4;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071e4;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_004071e4:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00407157;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00407157;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00407012:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00406f70"
        },
        {
            "funcStartAddr": "0x4073b0",
            "funcEndAddr": "0x407428",
            "decompiledFuncCode": "\nint FUN_004073b0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00407417;\n    }\n    iVar1 = FUN_00407570(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00407417:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_004073b0"
        },
        {
            "funcStartAddr": "0x407430",
            "funcEndAddr": "0x40755c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00407430(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0061d5f8 < 0) {\n    iVar1 = FUN_00407430(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0061d5f8 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0061d5f8 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00407430(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0061d5f8 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00407430"
        },
        {
            "funcStartAddr": "0x407570",
            "funcEndAddr": "0x4075ab",
            "decompiledFuncCode": "\nvoid FUN_00407570(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_004075b0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00407570"
        },
        {
            "funcStartAddr": "0x4075b0",
            "funcEndAddr": "0x407606",
            "decompiledFuncCode": "\nulong FUN_004075b0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_004075b0"
        },
        {
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x4076e5",
            "decompiledFuncCode": "\nvoid FUN_00407610(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040768c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040768c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040768c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00407610"
        },
        {
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x407cee",
            "decompiledFuncCode": "\nint FUN_004076f0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00407910;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00407850;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00407850;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00407850:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00418fd9,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00407910:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004076f0"
        },
        {
            "funcStartAddr": "0x407d10",
            "funcEndAddr": "0x408277",
            "decompiledFuncCode": "\nuint FUN_00407d10(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00407d5a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00407e5d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00407e5d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00407e68:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00407dd8;\nLAB_00407e7c:\n    if (*pbVar8 == 0) goto LAB_00407dd8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00407d5a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00407e68;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00407e7c;\nLAB_00407dd8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00407610(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00407f46:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00418ff1;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00407610(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00407f46;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00418ff1;\n        goto LAB_004080a5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00408050;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004076f0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00418ff2);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00408050:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00419010;\nLAB_004080a5:\n  uVar3 = FUN_004076f0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00407d10"
        },
        {
            "funcStartAddr": "0x4082e0",
            "funcEndAddr": "0x408336",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004082e0(void)\n\n{\n  DAT_0061d600 = DAT_0061d33c;\n  _DAT_0061d604 = DAT_0061d338;\n  FUN_00407d10();\n  DAT_0061d33c = DAT_0061d600;\n  DAT_0061d640 = DAT_0061d610;\n  _DAT_0061d334 = DAT_0061d608;\n  return;\n}\n\n",
            "funcName": "FUN_004082e0"
        },
        {
            "funcStartAddr": "0x408340",
            "funcEndAddr": "0x408358",
            "decompiledFuncCode": "\nvoid FUN_00408340(void)\n\n{\n  FUN_004082e0();\n  return;\n}\n\n",
            "funcName": "FUN_00408340"
        },
        {
            "funcStartAddr": "0x408360",
            "funcEndAddr": "0x408373",
            "decompiledFuncCode": "\nvoid FUN_00408360(void)\n\n{\n  FUN_004082e0();\n  return;\n}\n\n",
            "funcName": "FUN_00408360"
        },
        {
            "funcStartAddr": "0x408380",
            "funcEndAddr": "0x408395",
            "decompiledFuncCode": "\nvoid FUN_00408380(void)\n\n{\n  FUN_00407d10();\n  return;\n}\n\n",
            "funcName": "FUN_00408380"
        },
        {
            "funcStartAddr": "0x4083a0",
            "funcEndAddr": "0x4083b6",
            "decompiledFuncCode": "\nvoid FUN_004083a0(void)\n\n{\n  FUN_004082e0();\n  return;\n}\n\n",
            "funcName": "FUN_004083a0"
        },
        {
            "funcStartAddr": "0x4083c0",
            "funcEndAddr": "0x4083d8",
            "decompiledFuncCode": "\nvoid FUN_004083c0(void)\n\n{\n  FUN_00407d10();\n  return;\n}\n\n",
            "funcName": "FUN_004083c0"
        },
        {
            "funcStartAddr": "0x4083e0",
            "funcEndAddr": "0x40844f",
            "decompiledFuncCode": "\nsize_t FUN_004083e0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x41900f;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00408404;\n  }\n  param_1 = &local_1c;\nLAB_00408404:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00416310(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_004083e0"
        },
        {
            "funcStartAddr": "0x408460",
            "funcEndAddr": "0x408543",
            "decompiledFuncCode": "\nulong * FUN_00408460(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_004084a0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_004084a0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00408460"
        },
        {
            "funcStartAddr": "0x408570",
            "funcEndAddr": "0x4085ac",
            "decompiledFuncCode": "\nulong FUN_00408570(long param_1,long param_2)\n\n{\n  bool bVar1;\n  ulong in_RAX;\n  long lVar2;\n  \n  bVar1 = param_1 == 0 || param_2 == 0;\n  if (bVar1) {\n    return 0;\n  }\n  lVar2 = *(long *)(param_1 + 8);\n  if (lVar2 == *(long *)(param_2 + 8)) {\n    do {\n      lVar2 = lVar2 + -1;\n      if (lVar2 < 0) {\n        return 1;\n      }\n    } while (*(long *)(*(long *)(param_1 + 0x10) + lVar2 * 8) ==\n             *(long *)(*(long *)(param_2 + 0x10) + lVar2 * 8));\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)bVar1;\n}\n\n",
            "funcName": "FUN_00408570"
        },
        {
            "funcStartAddr": "0x4085c0",
            "funcEndAddr": "0x40862a",
            "decompiledFuncCode": "\nvoid FUN_004085c0(long *param_1,code *param_2,undefined8 param_3)\n\n{\n  long *plVar1;\n  int iVar2;\n  long *plVar3;\n  \n  do {\n    do {\n      do {\n        plVar3 = param_1;\n        param_1 = (long *)plVar3[1];\n      } while ((long *)plVar3[1] != (long *)0x0);\n      param_1 = (long *)plVar3[2];\n    } while ((long *)plVar3[2] != (long *)0x0);\n    iVar2 = (*param_2)(param_3,plVar3);\n    while( true ) {\n      if ((iVar2 != 0) || (plVar1 = (long *)*plVar3, plVar1 == (long *)0x0)) {\n        return;\n      }\n      param_1 = (long *)plVar1[2];\n      if (param_1 != (long *)0x0 && param_1 != plVar3) break;\n      iVar2 = (*param_2)(param_3,plVar1);\n      plVar3 = plVar1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004085c0"
        },
        {
            "funcStartAddr": "0x408630",
            "funcEndAddr": "0x408722",
            "decompiledFuncCode": "\nundefined8 FUN_00408630(char *param_1,long param_2,uint param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  \n  lVar3 = *(long *)(param_2 + 0x48);\n  if (*(long *)(param_2 + 0x68) == lVar3 || *(long *)(param_2 + 0x68) < lVar3) {\n    param_1[8] = '\\x02';\n    return 0;\n  }\n  lVar4 = *(long *)(param_2 + 8);\n  iVar2 = *(int *)(param_2 + 0x90);\n  cVar1 = *(char *)(lVar4 + lVar3);\n  *param_1 = cVar1;\n  if (((iVar2 < 2) || (lVar3 == *(long *)(param_2 + 0x30))) ||\n     (*(int *)(*(long *)(param_2 + 0x10) + lVar3 * 4) != -1)) {\n    if (cVar1 == '\\\\') {\n      if (((param_3 & 1) != 0) && (lVar3 + 1 < *(long *)(param_2 + 0x58))) {\n        *(long *)(param_2 + 0x48) = lVar3 + 1;\n        cVar1 = *(char *)(lVar4 + 1 + lVar3);\n        param_1[8] = '\\x01';\n        *param_1 = cVar1;\n        return 1;\n      }\n    }\n    else {\n      if (cVar1 == '[') {\n        if (lVar3 + 1 < *(long *)(param_2 + 0x58)) {\n          cVar1 = *(char *)(lVar4 + 1 + lVar3);\n          *param_1 = cVar1;\n          if (cVar1 == ':') {\n            if ((param_3 & 4) != 0) {\n              param_1[8] = '\\x1e';\n              return 2;\n            }\n          }\n          else {\n            if (cVar1 == '=') {\n              param_1[8] = '\\x1c';\n              return 2;\n            }\n            if (cVar1 == '.') {\n              param_1[8] = '\\x1a';\n              return 2;\n            }\n          }\n        }\n        param_1[8] = '\\x01';\n        *param_1 = '[';\n        return 1;\n      }\n      if (cVar1 == ']') {\n        param_1[8] = '\\x15';\n        return 1;\n      }\n      if (cVar1 == '^') {\n        param_1[8] = '\\x19';\n        return 1;\n      }\n      if (cVar1 == '-') {\n        param_1[8] = '\\x16';\n        return 1;\n      }\n    }\n  }\n  param_1[8] = '\\x01';\n  return 1;\n}\n\n",
            "funcName": "FUN_00408630"
        },
        {
            "funcStartAddr": "0x408760",
            "funcEndAddr": "0x408776",
            "decompiledFuncCode": "\nundefined8 FUN_00408760(long param_1,long param_2)\n\n{\n  if ((*(char *)(param_2 + 0x30) == '\\x11') && (param_1 == *(long *)(param_2 + 0x28))) {\n    *(byte *)(param_2 + 0x32) = *(byte *)(param_2 + 0x32) | 8;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00408760"
        },
        {
            "funcStartAddr": "0x408780",
            "funcEndAddr": "0x40897a",
            "decompiledFuncCode": "\nint FUN_00408780(long param_1,uint param_2,long param_3,long param_4,long param_5)\n\n{\n  long lVar1;\n  long *plVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  ulong uVar8;\n  long *plVar9;\n  long lVar10;\n  \n  plVar4 = *(long **)(param_1 + 0x98);\n  lVar1 = plVar4[6] + param_4 * 0x18;\n  if (0 < *(long *)(lVar1 + 8)) {\n    lVar10 = 0;\n    uVar8 = 1L << ((byte)param_3 & 0x3f);\n    do {\n      while( true ) {\n        lVar5 = *(long *)(*(long *)(lVar1 + 0x10) + lVar10 * 8);\n        plVar9 = (long *)(lVar5 * 0x10 + *plVar4);\n        cVar3 = *(char *)(plVar9 + 1);\n        if (cVar3 != '\\b') break;\n        if (((param_2 & 1) != 0) && (*plVar9 == param_3)) {\n          return -1;\n        }\nLAB_00408805:\n        lVar10 = lVar10 + 1;\n        if (*(long *)(lVar1 + 8) == lVar10 || *(long *)(lVar1 + 8) < lVar10) goto LAB_0040895d;\n      }\n      if (cVar3 == '\\t') {\n        if (((param_2 & 2) != 0) && (*plVar9 == param_3)) {\n          return 0;\n        }\n        goto LAB_00408805;\n      }\n      if ((cVar3 != '\\x04') || (param_5 == -1)) goto LAB_00408805;\n      plVar9 = (long *)(param_5 * 0x28 + *(long *)(param_1 + 0xd8));\n      do {\n        if ((*plVar9 == lVar5) &&\n           ((0x3f < param_3 || ((uVar8 & *(ushort *)((long)plVar9 + 0x22)) != 0)))) {\n          lVar6 = **(long **)(plVar4[5] + 0x10 + lVar5 * 0x18);\n          if (param_4 == lVar6) {\n            return -(param_2 & 1);\n          }\n          iVar7 = FUN_00408780(param_1,param_2,param_3,lVar6,param_5);\n          if (iVar7 == -1) {\n            return -1;\n          }\n          if ((iVar7 == 0) && ((param_2 & 2) != 0)) {\n            return 0;\n          }\n          if (param_3 < 0x40) {\n            *(ushort *)((long)plVar9 + 0x22) = *(ushort *)((long)plVar9 + 0x22) & ~(ushort)uVar8;\n          }\n        }\n        plVar2 = plVar9 + 4;\n        plVar9 = plVar9 + 5;\n      } while (*(char *)plVar2 != '\\0');\n      lVar10 = lVar10 + 1;\n    } while (*(long *)(lVar1 + 8) != lVar10 && lVar10 <= *(long *)(lVar1 + 8));\n  }\nLAB_0040895d:\n  return (int)param_2 >> 1;\n}\n\n",
            "funcName": "FUN_00408780"
        },
        {
            "funcStartAddr": "0x408990",
            "funcEndAddr": "0x4089de",
            "decompiledFuncCode": "\nundefined8\nFUN_00408990(long param_1,long param_2,undefined8 param_3,undefined8 param_4,long param_5,\n            undefined8 param_6)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  byte bVar4;\n  \n  lVar1 = *(long *)(param_1 + 0xd8) + param_2 * 0x28;\n  lVar2 = *(long *)(lVar1 + 0x10);\n  if (param_5 < lVar2) {\n    return 0xffffffff;\n  }\n  lVar1 = *(long *)(lVar1 + 0x18);\n  if (param_5 <= lVar1) {\n    bVar4 = lVar2 == param_5;\n    if (lVar1 == param_5) {\n      bVar4 = bVar4 | 2;\n    }\n    else if (lVar2 != param_5) {\n      return 0;\n    }\n    uVar3 = FUN_00408780(param_1,bVar4,param_3,param_4,param_6);\n    return uVar3;\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00408990"
        },
        {
            "funcStartAddr": "0x408a00",
            "funcEndAddr": "0x408a96",
            "decompiledFuncCode": "\nundefined8 FUN_00408a00(long param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if (1 < *(int *)(param_1 + 0x90)) {\n    if (0x1fffffffffffffff < param_2) {\n      return 0xc;\n    }\n    pvVar1 = realloc(*(void **)(param_1 + 0x10),param_2 * 4);\n    if (pvVar1 == (void *)0x0) {\n      return 0xc;\n    }\n    *(void **)(param_1 + 0x10) = pvVar1;\n    if (*(void **)(param_1 + 0x18) != (void *)0x0) {\n      pvVar1 = realloc(*(void **)(param_1 + 0x18),param_2 * 8);\n      if (pvVar1 == (void *)0x0) {\n        return 0xc;\n      }\n      *(void **)(param_1 + 0x18) = pvVar1;\n    }\n  }\n  if (*(char *)(param_1 + 0x8b) != '\\0') {\n    pvVar1 = realloc(*(void **)(param_1 + 8),param_2);\n    if (pvVar1 == (void *)0x0) {\n      return 0xc;\n    }\n    *(void **)(param_1 + 8) = pvVar1;\n  }\n  *(ulong *)(param_1 + 0x40) = param_2;\n  return 0;\n}\n\n",
            "funcName": "FUN_00408a00"
        },
        {
            "funcStartAddr": "0x408aa0",
            "funcEndAddr": "0x408afb",
            "decompiledFuncCode": "\nundefined8 FUN_00408aa0(long *param_1,undefined8 param_2)\n\n{\n  void *__ptr;\n  long lVar1;\n  \n  lVar1 = param_1[1];\n  __ptr = (void *)param_1[2];\n  if (*param_1 == lVar1) {\n    *param_1 = (lVar1 + 1) * 2;\n    __ptr = realloc(__ptr,(lVar1 + 1) * 0x10);\n    if (__ptr == (void *)0x0) {\n      return 0;\n    }\n    param_1[2] = (long)__ptr;\n    lVar1 = param_1[1];\n  }\n  param_1[1] = lVar1 + 1;\n  *(undefined8 *)((long)__ptr + lVar1 * 8) = param_2;\n  return 1;\n}\n\n",
            "funcName": "FUN_00408aa0"
        },
        {
            "funcStartAddr": "0x408b10",
            "funcEndAddr": "0x408c24",
            "decompiledFuncCode": "\nlong * FUN_00408b10(long *param_1,long param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  \n  if (*param_1 == 0) {\n    *param_1 = 1;\n    param_1[1] = 1;\n    plVar1 = (long *)malloc(8);\n    param_1[2] = (long)plVar1;\n    if (plVar1 != (long *)0x0) {\n      *plVar1 = param_2;\n      return (long *)0x1;\n    }\n    param_1[1] = 0;\n    *param_1 = 0;\n  }\n  else {\n    lVar5 = param_1[1];\n    plVar1 = (long *)param_1[2];\n    if (lVar5 == 0) {\n      *plVar1 = param_2;\n      plVar1 = (long *)0x1;\n      param_1[1] = param_1[1] + 1;\n    }\n    else {\n      if (*param_1 == lVar5) {\n        *param_1 = lVar5 * 2;\n        plVar1 = (long *)realloc(plVar1,lVar5 << 4);\n        if (plVar1 == (long *)0x0) {\n          return (long *)0x0;\n        }\n        param_1[2] = (long)plVar1;\n        lVar5 = param_1[1];\n      }\n      lVar4 = lVar5 * 8;\n      if (*plVar1 == param_2 || *plVar1 < param_2) {\n        lVar5 = plVar1[lVar5 + -1];\n        while (param_2 < lVar5) {\n          *(long *)((long)plVar1 + lVar4) = lVar5;\n          lVar5 = *(long *)((long)plVar1 + lVar4 + -0x10);\n          lVar4 = lVar4 + -8;\n        }\n      }\n      else if (0 < lVar5) {\n        plVar2 = plVar1 + lVar5;\n        do {\n          plVar3 = plVar2 + -1;\n          *plVar2 = plVar2[-1];\n          plVar2 = plVar3;\n        } while (plVar3 != plVar1);\n        lVar4 = 0;\n      }\n      *(long *)((long)plVar1 + lVar4) = param_2;\n      plVar1 = (long *)0x1;\n      param_1[1] = param_1[1] + 1;\n    }\n  }\n  return plVar1;\n}\n\n",
            "funcName": "FUN_00408b10"
        },
        {
            "funcStartAddr": "0x408c40",
            "funcEndAddr": "0x408d32",
            "decompiledFuncCode": "\nundefined8 FUN_00408c40(long *param_1,ulong *param_2,ulong param_3)\n\n{\n  long *plVar1;\n  ulong uVar2;\n  char cVar3;\n  void *pvVar4;\n  long lVar5;\n  ulong uVar6;\n  long lVar7;\n  \n  uVar2 = param_2[2];\n  *param_2 = param_3;\n  param_2[5] = 0;\n  param_2[4] = uVar2;\n  pvVar4 = malloc(uVar2 * 8);\n  param_2[6] = (ulong)pvVar4;\n  if (pvVar4 == (void *)0x0) {\n    return 0xc;\n  }\n  uVar6 = 0;\n  if (0 < (long)uVar2) {\n    do {\n      if (((*(byte *)(*(long *)(param_2[3] + uVar6 * 8) * 0x10 + *param_1 + 8) & 8) == 0) &&\n         (cVar3 = FUN_00408aa0(param_2 + 4), cVar3 == '\\0')) {\n        return 0xc;\n      }\n      uVar6 = uVar6 + 1;\n    } while (param_2[2] != uVar6 && (long)uVar6 <= (long)param_2[2]);\n  }\n  plVar1 = (long *)(param_1[8] + (param_3 & param_1[0x11]) * 0x18);\n  lVar5 = *plVar1;\n  pvVar4 = (void *)plVar1[2];\n  lVar7 = lVar5 + 1;\n  if (plVar1[1] == lVar5 || plVar1[1] < lVar5) {\n    pvVar4 = realloc(pvVar4,lVar7 * 0x10);\n    if (pvVar4 == (void *)0x0) {\n      return 0xc;\n    }\n    lVar5 = *plVar1;\n    plVar1[2] = (long)pvVar4;\n    plVar1[1] = lVar7 * 2;\n    lVar7 = lVar5 + 1;\n  }\n  *plVar1 = lVar7;\n  *(ulong **)((long)pvVar4 + lVar5 * 8) = param_2;\n  return 0;\n}\n\n",
            "funcName": "FUN_00408c40"
        },
        {
            "funcStartAddr": "0x408d40",
            "funcEndAddr": "0x408d66",
            "decompiledFuncCode": "\nwint_t FUN_00408d40(byte param_1,long param_2)\n\n{\n  wint_t wVar1;\n  \n  wVar1 = btowc((uint)param_1);\n  if ((wVar1 == 0xffffffff) && (wVar1 = 0xffffffff, param_2 == 0)) {\n    wVar1 = (uint)param_1;\n  }\n  return wVar1;\n}\n\n",
            "funcName": "FUN_00408d40"
        },
        {
            "funcStartAddr": "0x408d70",
            "funcEndAddr": "0x408de8",
            "decompiledFuncCode": "\nvoid FUN_00408d70(long *param_1)\n\n{\n  __int32_t **pp_Var1;\n  ulong uVar2;\n  long lVar3;\n  long lVar4;\n  \n  lVar4 = param_1[0xb];\n  if (param_1[8] == lVar4 || param_1[8] < lVar4) {\n    lVar4 = param_1[8];\n  }\n  lVar3 = param_1[6];\n  if (lVar3 < lVar4) {\n    pp_Var1 = __ctype_toupper_loc();\n    do {\n      uVar2 = (ulong)*(byte *)(*param_1 + lVar3 + param_1[5]);\n      if (param_1[0xf] != 0) {\n        uVar2 = (ulong)*(byte *)(param_1[0xf] + uVar2);\n      }\n      *(char *)(param_1[1] + lVar3) = (char)(*pp_Var1)[uVar2];\n      lVar3 = lVar3 + 1;\n    } while (lVar4 != lVar3);\n    param_1[6] = lVar4;\n    param_1[7] = lVar4;\n    return;\n  }\n  param_1[6] = lVar3;\n  param_1[7] = lVar3;\n  return;\n}\n\n",
            "funcName": "FUN_00408d70"
        },
        {
            "funcStartAddr": "0x408df0",
            "funcEndAddr": "0x408f83",
            "decompiledFuncCode": "\nvoid FUN_00408df0(long *param_1)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  long lVar3;\n  long lVar4;\n  int iVar5;\n  long lVar6;\n  undefined4 *puVar7;\n  long lVar8;\n  long lVar9;\n  undefined *puVar10;\n  long lVar11;\n  uint local_6c;\n  undefined local_68 [64];\n  \n  lVar11 = param_1[0xb];\n  lVar9 = param_1[6];\n  if (param_1[8] == lVar11 || param_1[8] < lVar11) {\n    lVar11 = param_1[8];\n  }\n  if (lVar9 < lVar11) {\n    lVar8 = lVar9;\nLAB_00408e20:\n    do {\n      lVar9 = param_1[0xf];\n      lVar3 = param_1[4];\n      lVar6 = lVar11 - lVar8;\n      if (lVar9 == 0) {\n        puVar10 = (undefined *)(param_1[5] + lVar8 + *param_1);\n      }\n      else {\n        if (0 < *(int *)(param_1 + 0x12)) {\n          lVar4 = 0;\n          puVar10 = local_68;\n          if (0 < lVar6) {\n            while( true ) {\n              uVar2 = *(undefined *)\n                       (lVar9 + (ulong)*(byte *)(*param_1 + lVar8 + lVar4 + param_1[5]));\n              *(undefined *)(param_1[1] + lVar8 + lVar4) = uVar2;\n              puVar10[lVar4] = uVar2;\n              iVar5 = (int)lVar4 + 1;\n              if ((*(int *)(param_1 + 0x12) == iVar5 || *(int *)(param_1 + 0x12) < iVar5) ||\n                 (lVar4 = lVar4 + 1, lVar6 == lVar4)) break;\n              lVar9 = param_1[0xf];\n            }\n            goto LAB_00408e41;\n          }\n        }\n        puVar10 = local_68;\n      }\nLAB_00408e41:\n      lVar6 = FUN_004083e0(&local_6c,puVar10,lVar6,param_1 + 4);\n      if (lVar6 - 1U < 0xfffffffffffffffe) {\n        if (lVar6 == -2) {\n          if (param_1[0xb] <= param_1[8]) goto LAB_00408ec0;\n          param_1[4] = lVar3;\n          lVar9 = lVar8;\n          break;\n        }\n      }\n      else {\nLAB_00408ec0:\n        bVar1 = *(byte *)(*param_1 + lVar8 + param_1[5]);\n        if (param_1[0xf] != 0) {\n          bVar1 = *(byte *)(param_1[0xf] + (ulong)bVar1);\n        }\n        local_6c = (uint)bVar1;\n        param_1[4] = lVar3;\n        lVar6 = 1;\n      }\n      lVar3 = param_1[2];\n      lVar9 = lVar8 + 1;\n      *(uint *)(lVar3 + lVar8 * 4) = local_6c;\n      lVar6 = lVar8 + lVar6;\n      if (lVar6 <= lVar9) {\n        lVar8 = lVar9;\n        if (lVar11 <= lVar9) break;\n        goto LAB_00408e20;\n      }\n      puVar7 = (undefined4 *)(lVar3 + 4 + lVar8 * 4);\n      do {\n        *puVar7 = 0xffffffff;\n        puVar7 = puVar7 + 1;\n      } while ((undefined4 *)(lVar3 + lVar6 * 4) != puVar7);\n      lVar8 = lVar6;\n      lVar9 = lVar6;\n    } while (lVar6 < lVar11);\n  }\n  param_1[6] = lVar9;\n  param_1[7] = lVar9;\n  return;\n}\n\n",
            "funcName": "FUN_00408df0"
        },
        {
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x409574",
            "decompiledFuncCode": "\nundefined8 FUN_00408fa0(long *param_1)\n\n{\n  wchar_t *pwVar1;\n  ulong *puVar2;\n  byte bVar3;\n  long lVar4;\n  long lVar5;\n  wchar_t wVar6;\n  wchar_t wVar7;\n  int iVar8;\n  ulong uVar9;\n  size_t sVar10;\n  __int32_t **pp_Var11;\n  ulong uVar12;\n  void *pvVar13;\n  undefined4 *puVar14;\n  long lVar15;\n  ulong uVar16;\n  long lVar17;\n  byte *pbVar18;\n  ulong uVar19;\n  ulong uVar20;\n  mbstate_t *local_a8;\n  char *local_a0;\n  ulong local_98;\n  wchar_t *local_90;\n  wchar_t local_84;\n  mbstate_t local_80;\n  char local_78 [72];\n  \n  lVar17 = param_1[0xb];\n  if (param_1[8] == lVar17 || param_1[8] < lVar17) {\n    lVar17 = param_1[8];\n  }\n  if (((*(char *)((long)param_1 + 0x8a) != '\\0') || (param_1[0xf] != 0)) ||\n     (uVar19 = param_1[6], *(char *)((long)param_1 + 0x8c) != '\\0')) {\n    uVar12 = param_1[7];\n    uVar20 = param_1[6];\n    goto LAB_00408fda;\n  }\njoined_r0x00409150:\n  do {\n    if (lVar17 <= (long)uVar19) {\nLAB_00409253:\n      param_1[6] = uVar19;\n      param_1[7] = uVar19;\n      return 0;\n    }\n    local_a8 = (mbstate_t *)(param_1 + 4);\n    pbVar18 = (byte *)(param_1[5] + uVar19 + *param_1);\n    bVar3 = *pbVar18;\n    if (((bVar3 & 0x80) == 0) && (iVar8 = mbsinit(local_a8), iVar8 != 0)) {\n      pp_Var11 = __ctype_toupper_loc();\n      *(char *)(param_1[1] + uVar19) = (char)(*pp_Var11)[bVar3];\n      *(uint *)(param_1[2] + uVar19 * 4) = (uint)*(byte *)(param_1[1] + uVar19);\n      uVar19 = uVar19 + 1;\n      goto joined_r0x00409150;\n    }\n    local_80 = *(mbstate_t *)(param_1 + 4);\n    local_98 = lVar17 - uVar19;\n    uVar12 = FUN_004083e0(&local_84,pbVar18,local_98,local_a8);\n    wVar6 = local_84;\n    if (uVar12 < 0xfffffffffffffffe) {\n      wVar7 = towupper(local_84);\n      if (wVar6 == wVar7) {\n        memcpy((void *)(param_1[1] + uVar19),(void *)(param_1[5] + uVar19 + *param_1),uVar12);\n      }\n      else {\n        sVar10 = wcrtomb(local_78,wVar7,&local_80);\n        uVar20 = uVar19;\n        if (uVar12 != sVar10) break;\n        memcpy((void *)(param_1[1] + uVar19),local_78,uVar12);\n      }\n      lVar15 = param_1[2];\n      lVar4 = uVar19 * 4;\n      uVar20 = uVar19 + 1;\n      *(wchar_t *)(lVar15 + uVar19 * 4) = wVar7;\n      uVar12 = uVar19 + uVar12;\n      uVar19 = uVar20;\n      if ((long)uVar20 < (long)uVar12) {\n        puVar14 = (undefined4 *)(lVar15 + 4 + lVar4);\n        do {\n          *puVar14 = 0xffffffff;\n          puVar14 = puVar14 + 1;\n          uVar19 = uVar12;\n        } while ((undefined4 *)(lVar15 + uVar12 * 4) != puVar14);\n      }\n    }\n    else if (uVar12 == 0xfffffffffffffffe) {\n      if (param_1[8] < param_1[0xb]) {\n        *(mbstate_t *)(param_1 + 4) = local_80;\n        goto LAB_00409253;\n      }\n      bVar3 = *(byte *)(*param_1 + uVar19 + param_1[5]);\n      *(byte *)(param_1[1] + uVar19) = bVar3;\n      *(uint *)(param_1[2] + uVar19 * 4) = (uint)bVar3;\n      uVar19 = uVar19 + 1;\n    }\n    else {\n      bVar3 = *(byte *)(*param_1 + uVar19 + param_1[5]);\n      *(byte *)(param_1[1] + uVar19) = bVar3;\n      *(uint *)(param_1[2] + uVar19 * 4) = (uint)bVar3;\n      *(mbstate_t *)(param_1 + 4) = local_80;\n      uVar19 = uVar19 + 1;\n    }\n  } while( true );\nLAB_00409000:\n  local_90 = &local_84;\n  local_80 = *(mbstate_t *)(param_1 + 4);\n  lVar4 = param_1[0xf];\n  if (lVar4 == 0) {\n    local_a0 = (char *)(param_1[5] + uVar19 + *param_1);\n  }\n  else {\n    iVar8 = *(int *)(param_1 + 0x12);\n    if ((0 < iVar8) && (0 < (long)local_98)) {\n      lVar15 = param_1[5];\n      uVar12 = 0;\n      lVar5 = *param_1;\n      do {\n        local_78[uVar12] = *(char *)(lVar4 + (ulong)*(byte *)(lVar15 + uVar19 + lVar5 + uVar12));\n        if (iVar8 - 1 == uVar12) break;\n        uVar12 = uVar12 + 1;\n      } while (local_98 != uVar12);\n    }\n    local_a0 = local_78;\n  }\n  uVar9 = FUN_004083e0(local_90,local_a0,local_98,(mbstate_t *)(param_1 + 4));\n  wVar6 = local_84;\n  if (uVar9 < 0xfffffffffffffffe) {\n    wVar7 = towupper(local_84);\n    if (wVar6 == wVar7) {\nLAB_00409388:\n      memcpy((void *)(param_1[1] + uVar20),local_a0,uVar9);\n    }\n    else {\n      sVar10 = wcrtomb(local_78,wVar7,&local_80);\n      if (uVar9 != sVar10) {\n        if (sVar10 != 0xffffffffffffffff) {\n          if ((ulong)param_1[8] < uVar20 + sVar10) goto LAB_0040910f;\n          if (param_1[3] == 0) {\n            pvVar13 = malloc(param_1[8] * 8);\n            param_1[3] = (long)pvVar13;\n            if (pvVar13 == (void *)0x0) {\n              return 0xc;\n            }\n          }\n          if (*(char *)((long)param_1 + 0x8c) == '\\0') {\n            if (uVar20 != 0) {\n              lVar17 = param_1[3];\n              uVar12 = 0;\n              do {\n                *(ulong *)(lVar17 + uVar12 * 8) = uVar12;\n                uVar12 = uVar12 + 1;\n              } while (uVar20 != uVar12);\n            }\n            *(undefined *)((long)param_1 + 0x8c) = 1;\n          }\n          memcpy((void *)(param_1[1] + uVar20),local_78,sVar10);\n          pwVar1 = (wchar_t *)(param_1[2] + uVar20 * 4);\n          lVar17 = param_1[3];\n          *pwVar1 = wVar7;\n          puVar2 = (ulong *)(lVar17 + uVar20 * 8);\n          uVar12 = 1;\n          *puVar2 = uVar19;\n          if (1 < sVar10) {\n            do {\n              uVar16 = uVar12;\n              if (uVar9 <= uVar12) {\n                uVar16 = uVar9 - 1;\n              }\n              puVar2[uVar12] = uVar16 + uVar19;\n              pwVar1[uVar12] = L'\\xffffffff';\n              uVar12 = uVar12 + 1;\n            } while (uVar12 != sVar10);\n          }\n          lVar17 = param_1[0xb] + (sVar10 - uVar9);\n          param_1[0xb] = lVar17;\n          if ((long)uVar19 < param_1[0xc]) {\n            param_1[0xd] = param_1[0xd] + (sVar10 - uVar9);\n          }\n          if (param_1[8] == lVar17 || param_1[8] < lVar17) {\n            lVar17 = param_1[8];\n          }\n          uVar12 = uVar19 + uVar9;\n          uVar20 = uVar20 + sVar10;\n          goto LAB_00408fda;\n        }\n        goto LAB_00409388;\n      }\n      memcpy((void *)(param_1[1] + uVar20),local_78,uVar9);\n    }\n    if (*(char *)((long)param_1 + 0x8c) == '\\0') {\n      uVar12 = uVar19 + uVar9;\n    }\n    else {\n      uVar12 = uVar19;\n      if (uVar9 != 0) {\n        lVar4 = param_1[3];\n        uVar12 = uVar9 + uVar19;\n        lVar15 = uVar20 - uVar19;\n        do {\n          *(ulong *)(lVar4 + lVar15 * 8 + uVar19 * 8) = uVar19;\n          uVar19 = uVar19 + 1;\n        } while (uVar12 != uVar19);\n      }\n    }\n    lVar15 = param_1[2];\n    uVar19 = uVar20 + 1;\n    uVar9 = uVar20 + uVar9;\n    lVar4 = uVar20 * 4;\n    *(wchar_t *)(lVar15 + uVar20 * 4) = wVar7;\n    uVar20 = uVar19;\n    if ((long)uVar19 < (long)uVar9) {\n      puVar14 = (undefined4 *)(lVar15 + 4 + lVar4);\n      do {\n        *puVar14 = 0xffffffff;\n        puVar14 = puVar14 + 1;\n        uVar20 = uVar9;\n      } while ((undefined4 *)(lVar15 + uVar9 * 4) != puVar14);\n    }\n  }\n  else {\n    if ((uVar9 == 0xfffffffffffffffe) && (param_1[8] < param_1[0xb])) {\nLAB_0040910f:\n      *(mbstate_t *)(param_1 + 4) = local_80;\nLAB_00409120:\n      param_1[6] = uVar20;\n      param_1[7] = uVar19;\n      return 0;\n    }\n    bVar3 = *(byte *)(*param_1 + uVar19 + param_1[5]);\n    if (param_1[0xf] != 0) {\n      bVar3 = *(byte *)(param_1[0xf] + (ulong)bVar3);\n    }\n    *(byte *)(param_1[1] + uVar20) = bVar3;\n    if (*(char *)((long)param_1 + 0x8c) != '\\0') {\n      *(ulong *)(param_1[3] + uVar20 * 8) = uVar19;\n    }\n    uVar12 = uVar19 + 1;\n    uVar19 = uVar20 + 1;\n    *(uint *)(param_1[2] + uVar20 * 4) = (uint)bVar3;\n    uVar20 = uVar19;\n    if (uVar9 == 0xffffffffffffffff) {\n      *(mbstate_t *)(param_1 + 4) = local_80;\n    }\n  }\nLAB_00408fda:\n  uVar19 = uVar12;\n  if (lVar17 <= (long)uVar20) goto LAB_00409120;\n  local_98 = lVar17 - uVar20;\n  goto LAB_00409000;\n}\n\n",
            "funcName": "FUN_00408fa0"
        },
        {
            "funcStartAddr": "0x4095a0",
            "funcEndAddr": "0x4096cc",
            "decompiledFuncCode": "\nulong FUN_004095a0(long *param_1,int param_2)\n\n{\n  uint uVar1;\n  long lVar2;\n  void *pvVar3;\n  ulong uVar4;\n  long lVar5;\n  long lVar6;\n  \n  if (0xffffffffffffffe < (ulong)param_1[8]) {\n    return 0xc;\n  }\n  lVar2 = param_1[8] * 2;\n  if (param_1[0xb] < lVar2) {\n    lVar2 = param_1[0xb];\n  }\n  lVar6 = (long)param_2;\n  if (param_2 <= lVar2) {\n    lVar6 = lVar2;\n  }\n  uVar1 = FUN_00408a00(param_1,lVar6);\n  uVar4 = (ulong)uVar1;\n  if (uVar1 == 0) {\n    if ((void *)param_1[0x17] != (void *)0x0) {\n      pvVar3 = realloc((void *)param_1[0x17],param_1[8] * 8 + 8);\n      if (pvVar3 == (void *)0x0) {\n        return 0xc;\n      }\n      param_1[0x17] = (long)pvVar3;\n    }\n    if (*(char *)(param_1 + 0x11) != '\\0') {\n      if (*(int *)(param_1 + 0x12) < 2) {\n        FUN_00408d70(param_1);\n        return uVar4;\n      }\n      uVar4 = FUN_00408fa0();\n      return uVar4;\n    }\n    if (1 < *(int *)(param_1 + 0x12)) {\n      FUN_00408df0(param_1);\n      return uVar4;\n    }\n    lVar2 = param_1[0xf];\n    if (lVar2 != 0) {\n      lVar6 = param_1[0xb];\n      lVar5 = param_1[6];\n      if (param_1[8] == lVar6 || param_1[8] < lVar6) {\n        lVar6 = param_1[8];\n      }\n      if (lVar5 < lVar6) {\n        while( true ) {\n          *(undefined *)(param_1[1] + lVar5) =\n               *(undefined *)(lVar2 + (ulong)*(byte *)(*param_1 + lVar5 + param_1[5]));\n          lVar5 = lVar5 + 1;\n          if (lVar6 == lVar5) break;\n          lVar2 = param_1[0xf];\n        }\n        param_1[6] = lVar6;\n        param_1[7] = lVar6;\n      }\n      else {\n        param_1[6] = lVar5;\n        param_1[7] = lVar5;\n      }\n    }\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004095a0"
        },
        {
            "funcStartAddr": "0x4096f0",
            "funcEndAddr": "0x409771",
            "decompiledFuncCode": "\nundefined8 FUN_004096f0(long param_1,long param_2)\n\n{\n  long lVar1;\n  int iVar2;\n  undefined8 uVar3;\n  \n  lVar1 = *(long *)(param_1 + 0xc0);\n  if ((param_2 < *(long *)(param_1 + 0x40)) ||\n     (*(long *)(param_1 + 0x58) <= *(long *)(param_1 + 0x40))) {\n    if ((param_2 < *(long *)(param_1 + 0x30)) ||\n       (*(long *)(param_1 + 0x58) <= *(long *)(param_1 + 0x30))) goto LAB_0040971f;\n    uVar3 = FUN_004095a0(param_1);\n    iVar2 = (int)uVar3;\n  }\n  else {\n    uVar3 = FUN_004095a0(param_1);\n    iVar2 = (int)uVar3;\n  }\n  if (iVar2 != 0) {\n    return uVar3;\n  }\nLAB_0040971f:\n  if (lVar1 < param_2) {\n    memset((void *)(*(long *)(param_1 + 0xb8) + 8 + lVar1 * 8),0,(param_2 - lVar1) * 8);\n    *(long *)(param_1 + 0xc0) = param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_004096f0"
        },
        {
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x40979e",
            "decompiledFuncCode": "\nvoid FUN_00409780(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1[3]);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00409780"
        },
        {
            "funcStartAddr": "0x4097a0",
            "funcEndAddr": "0x4097c0",
            "decompiledFuncCode": "\nvoid FUN_004097a0(void **param_1)\n\n{\n  if ((*(uint *)(param_1 + 1) & 0x400ff) == 6) {\n    FUN_00409780(*param_1);\n    return;\n  }\n  if ((*(uint *)(param_1 + 1) & 0x400ff) != 3) {\n    return;\n  }\n  free(*param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004097a0"
        },
        {
            "funcStartAddr": "0x4097d0",
            "funcEndAddr": "0x4097e4",
            "decompiledFuncCode": "\nundefined8 FUN_004097d0(undefined8 param_1,long param_2)\n\n{\n  FUN_004097a0(param_2 + 0x28);\n  return 0;\n}\n\n",
            "funcName": "FUN_004097d0"
        },
        {
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x4099af",
            "decompiledFuncCode": "\nvoid * FUN_004097f0(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined (*pauVar1) [16];\n  void *pvVar2;\n  undefined8 *puVar3;\n  void *pvVar4;\n  void *__ptr;\n  void *__ptr_00;\n  void *__ptr_01;\n  void *__ptr_02;\n  bool bVar5;\n  \n  pvVar4 = param_1[2];\n  pvVar2 = param_1[1];\n  if (pvVar4 < pvVar2) {\n    __ptr = param_1[3];\n    __ptr_01 = param_1[5];\nLAB_0040981d:\n    puVar3 = (undefined8 *)((long)pvVar4 * 0x10 + (long)*param_1);\n    bVar5 = (char)param_3 == '\\x06';\n    puVar3[1] = param_3;\n    *puVar3 = param_2;\n    *(uint *)(puVar3 + 1) = (uint)param_3 & 0xfffc00ff;\n    if ((char)param_3 == '\\x05') {\n      bVar5 = 1 < *(int *)((long)param_1 + 0xb4);\n    }\n    *(byte *)((long)puVar3 + 10) = *(byte *)((long)puVar3 + 10) & 0xef | bVar5 << 4;\n    *(undefined8 *)((long)__ptr + (long)pvVar4 * 8) = 0xffffffffffffffff;\n    pauVar1 = (undefined (*) [16])((long)__ptr_01 + (long)param_1[2] * 0x18);\n    *pauVar1 = (undefined  [16])0x0;\n    *(undefined8 *)pauVar1[1] = 0;\n    pauVar1 = (undefined (*) [16])((long)param_1[6] + (long)param_1[2] * 0x18);\n    *pauVar1 = (undefined  [16])0x0;\n    *(undefined8 *)pauVar1[1] = 0;\n    pvVar4 = param_1[2];\n    param_1[2] = (void *)((long)pvVar4 + 1);\n  }\n  else {\n    if ((void *)((long)pvVar2 * 2) < (void *)0xaaaaaaaaaaaaaab) {\n      pvVar4 = realloc(*param_1,(long)pvVar2 << 5);\n      if (pvVar4 != (void *)0x0) {\n        *param_1 = pvVar4;\n        __ptr = realloc(param_1[3],(long)pvVar2 << 4);\n        __ptr_00 = realloc(param_1[4],(long)pvVar2 << 4);\n        __ptr_01 = realloc(param_1[5],(long)pvVar2 * 0x30);\n        __ptr_02 = realloc(param_1[6],(long)pvVar2 * 0x30);\n        if ((((__ptr != (void *)0x0) && (__ptr_00 != (void *)0x0)) && (__ptr_01 != (void *)0x0)) &&\n           (__ptr_02 != (void *)0x0)) {\n          param_1[3] = __ptr;\n          pvVar4 = param_1[2];\n          param_1[4] = __ptr_00;\n          param_1[5] = __ptr_01;\n          param_1[6] = __ptr_02;\n          param_1[1] = (void *)((long)pvVar2 * 2);\n          goto LAB_0040981d;\n        }\n        free(__ptr);\n        free(__ptr_00);\n        free(__ptr_01);\n        free(__ptr_02);\n      }\n    }\n    pvVar4 = (void *)0xffffffffffffffff;\n  }\n  return pvVar4;\n}\n\n",
            "funcName": "FUN_004097f0"
        },
        {
            "funcStartAddr": "0x4099c0",
            "funcEndAddr": "0x409a5f",
            "decompiledFuncCode": "\nvoid FUN_004099c0(long *param_1,long param_2,ushort param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  \n  lVar5 = param_2 * 0x10;\n  lVar2 = FUN_004097f0(param_1,*(undefined8 *)(*param_1 + lVar5),\n                       *(undefined8 *)(*param_1 + 8 + lVar5));\n  if (lVar2 != -1) {\n    lVar1 = *param_1;\n    lVar4 = lVar2 * 0x10 + lVar1;\n    uVar3 = *(uint *)(lVar4 + 8) & 0xfffc00ff;\n    *(uint *)(lVar4 + 8) = uVar3 | (uint)(param_3 & 0x3ff) << 8;\n    uVar3 = (*(uint *)(lVar1 + 8 + lVar5) >> 8 & 0x3ff | (uint)(param_3 & 0x3ff)) << 8 | uVar3;\n    *(uint *)(lVar4 + 8) = uVar3;\n    *(byte *)(lVar4 + 10) = (byte)(uVar3 >> 0x10) | 4;\n    *(long *)(param_1[4] + lVar2 * 8) = param_2;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004099c0"
        },
        {
            "funcStartAddr": "0x409a60",
            "funcEndAddr": "0x409cce",
            "decompiledFuncCode": "\nundefined8 FUN_00409a60(long *param_1,long param_2,long param_3,long param_4,uint param_5)\n\n{\n  long lVar1;\n  long lVar2;\n  char cVar3;\n  long lVar4;\n  undefined8 uVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long local_48;\n  \n  do {\n    lVar6 = *param_1;\n    lVar8 = param_1[5];\n    lVar4 = param_2 * 0x10 + lVar6;\n    if (*(char *)(lVar4 + 8) == '\\x04') {\n      local_48 = *(long *)(param_1[3] + param_2 * 8);\n      *(undefined8 *)(lVar8 + 8 + param_3 * 0x18) = 0;\n      lVar6 = FUN_004099c0(param_1,local_48,param_5);\n      if (lVar6 == -1) {\n        return 0xc;\n      }\n      *(undefined8 *)(param_1[3] + param_3 * 8) = *(undefined8 *)(param_1[3] + param_2 * 8);\nLAB_00409b7a:\n      cVar3 = FUN_00408b10(param_1[5] + param_3 * 0x18,lVar6);\n      param_3 = lVar6;\n      param_2 = local_48;\n    }\n    else {\n      lVar1 = lVar8 + param_2 * 0x18;\n      lVar2 = *(long *)(lVar1 + 8);\n      if (lVar2 == 0) {\n        *(undefined8 *)(param_1[3] + param_3 * 8) = *(undefined8 *)(param_1[3] + param_2 * 8);\n        return 0;\n      }\n      lVar7 = param_3 * 0x18;\n      lVar1 = **(long **)(lVar1 + 0x10);\n      *(undefined8 *)(lVar8 + lVar7 + 8) = 0;\n      if (lVar2 != 1) {\n        lVar8 = param_1[2] + -1;\n        lVar4 = lVar8 * 0x10 + lVar6;\n        if (((*(byte *)(lVar4 + 10) & 4) != 0) && (0 < lVar8)) {\n          lVar6 = lVar6 - lVar4;\n          do {\n            if ((*(long *)(param_1[4] + lVar8 * 8) == lVar1) &&\n               (param_5 == (*(uint *)(lVar4 + 8) >> 8 & 0x3ff))) {\n              cVar3 = FUN_00408b10();\n              if (cVar3 == '\\0') {\n                return 0xc;\n              }\n              goto LAB_00409b52;\n            }\n            lVar4 = lVar4 + lVar6 + -0x20 + param_1[2] * 0x10;\n            lVar8 = lVar8 + -1;\n          } while (((*(byte *)(lVar4 + 10) & 4) != 0) && (0 < lVar8));\n        }\n        lVar6 = FUN_004099c0(param_1,lVar1,param_5);\n        if (lVar6 == -1) {\n          return 0xc;\n        }\n        cVar3 = FUN_00408b10(param_1[5] + lVar7,lVar6);\n        if (cVar3 == '\\0') {\n          return 0xc;\n        }\n        uVar5 = FUN_00409a60(param_1,lVar1,lVar6,param_4,param_5);\n        if ((int)uVar5 != 0) {\n          return uVar5;\n        }\nLAB_00409b52:\n        local_48 = *(long *)(*(long *)(param_1[5] + 0x10 + param_2 * 0x18) + 8);\n        lVar6 = FUN_004099c0(param_1,local_48,param_5);\n        if (lVar6 == -1) {\n          return 0xc;\n        }\n        goto LAB_00409b7a;\n      }\n      if ((param_2 == param_4) && (param_2 != param_3)) {\n        cVar3 = FUN_00408b10(lVar8 + lVar7,lVar1);\n        if (cVar3 == '\\0') {\n          return 0xc;\n        }\n        return 0;\n      }\n      param_5 = param_5 | *(uint *)(lVar4 + 8) >> 8 & 0x3ff;\n      param_3 = FUN_004099c0(param_1,lVar1,param_5);\n      if (param_3 == -1) {\n        return 0xc;\n      }\n      cVar3 = FUN_00408b10(param_1[5] + lVar7,param_3);\n      param_2 = lVar1;\n    }\n    if (cVar3 == '\\0') {\n      return 0xc;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409a60"
        },
        {
            "funcStartAddr": "0x409cf0",
            "funcEndAddr": "0x409d49",
            "decompiledFuncCode": "\nvoid FUN_00409cf0(void *param_1)\n\n{\n  free(*(void **)((long)param_1 + 0x30));\n  free(*(void **)((long)param_1 + 0x48));\n  if (*(long *)((long)param_1 + 0x50) != (long)param_1 + 8) {\n    free(*(void **)(*(long *)((long)param_1 + 0x50) + 0x10));\n    free(*(void **)((long)param_1 + 0x50));\n  }\n  free(*(void **)((long)param_1 + 0x18));\n  free(*(void **)((long)param_1 + 0x60));\n  free(*(void **)((long)param_1 + 0x58));\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00409cf0"
        },
        {
            "funcStartAddr": "0x409d50",
            "funcEndAddr": "0x409d7b",
            "decompiledFuncCode": "\nvoid FUN_00409d50(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  free(*(void **)(param_1 + 0x18));\n  if (*(char *)(param_1 + 0x8b) == '\\0') {\n    return;\n  }\n  free(*(void **)(param_1 + 8));\n  return;\n}\n\n",
            "funcName": "FUN_00409d50"
        },
        {
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409e48",
            "decompiledFuncCode": "\nvoid FUN_00409d90(long param_1)\n\n{\n  void *__ptr;\n  void *__ptr_00;\n  long lVar1;\n  long lVar2;\n  \n  if (0 < *(long *)(param_1 + 0xe8)) {\n    lVar2 = 0;\n    do {\n      __ptr = *(void **)(*(long *)(param_1 + 0xf8) + lVar2 * 8);\n      if (0 < *(long *)((long)__ptr + 0x20)) {\n        lVar1 = 0;\n        do {\n          __ptr_00 = *(void **)(*(long *)((long)__ptr + 0x28) + lVar1 * 8);\n          lVar1 = lVar1 + 1;\n          free(*(void **)((long)__ptr_00 + 0x20));\n          free(__ptr_00);\n        } while (*(long *)((long)__ptr + 0x20) != lVar1 && lVar1 <= *(long *)((long)__ptr + 0x20));\n      }\n      free(*(void **)((long)__ptr + 0x28));\n      if (*(long *)((long)__ptr + 0x10) != 0) {\n        free(*(void **)(*(long *)((long)__ptr + 0x10) + 0x10));\n        free(*(void **)((long)__ptr + 0x10));\n      }\n      lVar2 = lVar2 + 1;\n      free(__ptr);\n    } while (*(long *)(param_1 + 0xe8) != lVar2 && lVar2 <= *(long *)(param_1 + 0xe8));\n  }\n  *(undefined8 *)(param_1 + 0xe8) = 0;\n  *(undefined8 *)(param_1 + 200) = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00409d90"
        },
        {
            "funcStartAddr": "0x409e50",
            "funcEndAddr": "0x40a098",
            "decompiledFuncCode": "\nundefined8 FUN_00409e50(long param_1,long param_2)\n\n{\n  undefined8 *puVar1;\n  long lVar2;\n  undefined8 uVar3;\n  long *plVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  long lVar7;\n  \n  lVar2 = *(long *)(param_2 + 0x38);\n  switch(*(byte *)(param_2 + 0x30)) {\n  default:\n    if ((*(byte *)(param_2 + 0x30) & 8) != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"!IS_EPSILON_NODE (node->token.type)\",\"lib/regcomp.c\",0x5cc,\"link_nfa_nodes\");\n    }\n    *(undefined8 *)(*(long *)(param_1 + 0x18) + lVar2 * 8) =\n         *(undefined8 *)(*(long *)(param_2 + 0x20) + 0x38);\n    break;\n  case 2:\n    if (*(long *)(param_2 + 0x20) != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"node->next == NULL\",\"lib/regcomp.c\",0x5a9,\"link_nfa_nodes\");\n    }\n    break;\n  case 4:\n    uVar3 = *(undefined8 *)(*(long *)(param_2 + 0x20) + 0x38);\n    *(undefined8 *)(*(long *)(param_1 + 0x18) + lVar2 * 8) = uVar3;\n    if (*(char *)(param_2 + 0x30) == '\\x04') {\n      puVar1 = (undefined8 *)(*(long *)(param_1 + 0x28) + lVar2 * 0x18);\n      *puVar1 = 1;\n      puVar1[1] = 1;\n      puVar5 = (undefined8 *)malloc(8);\n      puVar1[2] = puVar5;\n      if (puVar5 != (undefined8 *)0x0) {\n        *puVar5 = uVar3;\n        return 0;\n      }\n      puVar1[1] = 0;\n      *puVar1 = 0;\n      return 0xc;\n    }\n    break;\n  case 8:\n  case 9:\n  case 0xc:\n    uVar3 = *(undefined8 *)(*(long *)(param_2 + 0x20) + 0x38);\n    puVar1 = (undefined8 *)(*(long *)(param_1 + 0x28) + lVar2 * 0x18);\n    *puVar1 = 1;\n    puVar1[1] = 1;\n    puVar5 = (undefined8 *)malloc(8);\n    puVar1[2] = puVar5;\n    if (puVar5 == (undefined8 *)0x0) {\n      puVar1[1] = 0;\n      *puVar1 = 0;\n      return 0xc;\n    }\n    *puVar5 = uVar3;\n    return 0;\n  case 10:\n  case 0xb:\n    *(byte *)(param_1 + 0xb0) = *(byte *)(param_1 + 0xb0) | 1;\n    if (*(long *)(param_2 + 8) == 0) {\n      lVar6 = *(long *)(*(long *)(param_2 + 0x20) + 0x38);\n    }\n    else {\n      lVar6 = *(long *)(*(long *)(*(long *)(param_2 + 8) + 0x18) + 0x38);\n    }\n    if (*(long *)(param_2 + 0x10) == 0) {\n      lVar7 = *(long *)(*(long *)(param_2 + 0x20) + 0x38);\n    }\n    else {\n      lVar7 = *(long *)(*(long *)(*(long *)(param_2 + 0x10) + 0x18) + 0x38);\n    }\n    if (lVar6 < 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"left > -1\",\"lib/regcomp.c\",0x5b9,\"link_nfa_nodes\");\n    }\n    if (lVar7 < 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"right > -1\",\"lib/regcomp.c\",0x5ba,\"link_nfa_nodes\");\n    }\n    puVar1 = (undefined8 *)(*(long *)(param_1 + 0x28) + lVar2 * 0x18);\n    *puVar1 = 2;\n    plVar4 = (long *)malloc(0x10);\n    puVar1[2] = plVar4;\n    if (plVar4 != (long *)0x0) {\n      if (lVar6 == lVar7) {\n        puVar1[1] = 1;\n        *plVar4 = lVar6;\n        return 0;\n      }\n      puVar1[1] = 2;\n      if (lVar6 < lVar7) {\n        *plVar4 = lVar6;\n        plVar4[1] = lVar7;\n        return 0;\n      }\n      *plVar4 = lVar7;\n      plVar4[1] = lVar6;\n      return 0;\n    }\n    return 0xc;\n  case 0x10:\n    break;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00409e50"
        },
        {
            "funcStartAddr": "0x40a0d0",
            "funcEndAddr": "0x40a117",
            "decompiledFuncCode": "\nulong FUN_0040a0d0(long param_1,long param_2)\n\n{\n  long lVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  lVar1 = param_2 + 1;\n  if (lVar1 < *(long *)(param_1 + 0x30)) {\n    if (*(int *)(*(long *)(param_1 + 0x10) + lVar1 * 4) == -1) {\n      uVar3 = 2;\n      do {\n        uVar2 = uVar3 & 0xffffffff;\n        if (uVar3 == *(long *)(param_1 + 0x30) - param_2) {\n          return uVar2;\n        }\n        uVar3 = uVar3 + 1;\n      } while (*(int *)(*(long *)(param_1 + 0x10) + lVar1 * 4 + -8 + uVar3 * 4) == -1);\n      return uVar2;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_0040a0d0"
        },
        {
            "funcStartAddr": "0x40a120",
            "funcEndAddr": "0x40a17a",
            "decompiledFuncCode": "\nlong FUN_0040a120(long param_1,long *param_2,long param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  if (0 < param_1) {\n    lVar1 = *param_2;\n    uVar6 = param_1 - 1;\n    uVar5 = 0;\n    while (uVar5 < uVar6) {\n      uVar4 = uVar5 + uVar6 >> 1;\n      lVar2 = *(long *)(lVar1 + uVar4 * 8);\n      while (uVar3 = uVar4, param_3 <= lVar2) {\n        if (uVar3 <= uVar5) goto LAB_0040a15d;\n        uVar4 = uVar5 + uVar3 >> 1;\n        lVar2 = *(long *)(lVar1 + uVar4 * 8);\n        uVar6 = uVar3;\n      }\n      uVar5 = uVar3 + 1;\n    }\nLAB_0040a15d:\n    if (param_3 == *(long *)(lVar1 + uVar5 * 8)) {\n      return uVar5 + 1;\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a120"
        },
        {
            "funcStartAddr": "0x40a190",
            "funcEndAddr": "0x40a27b",
            "decompiledFuncCode": "\nundefined8 FUN_0040a190(long *param_1,long param_2,long param_3,long param_4,uint param_5)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  undefined8 uVar4;\n  long lVar5;\n  \n  while( true ) {\n    lVar2 = FUN_0040a120(*(undefined8 *)(param_2 + 8),param_2 + 0x10,param_3);\n    if (lVar2 != 0) {\n      return 0;\n    }\n    plVar3 = (long *)(param_3 * 0x10 + *param_1);\n    if ((*(byte *)(plVar3 + 1) == param_5) && (*plVar3 == param_4)) {\n      if (param_5 != 9) {\n        return 0;\n      }\n      cVar1 = FUN_00408b10(param_2,param_3);\n      if (cVar1 == '\\0') {\n        return 0xc;\n      }\n      return 0;\n    }\n    cVar1 = FUN_00408b10(param_2,param_3);\n    if (cVar1 == '\\0') {\n      return 0xc;\n    }\n    lVar5 = param_1[5] + param_3 * 0x18;\n    lVar2 = *(long *)(lVar5 + 8);\n    if (lVar2 == 0) break;\n    plVar3 = *(long **)(lVar5 + 0x10);\n    if (lVar2 == 2) {\n      uVar4 = FUN_0040a190(param_1,param_2,plVar3[1],param_4,param_5);\n      if ((int)uVar4 != 0) {\n        return uVar4;\n      }\n      plVar3 = *(long **)(param_1[5] + 0x10 + param_3 * 0x18);\n    }\n    param_3 = *plVar3;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a190"
        },
        {
            "funcStartAddr": "0x40a290",
            "funcEndAddr": "0x40a2b3",
            "decompiledFuncCode": "\nvoid FUN_0040a290(long *param_1,long *param_2,long param_3)\n\n{\n  long lVar1;\n  \n  if (param_3 < *param_1) {\n    lVar1 = *param_2;\n    do {\n      *(undefined8 *)(lVar1 + param_3 * 8) = *(undefined8 *)(lVar1 + 8 + param_3 * 8);\n      param_3 = param_3 + 1;\n    } while (param_3 < *param_1);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040a290"
        },
        {
            "funcStartAddr": "0x40a2c0",
            "funcEndAddr": "0x40a349",
            "decompiledFuncCode": "\nundefined8 FUN_0040a2c0(long param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long *plVar3;\n  undefined8 uVar4;\n  byte bVar5;\n  \n  if (*(char *)(param_2 + 0x30) == '\\x04') {\n    if (*(long *)(param_1 + 0xe0) != 0) {\n      uVar4 = *(undefined8 *)(*(long *)(param_1 + 0xe0) + (long)*(int *)(param_2 + 0x28) * 8);\n      *(undefined8 *)(param_2 + 0x28) = uVar4;\n      *(ulong *)(param_1 + 0xa0) = *(ulong *)(param_1 + 0xa0) | (long)(1 << ((byte)uVar4 & 0x1f));\n      return 0;\n    }\n  }\n  else if (((*(char *)(param_2 + 0x30) == '\\x11') && (lVar1 = *(long *)(param_2 + 8), lVar1 != 0))\n          && (*(char *)(lVar1 + 0x30) == '\\x11')) {\n    lVar2 = *(long *)(lVar1 + 0x28);\n    plVar3 = *(long **)(lVar1 + 8);\n    *(long **)(param_2 + 8) = plVar3;\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n    }\n    *(undefined8 *)(*(long *)(param_1 + 0xe0) + lVar2 * 8) =\n         *(undefined8 *)(*(long *)(param_1 + 0xe0) + *(long *)(param_2 + 0x28) * 8);\n    if (lVar2 < 0x40) {\n      bVar5 = (byte)lVar2 & 0x3f;\n      *(ulong *)(param_1 + 0xa0) =\n           *(ulong *)(param_1 + 0xa0) & (-2L << bVar5 | 0xfffffffffffffffeU >> 0x40 - bVar5);\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a2c0"
        },
        {
            "funcStartAddr": "0x40a350",
            "funcEndAddr": "0x40a39f",
            "decompiledFuncCode": "\nundefined8 FUN_0040a350(undefined8 param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  lVar1 = *(long *)(param_2 + 8);\n  if (*(char *)(param_2 + 0x30) == '\\v') {\n    *(long *)(lVar1 + 0x20) = param_2;\n    return 0;\n  }\n  if (*(char *)(param_2 + 0x30) != '\\x10') {\n    if (lVar1 != 0) {\n      *(undefined8 *)(lVar1 + 0x20) = *(undefined8 *)(param_2 + 0x20);\n    }\n    if (*(long *)(param_2 + 0x10) != 0) {\n      *(undefined8 *)(*(long *)(param_2 + 0x10) + 0x20) = *(undefined8 *)(param_2 + 0x20);\n    }\n    return 0;\n  }\n  lVar2 = *(long *)(param_2 + 0x10);\n  *(undefined8 *)(lVar1 + 0x20) = *(undefined8 *)(lVar2 + 0x18);\n  *(undefined8 *)(lVar2 + 0x20) = *(undefined8 *)(param_2 + 0x20);\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a350"
        },
        {
            "funcStartAddr": "0x40a3b0",
            "funcEndAddr": "0x40a5f2",
            "decompiledFuncCode": "\nundefined8\nFUN_0040a3b0(long param_1,long *param_2,long *param_3,undefined8 param_4,long param_5,\n            undefined8 param_6,long param_7)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  long lVar11;\n  \n  plVar1 = *(long **)(param_1 + 0x98);\n  lVar11 = *(long *)(param_1 + 200);\n  lVar7 = 0;\n  lVar8 = lVar11;\n  while (lVar7 < lVar8) {\n    lVar9 = (lVar7 + lVar8) / 2;\n    lVar6 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar9 * 0x28);\n    while (lVar10 = lVar9, param_5 <= lVar6) {\n      if (lVar10 <= lVar7) goto LAB_0040a43b;\n      lVar9 = (lVar7 + lVar10) / 2;\n      lVar6 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar9 * 0x28);\n      lVar8 = lVar10;\n    }\n    lVar7 = lVar10 + 1;\n  }\nLAB_0040a43b:\n  if (lVar7 < lVar11) {\n    if (param_5 != *(long *)(*(long *)(param_1 + 0xd8) + lVar7 * 0x28 + 8)) {\n      lVar7 = -1;\n    }\n  }\n  else {\n    lVar7 = -1;\n  }\n  lVar8 = 0;\n  lVar6 = lVar11;\n  while (lVar8 < lVar6) {\n    lVar10 = (lVar8 + lVar6) / 2;\n    lVar9 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar10 * 0x28);\n    while (lVar3 = lVar10, param_7 <= lVar9) {\n      if (lVar3 <= lVar8) goto LAB_0040a4c4;\n      lVar10 = (lVar8 + lVar3) / 2;\n      lVar9 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar10 * 0x28);\n      lVar6 = lVar3;\n    }\n    lVar8 = lVar3 + 1;\n  }\nLAB_0040a4c4:\n  if (lVar8 < lVar11) {\n    if (param_7 != *(long *)(*(long *)(param_1 + 0xd8) + lVar8 * 0x28 + 8)) {\n      lVar8 = -1;\n    }\n  }\n  else {\n    lVar8 = -1;\n  }\n  if (0 < *param_2) {\n    lVar11 = 0;\n    do {\n      lVar6 = *(long *)(*param_3 + lVar11 * 8);\n      uVar2 = *(undefined8 *)(*(long *)(*(long *)(param_1 + 0xd8) + lVar6 * 0x28) * 0x10 + *plVar1);\n      iVar4 = FUN_00408990(param_1,lVar6,uVar2,param_4,param_5,lVar7);\n      iVar5 = FUN_00408990(param_1,*(undefined8 *)(*param_3 + lVar11 * 8),uVar2,param_6,param_7,\n                           lVar8);\n      if (iVar4 != iVar5) {\n        return 1;\n      }\n      lVar11 = lVar11 + 1;\n    } while (lVar11 < *param_2);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a3b0"
        },
        {
            "funcStartAddr": "0x40a600",
            "funcEndAddr": "0x40a64d",
            "decompiledFuncCode": "\nvoid FUN_0040a600(long *param_1,code *param_2,undefined8 param_3)\n\n{\n  long **pplVar1;\n  long *plVar2;\n  int iVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  do {\n    do {\n      iVar3 = (*param_2)(param_3,param_1);\n      if (iVar3 != 0) {\n        return;\n      }\n      pplVar1 = (long **)(param_1 + 1);\n      plVar4 = (long *)0x0;\n      plVar5 = param_1;\n      param_1 = *pplVar1;\n    } while (*pplVar1 != (long *)0x0);\n    while ((param_1 = (long *)plVar5[2], param_1 == plVar4 || (param_1 == (long *)0x0))) {\n      plVar2 = (long *)*plVar5;\n      plVar4 = plVar5;\n      plVar5 = plVar2;\n      if (plVar2 == (long *)0x0) {\n        return;\n      }\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040a600"
        },
        {
            "funcStartAddr": "0x40a660",
            "funcEndAddr": "0x40a808",
            "decompiledFuncCode": "\nundefined8 FUN_0040a660(long *param_1,long param_2)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  void *pvVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  ulong uVar10;\n  long lVar11;\n  \n  if ((param_2 != 0) && (lVar11 = *(long *)(param_2 + 8), lVar11 != 0)) {\n    lVar7 = param_1[1];\n    if (*param_1 < lVar7 + lVar11 * 2) {\n      lVar11 = lVar11 + *param_1;\n      pvVar6 = realloc((void *)param_1[2],lVar11 * 0x10);\n      if (pvVar6 == (void *)0x0) {\n        return 0xc;\n      }\n      lVar7 = param_1[1];\n      param_1[2] = (long)pvVar6;\n      *param_1 = lVar11 * 2;\n      lVar11 = *(long *)(param_2 + 8);\n    }\n    if (lVar7 == 0) {\n      pvVar6 = *(void **)(param_2 + 0x10);\n      param_1[1] = lVar11;\n      memcpy((void *)param_1[2],pvVar6,*(long *)(param_2 + 8) * 8);\n    }\n    else {\n      lVar9 = lVar7 + lVar11 * 2;\n      uVar4 = lVar11 - 1;\n      lVar7 = lVar7 + -1;\n      uVar10 = ~uVar4;\n      uVar3 = uVar10;\n      while (((long)uVar3 < 0 && (-1 < lVar7))) {\n        lVar11 = *(long *)(*(long *)(param_2 + 0x10) + uVar4 * 8);\n        plVar1 = (long *)(param_1[2] + lVar7 * 8);\n        if (*plVar1 == lVar11) {\n          uVar4 = uVar4 - 1;\n          lVar7 = lVar7 + -1;\n          uVar10 = ~uVar4;\n          uVar3 = uVar10;\n        }\n        else if (*plVar1 < lVar11) {\n          uVar4 = uVar4 - 1;\n          lVar9 = lVar9 + -1;\n          *(long *)(param_1[2] + lVar9 * 8) = lVar11;\n          uVar10 = ~uVar4;\n          uVar3 = uVar4;\n        }\n        else {\n          lVar7 = lVar7 + -1;\n          uVar3 = uVar10;\n        }\n      }\n      if (-1 < (long)uVar4) {\n        lVar9 = lVar9 - (uVar4 + 1);\n        memcpy((void *)(param_1[2] + lVar9 * 8),*(void **)(param_2 + 0x10),(uVar4 + 1) * 8);\n      }\n      lVar7 = param_1[1];\n      lVar11 = lVar7 + -1 + *(long *)(param_2 + 8) * 2;\n      lVar8 = (lVar11 - lVar9) + 1;\n      if (lVar8 != 0) {\n        lVar5 = lVar7 + -1;\n        pvVar6 = (void *)param_1[2];\n        param_1[1] = lVar7 + lVar8;\n        do {\n          while( true ) {\n            lVar7 = *(long *)((long)pvVar6 + lVar11 * 8);\n            lVar2 = *(long *)((long)pvVar6 + lVar5 * 8);\n            plVar1 = (long *)((long)pvVar6 + (lVar5 + lVar8) * 8);\n            if (lVar2 < lVar7) break;\n            *plVar1 = lVar2;\n            lVar5 = lVar5 + -1;\n            if (lVar5 < 0) {\n              memcpy(pvVar6,(void *)((long)pvVar6 + lVar9 * 8),lVar8 << 3);\n              return 0;\n            }\n          }\n          lVar11 = lVar11 + -1;\n          *plVar1 = lVar7;\n          lVar8 = lVar8 + -1;\n        } while (lVar8 != 0);\n      }\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a660"
        },
        {
            "funcStartAddr": "0x40a830",
            "funcEndAddr": "0x40aa6b",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_0040a830(undefined4 *param_1,long *param_2,long param_3,char param_4)\n\n{\n  undefined4 *puVar1;\n  bool bVar2;\n  bool bVar3;\n  char cVar4;\n  undefined8 *puVar5;\n  undefined8 uVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  void *local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  void *local_48;\n  \n  lVar9 = param_3 * 0x18;\n  lVar8 = param_2[5] + lVar9;\n  uStack_70 = 0;\n  local_78 = *(long *)(lVar8 + 8) + 1;\n  local_68 = malloc(local_78 * 8);\n  if (local_68 == (void *)0x0) {\n    return 0xc;\n  }\n  lVar10 = *param_2;\n  *(undefined8 *)(param_2[6] + 8 + lVar9) = 0xffffffffffffffff;\n  lVar7 = lVar10 + param_3 * 0x10;\n  if ((*(uint *)(lVar7 + 8) & 0x3ff00) == 0) {\nLAB_0040a8b4:\n    if ((*(byte *)(lVar7 + 8) & 8) == 0) goto LAB_0040aa20;\n    lVar7 = param_2[5];\n    lVar8 = lVar7 + lVar9;\n    if (*(long *)(lVar8 + 8) < 1) goto LAB_0040aa20;\n    lVar10 = 0;\n    bVar3 = false;\n    do {\n      while( true ) {\n        bVar2 = bVar3;\n        lVar8 = *(long *)(*(long *)(lVar8 + 0x10) + lVar10 * 8) * 0x18;\n        puVar5 = (undefined8 *)(param_2[6] + lVar8);\n        if (puVar5[1] == -1) break;\n        if (puVar5[1] == 0) {\n          uVar6 = FUN_0040a830(&local_58,param_2);\n          if ((int)uVar6 != 0) {\n            return uVar6;\n          }\n        }\n        else {\n          local_58 = *puVar5;\n          uStack_50 = puVar5[1];\n          local_48 = (void *)puVar5[2];\n        }\n        uVar6 = FUN_0040a660(&local_78,&local_58);\n        if ((int)uVar6 != 0) {\n          return uVar6;\n        }\n        if (*(long *)(param_2[6] + 8 + lVar8) == 0) {\n          bVar2 = true;\n          free(local_48);\n        }\n        lVar7 = param_2[5];\n        lVar10 = lVar10 + 1;\n        lVar8 = lVar7 + lVar9;\n        bVar3 = bVar2;\n        if (*(long *)(lVar8 + 8) == lVar10 || *(long *)(lVar8 + 8) < lVar10) goto LAB_0040a99c;\n      }\n      lVar8 = lVar7 + lVar9;\n      bVar2 = true;\n      lVar10 = lVar10 + 1;\n      bVar3 = true;\n    } while (*(long *)(lVar8 + 8) != lVar10 && lVar10 <= *(long *)(lVar8 + 8));\nLAB_0040a99c:\n    cVar4 = FUN_00408b10(&local_78,param_3);\n    if (cVar4 == '\\0') {\n      return 0xc;\n    }\n    lVar8 = param_2[6];\n    if ((param_4 != '\\x01') && (bVar2)) {\n      *(undefined8 *)(lVar8 + lVar9 + 8) = 0;\n      goto LAB_0040aa49;\n    }\n  }\n  else {\n    if (*(long *)(lVar8 + 8) != 0) {\n      if ((*(byte *)(lVar10 + 10 + **(long **)(lVar8 + 0x10) * 0x10) & 4) == 0) {\n        uVar6 = FUN_00409a60(param_2,param_3,param_3,param_3,*(uint *)(lVar7 + 8) >> 8 & 0x3ff);\n        if ((int)uVar6 != 0) {\n          return uVar6;\n        }\n        lVar7 = *param_2 + param_3 * 0x10;\n      }\n      goto LAB_0040a8b4;\n    }\nLAB_0040aa20:\n    cVar4 = FUN_00408b10(&local_78,param_3);\n    if (cVar4 == '\\0') {\n      return 0xc;\n    }\n    lVar8 = param_2[6];\n  }\n  puVar1 = (undefined4 *)(lVar8 + lVar9);\n  *puVar1 = (undefined4)local_78;\n  puVar1[1] = local_78._4_4_;\n  puVar1[2] = (undefined4)uStack_70;\n  puVar1[3] = uStack_70._4_4_;\n  *(void **)(lVar8 + 0x10 + lVar9) = local_68;\nLAB_0040aa49:\n  *(void **)(param_1 + 4) = local_68;\n  *param_1 = (undefined4)local_78;\n  param_1[1] = local_78._4_4_;\n  param_1[2] = (undefined4)uStack_70;\n  param_1[3] = uStack_70._4_4_;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a830"
        },
        {
            "funcStartAddr": "0x40aa90",
            "funcEndAddr": "0x40abc4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUN_0040aa90(long *param_1,undefined4 *param_2,long param_3,uint param_4)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  int iVar5;\n  long *plVar6;\n  long lVar7;\n  long lVar8;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  void *local_38;\n  \n  lVar8 = *(long *)(param_2 + 2);\n  uStack_40 = 0;\n  local_48 = lVar8;\n  local_38 = malloc(lVar8 * 8);\n  if (local_38 == (void *)0x0) {\n    return 0xc;\n  }\n  if (0 < lVar8) {\n    lVar8 = 0;\n    do {\n      lVar2 = *(long *)(*(long *)(param_2 + 4) + lVar8 * 8);\n      lVar1 = param_1[6] + lVar2 * 0x18;\n      lVar3 = *(long *)(lVar1 + 8);\n      if (0 < lVar3) {\n        lVar7 = 0;\n        do {\n          lVar4 = *(long *)(*(long *)(lVar1 + 0x10) + lVar7 * 8);\n          plVar6 = (long *)(lVar4 * 0x10 + *param_1);\n          if ((param_4 == *(byte *)(plVar6 + 1)) && (param_3 == *plVar6)) {\n            if (lVar4 != -1) {\n              iVar5 = FUN_0040a190(param_1,&local_48,lVar2,param_3,param_4);\n              if (iVar5 == 0) goto LAB_0040ab53;\n              goto LAB_0040ab9e;\n            }\n            break;\n          }\n          lVar7 = lVar7 + 1;\n        } while (lVar3 != lVar7);\n      }\n      iVar5 = FUN_0040a660(&local_48);\n      if (iVar5 != 0) {\nLAB_0040ab9e:\n        free(local_38);\n        return iVar5;\n      }\nLAB_0040ab53:\n      lVar8 = lVar8 + 1;\n    } while (*(long *)(param_2 + 2) != lVar8 && lVar8 <= *(long *)(param_2 + 2));\n  }\n  free(*(void **)(param_2 + 4));\n  *(void **)(param_2 + 4) = local_38;\n  *param_2 = (undefined4)local_48;\n  param_2[1] = local_48._4_4_;\n  param_2[2] = (undefined4)uStack_40;\n  param_2[3] = uStack_40._4_4_;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040aa90"
        },
        {
            "funcStartAddr": "0x40abd0",
            "funcEndAddr": "0x40ad61",
            "decompiledFuncCode": "\nundefined8 FUN_0040abd0(long *param_1,long param_2,long param_3)\n\n{\n  long *plVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  void *__ptr;\n  long lVar6;\n  long lVar7;\n  size_t __n;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  bool bVar11;\n  \n  lVar5 = *(long *)(param_2 + 8);\n  if ((lVar5 == 0) || (lVar8 = *(long *)(param_3 + 8), lVar8 == 0)) {\n    return 0;\n  }\n  lVar6 = param_1[1];\n  __ptr = (void *)param_1[2];\n  if (*param_1 < lVar5 + lVar8 + lVar6) {\n    lVar8 = *param_1 + lVar5 + lVar8;\n    __ptr = realloc(__ptr,lVar8 * 8);\n    if (__ptr == (void *)0x0) {\n      return 0xc;\n    }\n    lVar6 = param_1[1];\n    lVar5 = *(long *)(param_2 + 8);\n    param_1[2] = (long)__ptr;\n    *param_1 = lVar8;\n    lVar8 = *(long *)(param_3 + 8);\n  }\n  lVar7 = *(long *)(param_2 + 0x10);\n  lVar2 = *(long *)(param_3 + 0x10);\n  lVar4 = lVar8 + -1;\n  lVar10 = lVar5 + -1;\n  lVar8 = lVar6 + lVar5 + lVar8;\n  lVar6 = lVar6 + -1;\n  lVar9 = *(long *)(lVar7 + lVar10 * 8);\n  lVar5 = *(long *)(lVar2 + lVar4 * 8);\n  do {\n    bVar11 = SBORROW8(lVar9,lVar5);\n    lVar3 = lVar9 - lVar5;\n    if (lVar9 == lVar5) goto LAB_0040ac56;\n    while (bVar11 != lVar3 < 0) {\n      lVar4 = lVar4 + -1;\n      if (lVar4 < 0) goto LAB_0040acb0;\n      while( true ) {\n        lVar5 = *(long *)(lVar2 + lVar4 * 8);\n        bVar11 = SBORROW8(lVar9,lVar5);\n        lVar3 = lVar9 - lVar5;\n        if (lVar3 != 0) break;\nLAB_0040ac56:\n        if (-1 < lVar6) {\n          do {\n            lVar5 = *(long *)((long)__ptr + lVar6 * 8);\n            if (lVar5 <= lVar9) {\n              if (lVar5 == lVar9) goto LAB_0040ac80;\n              break;\n            }\n            lVar6 = lVar6 + -1;\n          } while (lVar6 != -1);\n        }\n        lVar8 = lVar8 + -1;\n        *(long *)((long)__ptr + lVar8 * 8) = lVar9;\nLAB_0040ac80:\n        lVar10 = lVar10 + -1;\n        if ((lVar10 < 0) || (lVar4 = lVar4 + -1, lVar4 < 0)) goto LAB_0040acb0;\n        lVar9 = *(long *)(lVar7 + lVar10 * 8);\n      }\n    }\n    lVar10 = lVar10 + -1;\n    if (lVar10 < 0) break;\n    lVar9 = *(long *)(lVar7 + lVar10 * 8);\n  } while( true );\nLAB_0040acb0:\n  lVar4 = param_1[1];\n  lVar7 = *(long *)(param_2 + 8) + lVar4 + *(long *)(param_3 + 8);\n  lVar5 = lVar4 + -1;\n  lVar6 = lVar7 + -1;\n  lVar7 = lVar7 - lVar8;\n  param_1[1] = lVar4 + lVar7;\n  if ((lVar7 < 1) || (lVar5 < 0)) {\n    __n = lVar7 * 8;\n  }\n  else {\n    do {\n      while( true ) {\n        lVar4 = *(long *)((long)__ptr + lVar6 * 8);\n        lVar2 = *(long *)((long)__ptr + lVar5 * 8);\n        plVar1 = (long *)((long)__ptr + (lVar5 + lVar7) * 8);\n        if (lVar4 <= lVar2) break;\n        lVar6 = lVar6 + -1;\n        *plVar1 = lVar4;\n        lVar7 = lVar7 + -1;\n        if (lVar7 == 0) {\n          __ptr = (void *)param_1[2];\n          __n = 0;\n          goto LAB_0040ad34;\n        }\n      }\n      lVar5 = lVar5 + -1;\n      *plVar1 = lVar2;\n    } while (lVar5 != -1);\n    __n = lVar7 << 3;\n    __ptr = (void *)param_1[2];\n  }\nLAB_0040ad34:\n  memcpy(__ptr,(void *)((long)__ptr + lVar8 * 8),__n);\n  return 0;\n}\n\n",
            "funcName": "FUN_0040abd0"
        },
        {
            "funcStartAddr": "0x40ad90",
            "funcEndAddr": "0x40ae66",
            "decompiledFuncCode": "\nlong FUN_0040ad90(undefined8 *param_1,int *param_2,long *param_3,long *param_4,undefined4 *param_5)\n\n{\n  byte *pbVar1;\n  undefined8 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  undefined8 *puVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  \n  iVar6 = *param_2;\n  lVar9 = (long)iVar6;\n  if (iVar6 == 0xf) {\n    puVar7 = (undefined8 *)malloc(0x3c8);\n    if (puVar7 == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar2 = *param_1;\n    lVar10 = 8;\n    *param_1 = puVar7;\n    lVar9 = 0;\n    *puVar7 = uVar2;\n    iVar6 = 1;\n  }\n  else {\n    puVar7 = (undefined8 *)*param_1;\n    iVar6 = iVar6 + 1;\n    lVar10 = lVar9 * 0x40 + 8;\n  }\n  *param_2 = iVar6;\n  lVar10 = (long)puVar7 + lVar10;\n  lVar8 = lVar9 * 0x40;\n  puVar7[lVar9 * 8 + 1] = 0;\n  puVar7[lVar9 * 8 + 2] = param_3;\n  puVar7[lVar9 * 8 + 3] = param_4;\n  uVar3 = param_5[1];\n  uVar4 = param_5[2];\n  uVar5 = param_5[3];\n  *(undefined4 *)(puVar7 + lVar9 * 8 + 6) = *param_5;\n  *(undefined4 *)((long)puVar7 + lVar8 + 0x34) = uVar3;\n  *(undefined4 *)(puVar7 + lVar9 * 8 + 7) = uVar4;\n  *(undefined4 *)((long)puVar7 + lVar8 + 0x3c) = uVar5;\n  pbVar1 = (byte *)((long)puVar7 + lVar8 + 0x3a);\n  *pbVar1 = *pbVar1 & 0xf3;\n  puVar7[lVar9 * 8 + 4] = 0;\n  puVar7[lVar9 * 8 + 5] = 0;\n  puVar7[lVar9 * 8 + 8] = 0xffffffffffffffff;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar10;\n  }\n  if (param_4 != (long *)0x0) {\n    *param_4 = lVar10;\n  }\n  return lVar10;\n}\n\n",
            "funcName": "FUN_0040ad90"
        },
        {
            "funcStartAddr": "0x40ae70",
            "funcEndAddr": "0x40af08",
            "decompiledFuncCode": "\nundefined8 FUN_0040ae70(long **param_1,long param_2)\n\n{\n  long **pplVar1;\n  long **pplVar2;\n  long **pplVar3;\n  long ***ppplVar4;\n  long **local_30;\n  \n  pplVar3 = (long **)*param_1;\n  ppplVar4 = &local_30;\n  do {\n    while( true ) {\n      pplVar2 = (long **)FUN_0040ad90(param_2 + 0x70,param_2 + 0x80,0,0,param_1 + 5);\n      *ppplVar4 = pplVar2;\n      if (pplVar2 == (long **)0x0) {\n        return 0;\n      }\n      *pplVar2 = (long *)pplVar3;\n      pplVar3 = *ppplVar4;\n      *(byte *)((long)pplVar3 + 0x32) = *(byte *)((long)pplVar3 + 0x32) | 4;\n      if ((long **)param_1[1] == (long **)0x0) break;\n      ppplVar4 = (long ***)(pplVar3 + 1);\n      param_1 = (long **)param_1[1];\n    }\n    pplVar2 = (long **)0x0;\n    while ((pplVar1 = (long **)param_1[2], pplVar1 == (long **)0x0 || (pplVar1 == pplVar2))) {\n      pplVar1 = (long **)*param_1;\n      pplVar3 = (long **)*pplVar3;\n      pplVar2 = param_1;\n      param_1 = pplVar1;\n      if (pplVar1 == (long **)0x0) {\n        return local_30;\n      }\n    }\n    ppplVar4 = (long ***)(pplVar3 + 2);\n    param_1 = pplVar1;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040ae70"
        },
        {
            "funcStartAddr": "0x40af20",
            "funcEndAddr": "0x40b12c",
            "decompiledFuncCode": "\nlong FUN_0040af20(undefined4 *param_1,long *param_2,long param_3)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  byte bVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  long local_60;\n  undefined local_48 [8];\n  undefined local_40;\n  \n  lVar7 = *param_2;\n  lVar1 = *(long *)(param_3 + 8);\n  if ((*(byte *)(param_2 + 7) & 0x10) == 0) {\n    local_40 = 8;\n    lVar4 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n    local_40 = 9;\n    lVar6 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n    lVar5 = lVar6;\n    if (lVar1 == 0) goto LAB_0040afd9;\n  }\n  else {\n    if (lVar1 == 0) {\n      local_40 = 8;\n      lVar4 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n      local_40 = 9;\n      lVar6 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n      lVar5 = lVar6;\n      goto LAB_0040afd9;\n    }\n    if (0x3f < (long)*(ulong *)(param_3 + 0x28)) {\n      return lVar1;\n    }\n    if ((*(ulong *)(lVar7 + 0xa0) >> (*(ulong *)(param_3 + 0x28) & 0x3f) & 1) == 0) {\n      return lVar1;\n    }\n    local_40 = 8;\n    lVar4 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n    local_40 = 9;\n    lVar5 = FUN_0040ad90(lVar7 + 0x70,lVar7 + 0x80,0,0,local_48);\n  }\n  local_60 = lVar7 + 0x80;\n  local_40 = 0x10;\n  lVar6 = FUN_0040ad90(lVar7 + 0x70,local_60,lVar1,lVar5,local_48);\nLAB_0040afd9:\n  local_60 = lVar7 + 0x80;\n  local_40 = 0x10;\n  lVar7 = FUN_0040ad90(lVar7 + 0x70,local_60,lVar4,lVar6,local_48);\n  if ((((lVar7 == 0) || (lVar6 == 0)) || (lVar4 == 0)) || (lVar5 == 0)) {\n    lVar7 = 0;\n    *param_1 = 0xc;\n  }\n  else {\n    uVar2 = *(undefined8 *)(param_3 + 0x28);\n    *(undefined8 *)(lVar5 + 0x28) = uVar2;\n    *(undefined8 *)(lVar4 + 0x28) = uVar2;\n    bVar3 = *(byte *)(param_3 + 0x32) & 8;\n    *(byte *)(lVar5 + 0x32) = *(byte *)(lVar5 + 0x32) & 0xf7 | bVar3;\n    *(byte *)(lVar4 + 0x32) = *(byte *)(lVar4 + 0x32) & 0xf7 | bVar3;\n  }\n  return lVar7;\n}\n\n",
            "funcName": "FUN_0040af20"
        },
        {
            "funcStartAddr": "0x40b140",
            "funcEndAddr": "0x40b1b3",
            "decompiledFuncCode": "\nundefined4 FUN_0040b140(undefined8 param_1,long param_2)\n\n{\n  long *plVar1;\n  undefined4 local_1c [3];\n  \n  local_1c[0] = 0;\n  if ((*(long *)(param_2 + 8) != 0) && (*(char *)(*(long *)(param_2 + 8) + 0x30) == '\\x11')) {\n    plVar1 = (long *)FUN_0040af20(local_1c,param_1);\n    *(long **)(param_2 + 8) = plVar1;\n    if (plVar1 != (long *)0x0) {\n      *plVar1 = param_2;\n    }\n  }\n  if ((*(long *)(param_2 + 0x10) != 0) && (*(char *)(*(long *)(param_2 + 0x10) + 0x30) == '\\x11')) {\n    plVar1 = (long *)FUN_0040af20(local_1c,param_1);\n    *(long **)(param_2 + 0x10) = plVar1;\n    if (plVar1 != (long *)0x0) {\n      *plVar1 = param_2;\n    }\n  }\n  return local_1c[0];\n}\n\n",
            "funcName": "FUN_0040b140"
        },
        {
            "funcStartAddr": "0x40b1c0",
            "funcEndAddr": "0x40b233",
            "decompiledFuncCode": "\nundefined8 FUN_0040b1c0(undefined (*param_1) [16],long param_2)\n\n{\n  long lVar1;\n  void *__dest;\n  undefined8 uVar2;\n  \n  lVar1 = *(long *)(param_2 + 8);\n  *(long *)(*param_1 + 8) = lVar1;\n  if (0 < lVar1) {\n    *(long *)*param_1 = lVar1;\n    __dest = malloc(lVar1 * 8);\n    *(void **)param_1[1] = __dest;\n    if (__dest == (void *)0x0) {\n      *(undefined8 *)(*param_1 + 8) = 0;\n      uVar2 = 0xc;\n      *(undefined8 *)*param_1 = 0;\n    }\n    else {\n      memcpy(__dest,*(void **)(param_2 + 0x10),lVar1 * 8);\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  *(undefined8 *)param_1[1] = 0;\n  *param_1 = (undefined  [16])0x0;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b1c0"
        },
        {
            "funcStartAddr": "0x40b240",
            "funcEndAddr": "0x40b3a2",
            "decompiledFuncCode": "\nundefined8 FUN_0040b240(undefined (*param_1) [16],long param_2,long param_3)\n\n{\n  long *__src;\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  undefined8 uVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long *__dest;\n  long lVar10;\n  \n  if (param_2 != 0) {\n    lVar9 = *(long *)(param_2 + 8);\n    if ((param_3 != 0) && (0 < lVar9)) {\n      lVar1 = *(long *)(param_3 + 8);\n      if (0 < lVar1) {\n        *(long *)*param_1 = lVar9 + lVar1;\n        plVar5 = (long *)malloc((lVar9 + lVar1) * 8);\n        *(long **)param_1[1] = plVar5;\n        if (plVar5 == (long *)0x0) {\n          return 0xc;\n        }\n        lVar2 = *(long *)(param_2 + 0x10);\n        lVar10 = 0;\n        lVar7 = 0;\n        lVar8 = 0;\n        __dest = plVar5;\n        do {\n          __src = (long *)(lVar2 + lVar8 * 8);\n          if (lVar1 <= lVar7) {\n            lVar10 = lVar10 + (lVar9 - lVar8);\n            memcpy(__dest,__src,(lVar9 - lVar8) * 8);\n            goto LAB_0040b369;\n          }\n          lVar3 = *(long *)(param_3 + 0x10);\n          lVar9 = *__src;\n          lVar10 = lVar10 + 1;\n          lVar4 = *(long *)(lVar3 + lVar7 * 8);\n          if (lVar4 < lVar9) {\n            lVar7 = lVar7 + 1;\n            *__dest = lVar4;\n          }\n          else {\n            *__dest = lVar9;\n            lVar8 = lVar8 + 1;\n            lVar7 = lVar7 + (ulong)(lVar9 == lVar4);\n          }\n          lVar9 = *(long *)(param_2 + 8);\n          __dest = __dest + 1;\n        } while (lVar8 < lVar9);\n        if (lVar7 < *(long *)(param_3 + 8)) {\n          plVar5 = plVar5 + lVar10;\n          lVar9 = *(long *)(param_3 + 8) - lVar7;\n          lVar10 = lVar10 + lVar9;\n          memcpy(plVar5,(void *)(lVar3 + lVar7 * 8),lVar9 * 8);\n        }\nLAB_0040b369:\n        *(long *)(*param_1 + 8) = lVar10;\n        return 0;\n      }\n      goto LAB_0040b343;\n    }\n    if (0 < lVar9) goto LAB_0040b343;\n  }\n  if ((param_3 == 0) || (param_2 = param_3, *(long *)(param_3 + 8) < 1)) {\n    *(undefined8 *)param_1[1] = 0;\n    *param_1 = (undefined  [16])0x0;\n    return 0;\n  }\nLAB_0040b343:\n  uVar6 = FUN_0040b1c0(param_1,param_2);\n  return uVar6;\n}\n\n",
            "funcName": "FUN_0040b240"
        },
        {
            "funcStartAddr": "0x40b3d0",
            "funcEndAddr": "0x40b6ae",
            "decompiledFuncCode": "\nulong * FUN_0040b3d0(undefined4 *param_1,long *param_2,long param_3,uint param_4)\n\n{\n  ulong *puVar1;\n  long *plVar2;\n  uint uVar3;\n  uint uVar4;\n  char cVar5;\n  byte bVar6;\n  int iVar7;\n  long *plVar8;\n  ulong *puVar9;\n  void *pvVar10;\n  uint uVar11;\n  ulong uVar12;\n  long lVar13;\n  long lVar14;\n  ulong uVar15;\n  long lVar16;\n  \n  lVar14 = *(long *)(param_3 + 8);\n  if (lVar14 == 0) {\n    *param_1 = 0;\n  }\n  else {\n    uVar15 = (ulong)param_4 + lVar14;\n    if (0 < lVar14) {\n      plVar8 = *(long **)(param_3 + 0x10);\n      plVar2 = plVar8 + lVar14;\n      do {\n        uVar15 = uVar15 + *plVar8;\n        plVar8 = plVar8 + 1;\n      } while (plVar2 != plVar8);\n    }\n    plVar2 = (long *)(param_2[8] + (param_2[0x11] & uVar15) * 0x18);\n    lVar14 = *plVar2;\n    if (0 < lVar14) {\n      lVar16 = plVar2[2];\n      lVar13 = 0;\n      uVar12 = (ulong)param_4;\n      do {\n        puVar9 = *(ulong **)(lVar16 + lVar13 * 8);\n        if (((*puVar9 == uVar15) && ((*(byte *)(puVar9 + 0xd) & 0xf) == (uint)uVar12)) &&\n           (cVar5 = FUN_00408570(puVar9[10],param_3), cVar5 != '\\0')) {\n          return puVar9;\n        }\n        lVar13 = lVar13 + 1;\n      } while (lVar13 != lVar14);\n    }\n    puVar9 = (ulong *)calloc(0x70,1);\n    if (puVar9 != (ulong *)0x0) {\n      puVar1 = puVar9 + 1;\n      iVar7 = FUN_0040b1c0(puVar1,param_3);\n      if (iVar7 == 0) {\n        lVar14 = *(long *)(param_3 + 8);\n        *(byte *)(puVar9 + 0xd) = *(byte *)(puVar9 + 0xd) & 0xf0 | (byte)param_4 & 0xf;\n        puVar9[10] = (ulong)puVar1;\n        if (0 < lVar14) {\n          lVar16 = 0;\n          lVar14 = 0;\n          do {\n            lVar13 = *(long *)(*(long *)(param_3 + 0x10) + lVar16 * 8) * 0x10 + *param_2;\n            uVar3 = *(uint *)(lVar13 + 8);\n            cVar5 = *(char *)(lVar13 + 8);\n            uVar11 = uVar3 >> 8;\n            if ((cVar5 != '\\x01') || ((uVar3 & 0x3ff00) != 0)) {\n              bVar6 = (byte)(((byte)(*(byte *)(lVar13 + 10) >> 4 | *(byte *)(puVar9 + 0xd) >> 5) & 1\n                             ) << 5) | *(byte *)(puVar9 + 0xd) & 0xdf;\n              *(byte *)(puVar9 + 0xd) = bVar6;\n              if (cVar5 == '\\x02') {\n                *(byte *)(puVar9 + 0xd) = bVar6 | 0x10;\n              }\n              else if (cVar5 == '\\x04') {\n                *(byte *)(puVar9 + 0xd) = bVar6 | 0x40;\n              }\n              if ((uVar3 & 0x3ff00) != 0) {\n                if (puVar1 == (ulong *)puVar9[10]) {\n                  pvVar10 = malloc(0x18);\n                  puVar9[10] = (ulong)pvVar10;\n                  if (pvVar10 == (void *)0x0) {\n                    FUN_00409cf0(puVar9);\n                    goto LAB_0040b628;\n                  }\n                  iVar7 = FUN_0040b1c0(pvVar10,param_3);\n                  if (iVar7 != 0) goto LAB_0040b628;\n                  *(byte *)(puVar9 + 0xd) = *(byte *)(puVar9 + 0xd) | 0x80;\n                  lVar14 = 0;\n                }\n                if ((uVar3 & 0x100) == 0) {\n                  if ((uVar11 & 2) != 0) {\n                    uVar4 = param_4 & 1;\n                    goto joined_r0x0040b65d;\n                  }\nLAB_0040b5a3:\n                  if ((((uVar11 & 0x10) == 0) || ((param_4 & 2) != 0)) &&\n                     (((uVar3 & 0x4000) == 0 || ((param_4 & 4) != 0)))) goto LAB_0040b5ee;\n                }\n                else if ((param_4 & 1) != 0) {\n                  uVar4 = uVar11 & 2;\njoined_r0x0040b65d:\n                  if (uVar4 == 0) goto LAB_0040b5a3;\n                }\n                if ((-1 < lVar16 - lVar14) && (lVar16 - lVar14 < (long)puVar9[2])) {\n                  puVar9[2] = puVar9[2] - 1;\n                  FUN_0040a290(puVar9 + 2,puVar9 + 3);\n                }\n                lVar14 = lVar14 + 1;\n              }\n            }\nLAB_0040b5ee:\n            lVar16 = lVar16 + 1;\n          } while (lVar16 < *(long *)(param_3 + 8));\n        }\n        iVar7 = FUN_00408c40(param_2,puVar9,uVar15);\n        if (iVar7 == 0) {\n          return puVar9;\n        }\n        FUN_00409cf0(puVar9);\n      }\n      else {\n        free(puVar9);\n      }\n    }\nLAB_0040b628:\n    *param_1 = 0xc;\n  }\n  return (ulong *)0x0;\n}\n\n",
            "funcName": "FUN_0040b3d0"
        },
        {
            "funcStartAddr": "0x40b6d0",
            "funcEndAddr": "0x40b8a7",
            "decompiledFuncCode": "\nulong * FUN_0040b6d0(undefined4 *param_1,long *param_2,long param_3)\n\n{\n  long *plVar1;\n  char cVar2;\n  int iVar3;\n  long *plVar4;\n  ulong *puVar5;\n  long lVar6;\n  byte bVar7;\n  ulong uVar8;\n  long lVar9;\n  long lVar10;\n  \n  uVar8 = *(ulong *)(param_3 + 8);\n  if (uVar8 == 0) {\n    *param_1 = 0;\n  }\n  else {\n    if (0 < (long)uVar8) {\n      plVar4 = *(long **)(param_3 + 0x10);\n      plVar1 = plVar4 + uVar8;\n      do {\n        uVar8 = uVar8 + *plVar4;\n        plVar4 = plVar4 + 1;\n      } while (plVar1 != plVar4);\n    }\n    plVar1 = (long *)(param_2[8] + (param_2[0x11] & uVar8) * 0x18);\n    lVar6 = *plVar1;\n    if (0 < lVar6) {\n      lVar10 = plVar1[2];\n      lVar9 = 0;\n      do {\n        puVar5 = *(ulong **)(lVar10 + lVar9 * 8);\n        if ((*puVar5 == uVar8) && (cVar2 = FUN_00408570(puVar5 + 1,param_3), cVar2 != '\\0')) {\n          return puVar5;\n        }\n        lVar9 = lVar9 + 1;\n      } while (lVar6 != lVar9);\n    }\n    puVar5 = (ulong *)calloc(0x70,1);\n    if (puVar5 != (ulong *)0x0) {\n      iVar3 = FUN_0040b1c0(puVar5 + 1,param_3);\n      if (iVar3 == 0) {\n        lVar6 = *(long *)(param_3 + 8);\n        puVar5[10] = (ulong)(puVar5 + 1);\n        if (0 < lVar6) {\n          plVar4 = *(long **)(param_3 + 0x10);\n          lVar10 = *param_2;\n          plVar1 = plVar4 + lVar6;\n          do {\n            while( true ) {\n              lVar6 = *plVar4 * 0x10 + lVar10;\n              cVar2 = *(char *)(lVar6 + 8);\n              if (cVar2 == '\\x01') break;\n              bVar7 = (byte)(((byte)(*(byte *)(lVar6 + 10) >> 4 | *(byte *)(puVar5 + 0xd) >> 5) & 1)\n                            << 5) | *(byte *)(puVar5 + 0xd) & 0xdf;\n              *(byte *)(puVar5 + 0xd) = bVar7;\n              if (cVar2 == '\\x02') {\n                *(byte *)(puVar5 + 0xd) = bVar7 | 0x10;\n              }\n              else if (cVar2 == '\\x04') {\n                *(byte *)(puVar5 + 0xd) = bVar7 | 0x40;\n              }\n              else if ((cVar2 == '\\f') || ((*(uint *)(lVar6 + 8) & 0x3ff00) != 0))\n              goto LAB_0040b830;\nLAB_0040b7eb:\n              plVar4 = plVar4 + 1;\n              if (plVar1 == plVar4) goto LAB_0040b83d;\n            }\n            if ((*(uint *)(lVar6 + 8) & 0x3ff00) == 0) goto LAB_0040b7eb;\n            *(byte *)(puVar5 + 0xd) =\n                 (byte)(((byte)(*(byte *)(lVar6 + 10) >> 4 | *(byte *)(puVar5 + 0xd) >> 5) & 1) << 5\n                       ) | *(byte *)(puVar5 + 0xd) & 0xdf;\nLAB_0040b830:\n            plVar4 = plVar4 + 1;\n            *(byte *)(puVar5 + 0xd) = *(byte *)(puVar5 + 0xd) | 0x80;\n          } while (plVar1 != plVar4);\n        }\nLAB_0040b83d:\n        iVar3 = FUN_00408c40(param_2,puVar5,uVar8);\n        if (iVar3 == 0) {\n          return puVar5;\n        }\n        FUN_00409cf0(puVar5);\n      }\n      else {\n        free(puVar5);\n      }\n    }\n    *param_1 = 0xc;\n  }\n  return (ulong *)0x0;\n}\n\n",
            "funcName": "FUN_0040b6d0"
        },
        {
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40b965",
            "decompiledFuncCode": "\nulong FUN_0040b8c0(undefined8 param_1,long param_2,long param_3,long param_4)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  long lVar5;\n  uint local_4c;\n  undefined local_48 [16];\n  void *local_38;\n  \n  if (param_4 < 1) {\n    return 0;\n  }\n  lVar5 = 0;\n  do {\n    while( true ) {\n      lVar1 = *(long *)(param_2 + lVar5 * 8);\n      lVar2 = *(long *)(param_3 + lVar5 * 8);\n      if (lVar1 != 0) break;\n      *(long *)(param_2 + lVar5 * 8) = lVar2;\n      lVar5 = lVar5 + 1;\n      if (param_4 == lVar5) {\n        return 0;\n      }\n    }\n    if (lVar2 != 0) {\n      uVar3 = FUN_0040b240(local_48,lVar1 + 8,lVar2 + 8);\n      local_4c = (uint)uVar3;\n      if (local_4c != 0) {\n        return uVar3;\n      }\n      uVar4 = FUN_0040b6d0(&local_4c,param_1,local_48);\n      *(undefined8 *)(param_2 + lVar5 * 8) = uVar4;\n      free(local_38);\n      if (local_4c != 0) {\n        return (ulong)local_4c;\n      }\n    }\n    lVar5 = lVar5 + 1;\n    if (param_4 == lVar5) {\n      return 0;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040b8c0"
        },
        {
            "funcStartAddr": "0x40b970",
            "funcEndAddr": "0x40bcc4",
            "decompiledFuncCode": "\nuint FUN_0040b970(long param_1,long param_2,long param_3,undefined8 param_4,undefined4 param_5)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  char cVar3;\n  uint uVar4;\n  uint uVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long *plVar9;\n  undefined8 uVar10;\n  long lVar11;\n  long *plVar12;\n  uint local_5c;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 *local_48;\n  \n  lVar11 = 0;\n  lVar7 = *(long *)(param_1 + 200);\n  while (lVar11 < lVar7) {\n    lVar8 = (lVar11 + lVar7) / 2;\n    lVar1 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar8 * 0x28);\n    while (lVar6 = lVar8, param_3 <= lVar1) {\n      if (lVar6 <= lVar11) goto LAB_0040b9eb;\n      lVar8 = (lVar6 + lVar11) / 2;\n      lVar1 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar8 * 0x28);\n      lVar7 = lVar6;\n    }\n    lVar11 = lVar6 + 1;\n  }\nLAB_0040b9eb:\n  if (lVar11 < *(long *)(param_1 + 200)) {\n    lVar7 = *(long *)(param_1 + 0xd8);\n    if ((*(long *)(lVar7 + 8 + lVar11 * 0x28) == param_3) && (lVar11 != -1)) {\n      lVar1 = *(long *)(param_1 + 0x98);\nLAB_0040ba43:\n      plVar12 = (long *)(lVar7 + lVar11 * 0x28);\n      do {\n        lVar7 = *plVar12;\n        uVar10 = *(undefined8 *)(param_2 + 8);\n        lVar8 = FUN_0040a120(uVar10,param_2 + 0x10,lVar7);\n        if (lVar8 != 0) {\n          lVar8 = (plVar12[3] + param_3) - plVar12[2];\n          if (param_3 == lVar8) {\n            uVar2 = **(undefined8 **)(*(long *)(lVar1 + 0x28) + lVar7 * 0x18 + 0x10);\n            lVar7 = FUN_0040a120(uVar10,param_2 + 0x10,uVar2);\n            if (lVar7 == 0) goto code_r0x0040bb82;\n          }\n          else {\n            uVar10 = *(undefined8 *)(*(long *)(lVar1 + 0x18) + lVar7 * 8);\n            plVar9 = (long *)(*(long *)(param_1 + 0xb8) + lVar8 * 8);\n            lVar7 = *plVar9;\n            if (lVar7 == 0) {\n              local_58 = 1;\n              local_50 = 1;\n              local_48 = (undefined8 *)malloc(8);\n              if (local_48 == (undefined8 *)0x0) {\n                return 0xc;\n              }\n              local_5c = 0;\n              *local_48 = uVar10;\n            }\n            else {\n              lVar6 = FUN_0040a120(*(undefined8 *)(lVar7 + 0x10),lVar7 + 0x18,uVar10);\n              if (lVar6 != 0) goto LAB_0040bb19;\n              local_5c = FUN_0040b1c0(&local_58,lVar7 + 8);\n              cVar3 = FUN_00408b10(&local_58,uVar10);\n              if ((local_5c != 0) || (cVar3 != '\\x01')) {\n                free(local_48);\n                if (local_5c == 0) {\n                  return 0xc;\n                }\n                return local_5c;\n              }\n              plVar9 = (long *)(lVar8 * 8 + *(long *)(param_1 + 0xb8));\n            }\n            lVar7 = FUN_0040b6d0(&local_5c,lVar1,&local_58);\n            *plVar9 = lVar7;\n            free(local_48);\n            if ((*(long *)(*(long *)(param_1 + 0xb8) + lVar8 * 8) == 0) && (local_5c != 0)) {\n              return local_5c;\n            }\n          }\n        }\nLAB_0040bb19:\n        plVar9 = plVar12 + 4;\n        plVar12 = plVar12 + 5;\n        if (*(char *)plVar9 == '\\0') {\n          return 0;\n        }\n      } while( true );\n    }\n  }\n  return 0;\ncode_r0x0040bb82:\n  local_58 = 1;\n  local_50 = 1;\n  local_48 = (undefined8 *)malloc(8);\n  if (local_48 == (undefined8 *)0x0) {\n    local_50 = 0;\n    local_5c = 0xc;\n    local_58 = 0;\n  }\n  else {\n    *local_48 = uVar2;\n    local_5c = 0;\n  }\n  uVar4 = FUN_0040aa90(lVar1,&local_58,param_4,param_5);\n  uVar5 = FUN_0040a660(param_2,&local_58);\n  free(local_48);\n  if ((uVar4 | uVar5 | local_5c) != 0) {\n    if (local_5c != 0) {\n      return local_5c;\n    }\n    if (uVar4 != 0) {\n      return uVar4;\n    }\n    return uVar5;\n  }\n  lVar7 = *(long *)(param_1 + 0xd8);\n  goto LAB_0040ba43;\n}\n\n",
            "funcName": "FUN_0040b970"
        },
        {
            "funcStartAddr": "0x40bd00",
            "funcEndAddr": "0x40be3d",
            "decompiledFuncCode": "\nundefined8 FUN_0040bd00(long param_1,long *param_2,long *param_3,undefined8 param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong *puVar5;\n  undefined8 *puVar6;\n  void *__ptr;\n  long lVar7;\n  long lVar8;\n  \n  plVar1 = *(long **)(param_1 + 0x98);\n  if (0 < *param_2) {\n    lVar8 = 0;\n    do {\n      while( true ) {\n        lVar2 = *(long *)(*param_3 + lVar8 * 8);\n        puVar5 = (ulong *)(lVar2 * 0x10 + *plVar1);\n        if (((*(char *)(puVar5 + 1) == '\\b') && (uVar3 = *puVar5, (long)uVar3 < 0x40)) &&\n           (((ulong)plVar1[0x14] >> (uVar3 & 0x3f) & 1) != 0)) break;\n        lVar8 = lVar8 + 1;\n        if (*param_2 <= lVar8) {\n          return 0;\n        }\n      }\n      lVar7 = *(long *)(param_1 + 0xe8);\n      __ptr = *(void **)(param_1 + 0xf8);\n      if (lVar7 == *(long *)(param_1 + 0xf0)) {\n        lVar4 = lVar7 * 2;\n        __ptr = realloc(__ptr,lVar7 << 4);\n        if (__ptr == (void *)0x0) {\n          return 0xc;\n        }\n        *(void **)(param_1 + 0xf8) = __ptr;\n        lVar7 = *(long *)(param_1 + 0xe8);\n        *(long *)(param_1 + 0xf0) = lVar4;\n      }\n      puVar6 = (undefined8 *)calloc(1,0x30);\n      *(undefined8 **)((long)__ptr + lVar7 * 8) = puVar6;\n      if (puVar6 == (undefined8 *)0x0) {\n        return 0xc;\n      }\n      *puVar6 = param_4;\n      lVar8 = lVar8 + 1;\n      puVar6[1] = lVar2;\n      *(long *)(param_1 + 0xe8) = lVar7 + 1;\n    } while (lVar8 < *param_2);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040bd00"
        },
        {
            "funcStartAddr": "0x40be50",
            "funcEndAddr": "0x40bf26",
            "decompiledFuncCode": "\nint FUN_0040be50(long param_1,long param_2,uint param_3)\n\n{\n  byte bVar1;\n  wint_t __wc;\n  int iVar2;\n  \n  if (param_2 < 0) {\nLAB_0040bf00:\n    return *(int *)(param_1 + 0x70);\n  }\n  if (*(long *)(param_1 + 0x58) == param_2) {\n    iVar2 = (-(uint)((param_3 & 2) == 0) & 2) + 8;\n  }\n  else {\n    if (1 < *(int *)(param_1 + 0x90)) {\n      do {\n        __wc = *(wint_t *)(*(long *)(param_1 + 0x10) + param_2 * 4);\n        if (__wc != 0xffffffff) {\n          if ((*(char *)(param_1 + 0x8e) != '\\0') &&\n             ((iVar2 = iswalnum(__wc), iVar2 != 0 || (__wc == 0x5f)))) {\n            return 1;\n          }\n          if (__wc != 10) {\n            return 0;\n          }\n          goto LAB_0040bee1;\n        }\n        param_2 = param_2 + -1;\n      } while (param_2 != -1);\n      goto LAB_0040bf00;\n    }\n    bVar1 = *(byte *)(*(long *)(param_1 + 8) + param_2);\n    iVar2 = 1;\n    if (((*(ulong *)(*(long *)(param_1 + 0x80) + ((long)(ulong)bVar1 >> 6) * 8) >> (bVar1 & 0x3f) &\n         1) == 0) && (iVar2 = 0, bVar1 == 10)) {\nLAB_0040bee1:\n      return (uint)(*(char *)(param_1 + 0x8d) != '\\0') * 2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "funcName": "FUN_0040be50"
        },
        {
            "funcStartAddr": "0x40bf40",
            "funcEndAddr": "0x40c04a",
            "decompiledFuncCode": "\nuint FUN_0040bf40(long param_1,long *param_2,long param_3)\n\n{\n  byte bVar1;\n  byte bVar2;\n  uint uVar3;\n  ulong uVar4;\n  uint uVar5;\n  \n  bVar1 = *(byte *)(*(long *)(param_1 + 8) + param_3);\n  bVar2 = *(byte *)(param_2 + 1);\n  if (bVar2 == 3) {\n    if ((*(ulong *)(*param_2 + ((long)(ulong)bVar1 >> 6) * 8) >> (bVar1 & 0x3f) & 1) == 0) {\n      return 0;\n    }\n  }\n  else if (bVar2 < 4) {\n    if (bVar2 != 1) {\n      return 0;\n    }\n    if (*(byte *)param_2 != bVar1) {\n      return 0;\n    }\n  }\n  else {\n    if (bVar2 != 5) {\n      if (bVar2 != 7) {\n        return 0;\n      }\n      if ((char)bVar1 < '\\0') {\n        return 0;\n      }\n    }\n    if (bVar1 == 10) {\n      if ((*(byte *)(*(long *)(param_1 + 0x98) + 0xd8) & 0x40) == 0) {\n        return 0;\n      }\n    }\n    else if ((bVar1 == 0) && ((*(byte *)(*(long *)(param_1 + 0x98) + 0xd8) & 0x80) != 0)) {\n      return 0;\n    }\n  }\n  uVar3 = *(uint *)(param_2 + 1);\n  uVar5 = 1;\n  if ((uVar3 & 0x3ff00) != 0) {\n    uVar5 = uVar3 >> 8;\n    uVar4 = FUN_0040be50(param_1,param_3,*(undefined4 *)(param_1 + 0xa0));\n    if ((uVar5 & 4) == 0) {\n      if (((uVar5 & 8) != 0) && ((uVar4 & 1) != 0)) {\n        return 0;\n      }\n    }\n    else {\n      if ((uVar4 & 1) == 0) {\n        return 0;\n      }\n      if ((uVar5 & 8) != 0) {\n        return 0;\n      }\n    }\n    if (((uVar3 & 0x2000) == 0) || (uVar5 = 0, (uVar4 & 2) != 0)) {\n      uVar5 = 1;\n      if ((uVar3 & 0x8000) != 0) {\n        uVar5 = (uint)((uVar4 & 0xffffffff) >> 3) & 1;\n      }\n    }\n  }\n  return uVar5;\n}\n\n",
            "funcName": "FUN_0040bf40"
        },
        {
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c131",
            "decompiledFuncCode": "\nlong FUN_0040c070(long param_1,long param_2,long *param_3,undefined8 param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  long lVar4;\n  uint uVar5;\n  long lVar6;\n  long lVar7;\n  \n  uVar3 = FUN_0040be50(param_1,param_4,*(undefined4 *)(param_1 + 0xa0));\n  if (0 < param_2) {\n    lVar7 = 0;\n    do {\n      lVar4 = *(long *)(*param_3 + lVar7 * 8);\n      lVar6 = lVar4 * 0x10 + **(long **)(param_1 + 0x98);\n      uVar1 = *(uint *)(lVar6 + 8);\n      uVar5 = uVar1 >> 8;\n      if (*(char *)(lVar6 + 8) == '\\x02') {\n        if ((uVar1 & 0x3ff00) == 0) {\n          return lVar4;\n        }\n        if ((uVar5 & 4) == 0) {\n          uVar2 = uVar3 & 1;\n          if ((uVar5 & 8) != 0) goto joined_r0x0040c120;\nLAB_0040c0f5:\n          if ((((uVar1 & 0x2000) == 0) || ((uVar3 & 2) != 0)) &&\n             (((uVar1 & 0x8000) == 0 || ((uVar3 & 8) != 0)))) {\n            return lVar4;\n          }\n        }\n        else if ((uVar3 & 1) != 0) {\n          uVar2 = uVar5 & 8;\njoined_r0x0040c120:\n          if (uVar2 == 0) goto LAB_0040c0f5;\n        }\n      }\n      lVar7 = lVar7 + 1;\n    } while (lVar7 != param_2);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c070"
        },
        {
            "funcStartAddr": "0x40c140",
            "funcEndAddr": "0x40c8d0",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_0040c140(byte **param_1,byte *param_2,uint param_3)\n\n{\n  undefined4 *puVar1;\n  byte *pbVar2;\n  undefined4 uVar3;\n  int iVar4;\n  byte *pbVar5;\n  undefined8 uVar6;\n  long lVar7;\n  byte *pbVar8;\n  undefined4 *puVar9;\n  ulong uVar10;\n  long lVar11;\n  byte *pbVar12;\n  byte *pbVar13;\n  char cVar14;\n  int iVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  wint_t local_4c;\n  byte local_46 [6];\n  undefined8 local_40 [2];\n  \n  pbVar13 = param_2 + -(long)param_1[5];\n  if ((long)param_2 < (long)param_1[5]) {\n    if (1 < *(int *)(param_1 + 0x12)) {\n      param_1[4] = (byte *)0x0;\n    }\n    param_1[6] = (byte *)0x0;\n    param_1[5] = (byte *)0x0;\n    param_1[0xb] = param_1[10];\n    param_1[7] = (byte *)0x0;\n    param_1[0xd] = param_1[0xc];\n    *(undefined *)((long)param_1 + 0x8c) = 0;\n    *(uint *)(param_1 + 0xe) = (-(uint)((param_3 & 1) == 0) & 2) + 4;\n    pbVar13 = param_2;\n    if (*(char *)((long)param_1 + 0x8b) != '\\0') goto LAB_0040c1ca;\n    param_1[1] = *param_1;\n    if (param_2 == (byte *)0x0) goto LAB_0040c2a0;\nLAB_0040c1d3:\n    pbVar12 = param_1[7];\n    pbVar17 = param_1[6];\n    if ((long)pbVar13 < (long)pbVar12) {\n      if (*(char *)((long)param_1 + 0x8c) == '\\0') {\n        pbVar17 = pbVar17 + -(long)pbVar13;\n        uVar3 = FUN_0040be50(param_1,pbVar13 + -1,param_3);\n        *(undefined4 *)(param_1 + 0xe) = uVar3;\n        if (1 < *(int *)(param_1 + 0x12)) {\n          memmove(param_1[2],param_1[2] + (long)pbVar13 * 4,(long)pbVar17 * 4);\n          pbVar17 = param_1[6] + -(long)pbVar13;\n        }\n        cVar14 = *(char *)((long)param_1 + 0x8b);\n        if (cVar14 != '\\0') {\n          memmove(param_1[1],param_1[1] + (long)pbVar13,(size_t)pbVar17);\n          cVar14 = *(char *)((long)param_1 + 0x8b);\n          pbVar17 = param_1[6] + -(long)pbVar13;\n        }\n        param_1[7] = param_1[7] + -(long)pbVar13;\n        param_1[6] = pbVar17;\n        goto LAB_0040c22c;\n      }\n      pbVar2 = param_1[3];\n      pbVar12 = (byte *)0x0;\n      pbVar5 = pbVar17;\n      do {\n        pbVar8 = (byte *)((long)(pbVar12 + (long)pbVar5) / 2);\n        lVar7 = *(long *)(pbVar2 + (long)pbVar8 * 8);\n        pbVar16 = pbVar8;\n        if (lVar7 <= (long)pbVar13) {\n          if ((long)pbVar13 <= lVar7) {\n            pbVar12 = pbVar8 + -1;\n            goto LAB_0040c505;\n          }\n          pbVar12 = pbVar8 + 1;\n          pbVar16 = pbVar5;\n        }\n        pbVar5 = pbVar16;\n      } while ((long)pbVar12 < (long)pbVar16);\n      pbVar12 = pbVar8;\n      pbVar16 = pbVar8 + 1;\n      if ((long)pbVar13 <= lVar7) {\n        pbVar12 = pbVar8 + -1;\n        pbVar16 = pbVar8;\n      }\nLAB_0040c505:\n      uVar3 = FUN_0040be50(param_1,pbVar12,param_3);\n      *(undefined4 *)(param_1 + 0xe) = uVar3;\n      if (((pbVar13 == pbVar16) && ((long)pbVar13 < (long)pbVar17)) &&\n         (*(byte **)(pbVar2 + (long)pbVar16 * 8) == pbVar13)) {\n        memmove(param_1[2],param_1[2] + (long)pbVar13 * 4,((long)pbVar17 - (long)pbVar13) * 4);\n        memmove(param_1[1],param_1[1] + (long)pbVar13,(long)param_1[6] - (long)pbVar13);\n        pbVar12 = param_1[6];\n        param_1[7] = param_1[7] + -(long)pbVar13;\n        param_1[6] = pbVar12 + -(long)pbVar13;\n        if (0 < (long)(pbVar12 + -(long)pbVar13)) {\n          pbVar12 = param_1[3];\n          pbVar5 = (byte *)0x0;\n          do {\n            *(long *)(pbVar12 + (long)pbVar5 * 8) =\n                 *(long *)(pbVar12 + (long)pbVar5 * 8 + (long)pbVar13 * 8) - (long)pbVar13;\n            pbVar5 = pbVar5 + 1;\n          } while (param_1[6] != pbVar5 && (long)pbVar5 <= (long)param_1[6]);\n        }\n        iVar4 = *(int *)(param_1 + 0x12);\n        cVar14 = *(char *)((long)param_1 + 0x8b);\n        pbVar5 = param_1[0xb] + -(long)pbVar13;\n        pbVar12 = param_1[0xd] + -(long)pbVar13;\n      }\n      else {\n        *(undefined *)((long)param_1 + 0x8c) = 0;\n        pbVar5 = param_1[10] + -(long)param_2;\n        pbVar12 = param_1[0xc] + -(long)param_2;\n        param_1[0xb] = pbVar5 + (long)pbVar13;\n        param_1[0xd] = pbVar12 + (long)pbVar13;\n        if (0 < (long)pbVar16) {\n          do {\n            if (*(byte **)(pbVar2 + (long)pbVar16 * 8 + -8) != pbVar13) break;\n            pbVar16 = pbVar16 + -1;\n          } while (pbVar16 != (byte *)0x0);\n        }\n        if ((long)pbVar16 < (long)pbVar17) {\n          do {\n            if (*(int *)(param_1[2] + (long)pbVar16 * 4) != -1) goto LAB_0040c61c;\n            pbVar16 = pbVar16 + 1;\n          } while (pbVar16 != pbVar17);\nLAB_0040c7c8:\n          param_1[6] = (byte *)0x0;\n          pbVar17 = (byte *)0x0;\n        }\n        else {\n          if (pbVar16 == pbVar17) goto LAB_0040c7c8;\nLAB_0040c61c:\n          pbVar17 = (byte *)(*(long *)(pbVar2 + (long)pbVar16 * 8) - (long)pbVar13);\n          param_1[6] = pbVar17;\n          if (pbVar17 != (byte *)0x0) {\n            if (0 < (long)pbVar17) {\n              puVar9 = (undefined4 *)param_1[2];\n              puVar1 = puVar9 + (long)pbVar17;\n              do {\n                *puVar9 = 0xffffffff;\n                puVar9 = puVar9 + 1;\n              } while (puVar1 != puVar9);\n            }\n            memset(param_1[1],0xff,(size_t)pbVar17);\n            pbVar17 = param_1[6];\n            pbVar5 = param_1[0xb] + -(long)pbVar13;\n            pbVar12 = param_1[0xd] + -(long)pbVar13;\n          }\n        }\n        param_1[7] = pbVar17;\n        iVar4 = *(int *)(param_1 + 0x12);\n        cVar14 = *(char *)((long)param_1 + 0x8b);\n      }\nLAB_0040c240:\n      if (cVar14 == '\\0') {\nLAB_0040c244:\n        param_1[1] = param_1[1] + (long)pbVar13;\n      }\n      goto LAB_0040c248;\n    }\n    if (*(char *)((long)param_1 + 0x8c) != '\\0') {\n      *(undefined *)((long)param_1 + 0x8c) = 0;\n      param_1[0xb] = param_1[10] + (long)pbVar13 + -(long)param_2;\n      param_1[0xd] = param_1[0xc] + (long)pbVar13 + -(long)param_2;\n    }\n    iVar4 = *(int *)(param_1 + 0x12);\n    pbVar5 = param_1[5];\n    param_1[6] = (byte *)0x0;\n    if (1 < iVar4) {\n      if (*(char *)((long)param_1 + 0x89) != '\\0') {\n        pbVar8 = *param_1;\n        pbVar2 = pbVar8 + (long)pbVar5;\n        pbVar16 = pbVar2 + -1 + (long)pbVar13;\n        if (pbVar8 < pbVar2 + ((long)pbVar13 - (long)iVar4)) {\n          pbVar8 = pbVar2 + ((long)pbVar13 - (long)iVar4);\n        }\n        if (pbVar8 <= pbVar16) {\nLAB_0040c6bd:\n          if ((*pbVar16 & 0xc0) == 0x80) goto LAB_0040c6b0;\n          pbVar5 = param_1[0xf];\n          lVar7 = (long)(param_1[0xb] + (long)pbVar2) - (long)pbVar16;\n          pbVar12 = pbVar16;\n          if (pbVar5 != (byte *)0x0) {\n            iVar4 = 6;\n            if (lVar7 < 7) {\n              iVar4 = (int)lVar7;\n            }\n            iVar4 = iVar4 + -1;\n            lVar11 = (long)iVar4;\n            while (-1 < iVar4) {\n              local_46[lVar11] = pbVar5[pbVar16[lVar11]];\n              lVar11 = lVar11 + -1;\n              iVar4 = (int)lVar11;\n            }\n            pbVar12 = local_46;\n          }\n          local_40[0] = 0;\n          uVar10 = FUN_004083e0(&local_4c,pbVar12,lVar7,local_40);\n          if ((uVar10 < (ulong)((long)(pbVar2 + (long)pbVar13) - (long)pbVar16)) ||\n             (0xfffffffffffffffd < uVar10)) {\nLAB_0040c720:\n            pbVar5 = param_1[5];\n            pbVar12 = param_1[7];\n            goto LAB_0040c3c1;\n          }\n          pbVar5 = (byte *)(uVar10 - ((long)(pbVar2 + (long)pbVar13) - (long)pbVar16));\n          param_1[4] = (byte *)0x0;\n          param_1[6] = pbVar5;\n          local_40[0]._0_4_ = local_4c;\n          if (local_4c == 0xffffffff) goto LAB_0040c720;\n          goto LAB_0040c447;\n        }\n      }\nLAB_0040c3c1:\n      pbVar5 = pbVar5 + (long)pbVar12;\n      if ((long)pbVar5 < (long)param_2) {\n        do {\n          pbVar12 = param_1[10];\n          pbVar2 = param_1[4];\n          lVar7 = FUN_004083e0(local_40,*param_1 + (long)pbVar5,(long)pbVar12 - (long)pbVar5,\n                               param_1 + 4);\n          if (0xfffffffffffffffc < lVar7 - 1U) {\n            if ((lVar7 == 0) || ((long)pbVar12 - (long)pbVar5 == 0)) {\n              local_40[0]._0_4_ = 0;\n            }\n            else {\n              local_40[0]._0_4_ = (wint_t)(*param_1)[(long)pbVar5];\n            }\n            param_1[4] = pbVar2;\n            lVar7 = 1;\n          }\n          pbVar5 = pbVar5 + lVar7;\n        } while ((long)pbVar5 < (long)param_2);\n        pbVar5 = pbVar5 + -(long)param_2;\n        param_1[6] = pbVar5;\n        if ((wint_t)local_40[0] == 0xffffffff) goto LAB_0040c7e1;\nLAB_0040c447:\n        if ((*(char *)((long)param_1 + 0x8e) == '\\0') ||\n           ((iVar4 = iswalnum((wint_t)local_40[0]), iVar4 == 0 && ((wint_t)local_40[0] != 0x5f)))) {\n          iVar4 = 0;\n          if ((wint_t)local_40[0] == 10) {\n            iVar4 = (uint)(*(char *)((long)param_1 + 0x8d) != '\\0') * 2;\n          }\n        }\n        else {\n          iVar4 = 1;\n        }\n        *(int *)(param_1 + 0xe) = iVar4;\n      }\n      else {\n        pbVar5 = pbVar5 + -(long)param_2;\n        param_1[6] = pbVar5;\nLAB_0040c7e1:\n        uVar3 = FUN_0040be50(param_1,pbVar17 + -1,param_3);\n        *(undefined4 *)(param_1 + 0xe) = uVar3;\n      }\n      if (pbVar5 == (byte *)0x0) {\nLAB_0040c475:\n        cVar14 = *(char *)((long)param_1 + 0x8b);\n      }\n      else {\n        if (0 < (long)pbVar5) {\n          puVar9 = (undefined4 *)param_1[2];\n          puVar1 = puVar9 + (long)pbVar5;\n          do {\n            *puVar9 = 0xffffffff;\n            puVar9 = puVar9 + 1;\n          } while (puVar1 != puVar9);\n        }\n        cVar14 = *(char *)((long)param_1 + 0x8b);\n        if (cVar14 != '\\0') {\n          memset(param_1[1],0xff,(size_t)pbVar5);\n          pbVar5 = param_1[6];\n          goto LAB_0040c475;\n        }\n      }\n      param_1[7] = pbVar5;\nLAB_0040c22c:\n      iVar4 = *(int *)(param_1 + 0x12);\n      pbVar5 = param_1[0xb] + -(long)pbVar13;\n      pbVar12 = param_1[0xd] + -(long)pbVar13;\n      goto LAB_0040c240;\n    }\n    uVar10 = (ulong)(pbVar5 + -1)[(long)(*param_1 + (long)pbVar13)];\n    param_1[7] = (byte *)0x0;\n    if (param_1[0xf] != (byte *)0x0) {\n      uVar10 = (ulong)param_1[0xf][uVar10];\n    }\n    iVar15 = 1;\n    if (((*(ulong *)(param_1[0x10] + ((long)uVar10 >> 6) * 8) >> ((byte)uVar10 & 0x3f) & 1) == 0) &&\n       (iVar15 = 0, (byte)uVar10 == 10)) {\n      iVar15 = (uint)(*(char *)((long)param_1 + 0x8d) != '\\0') * 2;\n    }\n    *(int *)(param_1 + 0xe) = iVar15;\n    pbVar5 = param_1[0xb] + -(long)pbVar13;\n    pbVar12 = param_1[0xd] + -(long)pbVar13;\n    if (*(char *)((long)param_1 + 0x8b) == '\\0') goto LAB_0040c244;\n    param_1[5] = param_2;\n    param_1[0xb] = pbVar5;\n    param_1[0xd] = pbVar12;\n  }\n  else {\nLAB_0040c1ca:\n    if (pbVar13 != (byte *)0x0) goto LAB_0040c1d3;\nLAB_0040c2a0:\n    iVar4 = *(int *)(param_1 + 0x12);\n    pbVar5 = param_1[0xb];\n    pbVar12 = param_1[0xd];\nLAB_0040c248:\n    param_1[5] = param_2;\n    param_1[0xb] = pbVar5;\n    param_1[0xd] = pbVar12;\n    if (1 < iVar4) {\n      if (*(char *)(param_1 + 0x11) == '\\0') {\n        FUN_00408df0();\n      }\n      else {\n        uVar6 = FUN_00408fa0(param_1);\n        if ((int)uVar6 != 0) {\n          return uVar6;\n        }\n      }\n      goto LAB_0040c26e;\n    }\n  }\n  if (*(char *)((long)param_1 + 0x8b) == '\\0') {\n    param_1[6] = pbVar5;\n  }\n  else if (*(char *)(param_1 + 0x11) == '\\0') {\n    pbVar13 = param_1[0xf];\n    if (pbVar13 != (byte *)0x0) {\n      pbVar12 = param_1[6];\n      if (param_1[8] == pbVar5 || (long)param_1[8] < (long)pbVar5) {\n        pbVar5 = param_1[8];\n      }\n      pbVar17 = pbVar12;\n      if ((long)pbVar12 < (long)pbVar5) {\n        while( true ) {\n          param_1[1][(long)pbVar17] = pbVar13[(*param_1 + (long)pbVar17)[(long)param_2]];\n          pbVar17 = pbVar17 + 1;\n          pbVar12 = pbVar5;\n          if (pbVar5 == pbVar17) break;\n          param_2 = param_1[5];\n          pbVar13 = param_1[0xf];\n        }\n      }\n      param_1[6] = pbVar12;\n      param_1[7] = pbVar12;\n    }\n  }\n  else {\n    FUN_00408d70(param_1);\n  }\nLAB_0040c26e:\n  param_1[9] = (byte *)0x0;\n  return 0;\nLAB_0040c6b0:\n  pbVar16 = pbVar16 + -1;\n  if (pbVar16 < pbVar8) goto LAB_0040c3c1;\n  goto LAB_0040c6bd;\n}\n\n",
            "funcName": "FUN_0040c140"
        },
        {
            "funcStartAddr": "0x40c930",
            "funcEndAddr": "0x40cb44",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUN_0040c930(long *param_1,long param_2,long param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  int iVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  undefined local_58 [16];\n  void *local_48 [3];\n  \n  local_58 = (undefined  [16])0x0;\n  lVar1 = param_1[7] + param_2 * 0x18;\n  local_48[0] = (void *)0x0;\n  lVar7 = *(long *)(lVar1 + 8);\n  if (0 < lVar7) {\n    lVar9 = 0;\n    do {\n      lVar10 = *(long *)(*(long *)(lVar1 + 0x10) + lVar9 * 8);\n      if ((param_2 != lVar10) && ((*(byte *)(lVar10 * 0x10 + *param_1 + 8) & 8) != 0)) {\n        lVar6 = lVar1 + 0x10;\n        lVar10 = lVar10 * 0x18;\n        lVar8 = param_1[5] + lVar10;\n        puVar2 = *(undefined8 **)(lVar8 + 0x10);\n        uVar3 = *puVar2;\n        lVar5 = FUN_0040a120(lVar7,lVar6,uVar3);\n        if (*(long *)(lVar8 + 8) < 2) {\n          if (lVar5 == 0) {\n            lVar6 = FUN_0040a120(*(undefined8 *)(param_3 + 8),param_3 + 0x10,uVar3);\njoined_r0x0040ca94:\n            if (lVar6 != 0) goto LAB_0040c9a2;\n          }\n        }\n        else if ((lVar5 == 0) &&\n                (lVar5 = FUN_0040a120(*(undefined8 *)(param_3 + 8),param_3 + 0x10,uVar3), lVar5 != 0\n                )) {\nLAB_0040c9a2:\n          iVar4 = FUN_0040abd0(local_58,param_4,param_1[7] + lVar10);\n          if (iVar4 != 0) {\n            free(local_48[0]);\n            return iVar4;\n          }\n          lVar7 = *(long *)(lVar1 + 8);\n        }\n        else {\n          lVar5 = puVar2[1];\n          if ((0 < lVar5) && (lVar6 = FUN_0040a120(lVar7,lVar6,lVar5), lVar6 == 0)) {\n            lVar6 = FUN_0040a120(*(undefined8 *)(param_3 + 8),param_3 + 0x10);\n            goto joined_r0x0040ca94;\n          }\n        }\n      }\n      lVar9 = lVar9 + 1;\n    } while (lVar9 < lVar7);\n    lVar9 = 0;\n    if (0 < lVar7) {\n      do {\n        lVar7 = FUN_0040a120(local_58._8_8_,local_48,\n                             *(undefined8 *)(*(long *)(lVar1 + 0x10) + lVar9 * 8));\n        if (lVar7 == 0) {\n          lVar7 = *(long *)(param_3 + 8);\n          lVar10 = FUN_0040a120(lVar7,param_3 + 0x10);\n          lVar10 = lVar10 + -1;\n          if ((-1 < lVar10) && (lVar10 < lVar7)) {\n            *(long *)(param_3 + 8) = lVar7 + -1;\n            FUN_0040a290(param_3 + 8,param_3 + 0x10,lVar10);\n          }\n        }\n        lVar9 = lVar9 + 1;\n      } while (*(long *)(lVar1 + 8) != lVar9 && lVar9 <= *(long *)(lVar1 + 8));\n    }\n  }\n  free(local_48[0]);\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c930"
        },
        {
            "funcStartAddr": "0x40cb60",
            "funcEndAddr": "0x40d625",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_0040cb60(long *param_1,long param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  long lVar3;\n  undefined8 uVar4;\n  bool bVar5;\n  undefined auVar6 [16];\n  char cVar7;\n  uint uVar8;\n  int iVar9;\n  void *pvVar10;\n  ulong *puVar11;\n  void *pvVar12;\n  void *__ptr;\n  undefined8 *puVar13;\n  ulong uVar14;\n  ulong uVar15;\n  undefined8 *puVar16;\n  ulong uVar17;\n  ulong uVar18;\n  size_t __size;\n  long lVar19;\n  void **ppvVar20;\n  void **ppvVar21;\n  long lVar22;\n  ulong *puVar23;\n  ulong *puVar24;\n  undefined8 *puVar25;\n  long lVar26;\n  long lVar27;\n  long *plVar28;\n  long lVar29;\n  long local_d0;\n  undefined local_98 [4];\n  undefined auStack_94 [8];\n  undefined4 uStack_8c;\n  undefined local_88 [8];\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  ulong local_78 [2];\n  void *local_68;\n  ulong uStack_60;\n  undefined local_58 [16];\n  undefined local_48 [16];\n  ulong local_38;\n  \n  pvVar10 = malloc(0x3800);\n  if (pvVar10 == (void *)0x0) {\n    return 0;\n  }\n  _local_98 = (undefined  [16])0x0;\n  puVar11 = (ulong *)((long)pvVar10 + 0x1800);\n  _local_88 = (undefined  [16])0x0;\n  *(undefined8 *)(param_2 + 0x58) = 0;\n  *(undefined8 *)(param_2 + 0x60) = 0;\n  if (*(long *)(param_2 + 0x10) < 1) {\n    free(pvVar10);\n  }\n  else {\n    lVar22 = 0;\n    local_d0 = 0;\n    do {\n      plVar28 = (long *)(*(long *)(*(long *)(param_2 + 0x18) + local_d0 * 8) * 0x10 + *param_1);\n      uVar2 = *(uint *)(plVar28 + 1);\n      bVar1 = *(byte *)(plVar28 + 1);\n      uVar8 = uVar2 >> 8;\n      if (bVar1 == 1) {\n        *(ulong *)(local_98 + (*(byte *)plVar28 >> 3 & 0x18)) =\n             *(ulong *)(local_98 + (*(byte *)plVar28 >> 3 & 0x18)) | 1L << (*(byte *)plVar28 & 0x3f)\n        ;\nLAB_0040cf57:\n        auVar6 = _local_98;\n        if ((uVar2 & 0x3ff00) == 0) {\nLAB_0040d010:\n          lVar26 = 0;\n          puVar23 = puVar11;\n          if (0 < lVar22) {\n            do {\n              if ((bVar1 != 1) ||\n                 ((*(ulong *)((long)puVar11 + lVar26 * 0x20 + (ulong)(*(byte *)plVar28 >> 3 & 0x18))\n                   >> (*(byte *)plVar28 & 0x3f) & 1) != 0)) {\n                uVar14 = 0;\n                lVar19 = 0;\n                do {\n                  uVar17 = *(ulong *)(local_98 + lVar19 * 8);\n                  uVar15 = puVar23[lVar19];\n                  local_78[lVar19] = uVar17 & uVar15;\n                  lVar19 = lVar19 + 1;\n                  uVar14 = uVar14 | uVar17 & uVar15;\n                } while (lVar19 != 4);\n                if (uVar14 != 0) {\n                  uVar14 = 0;\n                  uVar17 = 0;\n                  lVar19 = 0;\n                  do {\n                    uVar18 = ~*(ulong *)(local_98 + lVar19 * 8) & puVar23[lVar19];\n                    uVar15 = ~puVar23[lVar19] & *(ulong *)(local_98 + lVar19 * 8);\n                    *(ulong *)(local_58 + lVar19 * 8) = uVar18;\n                    uVar17 = uVar17 | uVar18;\n                    *(ulong *)(local_98 + lVar19 * 8) = uVar15;\n                    lVar19 = lVar19 + 1;\n                    uVar14 = uVar14 | uVar15;\n                  } while (lVar19 != 4);\n                  if (uVar17 != 0) {\n                    puVar24 = puVar11 + lVar22 * 4;\n                    *puVar24 = local_58._0_8_;\n                    puVar24[1] = local_58._8_8_;\n                    puVar24[2] = local_48._0_8_;\n                    puVar24[3] = local_48._8_8_;\n                    *puVar23 = local_78[0];\n                    puVar23[1] = local_78[1];\n                    puVar23[2] = (ulong)local_68;\n                    puVar23[3] = uStack_60;\n                    iVar9 = FUN_0040b1c0((void *)((long)pvVar10 + lVar22 * 0x18),\n                                         (void *)((long)pvVar10 + lVar26 * 0x18));\n                    if (iVar9 != 0) goto LAB_0040d233;\n                    lVar22 = lVar22 + 1;\n                  }\n                  cVar7 = FUN_00408b10();\n                  if (cVar7 == '\\0') goto LAB_0040d233;\n                  if (uVar14 == 0) break;\n                }\n              }\n              lVar26 = lVar26 + 1;\n              puVar23 = puVar23 + 4;\n            } while (lVar26 < lVar22);\n          }\n          if (lVar22 != lVar26) goto LAB_0040cc32;\n          puVar23 = puVar11 + lVar22 * 4;\n          *(undefined (*) [4])puVar23 = local_98;\n          *(undefined4 *)((long)puVar23 + 4) = auStack_94._0_4_;\n          *(undefined4 *)(puVar23 + 1) = auStack_94._4_4_;\n          *(undefined4 *)((long)puVar23 + 0xc) = uStack_8c;\n          *(undefined4 *)(puVar23 + 2) = local_88._0_4_;\n          *(undefined4 *)((long)puVar23 + 0x14) = local_88._4_4_;\n          *(undefined4 *)(puVar23 + 3) = uStack_80;\n          *(undefined4 *)((long)puVar23 + 0x1c) = uStack_7c;\n          uVar4 = *(undefined8 *)(*(long *)(param_2 + 0x18) + local_d0 * 8);\n          puVar13 = (undefined8 *)((long)pvVar10 + lVar22 * 0x18);\n          *puVar13 = 1;\n          puVar13[1] = 1;\n          puVar16 = (undefined8 *)malloc(8);\n          puVar13[2] = puVar16;\n          if (puVar16 == (undefined8 *)0x0) {\n            puVar13[1] = 0;\n            *puVar13 = 0;\n            if (lVar22 == 0) {\n              free(pvVar10);\n              return 0;\n            }\nLAB_0040d233:\n            ppvVar21 = (void **)((long)pvVar10 + 0x10);\n            ppvVar20 = ppvVar21 + lVar22 * 3;\n            do {\n              pvVar12 = *ppvVar21;\n              ppvVar21 = ppvVar21 + 3;\n              free(pvVar12);\n            } while (ppvVar20 != ppvVar21);\n            free(pvVar10);\n            return 0;\n          }\n          *puVar16 = uVar4;\n          lVar22 = lVar22 + 1;\n        }\n        else {\n          if ((uVar8 & 0x20) != 0) {\n            _local_98 = (undefined  [16])0x0;\n            _local_88 = (undefined  [16])0x0;\n            if ((auVar6 & (undefined  [16])0x400) == (undefined  [16])0x0) goto LAB_0040cc32;\n            _local_98 = ZEXT816(0x400);\n          }\n          if ((uVar8 & 0x80) == 0) {\n            if ((uVar8 & 4) != 0) {\n              if (bVar1 == 1) {\n                if ((*(byte *)((long)plVar28 + 10) & 0x40) == 0) goto LAB_0040d219;\n                iVar9 = *(int *)((long)param_1 + 0xb4);\n              }\n              else {\n                iVar9 = *(int *)((long)param_1 + 0xb4);\n              }\n              if (iVar9 < 2) {\n                uVar14 = 0;\n                lVar26 = 0;\n                do {\n                  uVar17 = *(ulong *)(local_98 + lVar26 * 8);\n                  uVar15 = param_1[lVar26 + 0x17];\n                  *(ulong *)(local_98 + lVar26 * 8) = uVar17 & uVar15;\n                  lVar26 = lVar26 + 1;\n                  uVar14 = uVar14 | uVar17 & uVar15;\n                } while (lVar26 != 4);\n              }\n              else {\n                lVar26 = param_1[0xf];\n                uVar14 = 0;\n                lVar19 = 0;\n                do {\n                  uVar17 = (~*(ulong *)(lVar26 + lVar19 * 8) | param_1[lVar19 + 0x17]) &\n                           *(ulong *)(local_98 + lVar19 * 8);\n                  *(ulong *)(local_98 + lVar19 * 8) = uVar17;\n                  lVar19 = lVar19 + 1;\n                  uVar14 = uVar14 | uVar17;\n                } while (lVar19 != 4);\n              }\n              if (uVar14 == 0) goto LAB_0040cc32;\n            }\n            if ((uVar8 & 8) != 0) {\n              if ((bVar1 == 1) && ((*(byte *)((long)plVar28 + 10) & 0x40) != 0)) goto LAB_0040d219;\n              if (*(int *)((long)param_1 + 0xb4) < 2) {\n                uVar14 = 0;\n                lVar26 = 0;\n                do {\n                  uVar17 = param_1[lVar26 + 0x17];\n                  uVar15 = *(ulong *)(local_98 + lVar26 * 8);\n                  *(ulong *)(local_98 + lVar26 * 8) = ~uVar17 & uVar15;\n                  lVar26 = lVar26 + 1;\n                  uVar14 = uVar14 | ~uVar17 & uVar15;\n                } while (lVar26 != 4);\n              }\n              else {\n                lVar26 = param_1[0xf];\n                uVar14 = 0;\n                lVar19 = 0;\n                do {\n                  uVar17 = ~(param_1[lVar19 + 0x17] & *(ulong *)(lVar26 + lVar19 * 8)) &\n                           *(ulong *)(local_98 + lVar19 * 8);\n                  *(ulong *)(local_98 + lVar19 * 8) = uVar17;\n                  lVar19 = lVar19 + 1;\n                  uVar14 = uVar14 | uVar17;\n                } while (lVar19 != 4);\n              }\n              if (uVar14 == 0) goto LAB_0040cc32;\n            }\n            goto LAB_0040d010;\n          }\n        }\nLAB_0040d219:\n        _local_98 = (undefined  [16])0x0;\n        _local_88 = (undefined  [16])0x0;\n      }\n      else {\n        if (bVar1 == 3) {\n          lVar26 = *plVar28;\n          lVar19 = 0;\n          do {\n            *(ulong *)(local_98 + lVar19) =\n                 *(ulong *)(local_98 + lVar19) | *(ulong *)(lVar26 + lVar19);\n            lVar19 = lVar19 + 8;\n          } while (lVar19 != 0x20);\n          goto LAB_0040cf57;\n        }\n        if (bVar1 == 5) {\n          if (*(int *)((long)param_1 + 0xb4) < 2) {\n            _local_98 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n            _local_88 = _local_98;\n          }\n          else {\n            lVar26 = param_1[0xf];\n            lVar19 = 0;\n            do {\n              *(ulong *)(local_98 + lVar19) =\n                   *(ulong *)(local_98 + lVar19) | *(ulong *)(lVar26 + lVar19);\n              lVar19 = lVar19 + 8;\n            } while (lVar19 != 0x20);\n          }\nLAB_0040d29f:\n          if ((param_1[0x1b] & 0x40U) == 0) {\n            _local_98 = _local_98 & (undefined  [16])0xffffffffffffffff;\n          }\n          if ((param_1[0x1b] & 0x80U) != 0) {\n            _local_98 = _local_98 & (undefined  [16])0xffffffffffffffff;\n          }\n          goto LAB_0040cf57;\n        }\n        if (bVar1 == 7) {\n          _local_98 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n          goto LAB_0040d29f;\n        }\n      }\nLAB_0040cc32:\n      local_d0 = local_d0 + 1;\n    } while (local_d0 < *(long *)(param_2 + 0x10));\n    if (0 < lVar22) {\n      local_78[1] = 0;\n      local_78[0] = lVar22 + 1;\n      __size = local_78[0] * 8;\n      pvVar12 = malloc(__size);\n      local_68 = pvVar12;\n      if (((pvVar12 != (void *)0x0) &&\n          (_local_98 = _local_98 & (undefined  [16])0xffffffff00000000, lVar22 < 0xaaaaaaaaaaaa856))\n         && (__ptr = malloc(lVar22 * 0x18), __ptr != (void *)0x0)) {\n        lVar19 = __size - 8;\n        lVar29 = 0;\n        bVar5 = false;\n        lVar26 = lVar19 * 2;\n        plVar28 = (long *)((long)pvVar10 + 8);\n        local_58 = (undefined  [16])0x0;\n        local_48 = (undefined  [16])0x0;\n        pvVar12 = pvVar10;\n        do {\n          local_78[1] = 0;\n          lVar27 = 0;\n          if (0 < *plVar28) {\n            do {\n              lVar3 = *(long *)(param_1[3] + *(long *)(plVar28[1] + lVar27 * 8) * 8);\n              if (lVar3 != -1) {\n                iVar9 = FUN_0040a660(local_78,param_1[6] + lVar3 * 0x18);\n                _local_98 = CONCAT124(_auStack_94,iVar9);\n                if (iVar9 != 0) goto LAB_0040d405;\n              }\n              lVar27 = lVar27 + 1;\n            } while (*plVar28 != lVar27 && lVar27 <= *plVar28);\n          }\n          lVar27 = FUN_0040b3d0(local_98,param_1,local_78,0);\n          *(long *)((long)__ptr + lVar29 * 8) = lVar27;\n          if ((lVar27 == 0) && (local_98 != (undefined  [4])0x0)) goto LAB_0040d405;\n          if (*(char *)(lVar27 + 0x68) < '\\0') {\n            lVar27 = FUN_0040b3d0(local_98,param_1,local_78,1);\n            *(long *)((long)__ptr + lVar29 * 8 + lVar19) = lVar27;\n            if ((lVar27 == 0) && (local_98 != (undefined  [4])0x0)) goto LAB_0040d405;\n            if ((lVar27 != *(long *)((long)__ptr + lVar29 * 8)) &&\n               (1 < *(int *)((long)param_1 + 0xb4))) {\n              bVar5 = true;\n            }\n            lVar27 = FUN_0040b3d0(local_98,param_1,local_78,2);\n            *(long *)((long)__ptr + lVar29 * 8 + lVar26) = lVar27;\n            if ((lVar27 == 0) && (local_98 != (undefined  [4])0x0)) goto LAB_0040d405;\n          }\n          else {\n            *(long *)((long)__ptr + lVar29 * 8 + lVar19) = lVar27;\n            *(long *)((long)__ptr + lVar29 * 8 + lVar26) = lVar27;\n          }\n          lVar27 = 0;\n          puVar11 = (ulong *)local_58;\n          do {\n            *(ulong *)((long)puVar11 + lVar27) =\n                 *(ulong *)((long)puVar11 + lVar27) | *(ulong *)((long)pvVar12 + lVar27 + 0x1800);\n            lVar27 = lVar27 + 8;\n          } while (lVar27 != 0x20);\n          lVar29 = lVar29 + 1;\n          plVar28 = plVar28 + 3;\n          pvVar12 = (void *)((long)pvVar12 + 0x20);\n        } while (lVar29 != lVar22);\n        if (bVar5) {\n          puVar13 = (undefined8 *)calloc(8,0x200);\n          *(undefined8 **)(param_2 + 0x60) = puVar13;\n          if (puVar13 != (undefined8 *)0x0) {\n            puVar23 = (ulong *)((long)pvVar10 + 0x1820);\n            puVar16 = puVar13;\n            do {\n              uVar17 = 1;\n              puVar25 = puVar16;\n              for (uVar14 = *puVar11; uVar14 != 0; uVar14 = uVar14 >> 1) {\n                if ((uVar14 & 1) != 0) {\n                  if ((puVar23[-4] & uVar17) == 0) {\n                    lVar29 = 0;\n                    puVar24 = puVar23;\n                    do {\n                      uVar15 = *puVar24;\n                      lVar29 = lVar29 + 1;\n                      puVar24 = puVar24 + 4;\n                    } while ((uVar15 & uVar17) == 0);\n                  }\n                  else {\n                    lVar29 = 0;\n                  }\n                  *puVar25 = *(undefined8 *)((long)__ptr + lVar29 * 8);\n                  puVar25[0x100] = *(undefined8 *)((long)__ptr + lVar29 * 8 + lVar19);\n                }\n                uVar17 = uVar17 * 2;\n                puVar25 = puVar25 + 1;\n              }\n              puVar11 = puVar11 + 1;\n              puVar16 = puVar16 + 0x40;\n              puVar23 = puVar23 + 1;\n            } while (&local_38 != puVar11);\n            goto LAB_0040ce7e;\n          }\n        }\n        else {\n          puVar13 = (undefined8 *)calloc(8,0x100);\n          *(undefined8 **)(param_2 + 0x58) = puVar13;\n          if (puVar13 != (undefined8 *)0x0) {\n            lVar29 = 0;\n            do {\n              uVar17 = 1;\n              puVar16 = puVar13 + lVar29 * 8;\n              for (uVar14 = *(ulong *)((long)puVar11 + lVar29); uVar14 != 0; uVar14 = uVar14 >> 1) {\n                if ((uVar14 & 1) != 0) {\n                  if ((*(ulong *)((long)pvVar10 + lVar29 + 0x1800) & uVar17) == 0) {\n                    puVar23 = (ulong *)((long)pvVar10 + lVar29 + 0x1820);\n                    lVar27 = 0;\n                    do {\n                      uVar15 = *puVar23;\n                      lVar27 = lVar27 + 1;\n                      puVar23 = puVar23 + 4;\n                    } while ((uVar15 & uVar17) == 0);\n                    lVar27 = lVar27 * 8;\n                  }\n                  else {\n                    lVar27 = 0;\n                  }\n                  if ((*(ulong *)((long)param_1 + lVar29 + 0xb8) & uVar17) == 0) {\n                    *puVar16 = *(undefined8 *)((long)__ptr + lVar27);\n                  }\n                  else {\n                    *puVar16 = *(undefined8 *)((long)__ptr + lVar27 + lVar19);\n                  }\n                }\n                uVar17 = uVar17 * 2;\n                puVar16 = puVar16 + 1;\n              }\n              lVar29 = lVar29 + 8;\n            } while (lVar29 != 0x20);\nLAB_0040ce7e:\n            if ((local_58 & (undefined  [16])0x400) != (undefined  [16])0x0) {\n              lVar19 = 0;\n              do {\n                if ((*(byte *)((long)pvVar10 + lVar19 * 0x20 + 0x1801) & 4) != 0) {\n                  uVar4 = *(undefined8 *)((long)__ptr + lVar19 * 8 + lVar26);\n                  puVar13[10] = uVar4;\n                  if (bVar5) {\n                    puVar13[0x10a] = uVar4;\n                  }\n                  break;\n                }\n                lVar19 = lVar19 + 1;\n              } while (lVar19 != lVar22);\n            }\n            free(__ptr);\n            free(local_68);\n            ppvVar21 = (void **)((long)pvVar10 + 0x10);\n            ppvVar20 = ppvVar21 + lVar22 * 3;\n            do {\n              pvVar12 = *ppvVar21;\n              ppvVar21 = ppvVar21 + 3;\n              free(pvVar12);\n            } while (ppvVar20 != ppvVar21);\n            free(pvVar10);\n            return 1;\n          }\n        }\nLAB_0040d405:\n        free(__ptr);\n        pvVar12 = local_68;\n      }\n      free(pvVar12);\n      ppvVar21 = (void **)((long)pvVar10 + 0x10);\n      ppvVar20 = ppvVar21 + lVar22 * 3;\n      do {\n        pvVar12 = *ppvVar21;\n        ppvVar21 = ppvVar21 + 3;\n        free(pvVar12);\n      } while (ppvVar21 != ppvVar20);\n      free(pvVar10);\n      return 0;\n    }\n    free(pvVar10);\n    if (lVar22 != 0) {\n      return 0;\n    }\n  }\n  pvVar10 = calloc(8,0x100);\n  *(void **)(param_2 + 0x58) = pvVar10;\n  return (ulong)pvVar10 & 0xffffffffffffff00 | (ulong)(pvVar10 != (void *)0x0);\n}\n\n",
            "funcName": "FUN_0040cb60"
        },
        {
            "funcStartAddr": "0x40d670",
            "funcEndAddr": "0x40d6f1",
            "decompiledFuncCode": "\nundefined8 FUN_0040d670(long *param_1,long param_2)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  if (*(char *)(param_2 + 0x30) == '\\x10') {\n    uVar2 = *(undefined8 *)(*(long *)(param_2 + 8) + 0x38);\n    *(undefined8 *)(param_2 + 0x18) = *(undefined8 *)(*(long *)(param_2 + 8) + 0x18);\n    *(undefined8 *)(param_2 + 0x38) = uVar2;\n    return 0;\n  }\n  *(long *)(param_2 + 0x18) = param_2;\n  lVar1 = FUN_004097f0(param_1,*(undefined8 *)(param_2 + 0x28),*(undefined8 *)(param_2 + 0x30));\n  *(long *)(param_2 + 0x38) = lVar1;\n  if (lVar1 == -1) {\n    uVar2 = 0xc;\n  }\n  else {\n    uVar2 = 0;\n    if (*(char *)(param_2 + 0x30) == '\\f') {\n      lVar1 = lVar1 * 0x10 + *param_1;\n      *(uint *)(lVar1 + 8) =\n           *(uint *)(lVar1 + 8) & 0xfffc00ff | (*(uint *)(param_2 + 0x28) & 0x3ff) << 8;\n    }\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040d670"
        },
        {
            "funcStartAddr": "0x40d700",
            "funcEndAddr": "0x40d872",
            "decompiledFuncCode": "\nvoid FUN_0040d700(void **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *pvVar3;\n  void *pvVar4;\n  long lVar5;\n  void *pvVar6;\n  \n  pvVar4 = *param_1;\n  if ((pvVar4 != (void *)0x0) && (param_1[2] != (void *)0x0)) {\n    pvVar6 = (void *)0x0;\n    while( true ) {\n      pvVar3 = (void *)((long)pvVar6 + 1);\n      FUN_004097a0((void *)((long)pvVar4 + (long)pvVar6 * 0x10));\n      if (param_1[2] < pvVar3 || param_1[2] == pvVar3) break;\n      pvVar4 = *param_1;\n      pvVar6 = pvVar3;\n    }\n  }\n  pvVar4 = (void *)0x0;\n  free(param_1[3]);\n  if (param_1[2] != (void *)0x0) {\n    do {\n      if (param_1[6] != (void *)0x0) {\n        free(*(void **)((long)param_1[6] + (long)pvVar4 * 0x18 + 0x10));\n      }\n      if (param_1[7] != (void *)0x0) {\n        free(*(void **)((long)param_1[7] + (long)pvVar4 * 0x18 + 0x10));\n      }\n      if (param_1[5] != (void *)0x0) {\n        free(*(void **)((long)param_1[5] + (long)pvVar4 * 0x18 + 0x10));\n      }\n      pvVar4 = (void *)((long)pvVar4 + 1);\n    } while (pvVar4 <= param_1[2] && param_1[2] != pvVar4);\n  }\n  pvVar6 = (void *)0x0;\n  free(param_1[5]);\n  free(param_1[6]);\n  free(param_1[7]);\n  free(*param_1);\n  pvVar4 = param_1[8];\n  if (pvVar4 != (void *)0x0) {\n    while( true ) {\n      lVar5 = 0;\n      plVar2 = (long *)((long)pvVar4 + (long)pvVar6 * 0x18);\n      if (0 < *plVar2) {\n        do {\n          lVar1 = lVar5 * 8;\n          lVar5 = lVar5 + 1;\n          FUN_00409cf0(*(undefined8 *)(plVar2[2] + lVar1));\n        } while (lVar5 < *plVar2);\n      }\n      pvVar6 = (void *)((long)pvVar6 + 1);\n      free((void *)plVar2[2]);\n      if (param_1[0x11] < pvVar6) break;\n      pvVar4 = param_1[8];\n    }\n    pvVar4 = param_1[8];\n  }\n  free(pvVar4);\n  if ((undefined *)param_1[0xf] != &DAT_00419a80) {\n    free(param_1[0xf]);\n  }\n  free(param_1[0x1c]);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040d700"
        },
        {
            "funcStartAddr": "0x40d880",
            "funcEndAddr": "0x40d8ce",
            "decompiledFuncCode": "\nvoid FUN_0040d880(long *param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  if (0 < *param_1) {\n    lVar1 = 0;\n    do {\n      lVar2 = lVar1 + 1;\n      free(*(void **)(param_1[2] + 0x28 + lVar1 * 0x30));\n      free(*(void **)(param_1[2] + 0x10 + lVar1 * 0x30));\n      lVar1 = lVar2;\n    } while (lVar2 < *param_1);\n  }\n  free((void *)param_1[2]);\n  return;\n}\n\n",
            "funcName": "FUN_0040d880"
        },
        {
            "funcStartAddr": "0x40d8d0",
            "funcEndAddr": "0x40d95b",
            "decompiledFuncCode": "\nundefined8\nFUN_0040d8d0(long *param_1,long *param_2,undefined8 *param_3,long param_4,void *param_5,\n            undefined4 *param_6)\n\n{\n  long lVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  long lVar5;\n  \n  lVar5 = *param_1 + -1;\n  *param_1 = lVar5;\n  if (-1 < lVar5) {\n    lVar1 = *param_2;\n    lVar5 = lVar5 * 0x30;\n    *param_3 = *(undefined8 *)(lVar1 + lVar5);\n    memcpy(param_5,(void *)((undefined8 *)(lVar1 + lVar5))[2],param_4 << 4);\n    free(*(void **)(param_6 + 4));\n    free(*(void **)(*param_2 + 0x10 + lVar5));\n    lVar5 = lVar5 + *param_2;\n    uVar2 = *(undefined4 *)(lVar5 + 0x1c);\n    uVar3 = *(undefined4 *)(lVar5 + 0x20);\n    uVar4 = *(undefined4 *)(lVar5 + 0x24);\n    *param_6 = *(undefined4 *)(lVar5 + 0x18);\n    param_6[1] = uVar2;\n    param_6[2] = uVar3;\n    param_6[3] = uVar4;\n    *(undefined8 *)(param_6 + 4) = *(undefined8 *)(lVar5 + 0x28);\n    return *(undefined8 *)(lVar5 + 8);\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"num >= 0\",\"lib/regexec.c\",0x54f,\"pop_fail_stack\");\n}\n\n",
            "funcName": "FUN_0040d8d0"
        },
        {
            "funcStartAddr": "0x40d960",
            "funcEndAddr": "0x40d9a4",
            "decompiledFuncCode": "\nundefined8 FUN_0040d960(long param_1,byte *param_2)\n\n{\n  ulong *puVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen((char *)param_2);\n  if (sVar2 == 1) {\n    puVar1 = (ulong *)(param_1 + (ulong)(*param_2 >> 3 & 0x18));\n    *puVar1 = *puVar1 | 1L << (*param_2 & 0x3f);\n    return 0;\n  }\n  return 3;\n}\n\n",
            "funcName": "FUN_0040d960"
        },
        {
            "funcStartAddr": "0x40d9b0",
            "funcEndAddr": "0x40e171",
            "decompiledFuncCode": "\nundefined8\nFUN_0040d9b0(long param_1,long param_2,void **param_3,ulong *param_4,ulong *param_5,char *param_6,\n            ulong param_7)\n\n{\n  ulong *puVar1;\n  ushort *puVar2;\n  int iVar3;\n  wctype_t wVar4;\n  ushort **ppuVar5;\n  void *__ptr;\n  long lVar6;\n  ulong uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  bool bVar10;\n  bool bVar11;\n  undefined uVar12;\n  bool bVar13;\n  undefined uVar14;\n  byte bVar15;\n  \n  bVar15 = 0;\n  bVar10 = false;\n  bVar13 = (param_7 & 0x400000) == 0;\n  if (!bVar13) {\n    lVar6 = 6;\n    pbVar8 = (byte *)param_6;\n    pbVar9 = (byte *)\"upper\";\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar8 < *pbVar9;\n      bVar13 = *pbVar8 == *pbVar9;\n      pbVar8 = pbVar8 + 1;\n      pbVar9 = pbVar9 + 1;\n    } while (bVar13);\n    bVar11 = false;\n    bVar10 = (!bVar10 && !bVar13) == bVar10;\n    if (!bVar10) {\n      lVar6 = 6;\n      pbVar8 = (byte *)param_6;\n      pbVar9 = (byte *)\"lower\";\n      do {\n        if (lVar6 == 0) break;\n        lVar6 = lVar6 + -1;\n        bVar11 = *pbVar8 < *pbVar9;\n        bVar10 = *pbVar8 == *pbVar9;\n        pbVar8 = pbVar8 + 1;\n        pbVar9 = pbVar9 + 1;\n      } while (bVar10);\n      uVar7 = *param_4;\n      if ((!bVar11 && !bVar10) == bVar11) {\n        param_6 = \"alpha\";\n      }\n      __ptr = *param_3;\n      uVar12 = *param_5 < uVar7;\n      uVar14 = *param_5 == uVar7;\n      goto joined_r0x0040d9ff;\n    }\n    param_6 = \"alpha\";\n  }\n  uVar7 = *param_4;\n  __ptr = *param_3;\n  uVar12 = *param_5 < uVar7;\n  uVar14 = *param_5 == uVar7;\njoined_r0x0040d9ff:\n  if ((bool)uVar14) {\n    uVar7 = uVar7 * 2 + 1;\n    __ptr = realloc(__ptr,uVar7 * 8);\n    uVar12 = false;\n    uVar14 = __ptr == (void *)0x0;\n    if ((bool)uVar14) {\n      return 0xc;\n    }\n    *param_3 = __ptr;\n    *param_5 = uVar7;\n    uVar7 = *param_4;\n  }\n  *param_4 = uVar7 + 1;\n  wVar4 = wctype(param_6);\n  lVar6 = 6;\n  *(wctype_t *)((long)__ptr + uVar7 * 8) = wVar4;\n  pbVar8 = (byte *)param_6;\n  pbVar9 = (byte *)\"alnum\";\n  do {\n    if (lVar6 == 0) break;\n    lVar6 = lVar6 + -1;\n    uVar12 = *pbVar8 < *pbVar9;\n    uVar14 = *pbVar8 == *pbVar9;\n    pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n    pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n  } while ((bool)uVar14);\n  bVar10 = false;\n  bVar13 = (!(bool)uVar12 && !(bool)uVar14) == (bool)uVar12;\n  if (bVar13) {\n    ppuVar5 = __ctype_b_loc();\n    lVar6 = 0;\n    puVar2 = *ppuVar5;\n    if (param_1 == 0) {\n      do {\n        if ((*(byte *)(puVar2 + lVar6) & 8) != 0) {\n          puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n          *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n        }\n        lVar6 = lVar6 + 1;\n      } while (lVar6 != 0x100);\n    }\n    else {\n      lVar6 = 0;\n      do {\n        if ((*(byte *)(puVar2 + lVar6) & 8) != 0) {\n          puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n          *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n        }\n        lVar6 = lVar6 + 1;\n      } while (lVar6 != 0x100);\n    }\n  }\n  else {\n    lVar6 = 6;\n    pbVar8 = (byte *)param_6;\n    pbVar9 = &DAT_00419079;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar8 < *pbVar9;\n      bVar13 = *pbVar8 == *pbVar9;\n      pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n    } while (bVar13);\n    bVar11 = false;\n    bVar10 = (!bVar10 && !bVar13) == bVar10;\n    if (bVar10) {\n      ppuVar5 = __ctype_b_loc();\n      lVar6 = 0;\n      puVar2 = *ppuVar5;\n      if (param_1 == 0) {\n        do {\n          if ((*(byte *)(puVar2 + lVar6) & 2) != 0) {\n            puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n            *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n          }\n          lVar6 = lVar6 + 1;\n        } while (lVar6 != 0x100);\n      }\n      else {\n        lVar6 = 0;\n        do {\n          if ((*(byte *)(puVar2 + lVar6) & 2) != 0) {\n            puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n            *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n          }\n          lVar6 = lVar6 + 1;\n        } while (lVar6 != 0x100);\n      }\n    }\n    else {\n      lVar6 = 6;\n      pbVar8 = (byte *)param_6;\n      pbVar9 = (byte *)\"lower\";\n      do {\n        if (lVar6 == 0) break;\n        lVar6 = lVar6 + -1;\n        bVar11 = *pbVar8 < *pbVar9;\n        bVar10 = *pbVar8 == *pbVar9;\n        pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n        pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n      } while (bVar10);\n      bVar13 = false;\n      bVar10 = (!bVar11 && !bVar10) == bVar11;\n      if (bVar10) {\n        ppuVar5 = __ctype_b_loc();\n        lVar6 = 0;\n        puVar2 = *ppuVar5;\n        if (param_1 == 0) {\n          do {\n            if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 2) != 0) {\n              puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n              *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n            }\n            lVar6 = lVar6 + 1;\n          } while (lVar6 != 0x100);\n        }\n        else {\n          lVar6 = 0;\n          do {\n            if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 2) != 0) {\n              puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n              *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n            }\n            lVar6 = lVar6 + 1;\n          } while (lVar6 != 0x100);\n        }\n      }\n      else {\n        lVar6 = 6;\n        pbVar8 = (byte *)param_6;\n        pbVar9 = (byte *)\"space\";\n        do {\n          if (lVar6 == 0) break;\n          lVar6 = lVar6 + -1;\n          bVar13 = *pbVar8 < *pbVar9;\n          bVar10 = *pbVar8 == *pbVar9;\n          pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n        } while (bVar10);\n        bVar11 = false;\n        bVar10 = (!bVar13 && !bVar10) == bVar13;\n        if (bVar10) {\n          ppuVar5 = __ctype_b_loc();\n          lVar6 = 0;\n          puVar2 = *ppuVar5;\n          if (param_1 == 0) {\n            do {\n              if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x20) != 0) {\n                puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n              }\n              lVar6 = lVar6 + 1;\n            } while (lVar6 != 0x100);\n          }\n          else {\n            lVar6 = 0;\n            do {\n              if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x20) != 0) {\n                puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n              }\n              lVar6 = lVar6 + 1;\n            } while (lVar6 != 0x100);\n          }\n        }\n        else {\n          lVar6 = 6;\n          pbVar8 = (byte *)param_6;\n          pbVar9 = (byte *)\"alpha\";\n          do {\n            if (lVar6 == 0) break;\n            lVar6 = lVar6 + -1;\n            bVar11 = *pbVar8 < *pbVar9;\n            bVar10 = *pbVar8 == *pbVar9;\n            pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n          } while (bVar10);\n          bVar13 = false;\n          bVar10 = (!bVar11 && !bVar10) == bVar11;\n          if (bVar10) {\n            ppuVar5 = __ctype_b_loc();\n            lVar6 = 0;\n            puVar2 = *ppuVar5;\n            if (param_1 == 0) {\n              do {\n                if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 4) != 0) {\n                  puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                  *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                }\n                lVar6 = lVar6 + 1;\n              } while (lVar6 != 0x100);\n            }\n            else {\n              lVar6 = 0;\n              do {\n                if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 4) != 0) {\n                  puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                  *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                }\n                lVar6 = lVar6 + 1;\n              } while (lVar6 != 0x100);\n            }\n          }\n          else {\n            lVar6 = 6;\n            pbVar8 = (byte *)param_6;\n            pbVar9 = &DAT_0041909e;\n            do {\n              if (lVar6 == 0) break;\n              lVar6 = lVar6 + -1;\n              bVar13 = *pbVar8 < *pbVar9;\n              bVar10 = *pbVar8 == *pbVar9;\n              pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n              pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n            } while (bVar10);\n            bVar11 = false;\n            bVar10 = (!bVar13 && !bVar10) == bVar13;\n            if (bVar10) {\n              ppuVar5 = __ctype_b_loc();\n              lVar6 = 0;\n              puVar2 = *ppuVar5;\n              if (param_1 == 0) {\n                do {\n                  if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 8) != 0) {\n                    puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                    *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                  }\n                  lVar6 = lVar6 + 1;\n                } while (lVar6 != 0x100);\n              }\n              else {\n                lVar6 = 0;\n                do {\n                  if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 8) != 0) {\n                    puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                    *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                  }\n                  lVar6 = lVar6 + 1;\n                } while (lVar6 != 0x100);\n              }\n            }\n            else {\n              lVar6 = 6;\n              pbVar8 = (byte *)param_6;\n              pbVar9 = (byte *)\"print\";\n              do {\n                if (lVar6 == 0) break;\n                lVar6 = lVar6 + -1;\n                bVar11 = *pbVar8 < *pbVar9;\n                bVar10 = *pbVar8 == *pbVar9;\n                pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n                pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n              } while (bVar10);\n              bVar13 = false;\n              bVar10 = (!bVar11 && !bVar10) == bVar11;\n              if (bVar10) {\n                ppuVar5 = __ctype_b_loc();\n                lVar6 = 0;\n                puVar2 = *ppuVar5;\n                if (param_1 == 0) {\n                  do {\n                    if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x40) != 0) {\n                      puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                      *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                    }\n                    lVar6 = lVar6 + 1;\n                  } while (lVar6 != 0x100);\n                }\n                else {\n                  lVar6 = 0;\n                  do {\n                    if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x40) != 0) {\n                      puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                      *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                    }\n                    lVar6 = lVar6 + 1;\n                  } while (lVar6 != 0x100);\n                }\n              }\n              else {\n                lVar6 = 6;\n                pbVar8 = (byte *)param_6;\n                pbVar9 = (byte *)\"upper\";\n                do {\n                  if (lVar6 == 0) break;\n                  lVar6 = lVar6 + -1;\n                  bVar13 = *pbVar8 < *pbVar9;\n                  bVar10 = *pbVar8 == *pbVar9;\n                  pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n                  pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n                } while (bVar10);\n                bVar11 = false;\n                bVar10 = (!bVar13 && !bVar10) == bVar13;\n                if (bVar10) {\n                  ppuVar5 = __ctype_b_loc();\n                  lVar6 = 0;\n                  puVar2 = *ppuVar5;\n                  if (param_1 == 0) {\n                    do {\n                      if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 1) != 0) {\n                        puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                        *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                      }\n                      lVar6 = lVar6 + 1;\n                    } while (lVar6 != 0x100);\n                  }\n                  else {\n                    lVar6 = 0;\n                    do {\n                      if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 1) != 0) {\n                        puVar1 = (ulong *)(param_2 + (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18)\n                                          );\n                        *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                      }\n                      lVar6 = lVar6 + 1;\n                    } while (lVar6 != 0x100);\n                  }\n                }\n                else {\n                  lVar6 = 6;\n                  pbVar8 = (byte *)param_6;\n                  pbVar9 = (byte *)\"blank\";\n                  do {\n                    if (lVar6 == 0) break;\n                    lVar6 = lVar6 + -1;\n                    bVar11 = *pbVar8 < *pbVar9;\n                    bVar10 = *pbVar8 == *pbVar9;\n                    pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n                    pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n                  } while (bVar10);\n                  bVar13 = false;\n                  bVar10 = (!bVar11 && !bVar10) == bVar11;\n                  if (bVar10) {\n                    ppuVar5 = __ctype_b_loc();\n                    lVar6 = 0;\n                    puVar2 = *ppuVar5;\n                    if (param_1 == 0) {\n                      do {\n                        if ((*(byte *)(puVar2 + lVar6) & 1) != 0) {\n                          puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                          *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                        }\n                        lVar6 = lVar6 + 1;\n                      } while (lVar6 != 0x100);\n                    }\n                    else {\n                      lVar6 = 0;\n                      do {\n                        if ((*(byte *)(puVar2 + lVar6) & 1) != 0) {\n                          puVar1 = (ulong *)(param_2 +\n                                            (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                          *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                        }\n                        lVar6 = lVar6 + 1;\n                      } while (lVar6 != 0x100);\n                    }\n                  }\n                  else {\n                    lVar6 = 6;\n                    pbVar8 = (byte *)param_6;\n                    pbVar9 = (byte *)\"graph\";\n                    do {\n                      if (lVar6 == 0) break;\n                      lVar6 = lVar6 + -1;\n                      bVar13 = *pbVar8 < *pbVar9;\n                      bVar10 = *pbVar8 == *pbVar9;\n                      pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n                      pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n                    } while (bVar10);\n                    if ((!bVar13 && !bVar10) == bVar13) {\n                      ppuVar5 = __ctype_b_loc();\n                      lVar6 = 0;\n                      puVar2 = *ppuVar5;\n                      if (param_1 == 0) {\n                        do {\n                          if ((short)puVar2[lVar6] < 0) {\n                            puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                            *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                          }\n                          lVar6 = lVar6 + 1;\n                        } while (lVar6 != 0x100);\n                      }\n                      else {\n                        lVar6 = 0;\n                        do {\n                          if ((short)puVar2[lVar6] < 0) {\n                            puVar1 = (ulong *)(param_2 +\n                                              (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                            *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                          }\n                          lVar6 = lVar6 + 1;\n                        } while (lVar6 != 0x100);\n                      }\n                    }\n                    else {\n                      iVar3 = strcmp(param_6,\"punct\");\n                      if (iVar3 == 0) {\n                        ppuVar5 = __ctype_b_loc();\n                        lVar6 = 0;\n                        puVar2 = *ppuVar5;\n                        if (param_1 == 0) {\n                          do {\n                            if ((*(byte *)(puVar2 + lVar6) & 4) != 0) {\n                              puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                              *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                            }\n                            lVar6 = lVar6 + 1;\n                          } while (lVar6 != 0x100);\n                        }\n                        else {\n                          lVar6 = 0;\n                          do {\n                            if ((*(byte *)(puVar2 + lVar6) & 4) != 0) {\n                              puVar1 = (ulong *)(param_2 +\n                                                (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                              *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                            }\n                            lVar6 = lVar6 + 1;\n                          } while (lVar6 != 0x100);\n                        }\n                      }\n                      else {\n                        iVar3 = strcmp(param_6,\"xdigit\");\n                        if (iVar3 != 0) {\n                          return 4;\n                        }\n                        ppuVar5 = __ctype_b_loc();\n                        lVar6 = 0;\n                        puVar2 = *ppuVar5;\n                        if (param_1 == 0) {\n                          do {\n                            if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x10) != 0) {\n                              puVar1 = (ulong *)(param_2 + (lVar6 >> 6) * 8);\n                              *puVar1 = *puVar1 | 1L << ((byte)lVar6 & 0x3f);\n                            }\n                            lVar6 = lVar6 + 1;\n                          } while (lVar6 != 0x100);\n                        }\n                        else {\n                          lVar6 = 0;\n                          do {\n                            if ((*(byte *)((long)puVar2 + lVar6 * 2 + 1) & 0x10) != 0) {\n                              puVar1 = (ulong *)(param_2 +\n                                                (ulong)(*(byte *)(param_1 + lVar6) >> 3 & 0x18));\n                              *puVar1 = *puVar1 | 1L << (*(byte *)(param_1 + lVar6) & 0x3f);\n                            }\n                            lVar6 = lVar6 + 1;\n                          } while (lVar6 != 0x100);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040d9b0"
        },
        {
            "funcStartAddr": "0x40e180",
            "funcEndAddr": "0x40e3a2",
            "decompiledFuncCode": "\nlong FUN_0040e180(long param_1,undefined8 param_2,undefined8 param_3,char *param_4,byte param_5,\n                 int *param_6)\n\n{\n  char cVar1;\n  int iVar2;\n  ulong *__ptr;\n  ulong *puVar3;\n  ulong *puVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  byte bVar8;\n  long lVar9;\n  undefined8 local_60;\n  ulong *local_58;\n  undefined local_50;\n  undefined local_48 [8];\n  undefined local_40;\n  \n  local_60 = 0;\n  __ptr = (ulong *)calloc(0x20,1);\n  if (__ptr != (ulong *)0x0) {\n    puVar3 = (ulong *)calloc(0x50,1);\n    if (puVar3 == (ulong *)0x0) {\n      free(__ptr);\n      *param_6 = 0xc;\n      return 0;\n    }\n    *(byte *)(puVar3 + 4) = *(byte *)(puVar3 + 4) & 0xfe | param_5 & 1;\n    iVar2 = FUN_0040d9b0(param_2,__ptr,puVar3 + 3,puVar3 + 9,&local_60,param_3,0);\n    if (iVar2 != 0) {\n      free(__ptr);\n      FUN_00409780(puVar3);\n      *param_6 = iVar2;\n      return 0;\n    }\n    cVar1 = *param_4;\n    while (cVar1 != '\\0') {\n      lVar9 = (long)cVar1;\n      lVar7 = lVar9 + 0x3f;\n      if (-1 < lVar9) {\n        lVar7 = lVar9;\n      }\n      param_4 = param_4 + 1;\n      bVar8 = cVar1 % '@';\n      cVar1 = *param_4;\n      __ptr[lVar7 >> 6] = __ptr[lVar7 >> 6] | 1L << (bVar8 & 0x3f);\n    }\n    if (param_5 != 0) {\n      puVar4 = __ptr;\n      do {\n        *puVar4 = ~*puVar4;\n        puVar4 = puVar4 + 1;\n      } while (__ptr + 4 != puVar4);\n    }\n    if (1 < *(int *)(param_1 + 0xb4)) {\n      lVar7 = *(long *)(param_1 + 0x78);\n      lVar9 = 0;\n      do {\n        *(ulong *)((long)__ptr + lVar9) =\n             *(ulong *)((long)__ptr + lVar9) & *(ulong *)(lVar7 + lVar9);\n        lVar9 = lVar9 + 8;\n      } while (lVar9 != 0x20);\n    }\n    lVar7 = param_1 + 0x70;\n    lVar9 = param_1 + 0x80;\n    local_50 = 3;\n    local_58 = __ptr;\n    lVar5 = FUN_0040ad90(lVar7,lVar9,0,0,&local_58);\n    if (lVar5 != 0) {\n      if (*(int *)(param_1 + 0xb4) < 2) {\n        FUN_00409780(puVar3);\n        return lVar5;\n      }\n      *(byte *)(param_1 + 0xb0) = *(byte *)(param_1 + 0xb0) | 2;\n      local_50 = 6;\n      local_58 = puVar3;\n      lVar6 = FUN_0040ad90(lVar7,lVar9,0,0,&local_58);\n      if (lVar6 != 0) {\n        local_40 = 10;\n        lVar7 = FUN_0040ad90(lVar7,lVar9,lVar5,lVar6,local_48);\n        return lVar7;\n      }\n    }\n    free(__ptr);\n    FUN_00409780(puVar3);\n  }\n  *param_6 = 0xc;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040e180"
        },
        {
            "funcStartAddr": "0x40e3c0",
            "funcEndAddr": "0x40e887",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040e3c0(long **param_1,long *param_2,long *param_3,undefined4 *param_4)\n\n{\n  long **pplVar1;\n  byte bVar2;\n  long *plVar3;\n  long *plVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  wchar_t wVar9;\n  long lVar10;\n  __int32_t **pp_Var11;\n  undefined *puVar12;\n  long lVar13;\n  size_t sVar14;\n  ulong uVar15;\n  long lVar16;\n  undefined *puVar17;\n  undefined *puVar18;\n  long lVar19;\n  uint uVar20;\n  uint uVar21;\n  ulong uVar22;\n  long local_170;\n  wint_t local_144;\n  mbstate_t local_140;\n  undefined8 local_138;\n  \n  uVar20 = 0;\n  plVar3 = *param_1;\n  if (*(int *)((long)plVar3 + 0xb4) == 1) {\n    uVar20 = (uint)((ulong)param_1[3] >> 0x16) & 1;\n  }\n  lVar16 = 0;\n  if (0 < *param_2) {\n    do {\n      while( true ) {\n        uVar8 = _UNK_00419ccc;\n        uVar7 = _UNK_00419cc8;\n        uVar6 = _UNK_00419cc4;\n        uVar5 = _DAT_00419cc0;\n        lVar19 = *(long *)(*param_3 + lVar16 * 8);\n        lVar13 = *plVar3;\n        lVar10 = lVar19 * 0x10;\n        pplVar1 = (long **)(lVar13 + lVar10);\n        bVar2 = *(byte *)(pplVar1 + 1);\n        if (bVar2 == 1) break;\n        if (bVar2 == 3) {\n          local_170 = 0;\n          while( true ) {\n            uVar22 = 0;\n            uVar15 = *(ulong *)(*(long *)(lVar13 + lVar10) + local_170);\n            lVar19 = local_170 * 8;\n            do {\n              if (((uVar15 >> (uVar22 & 0x3f) & 1) != 0) &&\n                 (*(undefined *)((long)param_4 + lVar19) = 1, uVar20 != 0)) {\n                lVar13 = lVar19;\n                if ((int)lVar19 + 0x80U < 0x180) {\n                  pp_Var11 = __ctype_tolower_loc();\n                  lVar13 = (long)(*pp_Var11)[lVar19];\n                }\n                *(undefined *)((long)param_4 + lVar13) = 1;\n              }\n              uVar21 = (int)uVar22 + 1;\n              uVar22 = (ulong)uVar21;\n              lVar19 = lVar19 + 1;\n            } while (uVar21 != 0x40);\n            local_170 = local_170 + 8;\n            if (local_170 == 0x20) break;\n            lVar13 = *plVar3;\n          }\n        }\n        else if (bVar2 == 6) {\n          plVar4 = *pplVar1;\n          if ((*(int *)((long)plVar3 + 0xb4) < 2) ||\n             (((plVar4[9] == 0 && ((*(byte *)(plVar4 + 4) & 1) == 0)) && (plVar4[8] == 0)))) {\n            lVar19 = 0;\n            if (0 < plVar4[5]) {\n              do {\n                local_140 = (mbstate_t)0x0;\n                sVar14 = wcrtomb((char *)&local_138,*(wchar_t *)(*plVar4 + lVar19 * 4),&local_140);\n                if (sVar14 != 0xffffffffffffffff) {\n                  uVar15 = local_138 & 0xff;\n                  *(undefined *)((long)param_4 + uVar15) = 1;\n                  if (uVar20 != 0) {\n                    pp_Var11 = __ctype_tolower_loc();\n                    *(undefined *)((long)param_4 + (long)(*pp_Var11)[uVar15]) = 1;\n                  }\n                }\n                if (((*(byte *)((long)param_1 + 0x1a) & 0x40) != 0) &&\n                   (1 < *(int *)((long)plVar3 + 0xb4))) {\n                  wVar9 = towlower(*(wint_t *)(*plVar4 + lVar19 * 4));\n                  sVar14 = wcrtomb((char *)&local_138,wVar9,&local_140);\n                  if (sVar14 != 0xffffffffffffffff) {\n                    *(undefined *)((long)param_4 + (local_138 & 0xff)) = 1;\n                  }\n                }\n                lVar19 = lVar19 + 1;\n              } while (lVar19 < plVar4[5]);\n            }\n          }\n          else {\n            local_140 = (mbstate_t)((ulong)local_140 & 0xffffffffffffff00);\n            do {\n              local_138 = 0;\n              lVar19 = FUN_004083e0(0,&local_140,1,&local_138);\n              if (lVar19 == -2) {\n                *(undefined *)((long)param_4 + ((ulong)local_140 & 0xff)) = 1;\n              }\n              local_140 = (mbstate_t)\n                          ((ulong)local_140 & 0xffffffffffffff00 |\n                          (ulong)(byte)((char)local_140.__count + 1U));\n            } while ((byte)((char)local_140.__count + 1U) != 0);\n          }\n        }\n        else {\n          if ((bVar2 & 0xfd) == 5) {\n            *param_4 = _DAT_00419cc0;\n            param_4[1] = uVar6;\n            param_4[2] = uVar7;\n            param_4[3] = uVar8;\n            param_4[4] = uVar5;\n            param_4[5] = uVar6;\n            param_4[6] = uVar7;\n            param_4[7] = uVar8;\n            param_4[8] = uVar5;\n            param_4[9] = uVar6;\n            param_4[10] = uVar7;\n            param_4[0xb] = uVar8;\n            param_4[0xc] = uVar5;\n            param_4[0xd] = uVar6;\n            param_4[0xe] = uVar7;\n            param_4[0xf] = uVar8;\n            param_4[0x10] = uVar5;\n            param_4[0x11] = uVar6;\n            param_4[0x12] = uVar7;\n            param_4[0x13] = uVar8;\n            param_4[0x14] = uVar5;\n            param_4[0x15] = uVar6;\n            param_4[0x16] = uVar7;\n            param_4[0x17] = uVar8;\n            param_4[0x18] = uVar5;\n            param_4[0x19] = uVar6;\n            param_4[0x1a] = uVar7;\n            param_4[0x1b] = uVar8;\n            param_4[0x1c] = uVar5;\n            param_4[0x1d] = uVar6;\n            param_4[0x1e] = uVar7;\n            param_4[0x1f] = uVar8;\n            param_4[0x20] = uVar5;\n            param_4[0x21] = uVar6;\n            param_4[0x22] = uVar7;\n            param_4[0x23] = uVar8;\n            param_4[0x24] = uVar5;\n            param_4[0x25] = uVar6;\n            param_4[0x26] = uVar7;\n            param_4[0x27] = uVar8;\n            param_4[0x28] = uVar5;\n            param_4[0x29] = uVar6;\n            param_4[0x2a] = uVar7;\n            param_4[0x2b] = uVar8;\n            param_4[0x2c] = uVar5;\n            param_4[0x2d] = uVar6;\n            param_4[0x2e] = uVar7;\n            param_4[0x2f] = uVar8;\n            param_4[0x30] = uVar5;\n            param_4[0x31] = uVar6;\n            param_4[0x32] = uVar7;\n            param_4[0x33] = uVar8;\n            param_4[0x34] = uVar5;\n            param_4[0x35] = uVar6;\n            param_4[0x36] = uVar7;\n            param_4[0x37] = uVar8;\n            param_4[0x38] = uVar5;\n            param_4[0x39] = uVar6;\n            param_4[0x3a] = uVar7;\n            param_4[0x3b] = uVar8;\n            param_4[0x3c] = uVar5;\n            param_4[0x3d] = uVar6;\n            param_4[0x3e] = uVar7;\n            param_4[0x3f] = uVar8;\n            if (bVar2 != 2) {\n              return;\n            }\nLAB_0040e87f:\n            *(byte *)(param_1 + 7) = *(byte *)(param_1 + 7) | 1;\n            return;\n          }\n          if (bVar2 == 2) {\n            *param_4 = _DAT_00419cc0;\n            param_4[1] = uVar6;\n            param_4[2] = uVar7;\n            param_4[3] = uVar8;\n            param_4[4] = uVar5;\n            param_4[5] = uVar6;\n            param_4[6] = uVar7;\n            param_4[7] = uVar8;\n            param_4[8] = uVar5;\n            param_4[9] = uVar6;\n            param_4[10] = uVar7;\n            param_4[0xb] = uVar8;\n            param_4[0xc] = uVar5;\n            param_4[0xd] = uVar6;\n            param_4[0xe] = uVar7;\n            param_4[0xf] = uVar8;\n            param_4[0x10] = uVar5;\n            param_4[0x11] = uVar6;\n            param_4[0x12] = uVar7;\n            param_4[0x13] = uVar8;\n            param_4[0x14] = uVar5;\n            param_4[0x15] = uVar6;\n            param_4[0x16] = uVar7;\n            param_4[0x17] = uVar8;\n            param_4[0x18] = uVar5;\n            param_4[0x19] = uVar6;\n            param_4[0x1a] = uVar7;\n            param_4[0x1b] = uVar8;\n            param_4[0x1c] = uVar5;\n            param_4[0x1d] = uVar6;\n            param_4[0x1e] = uVar7;\n            param_4[0x1f] = uVar8;\n            param_4[0x20] = uVar5;\n            param_4[0x21] = uVar6;\n            param_4[0x22] = uVar7;\n            param_4[0x23] = uVar8;\n            param_4[0x24] = uVar5;\n            param_4[0x25] = uVar6;\n            param_4[0x26] = uVar7;\n            param_4[0x27] = uVar8;\n            param_4[0x28] = uVar5;\n            param_4[0x29] = uVar6;\n            param_4[0x2a] = uVar7;\n            param_4[0x2b] = uVar8;\n            param_4[0x2c] = uVar5;\n            param_4[0x2d] = uVar6;\n            param_4[0x2e] = uVar7;\n            param_4[0x2f] = uVar8;\n            param_4[0x30] = uVar5;\n            param_4[0x31] = uVar6;\n            param_4[0x32] = uVar7;\n            param_4[0x33] = uVar8;\n            param_4[0x34] = uVar5;\n            param_4[0x35] = uVar6;\n            param_4[0x36] = uVar7;\n            param_4[0x37] = uVar8;\n            param_4[0x38] = uVar5;\n            param_4[0x39] = uVar6;\n            param_4[0x3a] = uVar7;\n            param_4[0x3b] = uVar8;\n            param_4[0x3c] = uVar5;\n            param_4[0x3d] = uVar6;\n            param_4[0x3e] = uVar7;\n            param_4[0x3f] = uVar8;\n            goto LAB_0040e87f;\n          }\n        }\nLAB_0040e43f:\n        lVar16 = lVar16 + 1;\n        if (*param_2 <= lVar16) {\n          return;\n        }\n      }\n      bVar2 = *(byte *)pplVar1;\n      *(undefined *)((long)param_4 + (ulong)bVar2) = 1;\n      if (uVar20 != 0) {\n        pp_Var11 = __ctype_tolower_loc();\n        *(undefined *)((long)param_4 + (long)(*pp_Var11)[bVar2]) = 1;\n      }\n      if (((*(byte *)((long)param_1 + 0x1a) & 0x40) == 0) || (*(int *)((long)plVar3 + 0xb4) < 2))\n      goto LAB_0040e43f;\n      local_138 = local_138 & 0xffffffffffffff00 | (ulong)*(byte *)(*plVar3 + lVar10);\n      uVar15 = lVar19 + 1;\n      if (((ulong)plVar3[2] < uVar15 || plVar3[2] == uVar15) ||\n         (puVar12 = (undefined *)(*plVar3 + 0x10 + lVar10),\n         (*(uint *)(puVar12 + 8) & 0x2000ff) != 0x200001)) {\n        lVar19 = 1;\n      }\n      else {\n        puVar17 = (undefined *)((long)&local_138 + 1);\n        do {\n          puVar18 = puVar17 + 1;\n          uVar15 = uVar15 + 1;\n          *puVar17 = *puVar12;\n          if ((ulong)plVar3[2] < uVar15 || plVar3[2] == uVar15) break;\n          puVar12 = (undefined *)(uVar15 * 0x10 + *plVar3);\n          puVar17 = puVar18;\n        } while ((*(uint *)(puVar12 + 8) & 0x2000ff) == 0x200001);\n        lVar19 = (long)puVar18 - (long)&local_138;\n      }\n      local_140 = (mbstate_t)0x0;\n      lVar13 = FUN_004083e0(&local_144,&local_138,lVar19,&local_140);\n      if (lVar13 != lVar19) goto LAB_0040e43f;\n      wVar9 = towlower(local_144);\n      sVar14 = wcrtomb((char *)&local_138,wVar9,&local_140);\n      if (sVar14 == 0xffffffffffffffff) goto LAB_0040e43f;\n      lVar16 = lVar16 + 1;\n      *(undefined *)((long)param_4 + (local_138 & 0xff)) = 1;\n    } while (lVar16 < *param_2);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040e3c0"
        },
        {
            "funcStartAddr": "0x40e8a0",
            "funcEndAddr": "0x40eb01",
            "decompiledFuncCode": "\nint FUN_0040e8a0(long param_1,ulong *param_2,long param_3,long param_4,long param_5)\n\n{\n  byte bVar1;\n  wint_t __wc;\n  wint_t **ppwVar2;\n  byte bVar3;\n  int iVar4;\n  int iVar5;\n  wint_t *pwVar6;\n  wint_t *pwVar7;\n  char *pcVar8;\n  long lVar9;\n  wint_t *pwVar10;\n  long lVar11;\n  undefined8 *puVar12;\n  char cVar13;\n  \n  puVar12 = (undefined8 *)(param_1 + param_3 * 0x10);\n  cVar13 = *(char *)(puVar12 + 1);\n  if (cVar13 == '\\a') {\n    lVar9 = *(long *)(param_4 + 8);\n    bVar3 = *(byte *)(lVar9 + param_5);\n    if (0xc1 < bVar3) {\n      if (param_5 + 1 < *(long *)(param_4 + 0x58)) {\n        bVar1 = *(byte *)(lVar9 + 1 + param_5);\n        if (bVar3 < 0xe0) {\n          if ((byte)(bVar1 + 0x80) < 0x40) {\n            return 2;\n          }\n        }\n        else {\n          if (bVar3 < 0xf0) {\n            if ((bVar3 == 0xe0) && (bVar1 < 0xa0)) {\n              return 0;\n            }\n            lVar11 = 3;\n            iVar4 = 3;\n          }\n          else if (bVar3 < 0xf8) {\n            if ((bVar3 == 0xf0) && (bVar1 < 0x90)) {\n              return 0;\n            }\n            lVar11 = 4;\n            iVar4 = 4;\n          }\n          else if (bVar3 < 0xfc) {\n            if ((bVar3 == 0xf8) && (bVar1 < 0x88)) {\n              return 0;\n            }\n            lVar11 = 5;\n            iVar4 = 5;\n          }\n          else {\n            if (0xfd < bVar3) {\n              return 0;\n            }\n            if ((bVar3 == 0xfc) && (bVar1 < 0x84)) {\n              return 0;\n            }\n            lVar11 = 6;\n            iVar4 = 6;\n          }\n          if (param_5 + lVar11 <= *(long *)(param_4 + 0x58)) {\n            pcVar8 = (char *)(lVar9 + param_5 + 1);\n            while ((byte)(*pcVar8 + 0x80U) < 0x40) {\n              pcVar8 = pcVar8 + 1;\n              if ((char *)(lVar9 + param_5 + lVar11) == pcVar8) {\n                return iVar4;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  else if (*(int *)(param_4 + 0x90) != 1) {\n    iVar4 = FUN_0040a0d0(param_4,param_5);\n    if (cVar13 == '\\x05') {\n      if (iVar4 < 2) {\n        return 0;\n      }\n      if (((*param_2 & 0x40) == 0) && (*(char *)(*(long *)(param_4 + 8) + param_5) == '\\n')) {\n        return 0;\n      }\n      if ((*param_2 & 0x80) == 0) {\n        return iVar4;\n      }\n      bVar3 = *(byte *)(*(long *)(param_4 + 8) + param_5);\n    }\n    else {\n      if (cVar13 != '\\x06') {\n        return 0;\n      }\n      if (iVar4 < 2) {\n        return 0;\n      }\n      ppwVar2 = (wint_t **)*puVar12;\n      pwVar10 = ppwVar2[8];\n      pwVar7 = ppwVar2[5];\n      if ((pwVar10 != (wint_t *)0x0) || (((ulong)pwVar7 | (ulong)ppwVar2[9]) != 0)) {\n        __wc = *(wint_t *)(*(long *)(param_4 + 0x10) + param_5 * 4);\n        if (0 < (long)pwVar7) {\n          if (__wc != **ppwVar2) {\n            pwVar6 = (wint_t *)0x0;\n            do {\n              pwVar6 = (wint_t *)((long)pwVar6 + 1);\n              if (pwVar7 == pwVar6) goto LAB_0040e97f;\n            } while (__wc != (*ppwVar2)[(long)pwVar6]);\n          }\nLAB_0040e9b2:\n          if ((*(byte *)(ppwVar2 + 4) & 1) != 0) {\n            return 0;\n          }\n          return iVar4;\n        }\nLAB_0040e97f:\n        if (0 < (long)ppwVar2[9]) {\n          lVar9 = 0;\n          do {\n            iVar5 = iswctype(__wc,*(wctype_t *)(ppwVar2[3] + lVar9 * 2));\n            if (iVar5 != 0) goto LAB_0040e9b2;\n            lVar9 = lVar9 + 1;\n          } while (lVar9 < (long)ppwVar2[9]);\n          pwVar10 = ppwVar2[8];\n        }\n        if (0 < (long)pwVar10) {\n          pwVar7 = (wint_t *)0x0;\n          do {\n            if (((int)ppwVar2[1][(long)pwVar7] <= (int)__wc) &&\n               ((int)__wc <= (int)ppwVar2[2][(long)pwVar7])) goto LAB_0040e9b2;\n            pwVar7 = (wint_t *)((long)pwVar7 + 1);\n          } while (pwVar7 != pwVar10);\n        }\n      }\n      bVar3 = *(byte *)(ppwVar2 + 4) & 1;\n    }\n    if (bVar3 != 0) {\n      return iVar4;\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040e8a0"
        },
        {
            "funcStartAddr": "0x40eb30",
            "funcEndAddr": "0x40f207",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_0040eb30(long param_1,long *param_2,long param_3,long param_4,undefined8 param_5,\n                  long param_6,undefined4 param_7)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  long *plVar5;\n  long lVar6;\n  long lVar7;\n  char cVar8;\n  undefined4 uVar9;\n  int iVar10;\n  long lVar11;\n  undefined8 uVar12;\n  long lVar13;\n  ulong uVar14;\n  void *pvVar15;\n  long lVar16;\n  long local_f0;\n  long local_e8;\n  uint local_80;\n  uint local_7c;\n  undefined local_78 [16];\n  long *local_68;\n  undefined local_58 [16];\n  void *local_48;\n  \n  plVar1 = *(long **)(param_1 + 0x98);\n  lVar13 = param_2[1];\n  uVar2 = *(undefined8 *)(param_3 * 0x10 + *plVar1);\n  local_80 = 0;\n  lVar11 = *(int *)(param_1 + 0xe0) + param_6;\n  if (lVar13 <= lVar11) {\n    lVar11 = lVar11 + 1;\n    if (0x7fffffffffffffff - lVar13 < lVar11) {\n      return 0xc;\n    }\n    uVar14 = lVar13 + lVar11;\n    if (0x1fffffffffffffff < uVar14) {\n      return 0xc;\n    }\n    pvVar15 = realloc((void *)param_2[2],uVar14 * 8);\n    if (pvVar15 == (void *)0x0) {\n      return 0xc;\n    }\n    param_2[2] = (long)pvVar15;\n    param_2[1] = uVar14;\n    memset((void *)((long)pvVar15 + lVar13 * 8),0,lVar11 * 8);\n  }\n  uVar3 = *(undefined8 *)(param_1 + 0xb8);\n  lVar11 = *param_2;\n  lVar13 = param_2[2];\n  uVar4 = *(undefined8 *)(param_1 + 0x48);\n  *(long *)(param_1 + 0xb8) = lVar13;\n  if (lVar11 == 0) {\n    *(long *)(param_1 + 0x48) = param_4;\n    uVar9 = FUN_0040be50(param_1,param_4 + -1,*(undefined4 *)(param_1 + 0xa0));\nLAB_0040f104:\n    local_78 = CONCAT88(1,1);\n    local_68 = (long *)malloc(8);\n    if (local_68 == (long *)0x0) {\n      return 0xc;\n    }\n    *local_68 = param_3;\n    local_80 = 0;\n    local_80 = FUN_0040aa90(plVar1,local_78,uVar2,param_7);\n    if (local_80 != 0) goto LAB_0040efe5;\n  }\n  else {\n    *(long *)(param_1 + 0x48) = lVar11;\n    uVar9 = FUN_0040be50(param_1,lVar11 + -1,*(undefined4 *)(param_1 + 0xa0));\n    if (lVar11 == param_4) goto LAB_0040f104;\n    lVar13 = *(long *)(lVar13 + lVar11 * 8);\n    param_4 = lVar11;\n    if ((lVar13 == 0) || ((*(byte *)(lVar13 + 0x68) & 0x40) == 0)) {\n      local_68 = (long *)0x0;\n      local_78 = (undefined  [16])0x0;\n      goto LAB_0040ec1b;\n    }\n    uVar14 = FUN_0040b1c0(local_78,lVar13 + 8);\n    local_80 = (uint)uVar14;\n    if (local_80 != 0) {\n      return uVar14;\n    }\n    if ((*(byte *)(lVar13 + 0x68) & 0x40) == 0) goto LAB_0040ec1b;\n  }\n  if (((local_78._8_8_ == 0) ||\n      (local_80 = FUN_0040b970(param_1,local_78,param_4,uVar2,param_7), local_80 == 0)) &&\n     ((lVar13 = FUN_0040b3d0(&local_80,plVar1,local_78,uVar9), lVar13 != 0 || (local_80 == 0)))) {\n    *(long *)(*(long *)(param_1 + 0xb8) + param_4 * 8) = lVar13;\nLAB_0040ec1b:\n    if ((param_4 < param_6) && (-1 < *(int *)(param_1 + 0xe0))) {\n      local_e8 = 0;\n      lVar11 = *(long *)(param_1 + 0xb8);\n      lVar7 = param_4;\n      do {\n        param_4 = lVar7 + 1;\n        lVar11 = *(long *)(lVar11 + param_4 * 8);\n        local_78 = local_78 & (undefined  [16])0xffffffffffffffff;\n        if (lVar11 == 0) {\n          if (lVar13 != 0) goto LAB_0040eca2;\n        }\n        else {\n          local_80 = FUN_0040a660(local_78,lVar11 + 8);\n          if (local_80 != 0) goto LAB_0040efe5;\n          if (lVar13 != 0) {\nLAB_0040eca2:\n            plVar5 = *(long **)(param_1 + 0x98);\n            local_7c = 0;\n            local_58 = (undefined  [16])0x0;\n            local_48 = (void *)0x0;\n            if (0 < *(long *)(lVar13 + 0x28)) {\n              lVar11 = 0;\n              do {\n                local_f0 = *(long *)(*(long *)(lVar13 + 0x30) + lVar11 * 8);\n                lVar16 = *plVar5 + local_f0 * 0x10;\n                if ((*(byte *)(lVar16 + 10) & 0x10) != 0) {\n                  iVar10 = FUN_0040e8a0(*plVar5,plVar5 + 0x1b,local_f0,param_1,lVar7);\n                  if (iVar10 < 2) {\n                    if (iVar10 == 0) {\n                      lVar16 = local_f0 * 0x10 + *plVar5;\n                      goto LAB_0040ecf0;\n                    }\n                    goto LAB_0040ed0d;\n                  }\n                  lVar16 = iVar10 + lVar7;\n                  uVar12 = *(undefined8 *)(plVar5[3] + local_f0 * 8);\n                  lVar6 = *(long *)(*(long *)(param_1 + 0xb8) + lVar16 * 8);\n                  local_58 = local_58 & (undefined  [16])0xffffffffffffffff;\n                  if ((lVar6 == 0) || (local_7c = FUN_0040a660(local_58,lVar6 + 8), local_7c == 0))\n                  {\n                    cVar8 = FUN_00408b10(local_58,uVar12);\n                    if (cVar8 == '\\0') goto LAB_0040efd0;\n                    lVar6 = *(long *)(param_1 + 0xb8);\n                    uVar12 = FUN_0040b6d0(&local_7c,plVar5,local_58);\n                    *(undefined8 *)(lVar16 * 8 + lVar6) = uVar12;\n                    if ((*(long *)(*(long *)(param_1 + 0xb8) + lVar16 * 8) != 0) || (local_7c == 0))\n                    goto LAB_0040ed0d;\n                  }\n                  free(local_48);\n                  local_80 = local_7c;\n                  if (local_7c == 0) goto LAB_0040ee68;\n                  goto LAB_0040efe5;\n                }\nLAB_0040ecf0:\n                cVar8 = FUN_0040bf40(param_1,lVar16,lVar7);\n                if (cVar8 != '\\0') {\nLAB_0040ed0d:\n                  local_f0 = local_f0 * 8;\n                  cVar8 = FUN_00408b10(local_78,*(undefined8 *)(plVar5[3] + local_f0));\n                  if (cVar8 == '\\0') {\nLAB_0040efd0:\n                    free(local_48);\n                    local_80 = 0xc;\n                    goto LAB_0040efe5;\n                  }\n                }\n                lVar11 = lVar11 + 1;\n              } while (lVar11 < *(long *)(lVar13 + 0x28));\n            }\n            free(local_48);\n            local_80 = 0;\n          }\nLAB_0040ee68:\n          if ((local_78._8_8_ != 0) &&\n             ((local_80 = FUN_0040aa90(plVar1,local_78,uVar2,param_7), local_80 != 0 ||\n              (local_80 = FUN_0040b970(param_1,local_78,param_4,uVar2,param_7), local_80 != 0))))\n          goto LAB_0040efe5;\n        }\n        uVar9 = FUN_0040be50(param_1,lVar7,*(undefined4 *)(param_1 + 0xa0));\n        lVar13 = FUN_0040b3d0(&local_80,plVar1,local_78,uVar9);\n        if (lVar13 == 0) {\n          if (local_80 != 0) goto LAB_0040efe5;\n          lVar11 = *(long *)(param_1 + 0xb8);\n          local_e8 = local_e8 + 1;\n          *(undefined8 *)(lVar11 + param_4 * 8) = 0;\n        }\n        else {\n          lVar11 = *(long *)(param_1 + 0xb8);\n          local_e8 = 0;\n          *(long *)(lVar11 + param_4 * 8) = lVar13;\n        }\n      } while ((param_4 < param_6) && (lVar7 = param_4, local_e8 <= *(int *)(param_1 + 0xe0)));\n    }\n    free(local_68);\n    lVar11 = *(long *)(*(long *)(param_1 + 0xb8) + param_6 * 8);\n    if (lVar11 == 0) {\n      *param_2 = param_4;\n      *(undefined8 *)(param_1 + 0xb8) = uVar3;\n      *(undefined8 *)(param_1 + 0x48) = uVar4;\n      return 1;\n    }\n    *param_2 = param_4;\n    *(undefined8 *)(param_1 + 0xb8) = uVar3;\n    *(undefined8 *)(param_1 + 0x48) = uVar4;\n    lVar11 = FUN_0040a120(*(undefined8 *)(lVar11 + 0x10),lVar11 + 0x18,param_5);\n    return (ulong)(lVar11 == 0);\n  }\nLAB_0040efe5:\n  free(local_68);\n  return (ulong)local_80;\n}\n\n",
            "funcName": "FUN_0040eb30"
        },
        {
            "funcStartAddr": "0x40f250",
            "funcEndAddr": "0x40fabc",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_0040f250(long **param_1,size_t param_2,long param_3,size_t *param_4,char param_5)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  size_t sVar3;\n  size_t sVar4;\n  char cVar5;\n  int iVar6;\n  size_t sVar7;\n  long lVar8;\n  long lVar9;\n  size_t sVar10;\n  void *pvVar11;\n  size_t sVar12;\n  undefined *puVar13;\n  long *plVar14;\n  size_t sVar15;\n  long lVar16;\n  long lVar17;\n  long lVar18;\n  size_t *psVar19;\n  undefined8 auStack_10a0 [505];\n  undefined auStack_d8 [8];\n  size_t local_d0;\n  char local_c1;\n  void **local_c0;\n  void *local_b8;\n  size_t local_b0;\n  size_t local_a8;\n  long local_a0;\n  long *local_98;\n  undefined8 local_90;\n  size_t local_80;\n  undefined local_78 [16];\n  void *local_68 [2];\n  long local_58;\n  undefined8 local_50;\n  void *local_48;\n  \n  puVar13 = auStack_d8;\n  local_98 = *param_1;\n  local_58 = 0;\n  local_50 = 2;\n  local_48 = (void *)0x0;\n  local_a0 = param_3;\n  if (param_5 == '\\0') {\n    local_90 = (long *)0x0;\n  }\n  else {\n    local_90 = &local_58;\n    local_48 = malloc(0x60);\n    if (local_48 == (void *)0x0) {\n      return 0xc;\n    }\n  }\n  local_68[0] = (void *)0x0;\n  local_78 = (undefined  [16])0x0;\n  sVar10 = local_98[0x12];\n  local_b0 = local_a0 * 0x10;\n  if (local_b0 < 0xfc0) {\n    local_c1 = '\\0';\n    puVar13 = auStack_d8 + -(local_b0 + 0x10);\n    local_b8 = (void *)((long)&local_d0 + -(local_b0 + 0x10));\n  }\n  else {\n    local_b8 = malloc(local_b0);\n    local_c1 = '\\x01';\n    if (local_b8 == (void *)0x0) {\n      if (local_90 != (long *)0x0) {\n        FUN_0040d880();\n      }\n      return 0xc;\n    }\n  }\n  *(undefined8 *)(puVar13 + -8) = 0x40f32e;\n  memcpy(local_b8,param_4,local_b0);\n  local_80 = *param_4;\n  local_c0 = local_68;\nLAB_0040f429:\n  sVar7 = param_4[1];\n  if ((long)sVar7 < (long)local_80) {\nLAB_0040f590:\n    *(undefined8 *)(puVar13 + -8) = 0x40f599;\n    free(local_68[0]);\n    if (local_c1 != '\\0') {\n      *(undefined8 *)(puVar13 + -8) = 0x40fa79;\n      free(local_b8);\n    }\n    if (local_90 != (long *)0x0) {\n      *(undefined8 *)(puVar13 + -8) = 0x40f5b7;\n      FUN_0040d880();\n    }\n    return 0;\n  }\n  do {\n    sVar15 = sVar10 * 0x10;\n    plVar14 = (long *)(*local_98 + sVar15);\n    sVar12 = local_80;\n    if (*(char *)(plVar14 + 1) == '\\b') {\n      lVar8 = *plVar14;\n      if (lVar8 + 1 < local_a0) {\n        (param_4 + (lVar8 + 1) * 2)[1] = 0xffffffffffffffff;\n        sVar7 = param_4[1];\n        param_4[(lVar8 + 1) * 2] = local_80;\n      }\n    }\n    else if ((*(char *)(plVar14 + 1) == '\\t') && (lVar8 = *plVar14 + 1, lVar8 < local_a0)) {\n      psVar19 = param_4 + lVar8 * 2;\n      if ((long)*psVar19 < (long)local_80) {\n        psVar19[1] = local_80;\n        *(undefined8 *)(puVar13 + -8) = 0x40f988;\n        local_d0 = sVar15;\n        local_a8 = local_80;\n        memcpy(local_b8,param_4,local_b0);\n        sVar7 = param_4[1];\n        sVar12 = local_a8;\n        sVar15 = local_d0;\n      }\n      else if (((*(byte *)((long)plVar14 + 10) & 8) == 0) ||\n              (*(long *)((long)local_b8 + lVar8 * 0x10) == -1)) {\n        psVar19[1] = local_80;\n        sVar7 = param_4[1];\n      }\n      else {\n        *(undefined8 *)(puVar13 + -8) = 0x40f9bd;\n        local_d0 = local_80;\n        local_a8 = sVar15;\n        memcpy(param_4,local_b8,local_b0);\n        sVar7 = param_4[1];\n        sVar12 = local_d0;\n        sVar15 = local_a8;\n      }\n    }\n    if ((sVar12 == sVar7) && (*(size_t *)(param_2 + 0xb0) == sVar10)) {\n      if (local_90 == (long *)0x0) {\n        *(undefined8 *)(puVar13 + -8) = 0x40fae2;\n        free(local_68[0]);\n        if (local_c1 == '\\0') {\n          return 0;\n        }\n        *(undefined8 *)(puVar13 + -8) = 0x40fafb;\n        free(local_b8);\n        return 0;\n      }\n      if (local_a0 == 0) {\nLAB_0040f82a:\n        *(undefined8 *)(puVar13 + -8) = 0x40f833;\n        free(local_68[0]);\n        if (local_c1 != '\\0') {\n          *(undefined8 *)(puVar13 + -8) = 0x40fb0e;\n          free(local_b8);\n        }\n        *(undefined8 *)(puVar13 + -8) = 0x40f84c;\n        FUN_0040d880(local_90);\n        return 0;\n      }\n      lVar8 = 0;\n      psVar19 = param_4;\n      while (((long)*psVar19 < 0 || (psVar19[1] != 0xffffffffffffffff))) {\n        lVar8 = lVar8 + 1;\n        psVar19 = psVar19 + 2;\n        if (local_a0 == lVar8) goto LAB_0040f82a;\n      }\n      if (local_a0 == lVar8) goto LAB_0040f82a;\n      *(undefined8 *)(puVar13 + -8) = 0x40f883;\n      sVar10 = FUN_0040d8d0(local_90,local_90 + 2,&local_80,local_a0,param_4,local_78);\n      sVar15 = sVar10 << 4;\n    }\n    sVar7 = local_80;\n    plVar1 = *(long **)(param_2 + 0x98);\n    lVar8 = *plVar1;\n    plVar14 = (long *)(lVar8 + sVar15);\n    if ((*(byte *)(plVar14 + 1) & 8) == 0) {\n      if ((*(byte *)((long)plVar14 + 10) & 0x10) == 0) {\n        if (*(byte *)(plVar14 + 1) != 4) {\nLAB_0040f39d:\n          *(undefined8 *)(puVar13 + -8) = 0x40f3af;\n          local_a8 = sVar7;\n          cVar5 = FUN_0040bf40(param_2,plVar14,sVar7);\n          if (cVar5 == '\\0') goto LAB_0040f54a;\n          local_80 = local_a8 + 1;\n          sVar12 = *(size_t *)(plVar1[3] + sVar10 * 8);\n          goto LAB_0040f3ca;\n        }\n        sVar3 = (param_4 + (*plVar14 + 1) * 2)[1];\n        sVar4 = param_4[(*plVar14 + 1) * 2];\n        sVar12 = sVar3 - sVar4;\n        if (local_90 == (long *)0x0) {\n          if (sVar12 != 0) goto LAB_0040f6d4;\nLAB_0040f898:\n          *(undefined8 *)(puVar13 + -8) = 0x40f8ab;\n          local_a8 = sVar15;\n          cVar5 = FUN_00408b10(local_78,sVar10);\n          if (cVar5 == '\\0') goto LAB_0040f920;\n          local_d0 = local_80;\n          sVar12 = **(size_t **)(plVar1[5] + sVar10 * 0x18 + 0x10);\n          lVar8 = *(long *)(*(long *)(param_2 + 0xb8) + local_80 * 8);\n          uVar2 = *(undefined8 *)(lVar8 + 0x10);\n          *(undefined8 *)(puVar13 + -8) = 0x40f8e9;\n          lVar8 = FUN_0040a120(uVar2,lVar8 + 0x18,sVar12);\n          if (lVar8 != 0) goto joined_r0x0040f53a;\n          plVar14 = (long *)(*plVar1 + local_a8);\n          sVar7 = local_d0;\n          goto LAB_0040f39d;\n        }\n        if ((sVar4 != 0xffffffffffffffff) && (sVar3 != 0xffffffffffffffff)) {\n          if (sVar12 == 0) goto LAB_0040f898;\n          lVar8 = *(long *)(param_2 + 8);\n          *(undefined8 *)(puVar13 + -8) = 0x40f6c5;\n          local_a8 = sVar12;\n          iVar6 = memcmp((void *)(sVar4 + lVar8),(void *)(lVar8 + local_80),sVar12);\n          sVar12 = local_a8;\n          if (iVar6 == 0) goto LAB_0040f6d4;\n        }\n      }\n      else {\n        *(undefined8 *)(puVar13 + -8) = 0x40f63d;\n        local_a8 = sVar15;\n        iVar6 = FUN_0040e8a0(lVar8,plVar1 + 0x1b,sVar10,param_2,local_80);\n        sVar12 = (size_t)iVar6;\n        sVar7 = local_80;\n        if (sVar12 == 0) {\n          plVar14 = (long *)(*plVar1 + local_a8);\n          goto LAB_0040f39d;\n        }\nLAB_0040f6d4:\n        local_80 = sVar7 + sVar12;\n        sVar12 = *(size_t *)(plVar1[3] + sVar10 * 8);\nLAB_0040f3ca:\n        if (local_90 == (long *)0x0) {\nLAB_0040f414:\n          local_78 = ZEXT816(local_78._0_8_);\njoined_r0x0040f53a:\n          sVar10 = sVar12;\n          if ((long)sVar10 < 0) {\n            if (sVar10 == 0xfffffffffffffffe) {\nLAB_0040f920:\n              *(undefined8 *)(puVar13 + -8) = 0x40f929;\n              free(local_68[0]);\n              if (local_c1 != '\\0') {\nLAB_0040fa90:\n                *(undefined8 *)(puVar13 + -8) = 0x40fa9c;\n                free(local_b8);\n              }\n              if (local_90 == (long *)0x0) {\n                return 0xc;\n              }\nLAB_0040f7a6:\n              *(undefined8 *)(puVar13 + -8) = 0x40f7b2;\n              FUN_0040d880(local_90);\n              return 0xc;\n            }\n            goto LAB_0040f54a;\n          }\n          goto LAB_0040f429;\n        }\n        if (((long)local_80 <= *(long *)(param_2 + 0xa8)) &&\n           (lVar8 = *(long *)(*(long *)(param_2 + 0xb8) + local_80 * 8), lVar8 != 0)) {\n          uVar2 = *(undefined8 *)(lVar8 + 0x10);\n          *(undefined8 *)(puVar13 + -8) = 0x40f40b;\n          lVar8 = FUN_0040a120(uVar2,lVar8 + 0x18,sVar12);\n          if (lVar8 != 0) goto LAB_0040f414;\n        }\n      }\n    }\n    else {\n      local_a8 = *(size_t *)(*(long *)(param_2 + 0xb8) + local_80 * 8);\n      lVar8 = plVar1[5] + sVar10 * 0x18;\n      *(undefined8 *)(puVar13 + -8) = 0x40f4bf;\n      cVar5 = FUN_00408b10(local_78,sVar10);\n      if (cVar5 == '\\0') goto LAB_0040f920;\n      lVar17 = *(long *)(lVar8 + 8);\n      if (0 < lVar17) {\n        uVar2 = *(undefined8 *)(local_a8 + 0x10);\n        lVar18 = local_a8 + 0x18;\n        lVar8 = *(long *)(lVar8 + 0x10);\n        lVar16 = 0;\n        sVar10 = 0xffffffffffffffff;\n        local_a8 = param_2;\n        do {\n          sVar7 = *(size_t *)(lVar8 + lVar16 * 8);\n          *(undefined8 *)(puVar13 + -8) = 0x40f512;\n          lVar9 = FUN_0040a120(uVar2,lVar18,sVar7);\n          param_2 = local_a8;\n          sVar12 = sVar10;\n          if ((lVar9 != 0) && (sVar12 = sVar7, sVar10 != 0xffffffffffffffff)) {\n            *(undefined8 *)(puVar13 + -8) = 0x40f705;\n            lVar8 = FUN_0040a120(local_78._8_8_,local_c0,sVar10);\n            if ((lVar8 != 0) || (sVar12 = sVar10, local_90 == (long *)0x0)) break;\n            lVar17 = *local_90;\n            lVar8 = lVar17 + 1;\n            *local_90 = lVar8;\n            if (lVar8 == local_90[1]) {\n              local_a8 = local_80;\n              pvVar11 = (void *)local_90[2];\n              *(undefined8 *)(puVar13 + -8) = 0x40f9f7;\n              pvVar11 = realloc(pvVar11,lVar8 * 0x60);\n              if (pvVar11 != (void *)0x0) {\n                local_90[1] = local_90[1] << 1;\n                local_90[2] = (long)pvVar11;\n                sVar12 = local_a8;\n                goto LAB_0040f73a;\n              }\n            }\n            else {\n              pvVar11 = (void *)local_90[2];\n              sVar12 = local_80;\nLAB_0040f73a:\n              sVar15 = local_b0;\n              psVar19 = (size_t *)(lVar17 * 0x30 + (long)pvVar11);\n              psVar19[1] = sVar7;\n              *psVar19 = sVar12;\n              *(undefined8 *)(puVar13 + -8) = 0x40f75b;\n              pvVar11 = malloc(local_b0);\n              psVar19[2] = (size_t)pvVar11;\n              if (pvVar11 != (void *)0x0) {\n                *(undefined8 *)(puVar13 + -8) = 0x40f772;\n                memcpy(pvVar11,param_4,sVar15);\n                *(undefined8 *)(puVar13 + -8) = 0x40f77f;\n                iVar6 = FUN_0040b1c0(psVar19 + 3,local_78);\n                sVar12 = sVar10;\n                if (iVar6 == 0) break;\n              }\n            }\n            *(undefined8 *)(puVar13 + -8) = 0x40f799;\n            free(local_68[0]);\n            if (local_c1 == '\\0') goto LAB_0040f7a6;\n            goto LAB_0040fa90;\n          }\n          lVar16 = lVar16 + 1;\n          sVar10 = sVar12;\n        } while (lVar17 != lVar16);\n        goto joined_r0x0040f53a;\n      }\nLAB_0040f54a:\n      if (local_90 == (long *)0x0) {\n        *(undefined8 *)(puVar13 + -8) = 0x40faaa;\n        free(local_68[0]);\n        if (local_c1 != '\\0') {\n          local_90 = (long *)CONCAT44(local_90._4_4_,1);\n          *(undefined8 *)(puVar13 + -8) = 0x40face;\n          free(local_b8);\n          return (ulong)local_90 & 0xffffffff;\n        }\n        return 1;\n      }\n    }\n    *(undefined8 *)(puVar13 + -8) = 0x40f57a;\n    sVar10 = FUN_0040d8d0(local_90,local_90 + 2,&local_80,local_a0,param_4,local_78);\n    sVar7 = param_4[1];\n    if ((long)sVar7 < (long)local_80) goto LAB_0040f590;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040f250"
        },
        {
            "funcStartAddr": "0x40fb20",
            "funcEndAddr": "0x40fca0",
            "decompiledFuncCode": "\nundefined8\nFUN_0040fb20(long param_1,long *param_2,undefined8 *param_3,undefined8 param_4,long param_5)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *pvVar5;\n  long lVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  \n  uVar3 = FUN_0040eb30(param_1,param_3 + 2,*param_3,param_3[1],param_4,param_5,8);\n  if ((int)uVar3 != 0) {\n    return uVar3;\n  }\n  lVar1 = param_3[1];\n  lVar4 = *(long *)(param_1 + 200);\n  lVar2 = *param_2;\n  pvVar5 = *(void **)(param_1 + 0xd8);\n  lVar7 = lVar1;\n  if (*(long *)(param_1 + 0xd0) <= lVar4) {\n    pvVar5 = realloc(pvVar5,*(long *)(param_1 + 0xd0) * 0x50);\n    if (pvVar5 == (void *)0x0) {\n      free(*(void **)(param_1 + 0xd8));\n      return 0xc;\n    }\n    *(void **)(param_1 + 0xd8) = pvVar5;\n    memset((void *)((long)pvVar5 + *(long *)(param_1 + 200) * 0x28),0,\n           *(long *)(param_1 + 0xd0) * 0x28);\n    *(long *)(param_1 + 0xd0) = *(long *)(param_1 + 0xd0) << 1;\n    lVar4 = *(long *)(param_1 + 200);\n    pvVar5 = *(void **)(param_1 + 0xd8);\n    lVar7 = param_3[1];\n  }\n  lVar6 = lVar4 * 0x28;\n  if ((0 < lVar4) && (param_5 == *(long *)((long)pvVar5 + lVar6 + -0x20))) {\n    *(undefined *)((long)pvVar5 + lVar6 + -8) = 1;\n  }\n  puVar8 = (undefined8 *)((long)pvVar5 + lVar6);\n  *puVar8 = param_4;\n  puVar8[1] = param_5;\n  *(ushort *)((long)puVar8 + 0x22) = -(ushort)(lVar1 == lVar2);\n  puVar8[2] = lVar2;\n  puVar8[3] = lVar1;\n  *(long *)(param_1 + 200) = lVar4 + 1;\n  *(undefined *)(puVar8 + 4) = 0;\n  if ((long)*(int *)(param_1 + 0xe0) < lVar1 - lVar2) {\n    *(int *)(param_1 + 0xe0) = (int)lVar1 - (int)lVar2;\n  }\n  uVar3 = FUN_004096f0(param_1,(lVar7 + param_5) - *param_2);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040fb20"
        },
        {
            "funcStartAddr": "0x40fcc0",
            "funcEndAddr": "0x4104eb",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nulong FUN_0040fcc0(long param_1,long *param_2,long *param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  long *plVar4;\n  long lVar5;\n  int iVar6;\n  long lVar7;\n  ulong uVar8;\n  long lVar9;\n  long *plVar10;\n  undefined8 uVar11;\n  long *plVar12;\n  void *pvVar13;\n  long lVar14;\n  long lVar15;\n  size_t __n;\n  uint uVar16;\n  long lVar17;\n  long lVar18;\n  long lVar19;\n  long local_e0;\n  long local_d8;\n  long local_d0;\n  long local_c8;\n  uint local_5c;\n  undefined local_58 [16];\n  void *local_48;\n  \n  lVar1 = *(long *)(param_1 + 0x48);\n  plVar2 = *(long **)(param_1 + 0x98);\n  local_e0 = 0;\n  if (*param_2 < 1) {\n    return 0;\n  }\nLAB_0040fd59:\n  lVar3 = *(long *)(*param_3 + local_e0 * 8);\n  lVar7 = *plVar2 + lVar3 * 0x10;\n  if (*(char *)(lVar7 + 8) != '\\x04') goto LAB_0040fd40;\n  uVar16 = *(uint *)(lVar7 + 8);\n  if ((uVar16 & 0x3ff00) == 0) {\nLAB_0040fdd0:\n    lVar19 = *(long *)(param_1 + 200);\n    lVar7 = 0;\n    lVar9 = lVar19;\n    while (lVar7 < lVar9) {\n      lVar15 = (lVar7 + lVar9) / 2;\n      lVar18 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar15 * 0x28);\n      while (lVar17 = lVar15, lVar1 <= lVar18) {\n        if (lVar17 <= lVar7) goto LAB_0040fe37;\n        lVar15 = (lVar17 + lVar7) / 2;\n        lVar18 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar15 * 0x28);\n        lVar9 = lVar17;\n      }\n      lVar7 = lVar17 + 1;\n    }\nLAB_0040fe37:\n    if (((lVar7 < lVar19) &&\n        (plVar10 = (long *)(*(long *)(param_1 + 0xd8) + lVar7 * 0x28), plVar10[1] == lVar1)) &&\n       (lVar7 != -1)) {\n      do {\n        if (lVar3 == *plVar10) goto LAB_0040fe6f;\n        plVar4 = plVar10 + 4;\n        plVar10 = plVar10 + 5;\n      } while (*(char *)plVar4 != '\\0');\n    }\n    plVar10 = *(long **)(param_1 + 0x98);\n    lVar7 = *plVar10;\n    lVar9 = *(long *)(lVar7 + lVar3 * 0x10);\n    if (0 < *(long *)(param_1 + 0xe8)) {\n      local_c8 = *(long *)(param_1 + 8);\n      local_d8 = 0;\n      do {\n        plVar4 = *(long **)(*(long *)(param_1 + 0xf8) + local_d8 * 8);\n        if (lVar9 == *(long *)(lVar7 + plVar4[1] * 0x10)) {\n          lVar7 = *plVar4;\n          lVar18 = lVar1;\n          if (0 < plVar4[4]) {\n            lVar15 = 0;\n            do {\n              lVar5 = *(long *)(plVar4[5] + lVar15 * 8);\n              lVar14 = *(long *)(lVar5 + 8);\n              __n = lVar14 - lVar7;\n              lVar17 = __n + lVar18;\n              if (0 < (long)__n) {\n                if (*(long *)(param_1 + 0x30) < lVar17) {\n                  if (lVar17 <= *(long *)(param_1 + 0x58)) {\n                    uVar8 = FUN_004096f0(param_1,lVar17);\n                    if ((int)uVar8 != 0) {\n                      return uVar8;\n                    }\n                    local_c8 = *(long *)(param_1 + 8);\n                    goto LAB_004101c1;\n                  }\n                }\n                else {\nLAB_004101c1:\n                  iVar6 = memcmp((void *)(local_c8 + lVar18),(void *)(local_c8 + lVar7),__n);\n                  if (iVar6 == 0) goto LAB_004101f4;\n                }\n                if (plVar4[4] != lVar15 && lVar15 <= plVar4[4]) goto LAB_0040ff02;\n                lVar14 = lVar7;\n                lVar17 = lVar18;\n                if (lVar15 < 1) goto joined_r0x00410318;\n                break;\n              }\nLAB_004101f4:\n              uVar8 = FUN_0040fb20(param_1,plVar4,lVar5,lVar3,lVar1);\n              local_c8 = *(long *)(param_1 + 8);\n              if (1 < (uint)uVar8) {\n                return uVar8;\n              }\n              lVar15 = lVar15 + 1;\n              lVar7 = lVar14;\n              lVar18 = lVar17;\n            } while (lVar15 < plVar4[4]);\n            lVar7 = lVar14 + 1;\n            lVar18 = lVar17;\n          }\njoined_r0x00410318:\n          do {\n            if (lVar1 < lVar7) break;\n            lVar15 = lVar18;\n            if (lVar7 != *plVar4 && -1 < lVar7 - *plVar4) {\n              if (*(long *)(param_1 + 0x30) == lVar18 || *(long *)(param_1 + 0x30) < lVar18) {\n                if (*(long *)(param_1 + 0x58) == lVar18 || *(long *)(param_1 + 0x58) < lVar18)\n                break;\n                uVar8 = FUN_004095a0(param_1,(int)lVar18 + 1);\n                if ((int)uVar8 != 0) {\n                  return uVar8;\n                }\n                local_c8 = *(long *)(param_1 + 8);\n              }\n              lVar15 = lVar18 + 1;\n              if (*(char *)(local_c8 + lVar18) != *(char *)(local_c8 + -1 + lVar7)) break;\n            }\n            lVar18 = *(long *)(*(long *)(param_1 + 0xb8) + lVar7 * 8);\n            if ((lVar18 != 0) && (0 < *(long *)(lVar18 + 0x10))) {\n              lVar17 = 0;\n              do {\n                lVar5 = *(long *)(*(long *)(lVar18 + 0x18) + lVar17 * 8);\n                plVar12 = (long *)(lVar5 * 0x10 + *plVar10);\n                if ((*(char *)(plVar12 + 1) == '\\t') && (lVar9 == *plVar12)) {\n                  if (lVar5 != -1) {\n                    pvVar13 = (void *)plVar4[2];\n                    lVar18 = *plVar4;\n                    if (pvVar13 == (void *)0x0) {\n                      pvVar13 = calloc(0x18,(lVar7 - lVar18) + 1);\n                      plVar4[2] = (long)pvVar13;\n                      if (pvVar13 == (void *)0x0) {\n                        return 0xc;\n                      }\n                    }\n                    uVar8 = FUN_0040eb30(param_1,pvVar13,plVar4[1],lVar18,lVar5,lVar7,9);\n                    if ((int)uVar8 != 1) {\n                      if ((int)uVar8 != 0) {\n                        return uVar8;\n                      }\n                      if (plVar4[4] == plVar4[3]) {\n                        lVar18 = plVar4[3] * 2 + 1;\n                        pvVar13 = realloc((void *)plVar4[5],lVar18 * 8);\n                        if (pvVar13 == (void *)0x0) {\n                          return 0xc;\n                        }\n                        plVar4[5] = (long)pvVar13;\n                        plVar4[3] = lVar18;\n                      }\n                      plVar12 = (long *)calloc(1,0x28);\n                      if (plVar12 == (long *)0x0) {\n                        return 0xc;\n                      }\n                      lVar18 = plVar4[4];\n                      *(long **)(plVar4[5] + lVar18 * 8) = plVar12;\n                      *plVar12 = lVar5;\n                      plVar12[1] = lVar7;\n                      plVar4[4] = lVar18 + 1;\n                      FUN_0040fb20(param_1,plVar4,plVar12,lVar3,lVar1);\n                    }\n                  }\n                  break;\n                }\n                lVar17 = lVar17 + 1;\n              } while (*(long *)(lVar18 + 0x10) != lVar17);\n            }\n            lVar7 = lVar7 + 1;\n            lVar18 = lVar15;\n          } while( true );\n        }\nLAB_0040ff02:\n        local_d8 = local_d8 + 1;\n        if (*(long *)(param_1 + 0xe8) <= local_d8) goto LAB_0040ff20;\n        lVar7 = *plVar10;\n      } while( true );\n    }\nLAB_0040fe6f:\n    local_5c = 0;\n  }\n  else {\n    uVar16 = uVar16 >> 8;\n    uVar8 = FUN_0040be50(param_1,lVar1,*(undefined4 *)(param_1 + 0xa0));\n    if ((uVar16 & 4) == 0) {\n      if (((uVar16 & 8) == 0) || ((uVar8 & 1) == 0)) {\nLAB_0040fd19:\n        if ((((uVar16 & 0x20) == 0) || ((uVar8 & 2) != 0)) &&\n           (((uVar16 & 0x80) == 0 || ((uVar8 & 8) != 0)))) goto LAB_0040fdd0;\n      }\n    }\n    else if (((uVar8 & 1) != 0) && ((uVar16 & 8) == 0)) goto LAB_0040fd19;\n  }\n  goto LAB_0040fd40;\nLAB_0040ff20:\n  local_5c = 0;\n  if (lVar19 < *(long *)(param_1 + 200)) {\nLAB_004100a9:\n    do {\n      plVar10 = (long *)(*(long *)(param_1 + 0xd8) + lVar19 * 0x28);\n      if ((lVar3 == *plVar10) && (lVar1 == plVar10[1])) {\n        lVar7 = plVar10[3];\n        lVar9 = plVar10[2];\n        if (lVar7 == lVar9) {\n          lVar18 = **(long **)(plVar2[5] + 0x10 + lVar3 * 0x18);\n        }\n        else {\n          lVar18 = *(long *)(plVar2[3] + lVar3 * 8);\n        }\n        local_d0 = plVar2[6] + lVar18 * 0x18;\n        lVar17 = (lVar7 + lVar1) - lVar9;\n        FUN_0040be50(param_1,lVar17 + -1,*(undefined4 *)(param_1 + 0xa0));\n        local_d8 = 0;\n        plVar10 = (long *)(*(long *)(param_1 + 0xb8) + lVar17 * 8);\n        lVar18 = *(long *)(*(long *)(param_1 + 0xb8) + lVar1 * 8);\n        lVar15 = *plVar10;\n        if (lVar18 != 0) {\n          local_d8 = *(long *)(lVar18 + 0x10);\n        }\n        if (lVar15 == 0) {\n          lVar15 = FUN_0040b3d0(&local_5c,plVar2,local_d0);\n          lVar18 = *(long *)(param_1 + 0xb8);\n          *plVar10 = lVar15;\n          lVar15 = *(long *)(lVar18 + lVar17 * 8);\n        }\n        else {\n          local_5c = FUN_0040b240(local_58,*(undefined8 *)(lVar15 + 0x50),local_d0);\n          if (local_5c != 0) {\n            free(local_48);\n            return (ulong)local_5c;\n          }\n          lVar18 = *(long *)(param_1 + 0xb8);\n          uVar11 = FUN_0040b3d0(&local_5c,plVar2,local_58);\n          *(undefined8 *)(lVar17 * 8 + lVar18) = uVar11;\n          free(local_48);\n          lVar18 = *(long *)(param_1 + 0xb8);\n          lVar15 = *(long *)(lVar18 + lVar17 * 8);\n        }\n        if ((lVar15 == 0) && (local_5c != 0)) {\n          return (ulong)local_5c;\n        }\n        if ((lVar7 == lVar9) &&\n           (plVar10 = (long *)(*(long *)(lVar18 + lVar1 * 8) + 0x10),\n           *plVar10 != local_d8 && local_d8 <= *plVar10)) {\n          uVar8 = FUN_0040bd00(param_1,local_d0 + 8,local_d0 + 0x10);\n          local_5c = (uint)uVar8;\n          if (local_5c != 0) {\n            return uVar8;\n          }\n          uVar8 = FUN_0040fcc0(param_1,local_d0 + 8,local_d0 + 0x10);\n          local_5c = (uint)uVar8;\n          if (local_5c != 0) {\n            return uVar8;\n          }\n          lVar19 = lVar19 + 1;\n          if (*(long *)(param_1 + 200) <= lVar19) break;\n          goto LAB_004100a9;\n        }\n      }\n      lVar19 = lVar19 + 1;\n    } while (lVar19 < *(long *)(param_1 + 200));\n  }\nLAB_0040fd40:\n  local_e0 = local_e0 + 1;\n  if (*param_2 <= local_e0) {\n    return 0;\n  }\n  goto LAB_0040fd59;\n}\n\n",
            "funcName": "FUN_0040fcc0"
        },
        {
            "funcStartAddr": "0x410540",
            "funcEndAddr": "0x4106e0",
            "decompiledFuncCode": "\nlong FUN_00410540(int *param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 *puVar3;\n  long lVar4;\n  long lVar5;\n  undefined4 uVar6;\n  int iVar7;\n  long *plVar8;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  void *local_48;\n  \n  lVar1 = *(long *)(param_2 + 0x48);\n  lVar2 = *(long *)(param_2 + 0x98);\n  plVar8 = (long *)(*(long *)(param_2 + 0xb8) + lVar1 * 8);\n  if (*(long *)(param_2 + 0xc0) < lVar1) {\n    *plVar8 = param_3;\n    *(long *)(param_2 + 0xc0) = lVar1;\n  }\n  else if (*plVar8 == 0) {\n    *plVar8 = param_3;\n  }\n  else {\n    puVar3 = *(undefined8 **)(*plVar8 + 0x50);\n    if (param_3 == 0) {\n      local_58 = *puVar3;\n      uStack_50 = puVar3[1];\n      local_48 = (void *)puVar3[2];\n      uVar6 = FUN_0040be50(param_2,lVar1 + -1,*(undefined4 *)(param_2 + 0xa0));\n      param_3 = FUN_0040b3d0(param_1,lVar2,&local_58,uVar6);\n      *plVar8 = param_3;\n    }\n    else {\n      lVar4 = *(long *)(param_3 + 0x50);\n      iVar7 = FUN_0040b240(&local_58,lVar4,puVar3);\n      *param_1 = iVar7;\n      if (iVar7 != 0) {\n        return 0;\n      }\n      uVar6 = FUN_0040be50(param_2,*(long *)(param_2 + 0x48) + -1,*(undefined4 *)(param_2 + 0xa0));\n      lVar5 = *(long *)(param_2 + 0xb8);\n      param_3 = FUN_0040b3d0(param_1,lVar2,&local_58,uVar6);\n      *(long *)(lVar5 + lVar1 * 8) = param_3;\n      if (lVar4 != 0) {\n        free(local_48);\n      }\n    }\n  }\n  if (*(long *)(lVar2 + 0x98) == 0) {\n    return param_3;\n  }\n  if (param_3 != 0) {\n    iVar7 = FUN_0040bd00(param_2,param_3 + 0x10,param_3 + 0x18,lVar1);\n    *param_1 = iVar7;\n    if (iVar7 == 0) {\n      if ((*(byte *)(param_3 + 0x68) & 0x40) == 0) {\n        return param_3;\n      }\n      iVar7 = FUN_0040fcc0(param_2,param_3 + 0x10,param_3 + 0x18);\n      *param_1 = iVar7;\n      if (iVar7 == 0) {\n        return *(long *)(*(long *)(param_2 + 0xb8) + lVar1 * 8);\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00410540"
        },
        {
            "funcStartAddr": "0x410700",
            "funcEndAddr": "0x4109ff",
            "decompiledFuncCode": "\nint FUN_00410700(long param_1,void **param_2)\n\n{\n  size_t __n;\n  void *pvVar1;\n  long lVar2;\n  long *plVar3;\n  long lVar4;\n  undefined8 *puVar5;\n  char cVar6;\n  int iVar7;\n  void *pvVar8;\n  void *extraout_RDX;\n  void *pvVar9;\n  long lVar10;\n  long lVar11;\n  undefined auVar12 [16];\n  long local_90;\n  int local_7c;\n  undefined8 local_58;\n  undefined8 local_50;\n  void **local_48;\n  \n  pvVar9 = param_2[3];\n  pvVar1 = param_2[2];\n  local_58 = 1;\n  local_50 = 1;\n  local_48 = (void **)malloc(8);\n  if (local_48 == (void **)0x0) {\n    return 0xc;\n  }\n  *local_48 = pvVar1;\n  iVar7 = FUN_00412190(param_1,param_2,pvVar9,&local_58);\n  if (iVar7 == 0) {\n    local_7c = 0;\n    if (0 < (long)pvVar9) {\n      do {\n        __n = (long)pvVar9 * 8;\n        if (*(long *)((long)*param_2 + (long)pvVar9 * 8) == 0) {\n          local_7c = local_7c + 1;\n          if (*(int *)(param_1 + 0xe0) < local_7c) goto LAB_004109e6;\n        }\n        else {\n          local_7c = 0;\n          if (*(int *)(param_1 + 0xe0) < 0) {\nLAB_004109e6:\n            memset(*param_2,0,__n);\n            free(local_48);\n            return 0;\n          }\n        }\n        pvVar9 = (void *)((long)pvVar9 + -1);\n        local_50 = 0;\n        lVar2 = *(long *)(*(long *)(param_1 + 0xb8) + -8 + __n);\n        if ((lVar2 != 0) && (plVar3 = *(long **)(param_1 + 0x98), 0 < *(long *)(lVar2 + 0x28))) {\n          local_90 = 0;\n          do {\n            lVar4 = *(long *)(*(long *)(lVar2 + 0x30) + local_90 * 8);\n            lVar11 = lVar4 * 0x10;\n            lVar10 = *plVar3 + lVar11;\n            if ((*(byte *)(lVar10 + 10) & 0x10) == 0) {\nLAB_00410800:\n              cVar6 = FUN_0040bf40(param_1,lVar10,pvVar9);\n              if (cVar6 != '\\0') {\n                lVar10 = *(long *)((long)*param_2 + __n);\n                if (lVar10 != 0) {\n                  auVar12 = FUN_0040a120(*(undefined8 *)(lVar10 + 0x10),lVar10 + 0x18,\n                                         *(undefined8 *)(plVar3[3] + lVar4 * 8));\n                  pvVar8 = SUB168(auVar12 >> 0x40,0);\n                  if (SUB168(auVar12,0) != 0) {\n                    iVar7 = 1;\n                    goto LAB_00410841;\n                  }\n                }\n              }\n            }\n            else {\n              puVar5 = *(undefined8 **)(param_1 + 0x98);\n              pvVar1 = param_2[3];\n              iVar7 = FUN_0040e8a0(*puVar5,puVar5 + 0x1b,lVar4,param_1,pvVar9);\n              pvVar8 = extraout_RDX;\n              if (iVar7 < 1) {\n                if (iVar7 == 0) {\nLAB_00410966:\n                  lVar10 = *plVar3 + lVar11;\n                  goto LAB_00410800;\n                }\n              }\n              else if ((long)iVar7 + (long)pvVar9 <= (long)pvVar1) {\n                lVar10 = *(long *)((long)*param_2 + ((long)iVar7 + (long)pvVar9) * 8);\n                if (lVar10 == 0) goto LAB_00410966;\n                auVar12 = FUN_0040a120(*(undefined8 *)(lVar10 + 0x10),lVar10 + 0x18,\n                                       *(undefined8 *)(puVar5[3] + lVar4 * 8));\n                pvVar8 = SUB168(auVar12 >> 0x40,0);\n                if (SUB168(auVar12,0) == 0) {\n                  lVar10 = *plVar3 + lVar11;\n                  goto LAB_00410800;\n                }\n              }\nLAB_00410841:\n              if (param_2[5] != (void *)0x0) {\n                cVar6 = FUN_0040a3b0(param_1,param_2 + 5,param_2 + 6,\n                                     *(undefined8 *)(plVar3[3] + lVar4 * 8),\n                                     (long)iVar7 + (long)pvVar9,lVar4);\n                pvVar8 = pvVar9;\n                if (cVar6 != '\\0') goto LAB_0041088c;\n              }\n              cVar6 = FUN_00408b10(&local_58,lVar4,pvVar8);\n              if (cVar6 == '\\0') {\n                iVar7 = 0xc;\n                goto LAB_004109a5;\n              }\n            }\nLAB_0041088c:\n            local_90 = local_90 + 1;\n          } while (local_90 < *(long *)(lVar2 + 0x28));\n        }\n        iVar7 = FUN_00412190(param_1,param_2,pvVar9,&local_58);\n        if (iVar7 != 0) goto LAB_004109a5;\n      } while (pvVar9 != (void *)0x0);\n    }\n    iVar7 = 0;\n  }\nLAB_004109a5:\n  free(local_48);\n  return iVar7;\n}\n\n",
            "funcName": "FUN_00410700"
        },
        {
            "funcStartAddr": "0x410a30",
            "funcEndAddr": "0x411f07",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_00410a30(long **param_1,long param_2,ulong param_3,long param_4,long param_5,ulong param_6\n                  ,long *param_7,ulong *param_8,uint param_9)\n\n{\n  long **pplVar1;\n  int iVar2;\n  long *plVar3;\n  bool bVar4;\n  byte bVar5;\n  char cVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  undefined4 uVar11;\n  void *pvVar12;\n  ulong uVar13;\n  long lVar14;\n  ulong uVar15;\n  long lVar16;\n  long lVar17;\n  ulong uVar18;\n  long *plVar19;\n  long *plVar20;\n  long lVar21;\n  ulong *puVar22;\n  ulong *puVar23;\n  long lVar24;\n  uint uVar25;\n  long lVar26;\n  long *plVar27;\n  uint uVar28;\n  long lVar29;\n  ulong uVar30;\n  long *plVar31;\n  bool bVar32;\n  int local_230;\n  ulong local_228;\n  long *local_218;\n  ulong local_210;\n  uint local_1ec;\n  long *local_1e8;\n  long *local_1d8;\n  long local_1a8;\n  bool local_18b;\n  uint local_188;\n  uint local_184;\n  long local_180;\n  long *local_178;\n  long *plStack_170;\n  long *local_168;\n  ulong local_160;\n  undefined local_158 [16];\n  void *local_148;\n  long local_138 [2];\n  int *local_128;\n  long local_120;\n  long local_110;\n  ulong local_108;\n  ulong local_100;\n  ulong local_f8;\n  ulong local_f0;\n  ulong local_e8;\n  ulong local_e0;\n  ulong local_d8;\n  ulong local_d0;\n  int local_c8;\n  long *local_c0;\n  long *local_b8;\n  undefined local_b0;\n  byte local_af;\n  byte local_ae;\n  char local_ad;\n  char local_ac;\n  byte local_ab;\n  byte local_aa;\n  int local_a8;\n  long *local_a0;\n  uint local_98;\n  ulong local_90;\n  long *local_88;\n  long *local_80;\n  long local_78;\n  undefined8 local_70;\n  long local_68;\n  void *local_60;\n  int local_58;\n  long local_48;\n  void *local_40;\n  \n  plVar3 = *param_1;\n  plVar27 = local_138;\n  for (lVar26 = 0x20; lVar26 != 0; lVar26 = lVar26 + -1) {\n    *plVar27 = 0;\n    plVar27 = plVar27 + 1;\n  }\n  plVar27 = param_1[4];\n  local_1d8 = plVar27;\n  if (plVar27 != (long *)0x0) {\n    if (((*(byte *)(param_1 + 7) & 8) == 0) || (param_4 == param_5)) {\n      local_1d8 = (long *)0x0;\n    }\n    else {\n      local_1d8 = (long *)0x0;\n      if ((*(byte *)(param_1 + 7) & 1) == 0) {\n        local_1d8 = plVar27;\n      }\n    }\n  }\n  local_1a8 = 0;\n  plVar27 = param_1[6];\n  if (plVar27 < param_7) {\n    local_1a8 = ((long)param_7 + -1) - (long)plVar27;\n    param_7 = (long *)((long)param_7 + ((long)plVar27 - ((long)param_7 + -1)));\n  }\n  if ((((param_1[2] == (long *)0x0) || (plVar3[9] == 0)) || (plVar3[10] == 0)) ||\n     ((plVar3[0xb] == 0 || (plVar3[0xc] == 0)))) {\n    local_1ec = 1;\n    goto LAB_004114a0;\n  }\n  if (((*(long *)(plVar3[9] + 0x10) == 0) && (*(long *)(plVar3[10] + 0x10) == 0)) &&\n     ((*(long *)(plVar3[0xb] + 0x10) == 0 || (-1 < *(char *)(param_1 + 7))))) {\n    if ((param_4 != 0) && (local_1ec = 1, param_5 != 0)) goto LAB_004114a0;\n    param_5 = 0;\n    param_4 = 0;\n  }\n  bVar32 = true;\n  if (param_7 == (long *)0x0) {\n    bVar32 = plVar3[0x13] != 0;\n  }\n  plVar27 = param_1[5];\n  local_a8 = *(int *)((long)plVar3 + 0xb4);\n  lVar26 = plVar3[2] + 1;\n  if (plVar3[2] + 1 < (long)local_a8) {\n    lVar26 = (long)local_a8;\n  }\n  if ((long)(param_3 + 1) < lVar26) {\n    lVar26 = param_3 + 1;\n  }\n  local_b0 = ((ulong)param_1[3] & 0x400000) != 0;\n  local_ad = ((ulong)((uint)param_1[3] & 0x400000) | (ulong)plVar27) != 0;\n  local_ae = *(byte *)(plVar3 + 0x16) >> 3 & 1;\n  local_af = *(byte *)(plVar3 + 0x16) >> 2 & 1;\n  local_138[0] = param_2;\n  local_e8 = param_3;\n  local_e0 = param_3;\n  local_d8 = param_3;\n  local_d0 = param_3;\n  local_c0 = plVar27;\n  local_a0 = plVar3;\n  local_1ec = FUN_00408a00(local_138,lVar26);\n  plVar19 = local_80;\n  if (local_1ec != 0) goto LAB_00411480;\n  local_b8 = plVar3 + 0x17;\n  local_aa = *(byte *)(plVar3 + 0x16) >> 4 & 1;\n  if ((local_ad != '\\0') ||\n     (local_108 = param_3, local_138[1] = param_2, 1 < *(int *)((long)plVar3 + 0xb4))) {\n    local_108 = 0;\n  }\n  local_ab = *(byte *)(param_1 + 7) >> 7;\n  lVar26 = plVar3[0x13];\n  local_90 = 0xffffffffffffffff;\n  lVar24 = lVar26 * 2;\n  local_98 = param_9;\n  local_100 = local_108;\n  local_d8 = param_6;\n  local_d0 = param_6;\n  if (lVar24 < 1) {\nLAB_00410d7c:\n    local_58 = 1;\n    local_68 = lVar24;\n    local_48 = lVar24;\n    if ((param_7 < (long *)0x2) && ((*(byte *)(plVar3 + 0x16) & 2) == 0)) {\n      local_80 = (long *)0x0;\n    }\n    else {\n      if (0x1ffffffffffffffe < local_f8) goto LAB_00411a81;\n      local_80 = (long *)malloc(local_f8 * 8 + 8);\n      plVar19 = local_80;\n      if (local_80 == (long *)0x0) {\nLAB_00411a32:\n        local_1ec = 0xc;\n        goto LAB_00411480;\n      }\n    }\n    local_c8 = (-(uint)((param_9 & 1) == 0) & 2) + 4;\n    iVar7 = ((param_4 <= param_5) - 1) + (uint)(param_4 <= param_5);\n    lVar26 = param_5;\n    if (param_4 <= param_5) {\n      lVar26 = param_4;\n    }\n    lVar24 = param_5;\n    if (param_5 <= param_4) {\n      lVar24 = param_4;\n    }\n    iVar2 = *(int *)((long)plVar3 + 0xb4);\n    uVar25 = 8;\n    if (local_1d8 != (long *)0x0) {\n      uVar25 = 4;\n      if (iVar2 != 1) {\n        uVar25 = (uint)(((ulong)((uint)param_1[3] & 0x400000) | (ulong)plVar27) == 0) << 2;\n      }\n      uVar25 = plVar27 != (long *)0x0 | uVar25 | (uint)(param_4 <= param_5) * 2;\n    }\n    local_180 = param_4;\n    if (param_4 <= lVar24 && lVar26 <= param_4) {\n      plVar27 = (long *)0x0;\n      if (param_4 <= param_5) {\n        plVar27 = &local_180;\n      }\n      do {\n        if (uVar25 - 4 < 5) {\n                    /* WARNING: Could not recover jumptable at 0x00410ef8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar13 = (*(code *)(&PTR_DAT_004191c8)[uVar25 - 4])();\n          return uVar13;\n        }\n        while( true ) {\n          lVar21 = local_180;\n          uVar13 = local_180 - local_110;\n          if (local_100 <= uVar13) {\n            local_1ec = FUN_0040c140(local_138,local_180,param_9);\n            plVar19 = local_80;\n            if (local_1ec != 0) goto LAB_00411480;\n            uVar13 = lVar21 - local_110;\n          }\n          plVar19 = local_1d8;\n          if (lVar21 < (long)param_3) {\n            plVar19 = (long *)((ulong)*(byte *)(local_138[1] + uVar13) + (long)local_1d8);\n          }\n          if (*(char *)plVar19 != '\\0') break;\n          local_180 = lVar21 + iVar7;\n          if ((local_180 < lVar26) || (lVar24 < local_180)) goto LAB_004113d0;\n        }\n        uVar8 = FUN_0040c140(local_138,lVar21,param_9);\n        plVar31 = local_a0;\n        uVar13 = local_f0;\n        plVar19 = local_80;\n        local_1ec = uVar8;\n        if (uVar8 != 0) goto LAB_00411480;\n        if (((iVar2 == 1) || (local_108 == 0)) || (*local_128 != -1)) {\n          local_58 = 0;\n          local_70 = 0;\n          lVar21 = local_a0[9];\n          local_78 = 0;\n          local_188 = 0;\n          local_228 = local_f0;\n          if (*(char *)(lVar21 + 0x68) < '\\0') {\n            uVar9 = FUN_0040be50(local_138,local_f0 - 1,local_98);\n            if ((uVar9 & 1) == 0) {\n              if (uVar9 == 0) goto LAB_00411090;\n              if ((uVar9 & 6) == 6) {\n                lVar21 = plVar31[0xc];\n              }\n              else if ((uVar9 & 2) == 0) {\n                if ((uVar9 & 4) == 0) goto LAB_00411090;\n                lVar21 = FUN_0040b3d0(&local_188,plVar31,*(undefined8 *)(lVar21 + 0x50),uVar9);\n              }\n              else {\n                lVar21 = plVar31[0xb];\n              }\n            }\n            else {\n              lVar21 = plVar31[10];\n            }\n            if (lVar21 == 0) {\n              local_1ec = local_188;\n              plVar19 = local_80;\n              if (local_188 != 0xc) {\n                    /* WARNING: Subroutine does not return */\n                __assert_fail(\"err == REG_ESPACE\",\"lib/regexec.c\",0x431,\"check_matching\");\n              }\n              goto LAB_00411480;\n            }\n          }\nLAB_00411090:\n          if ((local_80 == (long *)0x0) ||\n             (lVar14 = plVar31[0x13], local_80[uVar13] = lVar21, lVar14 == 0)) {\n            bVar5 = *(byte *)(lVar21 + 0x68);\n            local_18b = plVar27 != (long *)0x0;\nLAB_004110c8:\n            local_218 = (long *)0x0;\n            local_210 = 0xffffffffffffffff;\n            uVar15 = local_f0;\n            local_1e8 = plVar27;\n            if ((((bVar5 & 0x10) == 0) ||\n                ((*(char *)(lVar21 + 0x68) < '\\0' &&\n                 (local_218 = (long *)FUN_0040c070(local_138,*(undefined8 *)(lVar21 + 0x10),\n                                                   lVar21 + 0x18,uVar13), uVar15 = local_f0,\n                 local_218 == (long *)0x0)))) ||\n               (local_218 = (long *)0x1, uVar15 = local_f0, local_210 = uVar13, bVar32)) {\n              while ((long)uVar15 < (long)local_d0) {\n                uVar13 = uVar15 + 1;\n                if ((((long)uVar13 < (long)local_f8) || ((long)local_e0 <= (long)local_f8)) &&\n                   (((long)uVar13 < (long)local_108 || ((long)local_e0 <= (long)local_108)))) {\n                  bVar5 = *(byte *)(lVar21 + 0x68);\n                  plVar19 = local_a0;\n                }\n                else {\n                  local_230 = (int)uVar13;\n                  local_188 = FUN_004095a0(local_138,local_230 + 1);\n                  if (local_188 != 0) {\n                    if (local_188 != 0xc) {\n                    /* WARNING: Subroutine does not return */\n                      __assert_fail(\"err == REG_ESPACE\",\"lib/regexec.c\",0x468,\"check_matching\");\n                    }\n                    goto LAB_00411a81;\n                  }\n                  bVar5 = *(byte *)(lVar21 + 0x68);\n                  uVar15 = local_f0;\n                  plVar19 = local_a0;\n                }\n                local_a0 = plVar19;\n                if ((bVar5 & 0x20) != 0) {\n                  if (0 < *(long *)(lVar21 + 0x10)) {\n                    lVar14 = 0;\n                    do {\n                      lVar29 = *plVar19;\n                      lVar16 = *(long *)(*(long *)(lVar21 + 0x18) + lVar14 * 8);\n                      lVar17 = lVar16 * 0x10 + lVar29;\n                      if ((*(byte *)(lVar17 + 10) & 0x10) == 0) goto LAB_004116fe;\n                      uVar9 = *(uint *)(lVar17 + 8);\n                      if ((uVar9 & 0x3ff00) == 0) {\nLAB_004115f0:\n                        iVar10 = FUN_0040e8a0(lVar29,plVar19 + 0x1b,lVar16,local_138);\n                        uVar15 = local_f0;\n                        if (iVar10 != 0) {\n                          lVar29 = (long)iVar10 + local_f0;\n                          if (iVar10 <= local_58) {\n                            iVar10 = local_58;\n                          }\n                          local_58 = iVar10;\n                          local_184 = FUN_004096f0(local_138,lVar29);\n                          uVar9 = local_184;\n                          if (local_184 != 0) goto joined_r0x004119f2;\n                          plVar31 = local_80 + lVar29;\n                          pplVar1 = (long **)(plVar19[6] + *(long *)(plVar19[3] + lVar16 * 8) * 0x18\n                                             );\n                          lVar16 = *plVar31;\n                          if (lVar16 == 0) {\n                            local_178 = *pplVar1;\n                            plStack_170 = pplVar1[1];\n                            local_168 = pplVar1[2];\n                            uVar11 = FUN_0040be50(local_138,lVar29 + -1,local_98);\n                            lVar16 = FUN_0040b3d0(&local_184,plVar19,&local_178,uVar11);\n                            *plVar31 = lVar16;\n                            lVar29 = local_80[lVar29];\n                            uVar15 = local_f0;\n                          }\n                          else {\n                            local_184 = FUN_0040b240(&local_178,*(undefined8 *)(lVar16 + 0x50));\n                            uVar9 = local_184;\n                            if (local_184 != 0) goto joined_r0x004119f2;\n                            uVar11 = FUN_0040be50(local_138,lVar29 + -1,local_98);\n                            plVar31 = local_80 + lVar29;\n                            lVar16 = FUN_0040b3d0(&local_184,plVar19,&local_178,uVar11);\n                            *plVar31 = lVar16;\n                            free(local_168);\n                            lVar29 = local_80[lVar29];\n                            uVar15 = local_f0;\n                          }\n                          local_f0 = uVar15;\n                          if ((lVar29 == 0) && (uVar9 = local_184, local_184 != 0))\n                          goto joined_r0x004119f2;\n                        }\n                      }\n                      else {\n                        uVar18 = FUN_0040be50(local_138,uVar15,local_98);\n                        uVar28 = uVar9 >> 8;\n                        if ((uVar28 & 4) == 0) {\n                          if (((uVar28 & 8) == 0) || ((uVar18 & 1) == 0)) {\nLAB_004115d1:\n                            if ((((uVar28 & 0x20) == 0) || ((uVar18 & 2) != 0)) &&\n                               (((uVar9 & 0x8000) == 0 || ((uVar18 & 8) != 0)))) goto LAB_004115f0;\n                          }\n                        }\n                        else if (((uVar18 & 1) != 0) && ((uVar28 & 8) == 0)) goto LAB_004115d1;\n                      }\nLAB_004116fe:\n                      lVar14 = lVar14 + 1;\n                    } while (lVar14 < *(long *)(lVar21 + 0x10));\n                  }\n                  local_188 = 0;\n                }\n                local_f0 = uVar15 + 1;\n                uVar15 = (ulong)*(byte *)(local_138[1] + uVar15);\n                do {\n                  if (*(long *)(lVar21 + 0x58) != 0) {\n                    lVar14 = *(long *)(*(long *)(lVar21 + 0x58) + uVar15 * 8);\nLAB_004111cd:\n                    if (local_80 != (long *)0x0) goto LAB_004111d8;\n                    goto LAB_004111ee;\n                  }\n                  lVar14 = *(long *)(lVar21 + 0x60);\n                  if (lVar14 != 0) {\n                    uVar18 = FUN_0040be50(local_138,local_f0 - 1,local_98);\n                    if ((uVar18 & 1) == 0) {\n                      lVar14 = *(long *)(lVar14 + uVar15 * 8);\n                    }\n                    else {\n                      lVar14 = *(long *)(lVar14 + 0x800 + uVar15 * 8);\n                    }\n                    goto LAB_004111cd;\n                  }\n                  cVar6 = FUN_0040cb60(local_a0,lVar21);\n                } while (cVar6 != '\\0');\n                local_188 = 0xc;\n                uVar9 = local_188;\njoined_r0x004119f2:\n                local_188 = uVar9;\n                if (local_80 == (long *)0x0) {\n                  plVar19 = (long *)0x0;\n                  goto LAB_00411a32;\n                }\n                lVar14 = 0;\nLAB_004111d8:\n                lVar14 = FUN_00410540(&local_188,local_138,lVar14);\nLAB_004111ee:\n                if (lVar14 == 0) {\n                  plVar19 = local_80;\n                  if (local_188 != 0) goto LAB_00411a32;\n                  if ((local_80 == (long *)0x0) || (((byte)local_218 & (bVar32 ^ 1U)) != 0)) break;\n                  do {\n                    bVar4 = false;\n                    uVar15 = local_f0;\n                    do {\n                      uVar18 = uVar15 + 1;\n                      if (local_78 < (long)uVar18) {\n                        if (bVar4) {\n                          local_f0 = uVar15;\n                        }\n                        goto LAB_0041126d;\n                      }\n                      bVar4 = true;\n                      uVar15 = uVar18;\n                    } while (local_80[uVar18] == 0);\n                    local_f0 = uVar18;\n                    lVar14 = FUN_00410540(&local_188,local_138,0);\n                    if (local_188 != 0) {\n                      if (lVar14 == 0) goto LAB_0041126d;\n                      break;\n                    }\n                  } while (lVar14 == 0);\n                }\n                uVar15 = local_f0;\n                local_18b = (bool)(local_18b & lVar21 == lVar14);\n                if (!local_18b) {\n                  uVar13 = local_228;\n                }\n                lVar21 = lVar14;\n                local_228 = uVar13;\n                if (((*(byte *)(lVar14 + 0x68) & 0x10) != 0) &&\n                   ((-1 < (char)*(byte *)(lVar14 + 0x68) ||\n                    (lVar14 = FUN_0040c070(local_138,*(undefined8 *)(lVar14 + 0x10),lVar14 + 0x18,\n                                           local_f0), lVar14 != 0)))) {\n                  uVar13 = uVar15;\n                  if (!bVar32) goto LAB_0041127f;\n                  local_210 = uVar15;\n                  local_218 = (long *)0x1;\n                  local_1e8 = (long *)0x0;\n                }\n              }\nLAB_0041126d:\n              uVar13 = local_210;\n              if (local_1e8 != (long *)0x0) {\n                *local_1e8 = *local_1e8 + local_228;\n              }\n            }\n          }\n          else {\n            local_188 = FUN_0040bd00(local_138,lVar21 + 0x10,lVar21 + 0x18,0);\n            if (local_188 == 0) {\n              bVar5 = *(byte *)(lVar21 + 0x68);\n              if ((bVar5 & 0x40) != 0) {\n                local_188 = FUN_0040fcc0(local_138,lVar21 + 0x10,lVar21 + 0x18);\n                if (local_188 != 0) goto LAB_0041213e;\n                bVar5 = *(byte *)(lVar21 + 0x68);\n              }\n              local_18b = false;\n              goto LAB_004110c8;\n            }\nLAB_0041213e:\n            uVar13 = (long)(int)local_188;\n          }\nLAB_0041127f:\n          plVar19 = local_80;\n          if (uVar13 != 0xffffffffffffffff) {\n            if (uVar13 == 0xfffffffffffffffe) goto LAB_00411a81;\n            local_90 = uVar13;\n            if (((*(byte *)(param_1 + 7) & 0x10) == 0) && ((long *)0x1 < param_7)) {\n              local_88 = (long *)FUN_0040c070(local_138,*(undefined8 *)(local_80[uVar13] + 0x10),\n                                              local_80[uVar13] + 0x18,uVar13);\n              if (((*(byte *)(plVar3 + 0x16) & 1) != 0) || (plVar3[0x13] != 0)) {\nLAB_00411acf:\n                plVar20 = local_88;\n                plVar31 = local_a0;\n                if (uVar13 < 0x1fffffffffffffff) {\n                  uVar15 = uVar13 + 1;\n                  plVar19 = (long *)malloc(uVar15 * 8);\n                  if (plVar19 == (long *)0x0) goto LAB_00411a81;\n                  if (plVar31[0x13] == 0) {\n                    plStack_170 = (long *)0x0;\n                    local_158 = (undefined  [16])0x0;\n                    local_148 = (void *)0x0;\n                    local_178 = plVar19;\n                    local_168 = plVar20;\n                    local_160 = uVar13;\n                    local_1ec = FUN_00410700(local_138,&local_178);\n                    free(local_148);\n                    if (local_1ec == 0) {\n                      if (*plVar19 == 0) {\n                        free(plVar19);\n                        goto LAB_004118e0;\n                      }\nLAB_00411c38:\n                      free(local_80);\n                      local_90 = uVar13;\n                      local_88 = plVar20;\n                      local_80 = plVar19;\n                      goto LAB_00411463;\n                    }\nLAB_004120c9:\n                    local_218 = (long *)0x0;\n                  }\n                  else {\n                    local_218 = (long *)malloc(uVar15 * 8);\n                    if (local_218 == (long *)0x0) {\n                      free(plVar19);\n                      local_1ec = 0xc;\n                      plVar19 = local_80;\n                      goto LAB_00411480;\n                    }\n                    while( true ) {\n                      memset(local_218,0,uVar15 * 8);\n                      local_158 = (undefined  [16])0x0;\n                      local_148 = (void *)0x0;\n                      local_178 = plVar19;\n                      plStack_170 = local_218;\n                      local_168 = plVar20;\n                      local_160 = uVar13;\n                      local_1ec = FUN_00410700(local_138,&local_178);\n                      free(local_148);\n                      if (local_1ec != 0) break;\n                      if ((*plVar19 != 0) || (*local_218 != 0)) {\n                        local_1ec = FUN_0040b8c0(plVar31,plVar19,local_218,uVar15);\n                        free(local_218);\n                        if (local_1ec != 0) goto LAB_004120c9;\n                        goto LAB_00411c38;\n                      }\n                      do {\n                        uVar15 = uVar13;\n                        uVar13 = uVar15 - 1;\n                        if (uVar13 == 0xffffffffffffffff) {\n                          free(plVar19);\n                          free(local_218);\n                          FUN_00409d90(local_138);\n                          lVar21 = local_180;\n                          goto LAB_004118f0;\n                        }\n                        lVar21 = local_80[uVar13];\n                      } while ((lVar21 == 0) || ((*(byte *)(lVar21 + 0x68) & 0x10) == 0));\n                      plVar20 = (long *)FUN_0040c070(local_138,*(undefined8 *)(lVar21 + 0x10),\n                                                     lVar21 + 0x18,uVar13);\n                    }\n                  }\n                  free(plVar19);\n                  free(local_218);\n                  plVar19 = local_80;\n                  if (local_1ec == 1) goto LAB_004118e0;\n                  goto LAB_00411480;\n                }\n                local_1ec = 0xc;\n                goto LAB_00411480;\n              }\n            }\n            else if (plVar3[0x13] != 0) {\n              local_88 = (long *)FUN_0040c070(local_138,*(undefined8 *)(local_80[uVar13] + 0x10),\n                                              local_80[uVar13] + 0x18,uVar13);\n              goto LAB_00411acf;\n            }\nLAB_00411463:\n            plVar19 = local_80;\n            local_1ec = uVar8;\n            if (param_7 == (long *)0x0) goto LAB_00411480;\n            puVar23 = param_8 + 2;\n            if ((long *)0x1 < param_7) goto LAB_00411e40;\n            *param_8 = 0;\n            param_8[1] = local_90;\n            goto LAB_00412137;\n          }\nLAB_004118e0:\n          FUN_00409d90(local_138);\n          lVar21 = local_180;\n        }\nLAB_004118f0:\n        local_180 = lVar21 + iVar7;\n      } while ((lVar26 <= local_180) && (local_180 <= lVar24));\n    }\nLAB_004113d0:\n    local_1ec = 1;\n    plVar19 = local_80;\n  }\n  else {\n    if (lVar24 < 0x666666666666667) {\n      pvVar12 = malloc(lVar26 * 0x50);\n      local_60 = pvVar12;\n      local_40 = malloc(lVar26 << 4);\n      if ((local_40 != (void *)0x0) && (pvVar12 != (void *)0x0)) goto LAB_00410d7c;\n    }\nLAB_00411a81:\n    local_1ec = 0xc;\n    plVar19 = local_80;\n  }\nLAB_00411480:\n  free(plVar19);\n  if (plVar3[0x13] != 0) {\n    FUN_00409d90(local_138);\n    free(local_40);\n    free(local_60);\n  }\n  FUN_00409d50(local_138);\nLAB_004114a0:\n  return (ulong)local_1ec;\nLAB_00411e40:\n  do {\n    puVar23[1] = 0xffffffffffffffff;\n    puVar22 = puVar23 + 2;\n    *puVar23 = 0xffffffffffffffff;\n    puVar23 = puVar22;\n  } while (param_8 + (long)param_7 * 2 != puVar22);\n  *param_8 = 0;\n  param_8[1] = local_90;\n  if (((*(byte *)(param_1 + 7) & 0x10) == 0) && (param_7 != (long *)0x1)) {\n    bVar32 = false;\n    if ((*(byte *)(plVar3 + 0x16) & 1) != 0) {\n      bVar32 = 0 < plVar3[0x13];\n    }\n    local_1ec = FUN_0040f250(param_1,local_138,param_7,param_8,bVar32);\n    plVar19 = local_80;\n    if (local_1ec != 0) goto LAB_00411480;\n    uVar13 = *param_8;\n  }\n  else {\nLAB_00412137:\n    uVar13 = 0;\n  }\n  plVar27 = (long *)0x0;\n  puVar23 = param_8;\n  while( true ) {\n    if (uVar13 != 0xffffffffffffffff) {\n      uVar15 = puVar23[1];\n      uVar18 = uVar13;\n      uVar30 = uVar15;\n      if (local_ac != '\\0') {\n        uVar18 = local_100;\n        if (local_108 != uVar13) {\n          uVar18 = *(ulong *)(local_120 + uVar13 * 8);\n        }\n        *puVar23 = uVar18;\n        uVar30 = local_100;\n        if (local_108 != uVar15) {\n          uVar30 = *(ulong *)(local_120 + uVar15 * 8);\n        }\n      }\n      *puVar23 = uVar18 + local_180;\n      puVar23[1] = uVar30 + local_180;\n    }\n    plVar27 = (long *)((long)plVar27 + 1);\n    puVar23 = puVar23 + 2;\n    if (plVar27 == param_7) break;\n    uVar13 = *puVar23;\n  }\n  if (0 < local_1a8) {\n    puVar23 = param_8 + (long)param_7 * 2;\n    do {\n      *puVar23 = 0xffffffffffffffff;\n      puVar22 = puVar23 + 2;\n      puVar23[1] = 0xffffffffffffffff;\n      puVar23 = puVar22;\n    } while (param_8 + (local_1a8 + (long)param_7) * 2 != puVar22);\n  }\n  lVar26 = plVar3[0x1c];\n  plVar19 = local_80;\n  local_1ec = uVar8;\n  if (lVar26 != 0) {\n    for (lVar24 = 0; lVar24 != (long)param_7 + -1; lVar24 = lVar24 + 1) {\n      lVar21 = *(long *)(lVar26 + lVar24 * 8);\n      if (lVar21 != lVar24) {\n        param_8[lVar24 * 2 + 2] = param_8[(lVar21 + 1) * 2];\n        param_8[lVar24 * 2 + 3] = param_8[(*(long *)(lVar26 + lVar24 * 8) + 1) * 2 + 1];\n      }\n    }\n  }\n  goto LAB_00411480;\n}\n\n",
            "funcName": "FUN_00410a30"
        },
        {
            "funcStartAddr": "0x412190",
            "funcEndAddr": "0x41294c",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_00412190(long param_1,ulong *param_2,ulong param_3,long param_4)\n\n{\n  ulong *puVar1;\n  long lVar2;\n  byte bVar3;\n  long *plVar4;\n  long lVar5;\n  long lVar6;\n  char cVar7;\n  uint uVar8;\n  long lVar9;\n  void *pvVar10;\n  ulong uVar11;\n  undefined8 uVar12;\n  long lVar13;\n  ulong uVar14;\n  long lVar15;\n  long *plVar16;\n  long *plVar17;\n  long lVar18;\n  long *plVar19;\n  ulong *puVar20;\n  long lVar21;\n  long lVar22;\n  void **ppvVar23;\n  long lVar24;\n  long lVar25;\n  uint local_7c;\n  ulong local_78;\n  ulong uStack_70;\n  ulong local_68;\n  ulong uStack_60;\n  ulong local_58;\n  ulong uStack_50;\n  void *local_48 [3];\n  \n  lVar2 = param_3 * 8;\n  plVar4 = *(long **)(param_1 + 0x98);\n  plVar16 = (long *)(lVar2 + *(long *)(param_1 + 0xb8));\n  lVar5 = *plVar16;\n  local_7c = 0;\n  if (lVar5 == 0) {\n    uVar11 = *param_2;\n    if (*(long *)(param_4 + 8) == 0) {\n      *(undefined8 *)(lVar2 + uVar11) = 0;\n      return 0;\n    }\n    uVar12 = FUN_0040b6d0(&local_7c,plVar4,param_4);\n    *(undefined8 *)(lVar2 + uVar11) = uVar12;\n    return (ulong)local_7c;\n  }\n  if (*(long *)(param_4 + 8) == 0) {\n    *(undefined8 *)(*param_2 + param_3 * 8) = 0;\n    bVar3 = *(byte *)(*plVar16 + 0x68);\n  }\n  else {\n    local_78 = local_78 & 0xffffffff00000000;\n    lVar9 = FUN_0040b6d0(&local_78,plVar4,param_4);\n    if ((int)local_78 != 0) {\n      return local_78 & 0xffffffff;\n    }\n    lVar25 = *(long *)(lVar9 + 0x38);\n    if (lVar25 == 0) {\n      lVar24 = *(long *)(param_4 + 8);\n      *(undefined8 *)(lVar9 + 0x40) = 0;\n      *(long *)(lVar9 + 0x38) = lVar24;\n      pvVar10 = malloc(lVar24 << 3);\n      *(void **)(lVar9 + 0x48) = pvVar10;\n      if (pvVar10 == (void *)0x0) {\n        return 0xc;\n      }\n      local_78 = local_78 & 0xffffffff00000000;\n      if (0 < *(long *)(param_4 + 8)) {\n        do {\n          uVar8 = FUN_0040a660(lVar9 + 0x38,\n                               plVar4[7] + *(long *)(*(long *)(param_4 + 0x10) + lVar25 * 8) * 0x18)\n          ;\n          local_78 = local_78 & 0xffffffff00000000 | (ulong)uVar8;\n          if (uVar8 != 0) {\n            return 0xc;\n          }\n          lVar25 = lVar25 + 1;\n        } while (lVar25 < *(long *)(param_4 + 8));\n      }\n    }\n    lVar25 = lVar5 + 8;\n    uVar11 = FUN_0040abd0(param_4,lVar25,lVar9 + 0x38);\n    local_7c = (uint)uVar11;\n    if (local_7c != 0) {\n      return uVar11;\n    }\n    if (param_2[5] != 0) {\n      lVar9 = *(long *)(param_1 + 0xd8);\n      if (0 < (long)param_2[5]) {\n        lVar24 = 0;\n        do {\n          plVar16 = (long *)(lVar9 + *(long *)(param_2[6] + lVar24 * 8) * 0x28);\n          if ((plVar16[2] < (long)param_3) && ((long)param_3 <= plVar16[1])) {\n            lVar15 = *plVar4;\n            lVar18 = *(long *)(param_4 + 8);\n            lVar13 = *(long *)(lVar15 + *plVar16 * 0x10);\n            if (param_3 == plVar16[3]) {\n              if (0 < lVar18) {\n                plVar16 = *(long **)(param_4 + 0x10);\n                lVar22 = -1;\n                lVar21 = -1;\n                plVar17 = plVar16;\n                do {\n                  while( true ) {\n                    lVar6 = *plVar17;\n                    plVar19 = (long *)(lVar6 * 0x10 + lVar15);\n                    if (*(char *)(plVar19 + 1) != '\\b') break;\n                    if (lVar13 == *plVar19) {\n                      lVar21 = lVar6;\n                    }\n                    plVar17 = plVar17 + 1;\n                    if (plVar16 + lVar18 == plVar17) goto LAB_004128be;\n                  }\n                  if ((*(char *)(plVar19 + 1) == '\\t') && (lVar13 == *plVar19)) {\n                    lVar22 = lVar6;\n                  }\n                  plVar17 = plVar17 + 1;\n                } while (plVar16 + lVar18 != plVar17);\nLAB_004128be:\n                if (lVar21 < 0) {\n                  if (-1 < lVar22) {\nLAB_004128db:\n                    lVar18 = 0;\n                    while( true ) {\n                      lVar13 = plVar16[lVar18];\n                      lVar21 = lVar13 * 0x18;\n                      lVar15 = FUN_0040a120(*(undefined8 *)(plVar4[7] + lVar21 + 8),\n                                            plVar4[7] + lVar21 + 0x10,lVar22);\n                      if ((lVar15 == 0) &&\n                         (lVar15 = FUN_0040a120(*(undefined8 *)(lVar21 + plVar4[6] + 8),\n                                                lVar21 + plVar4[6] + 0x10), lVar15 == 0)) {\n                        uVar11 = FUN_0040c930(plVar4,lVar13,param_4,lVar25);\n                        if ((int)uVar11 != 0) {\n                          return uVar11;\n                        }\n                      }\n                      else {\n                        lVar18 = lVar18 + 1;\n                      }\n                      if (*(long *)(param_4 + 8) == lVar18 || *(long *)(param_4 + 8) < lVar18)\n                      break;\n                      plVar16 = *(long **)(param_4 + 0x10);\n                    }\n                  }\n                }\n                else {\n                  uVar11 = FUN_0040c930(plVar4,lVar21,param_4,lVar25);\n                  if ((int)uVar11 != 0) {\n                    return uVar11;\n                  }\n                  if ((-1 < lVar22) && (0 < *(long *)(param_4 + 8))) {\n                    plVar16 = *(long **)(param_4 + 0x10);\n                    goto LAB_004128db;\n                  }\n                }\n              }\n            }\n            else {\n              lVar21 = 0;\n              if (0 < lVar18) {\n                do {\n                  lVar18 = *(long *)(*(long *)(param_4 + 0x10) + lVar21 * 8);\n                  plVar16 = (long *)(lVar15 + lVar18 * 0x10);\n                  if ((*(byte *)(plVar16 + 1) - 8 < 2) && (lVar13 == *plVar16)) {\n                    uVar11 = FUN_0040c930(plVar4,lVar18,param_4,lVar25);\n                    if ((int)uVar11 != 0) {\n                      return uVar11;\n                    }\n                    if (*(long *)(param_4 + 8) <= lVar21 + 1) break;\n                  }\n                  else if (*(long *)(param_4 + 8) <= lVar21 + 1) break;\n                  lVar21 = lVar21 + 1;\n                  lVar15 = *plVar4;\n                } while( true );\n              }\n            }\n          }\n          lVar24 = lVar24 + 1;\n        } while (lVar24 < (long)param_2[5]);\n      }\n      local_7c = 0;\n    }\n    uVar11 = *param_2;\n    uVar12 = FUN_0040b6d0(&local_7c,plVar4,param_4);\n    *(undefined8 *)(lVar2 + uVar11) = uVar12;\n    if (local_7c != 0) {\n      return (ulong)local_7c;\n    }\n    bVar3 = *(byte *)(*(long *)(lVar2 + *(long *)(param_1 + 0xb8)) + 0x68);\n  }\n  if ((bVar3 & 0x40) != 0) {\n    lVar9 = 0;\n    lVar25 = *(long *)(param_1 + 200);\n    while (lVar9 < lVar25) {\n      lVar18 = (lVar9 + lVar25) / 2;\n      lVar24 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar18 * 0x28);\n      while (lVar13 = lVar18, (long)param_3 <= lVar24) {\n        if (lVar13 <= lVar9) goto LAB_004123c3;\n        lVar18 = (lVar9 + lVar13) / 2;\n        lVar24 = *(long *)(*(long *)(param_1 + 0xd8) + 8 + lVar18 * 0x28);\n        lVar25 = lVar13;\n      }\n      lVar9 = lVar13 + 1;\n    }\nLAB_004123c3:\n    if (((lVar9 < *(long *)(param_1 + 200)) &&\n        (param_3 == *(ulong *)(*(long *)(param_1 + 0xd8) + 8 + lVar9 * 0x28))) && (lVar9 != -1)) {\n      plVar4 = *(long **)(param_1 + 0x98);\n      local_78 = 0;\n      if (0 < *(long *)(lVar5 + 0x10)) {\n        lVar25 = 0;\n        do {\n          uVar11 = *(ulong *)(*(long *)(lVar5 + 0x18) + lVar25 * 8);\n          if (((uVar11 != param_2[2]) || (param_3 != param_2[3])) &&\n             (*(char *)(uVar11 * 0x10 + *plVar4 + 8) == '\\x04')) {\n            puVar20 = (ulong *)(lVar9 * 0x28 + *(long *)(param_1 + 0xd8));\n            lVar24 = lVar9;\n            do {\n              if (uVar11 == *puVar20) {\n                lVar18 = param_3 + (puVar20[3] - puVar20[2]);\n                if (puVar20[3] - puVar20[2] == 0) {\n                  uVar12 = **(undefined8 **)(plVar4[5] + 0x10 + uVar11 * 0x18);\n                }\n                else {\n                  uVar12 = *(undefined8 *)(plVar4[3] + uVar11 * 8);\n                }\n                if (((lVar18 <= (long)param_2[3]) &&\n                    (lVar13 = *(long *)(*param_2 + lVar18 * 8), lVar13 != 0)) &&\n                   ((lVar13 = FUN_0040a120(*(undefined8 *)(lVar13 + 0x10),lVar13 + 0x18,uVar12),\n                    lVar13 != 0 &&\n                    (cVar7 = FUN_0040a3b0(param_1,param_2 + 5,param_2 + 6,uVar11,param_3),\n                    cVar7 == '\\0')))) {\n                  if (local_78 == 0) {\n                    local_78 = *param_2;\n                    uStack_70 = param_2[1];\n                    local_68 = param_2[2];\n                    uStack_60 = param_2[3];\n                    local_58 = param_2[4];\n                    uStack_50 = param_2[5];\n                    local_48[0] = (void *)param_2[6];\n                    uVar14 = FUN_0040b1c0(&local_58,param_2 + 4,lVar18,0x4124f7);\n                    if ((int)uVar14 == 0) goto LAB_00412534;\n                  }\n                  else {\nLAB_00412534:\n                    local_68 = uVar11;\n                    uStack_60 = param_3;\n                    cVar7 = FUN_00408b10(&local_58,lVar24);\n                    if (cVar7 == '\\0') {\n                      uVar14 = 0xc;\n                    }\n                    else {\n                      uVar12 = *(undefined8 *)(local_78 + lVar2);\n                      uVar14 = FUN_00410700(param_1,&local_78);\n                      if (((int)uVar14 == 0) &&\n                         ((param_2[1] == 0 ||\n                          (uVar14 = FUN_0040b8c0(plVar4,param_2[1],local_78,param_3 + 1),\n                          (int)uVar14 == 0)))) {\n                        ppvVar23 = local_48;\n                        *(undefined8 *)(local_78 + lVar2) = uVar12;\n                        uVar14 = uStack_50;\n                        lVar18 = FUN_0040a120(uStack_50,ppvVar23,lVar24);\n                        lVar18 = lVar18 + -1;\n                        if ((-1 < lVar18) && (lVar18 < (long)uVar14)) {\n                          uStack_50 = uVar14 - 1;\n                          FUN_0040a290(&uStack_50,ppvVar23,lVar18);\n                        }\n                        puVar20 = (ulong *)(*(long *)(param_1 + 0xd8) + lVar24 * 0x28);\n                        goto LAB_00412610;\n                      }\n                    }\n                  }\n                  if (local_78 == 0) {\n                    return uVar14;\n                  }\n                  goto LAB_0041272c;\n                }\n              }\nLAB_00412610:\n              lVar24 = lVar24 + 1;\n              puVar1 = puVar20 + 4;\n              puVar20 = puVar20 + 5;\n            } while (*(char *)puVar1 != '\\0');\n          }\n          lVar25 = lVar25 + 1;\n        } while (lVar25 < *(long *)(lVar5 + 0x10));\n        if (local_78 != 0) {\n          uVar14 = 0;\nLAB_0041272c:\n          free(local_48[0]);\n          return uVar14 & 0xffffffff;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00412190"
        },
        {
            "funcStartAddr": "0x4129c0",
            "funcEndAddr": "0x412bc9",
            "decompiledFuncCode": "\nundefined8\nFUN_004129c0(undefined4 *param_1,long *param_2,byte *param_3,int param_4,undefined8 param_5,\n            char param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  ulong uVar5;\n  long lVar6;\n  byte bVar7;\n  undefined auStack_38 [8];\n  char local_30;\n  \n  lVar6 = (long)param_4;\n  lVar4 = param_2[9];\n  if ((*(int *)(param_2 + 0x12) != 1) && (iVar1 = FUN_0040a0d0(param_2,lVar4), 1 < iVar1)) {\n    lVar6 = param_2[2];\n    *param_1 = 1;\n    param_1[2] = *(undefined4 *)(lVar6 + lVar4 * 4);\n    param_2[9] = iVar1 + lVar4;\n    return 0;\n  }\n  bVar7 = param_3[8];\n  lVar6 = lVar6 + lVar4;\n  param_2[9] = lVar6;\n  if (((bVar7 & 0xfb) != 0x1a) && (bVar7 != 0x1c)) {\n    if (((bVar7 == 0x16) && (param_6 == '\\0')) &&\n       (FUN_00408630(auStack_38,param_2,param_5), local_30 != '\\x15')) {\n      return 0xb;\n    }\n    bVar7 = *param_3;\n    *param_1 = 0;\n    *(byte *)(param_1 + 2) = bVar7;\n    return 0;\n  }\n  if (param_2[0xd] <= lVar6) {\n    return 7;\n  }\n  uVar5 = (ulong)*param_3;\n  lVar4 = 0;\n  do {\n    iVar1 = (int)lVar4;\n    if ((bVar7 == 0x1e) && (*(char *)((long)param_2 + 0x8b) != '\\0')) {\n      if (*(char *)((long)param_2 + 0x8c) == '\\0') {\n        lVar3 = lVar6 + 1;\n        param_2[9] = lVar3;\n        bVar7 = *(byte *)(lVar6 + *param_2 + param_2[5]);\n      }\n      else {\n        if (((lVar6 != param_2[6]) && (*(int *)(param_2[2] + lVar6 * 4) == -1)) ||\n           (bVar7 = *(byte *)(*(long *)(param_2[3] + lVar6 * 8) + *param_2 + param_2[5]),\n           (bVar7 & 0x80) != 0)) goto LAB_00412a99;\n        lVar3 = 1;\n        if (*(int *)(param_2 + 0x12) != 1) {\n          iVar2 = FUN_0040a0d0(param_2,lVar6);\n          lVar3 = (long)iVar2;\n        }\n        lVar3 = lVar3 + lVar6;\n        param_2[9] = lVar3;\n      }\n    }\n    else {\nLAB_00412a99:\n      lVar3 = lVar6 + 1;\n      param_2[9] = lVar3;\n      bVar7 = *(byte *)(param_2[1] + lVar6);\n    }\n    if (param_2[0xd] == lVar3 || param_2[0xd] < lVar3) {\n      return 7;\n    }\n    if (((byte)uVar5 == bVar7) && (*(char *)(param_2[1] + lVar3) == ']')) {\n      param_2[9] = lVar3 + 1;\n      *(undefined *)(*(long *)(param_1 + 2) + (long)iVar1) = 0;\n      bVar7 = param_3[8];\n      if (bVar7 == 0x1c) {\n        *param_1 = 2;\n        return 0;\n      }\n      if (bVar7 != 0x1e) {\n        if (bVar7 != 0x1a) {\n          return 0;\n        }\n        *param_1 = 3;\n        return 0;\n      }\n      *param_1 = 4;\n      return 0;\n    }\n    *(byte *)(*(long *)(param_1 + 2) + lVar4) = bVar7;\n    lVar4 = lVar4 + 1;\n    if (lVar4 == 0x20) {\n      return 7;\n    }\n    bVar7 = param_3[8];\n    lVar6 = param_2[9];\n  } while( true );\n}\n\n",
            "funcName": "FUN_004129c0"
        },
        {
            "funcStartAddr": "0x412be0",
            "funcEndAddr": "0x413224",
            "decompiledFuncCode": "\nundefined8 FUN_00412be0(long *param_1,long *param_2,ulong param_3)\n\n{\n  byte bVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  int iVar5;\n  uint uVar6;\n  ushort **ppuVar7;\n  undefined8 uVar8;\n  wint_t wVar9;\n  byte bVar10;\n  uint uVar11;\n  undefined local_48 [8];\n  char local_40;\n  \n  lVar2 = param_2[9];\n  if (param_2[0xd] == lVar2 || param_2[0xd] < lVar2) {\n    *(undefined *)(param_1 + 1) = 2;\n    return 0;\n  }\n  lVar3 = param_2[1];\n  iVar5 = *(int *)(param_2 + 0x12);\n  bVar1 = *(byte *)(lVar3 + lVar2);\n  bVar10 = *(byte *)((long)param_1 + 10) & 0x9f;\n  *(byte *)((long)param_1 + 10) = bVar10;\n  *(byte *)param_1 = bVar1;\n  uVar11 = (uint)param_3;\n  if (iVar5 < 2) {\n    if (bVar1 == 0x5c) goto LAB_00412ce0;\n    *(undefined *)(param_1 + 1) = 1;\n    ppuVar7 = __ctype_b_loc();\n    *(byte *)((long)param_1 + 10) =\n         bVar10 | (byte)(((*ppuVar7)[bVar1] >> 3 & 1 | (uint)(bVar1 == 0x5f)) << 6);\n  }\n  else {\n    if ((lVar2 != param_2[6]) && (*(int *)(param_2[2] + lVar2 * 4) == -1)) {\n      *(uint *)(param_1 + 1) = *(uint *)(param_1 + 1) & 0xffdfff00 | 0x200001;\n      return 1;\n    }\n    if (bVar1 == 0x5c) {\nLAB_00412ce0:\n      lVar4 = lVar2 + 1;\n      if (param_2[0xb] <= lVar4) {\n        *(undefined *)(param_1 + 1) = 0x24;\n        return 1;\n      }\n      if (*(char *)((long)param_2 + 0x8b) == '\\0') {\nLAB_00412d2e:\n        uVar6 = (uint)*(byte *)(lVar3 + 1 + lVar2);\nLAB_00412d3b:\n        *(char *)param_1 = (char)uVar6;\n        *(undefined *)(param_1 + 1) = 1;\n        if (1 < iVar5) {\n          wVar9 = *(wint_t *)(param_2[2] + lVar4 * 4);\n          goto LAB_00412d4e;\n        }\n        ppuVar7 = __ctype_b_loc();\n        *(byte *)((long)param_1 + 10) =\n             (byte)(((*ppuVar7)[uVar6] >> 3 & 1 | (uint)((char)uVar6 == '_')) << 6) |\n             *(byte *)((long)param_1 + 10) & 0xbf;\n      }\n      else {\n        if (iVar5 < 2) {\nLAB_00413202:\n          if (*(char *)((long)param_2 + 0x8c) == '\\0') {\n            uVar6 = (uint)*(byte *)(*param_2 + lVar4 + param_2[5]);\n          }\n          else {\n            bVar1 = *(byte *)(*param_2 + param_2[5] + *(long *)(param_2[3] + lVar4 * 8));\n            uVar6 = (uint)bVar1;\n            if ((bVar1 & 0x80) != 0) goto LAB_00412d2e;\n          }\n          goto LAB_00412d3b;\n        }\n        wVar9 = *(wint_t *)(param_2[2] + lVar4 * 4);\n        if ((wVar9 != 0xffffffff) &&\n           ((param_2[6] == lVar2 + 2 || (*(int *)(param_2[2] + 4 + lVar4 * 4) != -1))))\n        goto LAB_00413202;\n        bVar1 = *(byte *)(lVar3 + 1 + lVar2);\n        *(undefined *)(param_1 + 1) = 1;\n        uVar6 = (uint)bVar1;\n        *(byte *)param_1 = bVar1;\nLAB_00412d4e:\n        iVar5 = iswalnum(wVar9);\n        *(byte *)((long)param_1 + 10) =\n             *(byte *)((long)param_1 + 10) & 0xbf | (iVar5 != 0 || wVar9 == 0x5f) << 6;\n      }\n      switch(uVar6 - 0x27 & 0xff) {\n      case 0:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 0x80;\n          return 2;\n        }\n        return 2;\n      case 1:\n        uVar8 = 2;\n        if ((param_3 & 0x2000) != 0) {\n          return 2;\n        }\n        break;\n      case 2:\n        uVar8 = 2;\n        if ((param_3 & 0x2000) != 0) {\n          return 2;\n        }\n        goto LAB_00412e1a;\n      default:\n        return 2;\n      case 4:\n        uVar8 = 2;\n        if ((uVar11 & 0x402) != 2) {\n          return 2;\n        }\n        goto LAB_00412e52;\n      case 10:\n      case 0xb:\n      case 0xc:\n      case 0xd:\n      case 0xe:\n      case 0xf:\n      case 0x10:\n      case 0x11:\n      case 0x12:\n        if ((param_3 & 0x4000) == 0) {\n          *(undefined *)(param_1 + 1) = 4;\n          *param_1 = (long)(int)(uVar6 - 0x31);\n          return 2;\n        }\n        return 2;\n      case 0x15:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 6;\n          return 2;\n        }\n        return 2;\n      case 0x17:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 9;\n          return 2;\n        }\n        return 2;\n      case 0x18:\n        uVar8 = 2;\n        if ((uVar11 & 0x402) != 2) {\n          return 2;\n        }\n        goto LAB_00412e82;\n      case 0x1b:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 0x200;\n          return 2;\n        }\n        return 2;\n      case 0x2c:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0x23;\n          return 2;\n        }\n        return 2;\n      case 0x30:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0x21;\n          return 2;\n        }\n        return 2;\n      case 0x39:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 0x40;\n          return 2;\n        }\n        return 2;\n      case 0x3b:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0xc;\n          *(undefined4 *)param_1 = 0x100;\n          return 2;\n        }\n        return 2;\n      case 0x4c:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0x22;\n          return 2;\n        }\n        return 2;\n      case 0x50:\n        if ((param_3 & 0x80000) == 0) {\n          *(undefined *)(param_1 + 1) = 0x20;\n          return 2;\n        }\n        return 2;\n      case 0x54:\n        uVar8 = 2;\n        if ((uVar11 & 0x1200) != 0x200) {\n          return 2;\n        }\n        goto LAB_00412ee9;\n      case 0x55:\n        if ((param_3 & 0x8400) == 0) {\n          *(undefined *)(param_1 + 1) = 10;\n          return 2;\n        }\n        return 2;\n      case 0x56:\n        uVar8 = 2;\n        if ((uVar11 & 0x1200) != 0x200) {\n          return 2;\n        }\n        goto LAB_00412fb1;\n      }\n      goto LAB_00412dfa;\n    }\n    lVar4 = param_2[2];\n    *(undefined *)(param_1 + 1) = 1;\n    wVar9 = *(wint_t *)(lVar4 + lVar2 * 4);\n    iVar5 = iswalnum(wVar9);\n    *(byte *)((long)param_1 + 10) =\n         *(byte *)((long)param_1 + 10) & 0xbf | (iVar5 != 0 || wVar9 == 0x5f) << 6;\n  }\n  switch(bVar1) {\n  case 10:\n    if ((param_3 & 0x800) == 0) {\n      return 1;\n    }\n    break;\n  default:\n    return 1;\n  case 0x24:\n    if (((param_3 & 8) == 0) && (lVar2 + 1 != param_2[0xb])) {\n      param_2[9] = lVar2 + 1;\n      FUN_00412be0(local_48,param_2,param_3);\n      param_2[9] = param_2[9] + -1;\n      if (1 < (byte)(local_40 - 9U)) {\n        return 1;\n      }\n    }\n    *(undefined *)(param_1 + 1) = 0xc;\n    *(undefined4 *)param_1 = 0x20;\n    return 1;\n  case 0x28:\n    uVar8 = 1;\n    if ((param_3 & 0x2000) == 0) {\n      return 1;\n    }\nLAB_00412dfa:\n    *(undefined *)(param_1 + 1) = 8;\n    return uVar8;\n  case 0x29:\n    uVar8 = 1;\n    if ((param_3 & 0x2000) == 0) {\n      return 1;\n    }\nLAB_00412e1a:\n    *(undefined *)(param_1 + 1) = 9;\n    return uVar8;\n  case 0x2a:\n    *(undefined *)(param_1 + 1) = 0xb;\n    return 1;\n  case 0x2b:\n    uVar8 = 1;\n    if ((param_3 & 0x402) != 0) {\n      return 1;\n    }\nLAB_00412e52:\n    *(undefined *)(param_1 + 1) = 0x12;\n    return uVar8;\n  case 0x2e:\n    *(undefined *)(param_1 + 1) = 5;\n    return 1;\n  case 0x3f:\n    uVar8 = 1;\n    if ((param_3 & 0x402) != 0) {\n      return 1;\n    }\nLAB_00412e82:\n    *(undefined *)(param_1 + 1) = 0x13;\n    return uVar8;\n  case 0x5b:\n    *(undefined *)(param_1 + 1) = 0x14;\n    return 1;\n  case 0x5e:\n    if (((param_3 & 0x800008) == 0) && (lVar2 != 0)) {\n      if (*(char *)(lVar3 + -1 + lVar2) != '\\n') {\n        return 1;\n      }\n      if ((param_3 & 0x800) == 0) {\n        return 1;\n      }\n    }\n    *(undefined *)(param_1 + 1) = 0xc;\n    *(undefined4 *)param_1 = 0x10;\n    return 1;\n  case 0x7b:\n    uVar8 = 1;\n    if ((uVar11 & 0x1200) != 0x1200) {\n      return 1;\n    }\nLAB_00412ee9:\n    *(undefined *)(param_1 + 1) = 0x17;\n    return uVar8;\n  case 0x7c:\n    if ((uVar11 & 0x8400) != 0x8000) {\n      return 1;\n    }\n    break;\n  case 0x7d:\n    uVar8 = 1;\n    if ((uVar11 & 0x1200) != 0x1200) {\n      return 1;\n    }\nLAB_00412fb1:\n    *(undefined *)(param_1 + 1) = 0x18;\n    return uVar8;\n  }\n  *(undefined *)(param_1 + 1) = 10;\n  return 1;\n}\n\n",
            "funcName": "FUN_00412be0"
        },
        {
            "funcStartAddr": "0x413290",
            "funcEndAddr": "0x413336",
            "decompiledFuncCode": "\nlong FUN_00413290(long param_1,byte *param_2,undefined8 param_3)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  \n  lVar6 = -2;\n  lVar5 = -1;\n  while( true ) {\n    lVar4 = lVar5;\n    iVar3 = FUN_00412be0(param_2,param_1,param_3);\n    bVar1 = *param_2;\n    *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar3;\n    bVar2 = param_2[8];\n    if (bVar2 == 2) {\n      return -2;\n    }\n    if (bVar2 == 0x18) break;\n    if (bVar1 == 0x2c) {\n      return lVar4;\n    }\n    lVar5 = lVar6;\n    if (((bVar2 == 1) && ((byte)(bVar1 - 0x30) < 10)) && (lVar4 != -2)) {\n      if (lVar4 == -1) {\n        lVar5 = (long)(int)(bVar1 - 0x30);\n      }\n      else {\n        lVar5 = (ulong)bVar1 + lVar4 * 10;\n        if (0x8030 < lVar5) {\n          lVar5 = 0x8030;\n        }\n        lVar5 = lVar5 + -0x30;\n      }\n    }\n  }\n  return lVar4;\n}\n\n",
            "funcName": "FUN_00413290"
        },
        {
            "funcStartAddr": "0x413350",
            "funcEndAddr": "0x414703",
            "decompiledFuncCode": "\n/* WARNING: Switch with 1 destination removed at 0x00413b7d */\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Exceeded maximum restarts with more pending */\n\nlong FUN_00413350(long param_1,long *param_2,undefined8 *param_3,ulong param_4,long param_5,\n                 int *param_6)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char cVar4;\n  int iVar5;\n  int iVar6;\n  long lVar7;\n  long lVar8;\n  ulong *__ptr;\n  ulong *__ptr_00;\n  long lVar9;\n  ulong *puVar10;\n  long lVar11;\n  ushort **ppuVar12;\n  ulong **ppuVar13;\n  void *__ptr_01;\n  void *__ptr_02;\n  char *pcVar14;\n  ulong uVar15;\n  char *pcVar16;\n  long lVar17;\n  ulong uVar18;\n  undefined8 uVar19;\n  ushort *puVar20;\n  undefined4 uVar21;\n  int iVar22;\n  uint uVar23;\n  bool bVar24;\n  byte bVar25;\n  ulong local_118;\n  long local_100;\n  ulong local_f8;\n  uint local_a8 [2];\n  ulong **local_a0;\n  int local_98 [2];\n  char *local_90;\n  undefined local_88 [8];\n  char local_80;\n  ulong *local_78;\n  undefined local_70;\n  char local_58 [8];\n  undefined local_50;\n  \n  bVar25 = 0;\n  lVar9 = *param_2;\n  cVar4 = *(char *)(param_3 + 1);\n  switch(cVar4) {\n  default:\n    goto LAB_0041341a;\n  case '\\x01':\n    lVar8 = lVar9 + 0x70;\n    lVar7 = lVar9 + 0x80;\n    local_100 = FUN_0040ad90(lVar8,lVar7,0,0,param_3);\n    if (local_100 != 0) {\n      if (*(int *)(lVar9 + 0xb4) < 2) goto LAB_004133f0;\n      do {\n        lVar11 = *(long *)(param_1 + 0x48);\n        if (((*(long *)(param_1 + 0x68) == lVar11 || *(long *)(param_1 + 0x68) < lVar11) ||\n            (lVar11 == *(long *)(param_1 + 0x30))) ||\n           (*(int *)(*(long *)(param_1 + 0x10) + lVar11 * 4) != -1)) goto LAB_004133f0;\n        iVar5 = FUN_00412be0(param_3,param_1,param_4);\n        *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n        lVar11 = FUN_0040ad90(lVar8,lVar7,0,0,param_3);\n        local_50 = 0x10;\n        local_100 = FUN_0040ad90(lVar8,lVar7,local_100,lVar11,local_58);\n      } while (lVar11 != 0 && local_100 != 0);\n    }\n    break;\n  case '\\x04':\n    uVar15 = (ulong)(1 << ((byte)*param_3 & 0x1f));\n    if ((*(ulong *)(lVar9 + 0xa8) & uVar15) == 0) {\n      *param_6 = 6;\n      return 0;\n    }\n    *(ulong *)(lVar9 + 0xa0) = *(ulong *)(lVar9 + 0xa0) | uVar15;\n    local_100 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,0,0,param_3);\n    if (local_100 == 0) break;\n    *(long *)(lVar9 + 0x98) = *(long *)(lVar9 + 0x98) + 1;\n    *(byte *)(lVar9 + 0xb0) = *(byte *)(lVar9 + 0xb0) | 2;\n    goto LAB_004133f0;\n  case '\\x05':\n    local_100 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,0,0,param_3);\n    if (local_100 != 0) {\n      if (1 < *(int *)(lVar9 + 0xb4)) {\n        *(byte *)(lVar9 + 0xb0) = *(byte *)(lVar9 + 0xb0) | 2;\n      }\n      goto LAB_004133f0;\n    }\n    break;\n  case '\\b':\n    uVar15 = param_2[6];\n    param_2[6] = uVar15 + 1;\n    iVar5 = FUN_00412be0(param_3,param_1,param_4 | 0x800000);\n    *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n    lVar8 = 0;\n    if (*(char *)(param_3 + 1) != '\\t') {\n      lVar8 = FUN_00414980(param_1,param_2,param_3,param_4,param_5 + 1,param_6);\n      if (*param_6 != 0) {\n        return 0;\n      }\n      if (*(char *)(param_3 + 1) != '\\t') {\n        if (lVar8 != 0) {\n          FUN_004085c0(lVar8,FUN_004097d0,0);\n        }\n        *param_6 = 8;\n        return 0;\n      }\n    }\n    if (uVar15 < 9) {\n      *(ulong *)(lVar9 + 0xa8) = *(ulong *)(lVar9 + 0xa8) | (long)(1 << ((byte)uVar15 & 0x1f));\n    }\n    local_50 = 0x11;\n    local_100 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,lVar8,0,local_58);\n    if (local_100 != 0) {\n      *(ulong *)(local_100 + 0x28) = uVar15;\n      goto LAB_004133f0;\n    }\n    break;\n  case '\\t':\n    goto switchD_0041338b_caseD_9;\n  case '\\v':\n  case '\\x12':\n  case '\\x13':\n    goto switchD_0041338b_caseD_b;\n  case '\\f':\n    uVar23 = *(uint *)param_3;\n    if (((uVar23 & 0x30f) != 0) && (bVar25 = *(byte *)(lVar9 + 0xb0), (bVar25 & 0x10) == 0)) {\n      *(byte *)(lVar9 + 0xb0) = bVar25 | 0x10;\n      if ((bVar25 & 8) == 0) {\n        *(undefined8 *)(lVar9 + 0xb8) = 0x3ff000000000000;\n        *(undefined8 *)(lVar9 + 0xc0) = 0x7fffffe87fffffe;\n        if ((bVar25 & 4) != 0) {\n          *(undefined (*) [16])(lVar9 + 200) = (undefined  [16])0x0;\n          uVar23 = *(uint *)param_3;\n          goto LAB_00413e00;\n        }\n        iVar5 = 0x80;\n        iVar6 = 2;\n      }\n      else {\n        iVar5 = 0;\n        iVar6 = 0;\n      }\n      ppuVar12 = __ctype_b_loc();\n      iVar22 = iVar5 + 0x100;\n      lVar8 = lVar9 + (long)iVar6 * 8;\n      puVar20 = *ppuVar12 + iVar5;\n      do {\n        lVar7 = 0;\n        do {\n          if (((*(byte *)(puVar20 + lVar7) & 8) != 0) || (iVar5 + (int)lVar7 == 0x5f)) {\n            *(ulong *)(lVar8 + 0xb8) = *(ulong *)(lVar8 + 0xb8) | 1L << ((byte)lVar7 & 0x3f);\n          }\n          lVar7 = lVar7 + 1;\n        } while (lVar7 != 0x40);\n        iVar5 = iVar5 + 0x40;\n        lVar8 = lVar8 + 8;\n        puVar20 = puVar20 + 0x40;\n      } while (iVar22 + iVar6 * -0x40 != iVar5);\n    }\nLAB_00413e00:\n    lVar8 = lVar9 + 0x70;\n    lVar9 = lVar9 + 0x80;\n    if ((uVar23 - 0x100 & 0xfffffeff) == 0) {\n      if (uVar23 == 0x100) {\n        *(uint *)param_3 = 6;\n        lVar7 = FUN_0040ad90(lVar8,lVar9,0,0,param_3);\n        *(uint *)param_3 = 9;\n      }\n      else {\n        *(uint *)param_3 = 5;\n        lVar7 = FUN_0040ad90(lVar8,lVar9,0,0,param_3);\n        *(uint *)param_3 = 10;\n      }\n      lVar11 = FUN_0040ad90(lVar8,lVar9,0,0,param_3);\n      local_50 = 10;\n      lVar9 = FUN_0040ad90(lVar8,lVar9,lVar7,lVar11,local_58);\n      if (lVar7 == 0 || lVar11 == 0) break;\n    }\n    else {\n      lVar9 = FUN_0040ad90(lVar8,lVar9,0,0,param_3);\n    }\n    if (lVar9 != 0) {\n      iVar5 = FUN_00412be0(param_3,param_1,param_4);\n      *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n      return lVar9;\n    }\n    break;\n  case '\\x14':\n    __ptr = (ulong *)calloc(0x20,1);\n    __ptr_00 = (ulong *)calloc(0x50,1);\n    if (__ptr != (ulong *)0x0 && __ptr_00 != (ulong *)0x0) {\n      iVar5 = FUN_00408630(param_3,param_1,param_4);\n      cVar4 = *(char *)(param_3 + 1);\n      if (cVar4 != '\\x02') {\n        bVar24 = false;\n        if (cVar4 != '\\x19') {\nLAB_00413ae2:\n          if (cVar4 == '\\x15') {\n            *(undefined *)(param_3 + 1) = 1;\n          }\n          local_f8 = 0;\n          uVar21 = 1;\nLAB_00413b0e:\n          local_a8[0] = 3;\n          local_a0 = &local_78;\n          iVar5 = FUN_004129c0(local_a8,param_1,param_3,iVar5,param_4,uVar21);\n          if (iVar5 == 0) {\n            iVar5 = FUN_00408630(param_3,param_1,param_4);\n            if ((local_a8[0] - 2 & 0xfffffffd) == 0) {\nLAB_00413b74:\n              if (4 < local_a8[0]) {\n                    /* WARNING: Subroutine does not return */\n                __assert_fail(\"0\",\"lib/regcomp.c\",0xcf3,\"parse_bracket_exp\");\n              }\n                    /* WARNING: This code block may not be properly labeled as switch case */\n              iVar6 = FUN_0040d960(__ptr,local_a0);\n              *param_6 = iVar6;\n              if (iVar6 == 0) {\nLAB_00413f6f:\n                if (*(char *)(param_3 + 1) == '\\x02') goto LAB_004140d5;\n                if (*(char *)(param_3 + 1) != '\\x15') goto code_r0x00413f85;\n                *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n                if (bVar24) {\n                  puVar10 = __ptr;\n                  do {\n                    *puVar10 = ~*puVar10;\n                    puVar10 = puVar10 + 1;\n                  } while (__ptr + 4 != puVar10);\n                }\n                iVar5 = *(int *)(lVar9 + 0xb4);\n                if (1 < iVar5) {\n                  lVar8 = *(long *)(lVar9 + 0x78);\n                  lVar7 = 0;\n                  do {\n                    *(ulong *)((long)__ptr + lVar7) =\n                         *(ulong *)((long)__ptr + lVar7) & *(ulong *)(lVar8 + lVar7);\n                    lVar7 = lVar7 + 8;\n                  } while (lVar7 != 0x20);\n                }\n                if (((((__ptr_00[5] != 0) || (__ptr_00[6] != 0)) || (__ptr_00[7] != 0)) ||\n                    (__ptr_00[8] != 0)) ||\n                   ((1 < iVar5 && ((__ptr_00[9] != 0 || ((*(byte *)(__ptr_00 + 4) & 1) != 0)))))) {\n                  *(byte *)(lVar9 + 0xb0) = *(byte *)(lVar9 + 0xb0) | 2;\n                  lVar8 = lVar9 + 0x70;\n                  lVar7 = lVar9 + 0x80;\n                  local_70 = 6;\n                  local_78 = __ptr_00;\n                  local_100 = FUN_0040ad90(lVar8,lVar7,0,0,&local_78);\n                  puVar10 = __ptr;\n                  if (local_100 != 0) {\n                    while (*puVar10 == 0) {\n                      puVar10 = puVar10 + 1;\n                      if (__ptr + 4 == puVar10) {\n                        free(__ptr);\n                        goto LAB_004133f0;\n                      }\n                    }\n                    local_70 = 3;\n                    local_78 = __ptr;\n                    lVar11 = FUN_0040ad90(lVar8,lVar7,0,0,&local_78);\n                    if (lVar11 != 0) {\n                      local_50 = 10;\n                      local_100 = FUN_0040ad90(lVar8,lVar7,lVar11,local_100,local_58);\n                      goto joined_r0x004144a8;\n                    }\n                  }\nLAB_004144ae:\n                  *param_6 = 0xc;\n                  goto LAB_0041400b;\n                }\n                FUN_00409780(__ptr_00);\n                local_70 = 3;\n                local_78 = __ptr;\n                local_100 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,0,0,&local_78);\njoined_r0x004144a8:\n                if (local_100 == 0) goto LAB_004144ae;\n                goto LAB_004133f0;\n              }\n              goto LAB_0041400b;\n            }\n            if (*(char *)(param_3 + 1) == '\\x02') {\nLAB_004140d5:\n              *param_6 = 7;\n              goto LAB_0041400b;\n            }\n            if (*(char *)(param_3 + 1) != '\\x16') goto LAB_00413b74;\n            *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n            FUN_00408630(local_88);\n            if (local_80 == '\\x02') goto LAB_004140d5;\n            if (local_80 == '\\x15') {\n              *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)-iVar5;\n              *(undefined *)(param_3 + 1) = 1;\n              goto LAB_00413b74;\n            }\n            local_90 = local_58;\n            local_98[0] = 3;\n            iVar5 = FUN_004129c0(local_98);\n            if (iVar5 == 0) {\n              iVar5 = FUN_00408630(param_3,param_1,param_4);\n              puVar10 = (ulong *)0x0;\n              if (1 < *(int *)(lVar9 + 0xb4)) {\n                puVar10 = __ptr_00;\n              }\n              if (((local_a8[0] - 2 & 0xfffffffd) == 0) || ((local_98[0] - 2U & 0xfffffffd) == 0)) {\nLAB_004146b6:\n                *param_6 = 0xb;\n              }\n              else {\n                if (local_a8[0] == 3) {\n                  uVar15 = 0xffffffffffffffff;\n                  uVar18 = 0xffffffffffffffff;\n                  ppuVar13 = local_a0;\n                  do {\n                    if (uVar18 == 0) break;\n                    uVar18 = uVar18 - 1;\n                    cVar4 = *(char *)ppuVar13;\n                    ppuVar13 = (ulong **)((long)ppuVar13 + (ulong)bVar25 * -2 + 1);\n                  } while (cVar4 != '\\0');\n                  if (~uVar18 - 1 < 2) {\n                    pcVar14 = local_90;\n                    if (local_98[0] == 3) {\n                      do {\n                        if (uVar15 == 0) break;\n                        uVar15 = uVar15 - 1;\n                        cVar4 = *pcVar14;\n                        pcVar14 = pcVar14 + (ulong)bVar25 * -2 + 1;\n                      } while (cVar4 != '\\0');\n                      if (1 < ~uVar15 - 1) goto LAB_004145b5;\n                    }\n                    local_a0._0_1_ = *(char *)local_a0;\nLAB_0041424f:\n                    if (local_98[0] != 0) {\n                      local_90._0_1_ = '\\0';\n                      if (local_98[0] != 3) goto LAB_0041426a;\n                      goto LAB_00414266;\n                    }\nLAB_004146a9:\n                    goto LAB_0041426a;\n                  }\n                }\n                else {\n                  if (local_98[0] == 3) {\n                    uVar15 = 0xffffffffffffffff;\n                    pcVar14 = local_90;\n                    do {\n                      if (uVar15 == 0) break;\n                      uVar15 = uVar15 - 1;\n                      cVar4 = *pcVar14;\n                      pcVar14 = pcVar14 + (ulong)bVar25 * -2 + 1;\n                    } while (cVar4 != '\\0');\n                    if (1 < ~uVar15 - 1) goto LAB_004145b5;\n                    local_a0._0_1_ = '\\0';\n                    if (local_a8[0] == 0) goto LAB_0041424a;\nLAB_00414266:\n                    local_90._0_1_ = *local_90;\n                  }\n                  else {\n                    if (local_a8[0] == 0) {\nLAB_0041424a:\n                      goto LAB_0041424f;\n                    }\n                    local_a0._0_1_ = '\\0';\n                    local_90._0_1_ = '\\0';\n                    if (local_98[0] == 0) goto LAB_004146a9;\n                  }\nLAB_0041426a:\n                  if ((local_a8[0] == 0) || (ppuVar13 = local_a0, local_a8[0] == 3)) {\n                    ppuVar13 = (ulong **)FUN_00408d40((char)local_a0,puVar10);\n                  }\n                  uVar23 = (uint)ppuVar13;\n                  if ((local_98[0] == 0) || (local_98[0] == 3)) {\n                    local_90._0_4_ = FUN_00408d40((char)local_90,puVar10);\n                  }\n                  if ((uVar23 != 0xffffffff) && ((uint)local_90 != 0xffffffff)) {\n                    if (((param_4 & 0x10000) != 0) && ((uint)local_90 < uVar23)) goto LAB_004146b6;\n                    if (puVar10 != (ulong *)0x0) {\n                      uVar15 = puVar10[8];\n                      __ptr_01 = (void *)puVar10[1];\n                      if (uVar15 == local_f8) {\n                        local_f8 = local_f8 * 2 + 1;\n                        __ptr_01 = realloc(__ptr_01,local_f8 * 4);\n                        __ptr_02 = realloc((void *)puVar10[2],local_f8 * 4);\n                        if ((__ptr_01 == (void *)0x0) || (__ptr_02 == (void *)0x0)) {\n                          free(__ptr_01);\n                          free(__ptr_02);\n                          *param_6 = 0xc;\n                          goto LAB_0041400b;\n                        }\n                        puVar10[2] = (ulong)__ptr_02;\n                        uVar15 = puVar10[8];\n                        puVar10[1] = (ulong)__ptr_01;\n                      }\n                      *(uint *)((long)__ptr_01 + uVar15 * 4) = uVar23;\n                      puVar10[8] = uVar15 + 1;\n                      *(uint *)(puVar10[2] + uVar15 * 4) = (uint)local_90;\n                    }\n                    lVar8 = 0;\n                    do {\n                      if ((uVar23 <= (uint)lVar8) && ((uint)lVar8 <= (uint)local_90)) {\n                        __ptr[lVar8 >> 6] = __ptr[lVar8 >> 6] | 1L << ((byte)lVar8 & 0x3f);\n                      }\n                      lVar8 = lVar8 + 1;\n                    } while (lVar8 != 0x100);\n                    *param_6 = 0;\n                    goto LAB_00413f6f;\n                  }\n                }\nLAB_004145b5:\n                *param_6 = 3;\n              }\n              goto LAB_0041400b;\n            }\n          }\n          *param_6 = iVar5;\n          goto LAB_0041400b;\n        }\n        *(byte *)(__ptr_00 + 4) = *(byte *)(__ptr_00 + 4) | 1;\n        if ((param_4 & 0x100) != 0) {\n          *__ptr = *__ptr | 0x400;\n        }\n        *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n        iVar5 = FUN_00408630(param_3,param_1,param_4);\n        cVar4 = *(char *)(param_3 + 1);\n        if (cVar4 != '\\x02') {\n          bVar24 = true;\n          goto LAB_00413ae2;\n        }\n      }\n      *param_6 = 2;\nLAB_0041400b:\n      free(__ptr);\n      FUN_00409780(__ptr_00);\n      if (*param_6 != 0) {\n        return 0;\n      }\n      local_100 = 0;\n      goto LAB_004133f0;\n    }\n    free(__ptr);\n    free(__ptr_00);\n    break;\n  case '\\x17':\n    if ((param_4 & 0x1000000) != 0) goto LAB_004136c5;\nswitchD_0041338b_caseD_b:\n    if ((param_4 & 0x20) != 0) {\nLAB_004136c5:\n      *param_6 = 0xd;\n      return 0;\n    }\n    if ((param_4 & 0x10) != 0) {\n      iVar5 = FUN_00412be0(param_3,param_1,param_4);\n      *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n      lVar9 = FUN_00413350(param_1,param_2,param_3,param_4,param_5,param_6);\n      return lVar9;\n    }\n    if (cVar4 == '\\t') {\nswitchD_0041338b_caseD_9:\n      if ((param_4 & 0x20000) == 0) {\n        *param_6 = 0x10;\n        return 0;\n      }\n    }\nswitchD_0041338b_caseD_18:\n    *(undefined *)(param_3 + 1) = 1;\n    local_100 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,0,0,param_3);\n    if (local_100 != 0) {\nLAB_004133f0:\n      iVar5 = FUN_00412be0(param_3,param_1,param_4);\n      uVar15 = (ulong)*(byte *)(param_3 + 1);\n      *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n      do {\n        bVar25 = (byte)uVar15;\n        if (0x17 < bVar25) {\n          return local_100;\n        }\n        uVar18 = (ulong)(bVar25 == 0x12);\n        if ((0x8c0800UL >> (uVar15 & 0x3f) & 1) == 0) {\n          return local_100;\n        }\n        uVar19 = *(undefined8 *)(param_1 + 0x48);\n        uVar2 = *param_3;\n        uVar3 = param_3[1];\n        local_f8 = local_100;\n        lVar8 = local_100;\n        if (bVar25 == 0x17) {\n          uVar18 = FUN_00413290(param_1,param_3,param_4);\n          if (uVar18 == 0xffffffffffffffff) {\n            if ((*(char *)(param_3 + 1) == '\\x01') && (*(char *)param_3 == ',')) {\n              uVar18 = 0;\nLAB_004138d9:\n              local_118 = FUN_00413290(param_1,param_3,param_4);\n              if (local_118 == 0xfffffffffffffffe) goto LAB_00413872;\n              if (((local_118 == 0xffffffffffffffff) || ((long)uVar18 <= (long)local_118)) &&\n                 (*(char *)(param_3 + 1) == '\\x18')) {\n                uVar15 = uVar18;\n                if (local_118 != 0xffffffffffffffff) goto LAB_00413994;\n                goto joined_r0x004139a4;\n              }\n            }\nLAB_004139d0:\n            *param_6 = 10;\n          }\n          else {\n            if (uVar18 != 0xfffffffffffffffe) {\n              local_118 = uVar18;\n              if (*(char *)(param_3 + 1) != '\\x18') {\n                if (*(char *)(param_3 + 1) != '\\x01') goto LAB_00413872;\n                if (*(char *)param_3 == ',') goto LAB_004138d9;\n                if ((param_4 & 0x200000) == 0) goto LAB_004139d0;\n                goto LAB_00413881;\n              }\nLAB_00413994:\n              uVar15 = local_118;\njoined_r0x004139a4:\n              if (0x7fff < (long)uVar15) {\n                *param_6 = 0xf;\n                goto LAB_004139db;\n              }\n              iVar5 = FUN_00412be0(param_3,param_1,param_4);\n              *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n              if (local_100 == 0) goto LAB_004138a0;\n              if ((local_118 | uVar18) == 0) {\n                FUN_004085c0(local_100,FUN_004097d0,0);\n                if (*param_6 != 0) goto LAB_0041377b;\n                goto LAB_004138af;\n              }\n              if ((long)uVar18 < 1) {\n                local_f8 = 0;\n                goto LAB_00413a52;\n              }\n              if (uVar18 != 1) {\n                lVar7 = 2;\n                do {\n                  lVar8 = FUN_0040ae70(lVar8,lVar9);\n                  local_50 = 0x10;\n                  local_f8 = FUN_0040ad90(lVar9 + 0x70,lVar9 + 0x80,local_f8,lVar8,local_58);\n                  if ((lVar8 == 0) || (local_f8 == 0)) goto LAB_00413770;\n                  lVar7 = lVar7 + 1;\n                } while (lVar7 <= (long)uVar18);\n              }\n              lVar7 = local_f8;\n              if (uVar18 != local_118) goto LAB_00413a2f;\n              goto LAB_00413687;\n            }\nLAB_00413872:\n            if ((param_4 & 0x200000) == 0) {\n              if (*(char *)(param_3 + 1) != '\\x02') goto LAB_004139d0;\n              *param_6 = 9;\n              goto LAB_004139db;\n            }\nLAB_00413881:\n            *(undefined8 *)(param_1 + 0x48) = uVar19;\n            *param_3 = uVar2;\n            param_3[1] = uVar3;\n            *(undefined *)(param_3 + 1) = 1;\n            lVar7 = local_100;\nLAB_0041366e:\n            if ((*param_6 == 0) || (lVar7 != 0)) goto LAB_00413687;\n          }\nLAB_004139db:\n          if (local_100 == 0) {\n            return 0;\n          }\n          goto LAB_0041377b;\n        }\n        if (bVar25 == 0x13) {\n          iVar5 = FUN_00412be0(param_3,param_1,param_4);\n          *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n          if (local_100 == 0) goto LAB_004138a0;\n          if (*(char *)(local_100 + 0x30) == '\\x11') {\n            local_118 = 1;\n            local_f8 = 0;\n            goto LAB_00413808;\n          }\n          local_118 = 1;\n          local_50 = 10;\n          local_f8 = 0;\nLAB_0041356a:\n          lVar11 = lVar9 + 0x70;\n          lVar1 = lVar9 + 0x80;\n          lVar7 = FUN_0040ad90(lVar11,lVar1,lVar8,0,local_58);\n          if (lVar7 == 0) {\nLAB_00413770:\n            *param_6 = 0xc;\nLAB_0041377b:\n            FUN_004085c0(local_100,FUN_004097d0,0);\n            return 0;\n          }\n          for (lVar17 = uVar18 + 2; lVar17 <= (long)local_118; lVar17 = lVar17 + 1) {\n            lVar8 = FUN_0040ae70(lVar8,lVar9);\n            local_50 = 0x10;\n            lVar7 = FUN_0040ad90(lVar11,lVar1,lVar7,lVar8,local_58);\n            if ((lVar8 == 0) || (lVar7 == 0)) goto LAB_00413770;\n            local_50 = 10;\n            lVar7 = FUN_0040ad90(lVar11,lVar1,lVar7,0,local_58);\n            if (lVar7 == 0) goto LAB_00413770;\n          }\n          if (local_f8 != 0) {\n            local_50 = 0x10;\n            lVar7 = FUN_0040ad90(lVar11,lVar1,local_f8,lVar7,local_58);\n            goto LAB_0041366e;\n          }\n        }\n        else {\n          iVar5 = FUN_00412be0(param_3,param_1,param_4);\n          *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar5;\n          if (local_100 != 0) {\n            if (bVar25 != 0x12) {\n              if (*(char *)(local_100 + 0x30) == '\\x11') {\n                local_118 = 0xffffffffffffffff;\n                uVar18 = 0;\n                local_f8 = 0;\nLAB_00413808:\n                FUN_004085c0(lVar8,FUN_00408760,*(undefined8 *)(lVar8 + 0x28));\n                goto LAB_00413819;\n              }\n              local_118 = 0xffffffffffffffff;\n              uVar18 = 0;\n              local_f8 = 0;\nLAB_00413565:\n              local_50 = 0xb;\n              goto LAB_0041356a;\n            }\n            local_118 = 0xffffffffffffffff;\n            uVar18 = 1;\nLAB_00413a2f:\n            lVar8 = FUN_0040ae70(lVar8,lVar9);\n            if (lVar8 != 0) {\nLAB_00413a52:\n              if (*(char *)(lVar8 + 0x30) == '\\x11') goto LAB_00413808;\nLAB_00413819:\n              if (local_118 != 0xffffffffffffffff) {\n                local_50 = 10;\n                goto LAB_0041356a;\n              }\n              goto LAB_00413565;\n            }\n            goto LAB_00413770;\n          }\nLAB_004138a0:\n          if (*param_6 != 0) {\n            return 0;\n          }\nLAB_004138af:\n          local_100 = 0;\n          lVar7 = local_100;\n        }\nLAB_00413687:\n        local_100 = lVar7;\n        bVar25 = *(byte *)(param_3 + 1);\n        uVar15 = (ulong)bVar25;\n      } while (((param_4 & 0x1000000) == 0) || ((bVar25 != 0xb && (bVar25 != 0x17))));\n      if (local_100 != 0) {\n        FUN_004085c0(local_100,FUN_004097d0,0);\n      }\n      goto LAB_004136c5;\n    }\n    break;\n  case '\\x18':\n    goto switchD_0041338b_caseD_18;\n  case ' ':\n  case '!':\n    bVar24 = cVar4 == '!';\n    uVar19 = *(undefined8 *)(param_1 + 0x78);\n    pcVar14 = \"_\";\n    pcVar16 = \"alnum\";\n    goto LAB_00413ba4;\n  case '\\\"':\n  case '#':\n    bVar24 = cVar4 == '#';\n    uVar19 = *(undefined8 *)(param_1 + 0x78);\n    pcVar14 = \"\";\n    pcVar16 = \"space\";\nLAB_00413ba4:\n    local_100 = FUN_0040e180(lVar9,uVar19,pcVar16,pcVar14,bVar24,param_6);\n    if ((*param_6 != 0) && (local_100 == 0)) {\n      return 0;\n    }\n    goto LAB_004133f0;\n  case '$':\n    *param_6 = 5;\n    return 0;\n  }\n  *param_6 = 0xc;\nLAB_0041341a:\n  return 0;\ncode_r0x00413f85:\n  uVar21 = 0;\n  goto LAB_00413b0e;\n}\n\n",
            "funcName": "FUN_00413350"
        },
        {
            "funcStartAddr": "0x414840",
            "funcEndAddr": "0x414975",
            "decompiledFuncCode": "\nlong FUN_00414840(undefined8 param_1,long *param_2,long param_3,undefined8 param_4,long param_5,\n                 int *param_6)\n\n{\n  long lVar1;\n  byte bVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  undefined local_48 [8];\n  undefined local_40;\n  \n  lVar1 = *param_2;\n  lVar3 = FUN_00413350();\n  if ((*param_6 == 0) || (lVar3 != 0)) {\n    while (bVar2 = *(byte *)(param_3 + 8), (bVar2 & 0xf7) != 2) {\n      while( true ) {\n        if ((bVar2 == 9) && (param_5 != 0)) {\n          return lVar3;\n        }\n        lVar4 = FUN_00413350(param_1,param_2,param_3,param_4,param_5,param_6);\n        if ((*param_6 != 0) && (lVar4 == 0)) {\n          if (lVar3 != 0) {\n            FUN_004085c0(lVar3,FUN_004097d0,0);\n          }\n          goto LAB_00414950;\n        }\n        if ((lVar3 == 0) || (lVar4 == 0)) break;\n        local_40 = 0x10;\n        lVar5 = FUN_0040ad90(lVar1 + 0x70,lVar1 + 0x80,lVar3,lVar4,local_48);\n        if (lVar5 == 0) {\n          FUN_004085c0(lVar4,FUN_004097d0,0);\n          FUN_004085c0(lVar3,FUN_004097d0,0);\n          *param_6 = 0xc;\n          return 0;\n        }\n        bVar2 = *(byte *)(param_3 + 8);\n        lVar3 = lVar5;\n        if ((bVar2 & 0xf7) == 2) {\n          return lVar5;\n        }\n      }\n      if (lVar3 == 0) {\n        lVar3 = lVar4;\n      }\n    }\n  }\n  else {\nLAB_00414950:\n    lVar3 = 0;\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00414840"
        },
        {
            "funcStartAddr": "0x414980",
            "funcEndAddr": "0x414ac9",
            "decompiledFuncCode": "\nlong FUN_00414980(long param_1,long *param_2,long param_3,ulong param_4,long param_5,int *param_6)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  int iVar4;\n  long lVar5;\n  long lVar6;\n  undefined local_48 [8];\n  undefined local_40;\n  \n  lVar1 = *param_2;\n  uVar2 = *(undefined8 *)(lVar1 + 0xa8);\n  lVar5 = FUN_00414840();\n  if ((*param_6 == 0) || (lVar5 != 0)) {\n    do {\n      if (*(char *)(param_3 + 8) != '\\n') {\n        return lVar5;\n      }\n      iVar4 = FUN_00412be0(param_3,param_1,param_4 | 0x800000);\n      *(long *)(param_1 + 0x48) = *(long *)(param_1 + 0x48) + (long)iVar4;\n      if (((*(byte *)(param_3 + 8) & 0xf7) == 2) ||\n         ((*(byte *)(param_3 + 8) == 9 && (param_5 != 0)))) {\n        lVar6 = 0;\n      }\n      else {\n        uVar3 = *(ulong *)(lVar1 + 0xa8);\n        *(undefined8 *)(lVar1 + 0xa8) = uVar2;\n        lVar6 = FUN_00414840(param_1,param_2,param_3,param_4,param_5,param_6);\n        if ((*param_6 != 0) && (lVar6 == 0)) {\n          if (lVar5 != 0) {\n            FUN_004085c0(lVar5,FUN_004097d0,0);\n          }\n          goto LAB_004149ce;\n        }\n        *(ulong *)(lVar1 + 0xa8) = *(ulong *)(lVar1 + 0xa8) | uVar3;\n      }\n      local_40 = 10;\n      lVar5 = FUN_0040ad90(lVar1 + 0x70,lVar1 + 0x80,lVar5,lVar6,local_48);\n    } while (lVar5 != 0);\n    *param_6 = 0xc;\n  }\n  else {\nLAB_004149ce:\n    lVar5 = 0;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00414980"
        },
        {
            "funcStartAddr": "0x414ae0",
            "funcEndAddr": "0x4157df",
            "decompiledFuncCode": "\nint FUN_00414ae0(long *param_1,long param_2,ulong param_3,ulong param_4)\n\n{\n  undefined (*pauVar1) [16];\n  undefined8 *puVar2;\n  ulong uVar3;\n  char cVar4;\n  byte bVar5;\n  int iVar6;\n  int iVar7;\n  wint_t wVar8;\n  long *plVar9;\n  long *plVar10;\n  size_t sVar11;\n  byte *pbVar12;\n  long lVar13;\n  long *plVar14;\n  void *pvVar15;\n  void *pvVar16;\n  void *pvVar17;\n  void *pvVar18;\n  long lVar19;\n  long **__ptr;\n  ulong uVar20;\n  long lVar21;\n  uint uVar22;\n  ulong uVar23;\n  long lVar24;\n  undefined8 *puVar25;\n  byte *pbVar26;\n  byte bVar27;\n  size_t __size;\n  long lVar28;\n  bool bVar29;\n  bool bVar30;\n  byte bVar31;\n  ulong local_128;\n  int local_10c;\n  int local_108 [4];\n  undefined local_f8 [8];\n  undefined local_f0;\n  undefined7 uStack_ef;\n  void *local_e8 [2];\n  long local_d8;\n  long local_d0 [4];\n  long local_b0;\n  ulong local_a8;\n  ulong local_a0;\n  ulong local_98;\n  long local_90;\n  ulong local_88;\n  ulong local_80;\n  ulong local_78;\n  ulong local_70;\n  ulong local_60;\n  undefined local_50;\n  byte local_4f;\n  byte local_4e;\n  char local_4d;\n  int local_48;\n  \n  bVar31 = 0;\n  *(byte *)(param_1 + 7) = *(byte *)(param_1 + 7) & 0x90;\n  local_10c = 0;\n  __ptr = (long **)*param_1;\n  param_1[3] = param_4;\n  param_1[2] = 0;\n  param_1[6] = 0;\n  if ((ulong)param_1[1] < 0xe8) {\n    __ptr = (long **)realloc(__ptr,0xe8);\n    if (__ptr == (long **)0x0) {\n      return 0xc;\n    }\n    param_1[1] = 0xe8;\n    *param_1 = (long)__ptr;\n  }\n  param_1[2] = 0xe8;\n  *__ptr = (long *)0x0;\n  __ptr[0x1c] = (long *)0x0;\n  puVar25 = (undefined8 *)((ulong)(__ptr + 1) & 0xfffffffffffffff8);\n  for (uVar20 = (ulong)(((int)__ptr - (int)(undefined8 *)((ulong)(__ptr + 1) & 0xfffffffffffffff8))\n                        + 0xe8U >> 3); uVar20 != 0; uVar20 = uVar20 - 1) {\n    *puVar25 = 0;\n    puVar25 = puVar25 + (ulong)bVar31 * -2 + 1;\n  }\n  *(undefined4 *)(__ptr + 0x10) = 0xf;\n  if (param_3 < 0x555555555555555) {\n    plVar14 = (long *)(param_3 + 1);\n    __ptr[1] = plVar14;\n    plVar9 = (long *)malloc((long)plVar14 * 0x10);\n    *__ptr = plVar9;\n    if (param_3 == 0) {\n      plVar9 = (long *)0x0;\n      uVar20 = 1;\n    }\n    else {\n      uVar20 = 1;\n      do {\n        uVar20 = uVar20 * 2;\n      } while (uVar20 <= param_3);\n      plVar9 = (long *)(uVar20 - 1);\n    }\n    plVar10 = (long *)calloc(0x18,uVar20);\n    __ptr[0x11] = plVar9;\n    __ptr[8] = plVar10;\n    sVar11 = __ctype_get_mb_cur_max();\n    *(int *)((long)__ptr + 0xb4) = (int)sVar11;\n    pbVar12 = (byte *)nl_langinfo(0xe);\n    if ((((*pbVar12 & 0xdf) == 0x55) && ((pbVar12[1] & 0xdf) == 0x54)) &&\n       ((pbVar12[2] & 0xdf) == 0x46)) {\n      bVar29 = pbVar12[3] < 0x2d;\n      bVar30 = pbVar12[3] == 0x2d;\n      lVar21 = 2;\n      pbVar12 = pbVar12 + (ulong)bVar30 + 3;\n      pbVar26 = &DAT_004190b6;\n      do {\n        if (lVar21 == 0) break;\n        lVar21 = lVar21 + -1;\n        bVar29 = *pbVar12 < *pbVar26;\n        bVar30 = *pbVar12 == *pbVar26;\n        pbVar12 = pbVar12 + (ulong)bVar31 * -2 + 1;\n        pbVar26 = pbVar26 + (ulong)bVar31 * -2 + 1;\n      } while (bVar30);\n      if ((!bVar29 && !bVar30) == bVar29) {\n        *(byte *)(__ptr + 0x16) = *(byte *)(__ptr + 0x16) | 4;\n      }\n    }\n    bVar5 = *(byte *)(__ptr + 0x16);\n    *(byte *)(__ptr + 0x16) = bVar5 & 0xf7;\n    if (1 < *(int *)((long)__ptr + 0xb4)) {\n      if ((bVar5 & 4) == 0) {\n        plVar9 = (long *)calloc(0x20,1);\n        __ptr[0xf] = plVar9;\n        if (plVar9 == (long *)0x0) goto LAB_004154c0;\n        lVar21 = 0;\n        do {\n          uVar22 = (int)lVar21 * 8;\n          iVar6 = 0;\n          do {\n            while( true ) {\n              wVar8 = btowc(uVar22);\n              if (wVar8 != 0xffffffff) break;\n              if ((uVar22 & 0xffffff80) == 0) {\nLAB_00415504:\n                *(byte *)(__ptr + 0x16) = *(byte *)(__ptr + 0x16) | 8;\n              }\nLAB_0041550b:\n              iVar6 = iVar6 + 1;\n              uVar22 = uVar22 + 1;\n              if (iVar6 == 0x40) goto LAB_00415560;\n            }\n            *(ulong *)((long)__ptr[0xf] + lVar21) =\n                 *(ulong *)((long)__ptr[0xf] + lVar21) | 1L << ((byte)iVar6 & 0x3f);\n            if ((uVar22 & 0xffffff80) != 0) goto LAB_0041550b;\n            if (wVar8 != uVar22) goto LAB_00415504;\n            iVar6 = iVar6 + 1;\n            uVar22 = uVar22 + 1;\n          } while (iVar6 != 0x40);\nLAB_00415560:\n          lVar21 = lVar21 + 8;\n        } while (lVar21 != 0x20);\n      }\n      else {\n        __ptr[0xf] = (long *)&DAT_00419a80;\n      }\n    }\n    if ((*__ptr != (long *)0x0) && (__ptr[8] != (long *)0x0)) {\n      local_60 = param_1[5];\n      local_10c = 0;\n      plVar9 = local_d0;\n      for (lVar21 = 0x12; lVar21 != 0; lVar21 = lVar21 + -1) {\n        *plVar9 = 0;\n        plVar9 = plVar9 + (ulong)bVar31 * -2 + 1;\n      }\n      iVar6 = *(int *)((long)__ptr + 0xb4);\n      uVar20 = (ulong)((uint)param_4 & 0x400000);\n      local_50 = (param_4 & 0x400000) != 0;\n      uVar23 = local_60 | uVar20;\n      local_4d = uVar23 != 0;\n      local_4e = *(byte *)(__ptr + 0x16) >> 3 & 1;\n      local_4f = *(byte *)(__ptr + 0x16) >> 2 & 1;\n      local_d8 = param_2;\n      local_88 = param_3;\n      local_80 = param_3;\n      local_78 = param_3;\n      local_70 = param_3;\n      local_48 = iVar6;\n      if (param_3 == 0) {\nLAB_00414d22:\n        if (local_4d != '\\0') {\n          param_2 = local_d0[0];\n        }\n        local_d0[0] = param_2;\n        if (uVar20 == 0) {\n          if (iVar6 < 2) {\n            uVar3 = local_98;\n            local_a0 = local_98;\n            if (uVar23 != 0) {\n              if ((long)local_80 <= (long)local_98) {\n                local_98 = local_80;\n              }\n              uVar3 = local_a8;\n              local_a0 = local_a8;\n              if ((long)local_a8 < (long)local_98) {\n                do {\n                  *(undefined *)(param_2 + local_a8) =\n                       *(undefined *)(local_60 + *(byte *)(local_d8 + local_a8 + local_b0));\n                  local_a8 = local_a8 + 1;\n                  uVar3 = local_98;\n                  local_a0 = local_98;\n                } while (local_98 != local_a8);\n              }\n            }\n          }\n          else {\n            FUN_00408df0(&local_d8);\n            uVar3 = local_a8;\n          }\n        }\n        else {\n          if (1 < iVar6) {\n            do {\n              iVar6 = FUN_00408fa0(&local_d8);\n              if (iVar6 != 0) break;\n              uVar3 = local_a8;\n              if (((long)param_3 <= (long)local_a0) ||\n                 ((long)((long)*(int *)((long)__ptr + 0xb4) + local_a8) < (long)local_98))\n              goto LAB_00414e29;\n              iVar6 = FUN_00408a00(&local_d8,local_98 * 2);\n            } while (iVar6 == 0);\n            goto LAB_00415238;\n          }\n          FUN_00408d70(&local_d8);\n          uVar3 = local_a8;\n        }\nLAB_00414e29:\n        local_a8 = uVar3;\n        local_10c = 0;\n        lVar21 = *param_1;\n        param_1[6] = 0;\n        *(ulong *)(lVar21 + 0xd8) = param_4;\n        iVar6 = FUN_00412be0(local_108,&local_d8,param_4 | 0x800000);\n        local_90 = local_90 + iVar6;\n        lVar13 = FUN_00414980(&local_d8,param_1,local_108,param_4,0,&local_10c);\n        if (local_10c == 0) {\n          local_f0 = 2;\n          plVar14 = (long *)FUN_0040ad90(lVar21 + 0x70,lVar21 + 0x80,0,0,local_f8);\n          plVar9 = plVar14;\n          if (lVar13 != 0) {\nLAB_00414ec7:\n            local_f0 = 0x10;\n            plVar9 = (long *)FUN_0040ad90(lVar21 + 0x70,lVar21 + 0x80,lVar13,plVar14,local_f8);\n          }\n          lVar21 = *param_1;\n          if (plVar14 == (long *)0x0 || plVar9 == (long *)0x0) {\n            local_10c = 0xc;\n            __ptr[0xd] = (long *)0x0;\n          }\n          else {\n            lVar13 = *(long *)(lVar21 + 8);\n            __ptr[0xd] = plVar9;\n            sVar11 = lVar13 * 8;\n            __size = lVar13 * 0x18;\n            pvVar15 = malloc(sVar11);\n            *(void **)(lVar21 + 0x18) = pvVar15;\n            pvVar16 = malloc(sVar11);\n            *(void **)(lVar21 + 0x20) = pvVar16;\n            pvVar17 = malloc(__size);\n            *(void **)(lVar21 + 0x28) = pvVar17;\n            pvVar18 = malloc(__size);\n            *(void **)(lVar21 + 0x30) = pvVar18;\n            if ((((pvVar15 != (void *)0x0) && (pvVar16 != (void *)0x0)) && (pvVar17 != (void *)0x0))\n               && (pvVar18 != (void *)0x0)) {\n              lVar13 = param_1[6];\n              pvVar15 = malloc(lVar13 * 8);\n              *(void **)(lVar21 + 0xe0) = pvVar15;\n              if (pvVar15 != (void *)0x0) {\n                lVar24 = 0;\n                if (lVar13 != 0) {\n                  do {\n                    *(long *)((long)pvVar15 + lVar24 * 8) = lVar24;\n                    lVar24 = lVar24 + 1;\n                  } while (lVar24 != lVar13);\n                }\n                FUN_0040a600(*(undefined8 *)(lVar21 + 0x68),FUN_0040a2c0,lVar21);\n                if (param_1[6] == 0) {\n                  plVar14 = *(long **)(lVar21 + 0xe0);\nLAB_00414fff:\n                  free(plVar14);\n                  *(undefined8 *)(lVar21 + 0xe0) = 0;\n                }\n                else {\n                  plVar14 = *(long **)(lVar21 + 0xe0);\n                  lVar13 = *plVar14;\n                  if (lVar13 == 0) {\n                    do {\n                      lVar13 = lVar13 + 1;\n                      if (lVar13 == param_1[6]) goto LAB_00414fff;\n                    } while (plVar14[lVar13] == lVar13);\n                  }\n                }\n              }\n              iVar6 = FUN_004085c0(*(undefined8 *)(lVar21 + 0x68),FUN_0040b140,param_1);\n              if ((iVar6 == 0) &&\n                 (iVar6 = FUN_004085c0(*(undefined8 *)(lVar21 + 0x68),FUN_0040d670,lVar21),\n                 iVar6 == 0)) {\n                FUN_0040a600(*(undefined8 *)(lVar21 + 0x68),FUN_0040a350,lVar21);\n                iVar6 = FUN_0040a600(*(undefined8 *)(lVar21 + 0x68),FUN_00409e50,lVar21);\n                if (iVar6 == 0) {\n                  bVar31 = 0;\n                  lVar13 = 0;\nLAB_00415078:\n                  if (*(long *)(lVar21 + 0x10) == lVar13) goto LAB_0041509c;\nLAB_0041507e:\n                  while( true ) {\n                    lVar24 = lVar13 * 0x18;\n                    if (*(long *)(*(long *)(lVar21 + 0x30) + 8 + lVar24) != 0)\n                    goto code_r0x00415092;\n                    iVar6 = FUN_0040a830(local_f8,lVar21,lVar13);\n                    if (iVar6 != 0) goto LAB_00415238;\n                    lVar13 = lVar13 + 1;\n                    if (*(long *)(*(long *)(lVar21 + 0x30) + 8 + lVar24) != 0) break;\n                    bVar31 = 1;\n                    free(local_e8[0]);\n                    if (*(long *)(lVar21 + 0x10) == lVar13) goto LAB_004150a5;\n                  }\n                  goto LAB_00415078;\n                }\n              }\n              goto LAB_00415238;\n            }\n            local_10c = 0xc;\n          }\n        }\n        else {\n          if (lVar13 != 0) {\n            local_f0 = 2;\n            plVar14 = (long *)FUN_0040ad90(lVar21 + 0x70,lVar21 + 0x80,0,0,local_f8);\n            goto LAB_00414ec7;\n          }\n          __ptr[0xd] = (long *)0x0;\n          lVar21 = *param_1;\n        }\n      }\n      else {\n        iVar6 = FUN_00408a00(&local_d8,plVar14);\n        if (iVar6 == 0) {\n          iVar6 = *(int *)((long)__ptr + 0xb4);\n          goto LAB_00414d22;\n        }\nLAB_00415238:\n        lVar21 = *param_1;\n        local_10c = iVar6;\n      }\nLAB_00415448:\n      puVar25 = *(undefined8 **)(lVar21 + 0x70);\n      while (puVar25 != (undefined8 *)0x0) {\n        puVar2 = (undefined8 *)*puVar25;\n        free(puVar25);\n        puVar25 = puVar2;\n      }\n      *(undefined8 *)(lVar21 + 0x70) = 0;\n      *(undefined4 *)(lVar21 + 0x80) = 0xf;\n      *(undefined8 *)(lVar21 + 0x68) = 0;\n      free(*(void **)(lVar21 + 0x20));\n      *(undefined8 *)(lVar21 + 0x20) = 0;\n      FUN_00409d50(&local_d8);\n      goto LAB_0041549e;\n    }\n  }\nLAB_004154c0:\n  local_10c = 0xc;\n  goto LAB_0041549e;\ncode_r0x00415092:\n  lVar13 = lVar13 + 1;\n  if (*(long *)(lVar21 + 0x10) != lVar13) goto LAB_0041507e;\nLAB_0041509c:\n  if (bVar31 != 0) {\nLAB_004150a5:\n    bVar31 = 0;\n    lVar13 = 0;\n    goto LAB_0041507e;\n  }\n  if (((((*(byte *)(param_1 + 7) & 0x10) != 0) || (param_1[6] == 0)) ||\n      ((*(byte *)(lVar21 + 0xb0) & 1) == 0)) && (*(long *)(lVar21 + 0x98) == 0)) goto LAB_00415256;\n  pvVar15 = malloc(lVar13 * 0x18);\n  *(void **)(lVar21 + 0x38) = pvVar15;\n  if (pvVar15 == (void *)0x0) {\n    local_10c = 0xc;\n    lVar21 = *param_1;\n    goto LAB_00415448;\n  }\n  uVar23 = 0;\n  if (lVar13 == 0) goto LAB_00415256;\n  while( true ) {\n    pauVar1 = (undefined (*) [16])((long)pvVar15 + uVar23 * 0x18);\n    *pauVar1 = (undefined  [16])0x0;\n    *(undefined8 *)pauVar1[1] = 0;\n    if (*(ulong *)(lVar21 + 0x10) <= uVar23 + 1) break;\n    pvVar15 = *(void **)(lVar21 + 0x38);\n    uVar23 = uVar23 + 1;\n  }\n  if (*(ulong *)(lVar21 + 0x10) != 0) {\n    local_128 = 0;\n    lVar13 = *(long *)(lVar21 + 0x30);\n    do {\n      lVar28 = 0;\n      lVar19 = local_128 * 0x18 + lVar13;\n      lVar24 = *(long *)(lVar19 + 0x10);\n      if (0 < *(long *)(lVar19 + 8)) {\n        do {\n          cVar4 = FUN_00408aa0(*(long *)(lVar21 + 0x38) + *(long *)(lVar24 + lVar28 * 8) * 0x18,\n                               local_128);\n          if (cVar4 == '\\0') {\n            iVar6 = 0xc;\n            goto LAB_00415238;\n          }\n          lVar13 = *(long *)(lVar21 + 0x30);\n          lVar28 = lVar28 + 1;\n        } while (lVar28 < *(long *)(lVar13 + 8 + local_128 * 0x18));\n      }\n      local_128 = local_128 + 1;\n    } while (local_128 <= *(ulong *)(lVar21 + 0x10) && *(ulong *)(lVar21 + 0x10) != local_128);\n  }\nLAB_00415256:\n  local_10c = 0;\n  bVar5 = *(byte *)(__ptr + 0x16) >> 2 & uVar20 == 0;\n  if ((bVar5 != 0) && (param_1[5] == 0)) {\n    if (__ptr[2] == (long *)0x0) {\nLAB_00415853:\n      bVar27 = 0;\n    }\n    else {\n      plVar14 = *__ptr;\n      bVar27 = 0;\n      plVar10 = (long *)0x0;\n      plVar9 = plVar14;\n      do {\n        switch(*(char *)(plVar9 + 1)) {\n        default:\n                    /* WARNING: Subroutine does not return */\n          abort();\n        case '\\x01':\n          if (*(char *)plVar9 < '\\0') {\n            bVar31 = bVar5;\n          }\n          break;\n        case '\\x02':\n        case '\\x04':\n        case '\\b':\n        case '\\t':\n        case '\\n':\n        case '\\v':\n          break;\n        case '\\x03':\n          if ((*(long *)(*plVar9 + 0x10) != 0) || (*(long *)(*plVar9 + 0x18) != 0))\n          goto switchD_004155c1_caseD_6;\n          break;\n        case '\\x05':\n          bVar27 = bVar5;\n          break;\n        case '\\x06':\n          goto switchD_004155c1_caseD_6;\n        case '\\f':\n          uVar22 = *(uint *)plVar9;\n          if (uVar22 != 0x20) {\n            if (uVar22 < 0x21) {\n              if (uVar22 != 0x10) goto switchD_004155c1_caseD_6;\n            }\n            else if ((uVar22 != 0x40) && (uVar22 != 0x80)) goto switchD_004155c1_caseD_6;\n          }\n        }\n        plVar10 = (long *)((long)plVar10 + 1);\n        plVar9 = plVar9 + 2;\n      } while (plVar10 != __ptr[2]);\n      if ((bVar31 | bVar27) == 0) goto LAB_00415853;\n      plVar9 = plVar14 + (long)plVar10 * 2;\n      do {\n        if (*(char *)(plVar14 + 1) == '\\x01') {\n          if (*(char *)plVar14 < '\\0') {\n            *(byte *)((long)plVar14 + 10) = *(byte *)((long)plVar14 + 10) & 0xdf;\n          }\n        }\n        else if (*(char *)(plVar14 + 1) == '\\x05') {\n          *(char *)(plVar14 + 1) = '\\a';\n        }\n        plVar14 = plVar14 + 2;\n      } while (plVar9 != plVar14);\n    }\n    *(undefined4 *)((long)__ptr + 0xb4) = 1;\n    *(byte *)(__ptr + 0x16) =\n         (0 < (long)__ptr[0x13] | bVar27) * '\\x02' | *(byte *)(__ptr + 0x16) & 0xf9;\n  }\nswitchD_004155c1_caseD_6:\n  plVar14 = *(long **)(__ptr[0xd][3] + 0x38);\n  __ptr[0x12] = plVar14;\n  iVar7 = FUN_0040b1c0(local_f8,__ptr[6] + (long)plVar14 * 3);\n  iVar6 = iVar7;\n  local_108[0] = iVar7;\n  if (iVar7 == 0) {\n    if ((0 < (long)__ptr[0x13]) && (lVar21 = CONCAT71(uStack_ef,local_f0), 0 < lVar21)) {\n      lVar13 = 0;\nLAB_004152e5:\n      do {\n        lVar24 = *(long *)((long)local_e8[0] + lVar13 * 8);\n        plVar14 = *__ptr + lVar24 * 2;\n        if (*(char *)(plVar14 + 1) == '\\x04') {\n          lVar19 = 0;\n          do {\n            plVar9 = *__ptr + *(long *)((long)local_e8[0] + lVar19 * 8) * 2;\n            if ((*(char *)(plVar9 + 1) == '\\t') && (*plVar9 == *plVar14)) {\n              lVar24 = *(long *)__ptr[5][lVar24 * 3 + 2];\n              lVar19 = FUN_0040a120(lVar21,local_e8,lVar24);\n              if (lVar19 == 0) {\n                iVar6 = FUN_0040a660(local_f8,__ptr[6] + lVar24 * 3);\n                if (iVar6 != 0) goto LAB_004153bf;\n                lVar21 = CONCAT71(uStack_ef,local_f0);\n                lVar13 = 1;\n                if (lVar21 < 2) goto LAB_00415380;\n                goto LAB_004152e5;\n              }\n              break;\n            }\n            lVar19 = lVar19 + 1;\n          } while (lVar21 != lVar19);\n        }\n        lVar13 = lVar13 + 1;\n      } while (lVar13 < lVar21);\n    }\nLAB_00415380:\n    plVar14 = (long *)FUN_0040b3d0(local_108,__ptr,local_f8,0);\n    __ptr[9] = plVar14;\n    iVar6 = local_108[0];\n    if (plVar14 != (long *)0x0) {\n      if (*(char *)(plVar14 + 0xd) < '\\0') {\n        plVar14 = (long *)FUN_0040b3d0(local_108,__ptr,local_f8,1);\n        __ptr[10] = plVar14;\n        plVar14 = (long *)FUN_0040b3d0(local_108,__ptr,local_f8,2);\n        __ptr[0xb] = plVar14;\n        plVar14 = (long *)FUN_0040b3d0(local_108,__ptr,local_f8,6);\n        __ptr[0xc] = plVar14;\n        iVar6 = local_108[0];\n        if (((__ptr[10] == (long *)0x0) || (__ptr[0xb] == (long *)0x0)) || (plVar14 == (long *)0x0))\n        goto LAB_004153bf;\n      }\n      else {\n        __ptr[0xc] = plVar14;\n        __ptr[0xb] = plVar14;\n        __ptr[10] = plVar14;\n      }\n      free(local_e8[0]);\n      iVar6 = iVar7;\n    }\n  }\nLAB_004153bf:\n  lVar21 = *param_1;\n  puVar25 = *(undefined8 **)(lVar21 + 0x70);\n  local_10c = iVar6;\n  while (puVar25 != (undefined8 *)0x0) {\n    puVar2 = (undefined8 *)*puVar25;\n    free(puVar25);\n    puVar25 = puVar2;\n  }\n  *(undefined8 *)(lVar21 + 0x70) = 0;\n  *(undefined4 *)(lVar21 + 0x80) = 0xf;\n  *(undefined8 *)(lVar21 + 0x68) = 0;\n  free(*(void **)(lVar21 + 0x20));\n  *(undefined8 *)(lVar21 + 0x20) = 0;\n  FUN_00409d50(&local_d8);\n  if (local_10c == 0) {\n    return 0;\n  }\nLAB_0041549e:\n  FUN_0040d700(__ptr);\n  *param_1 = 0;\n  param_1[1] = 0;\n  return local_10c;\n}\n\n",
            "funcName": "FUN_00414ae0"
        },
        {
            "funcStartAddr": "0x415890",
            "funcEndAddr": "0x4158f6",
            "decompiledFuncCode": "\nundefined8 FUN_00415890(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  *(byte *)(param_3 + 0x38) =\n       *(byte *)(param_3 + 0x38) & 0xef | (byte)(((uint)(DAT_0061d648 >> 0x19) & 1) << 4) | 0x80;\n  iVar1 = FUN_00414ae0(param_3,param_1,param_2);\n  if (iVar1 != 0) {\n    uVar2 = dcgettext(0,\"Success\" + *(long *)(&DAT_00419aa0 + (long)iVar1 * 8),5);\n    return uVar2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00415890"
        },
        {
            "funcStartAddr": "0x415900",
            "funcEndAddr": "0x41590f",
            "decompiledFuncCode": "\nundefined8 FUN_00415900(undefined8 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = DAT_0061d648;\n  DAT_0061d648 = param_1;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00415900"
        },
        {
            "funcStartAddr": "0x415910",
            "funcEndAddr": "0x4159d3",
            "decompiledFuncCode": "\nundefined8 FUN_00415910(long *param_1)\n\n{\n  undefined8 *puVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  ulong uVar5;\n  undefined8 *puVar6;\n  \n  puVar1 = (undefined8 *)param_1[4];\n  lVar2 = *param_1;\n  *puVar1 = 0;\n  puVar1[0x1f] = 0;\n  puVar6 = (undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n  for (uVar5 = (ulong)(((int)puVar1 - (int)(undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8))\n                       + 0x100U >> 3); uVar5 != 0; uVar5 = uVar5 - 1) {\n    *puVar6 = 0;\n    puVar6 = puVar6 + 1;\n  }\n  FUN_0040e3c0(param_1,*(long *)(lVar2 + 0x48) + 0x10,*(long *)(lVar2 + 0x48) + 0x18,puVar1);\n  lVar4 = *(long *)(lVar2 + 0x50);\n  if (*(long *)(lVar2 + 0x48) != lVar4) {\n    FUN_0040e3c0(param_1,lVar4 + 0x10,lVar4 + 0x18,puVar1);\n    lVar4 = *(long *)(lVar2 + 0x48);\n  }\n  lVar3 = *(long *)(lVar2 + 0x58);\n  if (lVar3 != lVar4) {\n    FUN_0040e3c0(param_1,lVar3 + 0x10,lVar3 + 0x18,puVar1);\n    lVar4 = *(long *)(lVar2 + 0x48);\n  }\n  lVar2 = *(long *)(lVar2 + 0x60);\n  if (lVar2 != lVar4) {\n    FUN_0040e3c0(param_1,lVar2 + 0x10,lVar2 + 0x18,puVar1);\n  }\n  *(byte *)(param_1 + 7) = *(byte *)(param_1 + 7) | 8;\n  return 0;\n}\n\n",
            "funcName": "FUN_00415910"
        },
        {
            "funcStartAddr": "0x4159e0",
            "funcEndAddr": "0x415e03",
            "decompiledFuncCode": "\nlong FUN_004159e0(long param_1,undefined8 param_2,long param_3,long param_4,long param_5,\n                 undefined8 param_6,ulong *param_7,char param_8)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  byte bVar3;\n  byte bVar4;\n  int iVar5;\n  long *__ptr;\n  void *pvVar6;\n  void *pvVar7;\n  size_t __size;\n  long lVar8;\n  long lVar9;\n  char cVar10;\n  ulong uVar11;\n  ulong uVar12;\n  \n  lVar8 = param_5 + param_4;\n  if ((param_4 < 0) || (param_3 < param_4)) {\n    return -1;\n  }\n  lVar9 = param_3;\n  if (((param_3 < lVar8) || ((-1 < param_5 && (lVar8 < param_4)))) ||\n     ((-1 < lVar8 && ((lVar9 = lVar8, -1 < param_5 || (lVar8 < param_4)))))) {\n    bVar3 = *(byte *)(param_1 + 0x38);\n    bVar4 = bVar3 >> 5 & 3;\n    if ((param_4 < lVar9) && ((*(long *)(param_1 + 0x20) != 0 && ((bVar3 & 8) == 0)))) {\n      FUN_00415910(param_1);\n      bVar3 = *(byte *)(param_1 + 0x38);\n    }\n  }\n  else {\n    bVar3 = *(byte *)(param_1 + 0x38);\n    lVar9 = 0;\n    bVar4 = bVar3 >> 5 & 3;\n  }\n  if (((bVar3 & 0x10) == 0) && (param_7 != (ulong *)0x0)) {\n    if (((bVar3 & 6) == 4) && (uVar12 = *param_7, uVar12 <= *(ulong *)(param_1 + 0x30))) {\n      if ((long)uVar12 < 1) goto LAB_00415c40;\n    }\n    else {\n      uVar12 = *(ulong *)(param_1 + 0x30) + 1;\n    }\n    __size = uVar12 << 4;\n  }\n  else {\nLAB_00415c40:\n    __size = 0x10;\n    uVar12 = 1;\n    param_7 = (ulong *)0x0;\n  }\n  __ptr = (long *)malloc(__size);\n  if (__ptr == (long *)0x0) {\n    return -2;\n  }\n  iVar5 = FUN_00410a30(param_1,param_2,param_3,param_4,lVar9,param_6,uVar12,__ptr,bVar4);\n  if (iVar5 == 0) {\n    if (param_7 != (ulong *)0x0) {\n      uVar1 = uVar12 + 1;\n      bVar3 = *(byte *)(param_1 + 0x38) >> 1;\n      bVar4 = bVar3 & 3;\n      if ((bVar3 & 3) == 0) {\n        pvVar6 = malloc(uVar1 * 8);\n        param_7[1] = (ulong)pvVar6;\n        if (pvVar6 != (void *)0x0) {\n          pvVar7 = malloc(uVar1 * 8);\n          param_7[2] = (ulong)pvVar7;\n          if (pvVar7 != (void *)0x0) {\n            *param_7 = uVar1;\n            cVar10 = '\\x01';\n            goto LAB_00415b67;\n          }\n          free(pvVar6);\n        }\nLAB_00415dd2:\n        cVar10 = '\\0';\n      }\n      else {\n        if (bVar4 == 1) {\n          cVar10 = '\\x01';\n          if (*param_7 < uVar1) {\n            pvVar6 = realloc((void *)param_7[1],uVar1 * 8);\n            if (pvVar6 == (void *)0x0) goto LAB_00415dd2;\n            pvVar7 = realloc((void *)param_7[2],uVar1 * 8);\n            cVar10 = '\\x01';\n            if (pvVar7 == (void *)0x0) {\n              free(pvVar6);\n              cVar10 = '\\0';\n              goto LAB_00415bdd;\n            }\n            param_7[1] = (ulong)pvVar6;\n            param_7[2] = (ulong)pvVar7;\n            *param_7 = uVar1;\n          }\n        }\n        else {\n          if (bVar4 != 2) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"regs_allocated == REGS_FIXED\",\"lib/regexec.c\",0x1f8,\"re_copy_regs\");\n          }\n          if (*param_7 <= uVar12 && uVar12 != *param_7) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"regs->num_regs >= nregs\",\"lib/regexec.c\",0x1fa,\"re_copy_regs\");\n          }\n          cVar10 = '\\x02';\n        }\nLAB_00415b67:\n        if ((long)uVar12 < 1) {\n          uVar12 = 0;\n        }\n        else {\n          uVar1 = param_7[1];\n          uVar2 = param_7[2];\n          lVar8 = 0;\n          do {\n            *(undefined8 *)(uVar1 + lVar8) = *(undefined8 *)((long)__ptr + lVar8 * 2);\n            *(undefined8 *)(uVar2 + lVar8) = *(undefined8 *)((long)__ptr + lVar8 * 2 + 8);\n            lVar8 = lVar8 + 8;\n          } while (lVar8 != uVar12 * 8);\n        }\n        if (uVar12 <= *param_7 && *param_7 != uVar12) {\n          uVar1 = param_7[2];\n          uVar2 = param_7[1];\n          do {\n            uVar11 = uVar12 + 1;\n            *(undefined8 *)(uVar1 + uVar12 * 8) = 0xffffffffffffffff;\n            *(undefined8 *)(uVar2 + uVar12 * 8) = 0xffffffffffffffff;\n            uVar12 = uVar11;\n          } while (uVar11 <= *param_7 && *param_7 != uVar11);\n        }\n      }\nLAB_00415bdd:\n      *(byte *)(param_1 + 0x38) = *(byte *)(param_1 + 0x38) & 0xf9 | cVar10 * '\\x02';\n      if ((cVar10 * '\\x02' & 6U) == 0) goto LAB_00415b00;\n    }\n    lVar8 = *__ptr;\n    if (param_8 != '\\0') {\n      if (param_4 != lVar8) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"pmatch[0].rm_so == start\",\"lib/regexec.c\",0x1bd,\"re_search_stub\");\n      }\n      lVar8 = __ptr[1] - lVar8;\n    }\n  }\n  else {\n    lVar8 = -1;\n    if (iVar5 == 1) goto LAB_00415b07;\nLAB_00415b00:\n    lVar8 = -2;\n  }\nLAB_00415b07:\n  free(__ptr);\n  return lVar8;\n}\n\n",
            "funcName": "FUN_004159e0"
        },
        {
            "funcStartAddr": "0x415e40",
            "funcEndAddr": "0x415f54",
            "decompiledFuncCode": "\nundefined8\nFUN_00415e40(undefined8 param_1,void *param_2,size_t param_3,void *param_4,size_t param_5,\n            undefined8 param_6,undefined8 param_7,undefined8 param_8,undefined8 param_9,\n            undefined param_10)\n\n{\n  undefined8 uVar1;\n  void *__dest;\n  \n  if ((((char)((byte)(param_5 >> 0x38) | (byte)((ulong)param_9 >> 0x38)) < '\\0') ||\n      ((long)param_3 < 0)) || (SCARRY8(param_3,param_5))) {\nLAB_00415f50:\n    uVar1 = 0xfffffffffffffffe;\n  }\n  else {\n    if (param_5 == 0) {\n      __dest = (void *)0x0;\n      param_4 = param_2;\n    }\n    else {\n      __dest = (void *)0x0;\n      if (param_3 != 0) {\n        __dest = malloc(param_3 + param_5);\n        if (__dest == (void *)0x0) goto LAB_00415f50;\n        memcpy(__dest,param_2,param_3);\n        memcpy((void *)((long)__dest + param_3),param_4,param_5);\n        param_4 = __dest;\n      }\n    }\n    uVar1 = FUN_004159e0(param_1,param_4,param_3 + param_5,param_6,param_7,param_9,param_8,param_10)\n    ;\n    free(__dest);\n  }\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00415e40"
        },
        {
            "funcStartAddr": "0x415f70",
            "funcEndAddr": "0x416074",
            "decompiledFuncCode": "\nint FUN_00415f70(undefined8 *param_1,char *param_2,uint param_3)\n\n{\n  int iVar1;\n  void *pvVar2;\n  size_t sVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  bool bVar7;\n  \n  *param_1 = 0;\n  uVar6 = (-(uint)((param_3 & 1) == 0) & 0xfd4fca) + 0x3b2fc;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  pvVar2 = malloc(0x100);\n  param_1[4] = pvVar2;\n  if (pvVar2 == (void *)0x0) {\n    return 0xc;\n  }\n  uVar4 = (param_3 & 2) << 0x15;\n  uVar5 = uVar4 | uVar6;\n  bVar7 = (param_3 & 4) != 0;\n  if (bVar7) {\n    uVar5 = uVar4 | uVar6 & 0xffffffbf | 0x100;\n  }\n  param_1[5] = 0;\n  *(byte *)(param_1 + 7) =\n       (byte)((param_3 >> 3 & 1) << 4) | *(byte *)(param_1 + 7) & 0x6f | bVar7 << 7;\n  sVar3 = strlen(param_2);\n  iVar1 = FUN_00414ae0(param_1,param_2,sVar3,uVar5);\n  if (iVar1 == 0x10) {\n    iVar1 = 8;\n  }\n  else if (iVar1 == 0) {\n    FUN_00415910(param_1);\n    return 0;\n  }\n  free((void *)param_1[4]);\n  param_1[4] = 0;\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00415f70"
        },
        {
            "funcStartAddr": "0x416080",
            "funcEndAddr": "0x4160f9",
            "decompiledFuncCode": "\nulong FUN_00416080(uint param_1,undefined8 param_2,void *param_3,ulong param_4)\n\n{\n  ulong uVar1;\n  char *__s;\n  size_t sVar2;\n  \n  if (param_1 < 0x11) {\n    __s = (char *)dcgettext(0,\"Success\" + *(long *)(&DAT_00419aa0 + (long)(int)param_1 * 8),5);\n    sVar2 = strlen(__s);\n    uVar1 = sVar2 + 1;\n    if (param_4 != 0) {\n      sVar2 = uVar1;\n      if (param_4 < uVar1) {\n        sVar2 = param_4 - 1;\n        *(undefined *)((long)param_3 + (param_4 - 1)) = 0;\n      }\n      memcpy(param_3,__s,sVar2);\n    }\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00416080"
        },
        {
            "funcStartAddr": "0x416100",
            "funcEndAddr": "0x416144",
            "decompiledFuncCode": "\nvoid FUN_00416100(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    FUN_0040d700();\n  }\n  *param_1 = 0;\n  param_1[1] = 0;\n  free((void *)param_1[4]);\n  param_1[4] = 0;\n  free((void *)param_1[5]);\n  param_1[5] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00416100"
        },
        {
            "funcStartAddr": "0x416150",
            "funcEndAddr": "0x4161da",
            "decompiledFuncCode": "\nbool FUN_00416150(long param_1,char *param_2,undefined8 param_3,undefined8 *param_4,uint param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  size_t sVar3;\n  undefined8 uVar4;\n  \n  if ((param_5 & 0xfffffff8) != 0) {\n    return (bool)2;\n  }\n  if ((param_5 & 4) == 0) {\n    sVar3 = strlen(param_2);\n    uVar4 = 0;\n    bVar1 = *(byte *)(param_1 + 0x38);\n  }\n  else {\n    uVar4 = *param_4;\n    sVar3 = param_4[1];\n    bVar1 = *(byte *)(param_1 + 0x38);\n  }\n  if ((bVar1 & 0x10) != 0) {\n    param_4 = (undefined8 *)0x0;\n    param_3 = 0;\n  }\n  iVar2 = FUN_00410a30(param_1,param_2,sVar3,uVar4,sVar3,sVar3,param_3,param_4,param_5);\n  return iVar2 != 0;\n}\n\n",
            "funcName": "FUN_00416150"
        },
        {
            "funcStartAddr": "0x4161f0",
            "funcEndAddr": "0x416208",
            "decompiledFuncCode": "\nvoid FUN_004161f0(void)\n\n{\n  FUN_004159e0();\n  return;\n}\n\n",
            "funcName": "FUN_004161f0"
        },
        {
            "funcStartAddr": "0x416210",
            "funcEndAddr": "0x416225",
            "decompiledFuncCode": "\nvoid FUN_00416210(void)\n\n{\n  FUN_004159e0();\n  return;\n}\n\n",
            "funcName": "FUN_00416210"
        },
        {
            "funcStartAddr": "0x416230",
            "funcEndAddr": "0x41624a",
            "decompiledFuncCode": "\nvoid FUN_00416230(void)\n\n{\n  FUN_00415e40();\n  return;\n}\n\n",
            "funcName": "FUN_00416230"
        },
        {
            "funcStartAddr": "0x416250",
            "funcEndAddr": "0x41626c",
            "decompiledFuncCode": "\nvoid FUN_00416250(void)\n\n{\n  FUN_00415e40();\n  return;\n}\n\n",
            "funcName": "FUN_00416250"
        },
        {
            "funcStartAddr": "0x416270",
            "funcEndAddr": "0x4162aa",
            "decompiledFuncCode": "\nvoid FUN_00416270(long param_1,long *param_2,long param_3,long param_4,long param_5)\n\n{\n  if (param_3 != 0) {\n    *(byte *)(param_1 + 0x38) = *(byte *)(param_1 + 0x38) & 0xf9 | 2;\n    *param_2 = param_3;\n    param_2[1] = param_4;\n    param_2[2] = param_5;\n    return;\n  }\n  *(byte *)(param_1 + 0x38) = *(byte *)(param_1 + 0x38) & 0xf9;\n  *param_2 = 0;\n  param_2[2] = 0;\n  param_2[1] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00416270"
        },
        {
            "funcStartAddr": "0x4162b0",
            "funcEndAddr": "0x41630c",
            "decompiledFuncCode": "\nulong FUN_004162b0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_004073b0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004162b0"
        },
        {
            "funcStartAddr": "0x416310",
            "funcEndAddr": "0x416366",
            "decompiledFuncCode": "\nbool FUN_00416310(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00419cd0;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00416310"
        },
        {
            "funcStartAddr": "0x416370",
            "funcEndAddr": "0x4168c4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00416370(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0061d638 != (char *)0x0) goto LAB_004163aa;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00416495:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_004164b6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00416495;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_004164b6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00416550:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_004166dc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00416550;\n              if (uVar4 == 0x23) goto LAB_00416741;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_004166ef;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_004073b0(__stream);\n                goto LAB_004164f4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_004166dc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_004166ef;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_004164ee;\n    }\n  }\n  DAT_0061d638 = \"\";\nLAB_004163aa:\n  cVar1 = *DAT_0061d638;\n  pcVar7 = DAT_0061d638;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00416404:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00416404;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00416741:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_004166ef;\n  goto LAB_00416550;\nLAB_004166ef:\n  FUN_004073b0(__stream);\n  if (local_d0 == 0) {\nLAB_004164ee:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_004164f4:\n  free(__file);\n  DAT_0061d638 = pcVar7;\n  goto LAB_004163aa;\n}\n\n",
            "funcName": "FUN_00416370"
        },
        {
            "funcStartAddr": "0x4168e0",
            "funcEndAddr": "0x41693d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00416913) */\n/* WARNING: Removing unreachable block (ram,0x00416918) */\n\nvoid FUN_004168e0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_004168e0"
        },
        {
            "funcStartAddr": "0x416940",
            "funcEndAddr": "0x416941",
            "decompiledFuncCode": "\nvoid FUN_00416940(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00416940"
        },
        {
            "funcStartAddr": "0x416950",
            "funcEndAddr": "0x416968",
            "decompiledFuncCode": "\nvoid FUN_00416950(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0061d2a8);\n  return;\n}\n\n",
            "funcName": "FUN_00416950"
        },
        {
            "funcStartAddr": "0x416968",
            "funcEndAddr": "0x416988",
            "decompiledFuncCode": "\nundefined8 FUN_00416968(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0061ce30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00416968"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_csplit.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}