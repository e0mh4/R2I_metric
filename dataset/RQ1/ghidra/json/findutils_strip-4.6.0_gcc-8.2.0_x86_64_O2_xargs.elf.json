{
    "funcCount": 152,
    "funcInfo": [
        {
            "funcStartAddr": "0x402000",
            "funcEndAddr": "0x402005",
            "decompiledFuncCode": "\nvoid FUN_00402000(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402000"
        },
        {
            "funcStartAddr": "0x402005",
            "funcEndAddr": "0x40200a",
            "decompiledFuncCode": "\nvoid FUN_00402005(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402005"
        },
        {
            "funcStartAddr": "0x40200f",
            "funcEndAddr": "0x402014",
            "decompiledFuncCode": "\nvoid FUN_0040200f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040200f"
        },
        {
            "funcStartAddr": "0x402014",
            "funcEndAddr": "0x402019",
            "decompiledFuncCode": "\nvoid FUN_00402014(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402014"
        },
        {
            "funcStartAddr": "0x402019",
            "funcEndAddr": "0x40201e",
            "decompiledFuncCode": "\nvoid FUN_00402019(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402019"
        },
        {
            "funcStartAddr": "0x40201e",
            "funcEndAddr": "0x402023",
            "decompiledFuncCode": "\nvoid FUN_0040201e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040201e"
        },
        {
            "funcStartAddr": "0x402030",
            "funcEndAddr": "0x402dd4",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00402030(int param_1,undefined4 **param_2)\n\n{\n  long lVar1;\n  undefined4 **ppuVar2;\n  byte bVar3;\n  char cVar4;\n  undefined *puVar5;\n  bool bVar6;\n  bool bVar7;\n  ulong uVar8;\n  _union_1454 _Var9;\n  int iVar10;\n  int iVar11;\n  undefined8 uVar12;\n  int *piVar13;\n  ushort **ppuVar14;\n  long lVar15;\n  char *pcVar16;\n  ulong uVar17;\n  long lVar18;\n  ulong extraout_RDX;\n  undefined8 *puVar19;\n  undefined8 *puVar20;\n  byte *pbVar21;\n  undefined4 *puVar22;\n  byte *pbVar23;\n  byte bVar24;\n  code *pcVar25;\n  code *pcVar26;\n  byte bVar27;\n  byte *local_108;\n  int local_ec;\n  undefined4 local_e5;\n  undefined local_e1;\n  undefined4 *local_e0;\n  sigaction local_d8;\n  \n  bVar27 = 0;\n  pcVar16 = (char *)*param_2;\n  local_e5 = 0x6f686365;\n  local_e1 = 0;\n  if ((undefined4 *)pcVar16 == (undefined4 *)0x0) {\n    pcVar16 = \"xargs\";\n  }\n  FUN_004075c0(pcVar16);\n  FUN_004053a0();\n  _DAT_006123d0 = getpid();\n  DAT_006123c4 = 0;\n  setlocale(6,\"\");\n  bindtextdomain(\"findutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"findutils\");\n  iVar10 = FUN_0040bc80(FUN_004058e0);\n  if ((iVar10 != 0) || (iVar10 = FUN_0040bc80(FUN_00403ec0), iVar10 != 0)) {\n    uVar12 = dcgettext(0,\"The atexit library function failed\",5);\n    piVar13 = __errno_location();\n    error(1,*piVar13,uVar12);\n  }\n  pcVar26 = FUN_00402f00;\n  iVar10 = FUN_00404ea0(&DAT_00612420,0x800);\n  if (1 < iVar10 - 1U) {\n    lVar18 = sysconf(0);\n    uVar17 = DAT_00612438;\n    if (0 < lVar18) {\n      if (lVar18 < 0x801) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"val > XARGS_POSIX_HEADROOM\",\"xargs.c\",0x1d8,\"main\");\n      }\n      uVar17 = lVar18 - 0x800U;\n      if (DAT_00612438 < lVar18 - 0x800U) {\n        uVar17 = DAT_00612438;\n      }\n    }\n    DAT_00612438 = uVar17;\n    if (DAT_00612438 < 0x800) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"bc_ctl.arg_max >= LINE_MAX\",\"xargs.c\",500,\"main\");\n    }\n    pcVar26 = FUN_00402ec0;\n    _DAT_00612460 = FUN_00404120;\n    FUN_00404f80(&DAT_00612420);\n  }\n  bVar7 = true;\n  pcVar25 = FUN_004038b0;\n  bVar6 = false;\n  pbVar21 = &DAT_0040f292;\n  uVar17 = DAT_00612438;\n  while (DAT_00612438 = uVar17,\n        iVar11 = FUN_0040b0f0(param_1,param_2,\"+0a:E:e::i::I:l::L:n:prs:txP:d:\",&PTR_DAT_0040d6e0,\n                              &local_ec), local_108 = DAT_00612ec8, iVar11 != -1) {\n    uVar17 = DAT_00612438;\n    switch(iVar11) {\n    case 0x30:\n      DAT_006123c0 = 0;\n      pcVar25 = FUN_00403790;\n      break;\n    default:\n      FUN_004032b0(stderr);\n      return 1;\n    case 0x45:\n    case 0x65:\n      DAT_006123f8 = DAT_00612ec8;\n      if ((DAT_00612ec8 == (byte *)0x0) || (*DAT_00612ec8 == 0)) {\n        DAT_006123f8 = (byte *)0x0;\n      }\n      break;\n    case 0x49:\n    case 0x69:\n      DAT_00612450 = DAT_00612ec8;\n      if (DAT_00612ec8 == (byte *)0x0) {\n        DAT_00612450 = &DAT_0040d232;\n      }\n      _DAT_00612470 = 0;\n      DAT_00612468 = 0;\n      break;\n    case 0x4c:\n      DAT_00612468 = FUN_00403570(DAT_00612ec8,0x4c,1,0xffffffffffffffff,1);\n      _DAT_00612470 = 0;\n      DAT_00612450 = (byte *)0x0;\n      uVar17 = DAT_00612438;\n      break;\n    case 0x50:\n      DAT_006122b0 = FUN_00403570(DAT_00612ec8,0x50,0,0x7fffffff,1);\n      uVar17 = DAT_00612438;\n      break;\n    case 0x53:\n      bVar6 = true;\n      break;\n    case 0x61:\n      pbVar21 = DAT_00612ec8;\n      break;\n    case 100:\n      lVar18 = -1;\n      bVar24 = *DAT_00612ec8;\n      pbVar23 = DAT_00612ec8;\n      do {\n        if (lVar18 == 0) break;\n        lVar18 = lVar18 + -1;\n        bVar3 = *pbVar23;\n        pbVar23 = pbVar23 + (ulong)bVar27 * -2 + 1;\n      } while (bVar3 != 0);\n      if (lVar18 != -3) {\n        if (bVar24 == 0x5c) {\n          bVar24 = DAT_00612ec8[1];\n          switch(bVar24) {\n          case 0x5c:\n            break;\n          default:\n            piVar13 = __errno_location();\n            if (bVar24 == 0x78) {\n              *piVar13 = 0;\n              local_d8.__sigaction_handler.sa_handler = (__sighandler_t)0x0;\n              uVar17 = strtoul((char *)(local_108 + 2),(char **)&local_d8,0x10);\n              if (0xff < uVar17) {\n                pcVar16 = \n                \"Invalid escape sequence %s in input delimiter specification; character values must not exceed %lx.\"\n                ;\n                goto LAB_0040259d;\n              }\n            }\n            else {\n              ppuVar14 = __ctype_b_loc();\n              if ((*(byte *)((long)*ppuVar14 + (ulong)bVar24 * 2 + 1) & 8) == 0) {\n                uVar12 = dcgettext(0,\"Invalid escape sequence %s in input delimiter specification.\",\n                                   5);\n                error(1,0,uVar12,local_108);\n                pbVar23 = (byte *)0x0;\n              }\n              else {\n                pbVar23 = local_108 + 1;\n              }\n              *piVar13 = 0;\n              local_d8.__sigaction_handler.sa_handler = (__sighandler_t)0x0;\n              uVar17 = strtoul((char *)pbVar23,(char **)&local_d8,8);\n              if (0xff < uVar17) {\n                pcVar16 = \n                \"Invalid escape sequence %s in input delimiter specification; character values must not exceed %lo.\"\n                ;\nLAB_0040259d:\n                uVar12 = dcgettext(0,pcVar16,5);\n                error(1,0,uVar12,local_108,0xff);\n              }\n            }\n            _Var9 = local_d8.__sigaction_handler;\n            bVar24 = (byte)uVar17;\n            if (*local_d8.__sigaction_handler.sa_handler != (__sighandler_t)0x0) {\n              uVar12 = dcgettext(0,\n                                 \"Invalid escape sequence %s in input delimiter specification; trailing characters %s not recognised.\"\n                                 ,5);\n              error(1,0,uVar12,local_108,_Var9.sa_handler);\n            }\n            break;\n          case 0x61:\n            bVar24 = 7;\n            break;\n          case 0x62:\n            bVar24 = 8;\n            break;\n          case 0x66:\n            bVar24 = 0xc;\n            break;\n          case 0x6e:\n            bVar24 = 10;\n            break;\n          case 0x72:\n            bVar24 = 0xd;\n            break;\n          case 0x74:\n            bVar24 = 9;\n            break;\n          case 0x76:\n            bVar24 = 0xb;\n          }\n        }\n        else {\n          bVar24 = 0;\n          uVar12 = dcgettext(0,\n                             \"Invalid input delimiter specification %s: the delimiter must be either a single character or an escape sequence starting with \\\\.\"\n                             ,5);\n          error(1,0,uVar12,local_108);\n        }\n      }\n      pcVar25 = FUN_00403790;\n      DAT_006123c0 = bVar24;\n      uVar17 = DAT_00612438;\n      break;\n    case 0x68:\n      FUN_004032b0(stdout);\n      return 0;\n    case 0x6c:\n      if (DAT_00612ec8 == (byte *)0x0) {\n        DAT_00612468 = 1;\n      }\n      else {\n        DAT_00612468 = FUN_00403570(DAT_00612ec8,0x6c,1,0xffffffffffffffff,1);\n      }\n      _DAT_00612470 = 0;\n      DAT_00612450 = (byte *)0x0;\n      uVar17 = DAT_00612438;\n      break;\n    case 0x6e:\n      _DAT_00612470 = FUN_00403570(DAT_00612ec8,0x6e,1,0xffffffffffffffff,1);\n      DAT_00612468 = 0;\n      uVar17 = DAT_00612438;\n      if ((_DAT_00612470 == 1) && (DAT_00612450 != (byte *)0x0)) {\n        _DAT_00612470 = 0;\n      }\n      else {\n        DAT_00612450 = (byte *)0x0;\n      }\n      break;\n    case 0x70:\n      DAT_006123c1 = 1;\n    case 0x74:\n      DAT_006123c2 = 1;\n      break;\n    case 0x72:\n      bVar7 = false;\n      break;\n    case 0x73:\n      (*pcVar26)();\n      uVar17 = FUN_00403570(DAT_00612ec8,0x73,1,DAT_00612428,0);\n      uVar8 = DAT_00612428;\n      if (DAT_00612428 < uVar17) {\n        uVar12 = dcgettext(0,\"warning: value %ld for -s option is too large, using %ld instead\",5);\n        error(0,0,uVar12,uVar17,uVar8);\n        uVar17 = DAT_00612428;\n      }\n      break;\n    case 0x76:\n      FUN_00404580(\"xargs\");\n      return 0;\n    case 0x78:\n      DAT_00612420 = 1;\n      break;\n    case 0x80:\n      pcVar16 = strchr((char *)DAT_00612ec8,0x3d);\n      if (pcVar16 != (char *)0x0) {\n        puVar5 = (&PTR_DAT_0040d6e0)[(long)local_ec * 4];\n        uVar12 = dcgettext(0,\"option --%s may not be set to a value which includes `=\\'\",5);\n        error(1,0,uVar12,puVar5);\n      }\n      pbVar23 = DAT_00612ec8;\n      DAT_006123b8 = DAT_00612ec8;\n      iVar11 = unsetenv((char *)DAT_00612ec8);\n      uVar17 = DAT_00612438;\n      if (iVar11 != 0) {\n        uVar12 = dcgettext(0,\"failed to unset environment variable %s\",5);\n        piVar13 = __errno_location();\n        error(1,*piVar13,uVar12,pbVar23);\n        uVar17 = DAT_00612438;\n      }\n    }\n  }\n  if ((DAT_006123f8 != (byte *)0x0) && (pcVar25 == FUN_00403790)) {\n    uVar12 = dcgettext(0,\"warning: the -E option has no effect if -0 or -d is used.\\n\",5);\n    error(0,0,uVar12);\n  }\n  (*pcVar26)();\n  if (iVar10 != 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"BC_INIT_OK == bcstatus\",\"xargs.c\",0x2a2,\"main\");\n  }\n  local_d8.__sigaction_handler.sa_handler = FUN_00402ed0;\n  sigemptyset(&local_d8.sa_mask);\n  local_d8.sa_flags = 0;\n  iVar10 = sigaction(10,&local_d8,(sigaction *)0x0);\n  if (iVar10 != 0) {\n    uVar12 = dcgettext(0,\"Cannot set SIGUSR1 signal handler\",5);\n    piVar13 = __errno_location();\n    error(0,*piVar13,uVar12);\n  }\n  local_d8.__sigaction_handler.sa_handler = FUN_00403720;\n  sigemptyset(&local_d8.sa_mask);\n  local_d8.sa_flags = 0;\n  iVar10 = sigaction(0xc,&local_d8,(sigaction *)0x0);\n  if (iVar10 != 0) {\n    uVar12 = dcgettext(0,\"Cannot set SIGUSR2 signal handler\",5);\n    piVar13 = __errno_location();\n    error(0,*piVar13,uVar12);\n  }\n  iVar10 = strcmp((char *)pbVar21,\"-\");\n  if (iVar10 == 0) {\n    DAT_006124e8 = stdin;\n  }\n  else {\n    _DAT_006124d8 = 1;\n    DAT_006124e8 = FUN_004036c0(pbVar21);\n    if (DAT_006124e8 == 0) {\n      FUN_00408c90(0,8,pbVar21);\n      uVar12 = dcgettext(0,\"Cannot open input file %s\",5);\n      piVar13 = __errno_location();\n      error(1,*piVar13,uVar12);\n    }\n  }\n  if ((DAT_00612450 != (byte *)0x0) || (DAT_00612468 != 0)) {\n    DAT_00612420 = 1;\n  }\n  if (DAT_0061233c == param_1) {\n    local_e0 = &local_e5;\n    param_2 = &local_e0;\n    param_1 = 1;\n    DAT_0061233c = 0;\n  }\n  if (bVar6) {\n    uVar12 = FUN_00404e60();\n    pcVar16 = (char *)dcgettext(0,\"Your environment variables take up %lu bytes\\n\",5);\n    fprintf(stderr,pcVar16,uVar12);\n    uVar17 = DAT_00612428;\n    pcVar16 = (char *)dcgettext(0,\"POSIX upper limit on argument length (this system): %lu\\n\",5);\n    fprintf(stderr,pcVar16,uVar17);\n    uVar12 = DAT_00612430;\n    pcVar16 = (char *)dcgettext(0,\n                                \"POSIX smallest allowable upper limit on argument length (all systems): %lu\\n\"\n                                ,5);\n    fprintf(stderr,pcVar16,uVar12);\n    uVar17 = DAT_00612428;\n    lVar18 = FUN_00404e60();\n    pcVar16 = (char *)dcgettext(0,\"Maximum length of command we could actually use: %lu\\n\",5);\n    fprintf(stderr,pcVar16,uVar17 - lVar18);\n    uVar17 = DAT_00612438;\n    pcVar16 = (char *)dcgettext(0,\"Size of command buffer we are actually using: %lu\\n\",5);\n    fprintf(stderr,pcVar16,uVar17);\n    pcVar16 = (char *)dcgettext(0,\"Maximum parallelism (--max-procs must be no greater): %lu\\n\",5);\n    fprintf(stderr,pcVar16,0x7fffffff);\n    iVar10 = isatty(0);\n    if (iVar10 != 0) {\n      pcVar16 = (char *)dcgettext(0,\n                                  \"\\nExecution of xargs will continue now, and it will try to read its input and run commands; if this is not what you wanted to happen, please type the end-of-file keystroke.\\n\"\n                                  ,5);\n      fprintf(stderr,pcVar16);\n      if (bVar7) {\n        puVar22 = param_2[DAT_0061233c];\n        pcVar16 = (char *)dcgettext(0,\n                                    \"Warning: %s will be run at least once.  If you do not want that to happen, then press the interrupt keystroke.\\n\"\n                                    ,5);\n        fprintf(stderr,pcVar16,puVar22);\n      }\n    }\n  }\n  DAT_006124e0 = FUN_00409680(DAT_00612438 + 1);\n  _DAT_00612498 = FUN_00409680(DAT_00612438 + 1);\n  puVar19 = (undefined8 *)0x0;\n  signal(0x11,(__sighandler_t)0x0);\n  if (DAT_00612450 == (byte *)0x0) {\n    for (; DAT_0061233c < param_1; DAT_0061233c = DAT_0061233c + 1) {\n      uVar17 = 0xffffffffffffffff;\n      puVar22 = param_2[DAT_0061233c];\n      do {\n        if (uVar17 == 0) break;\n        uVar17 = uVar17 - 1;\n        cVar4 = *(char *)puVar22;\n        puVar22 = (undefined4 *)((long)puVar22 + (ulong)bVar27 * -2 + 1);\n      } while (cVar4 != '\\0');\n      puVar20 = &DAT_00612480;\n      FUN_004047a0(&DAT_00612420,&DAT_00612480,param_2[DAT_0061233c],~uVar17,0,0,DAT_006122b4,\n                   puVar19);\n      puVar19 = puVar20;\n    }\n    DAT_006122b4 = 0;\n    DAT_00612458 = DAT_00612480;\n    _DAT_006124a8 = DAT_006124a0;\n    while (iVar10 = (*pcVar25)(), iVar10 != -1) {\n      if ((DAT_00612468 != 0) && (DAT_00612468 <= _DAT_006124d0)) {\n        FUN_00404c00(&DAT_00612420,&DAT_00612480);\n        _DAT_006124d0 = 0;\n      }\n    }\n    if ((DAT_00612480 != DAT_00612458) || ((bVar7 && (DAT_006123f0 == '\\0')))) {\n      FUN_00404c00(&DAT_00612420,&DAT_00612480);\n    }\n  }\n  else {\n    lVar15 = FUN_00409680((long)param_1 << 3);\n    lVar18 = (long)DAT_0061233c;\n    iVar10 = DAT_0061233c;\n    while (iVar10 < param_1) {\n      uVar17 = 0xffffffffffffffff;\n      puVar22 = param_2[lVar18];\n      do {\n        if (uVar17 == 0) break;\n        uVar17 = uVar17 - 1;\n        cVar4 = *(char *)puVar22;\n        puVar22 = (undefined4 *)((long)puVar22 + (ulong)bVar27 * -2 + 1);\n      } while (cVar4 != '\\0');\n      *(ulong *)(lVar15 + lVar18 * 8) = ~uVar17 - 1;\n      lVar18 = lVar18 + 1;\n      iVar10 = (int)lVar18;\n    }\n    uVar17 = 0xffffffffffffffff;\n    pbVar21 = DAT_00612450;\n    do {\n      if (uVar17 == 0) break;\n      uVar17 = uVar17 - 1;\n      bVar24 = *pbVar21;\n      pbVar21 = pbVar21 + (ulong)bVar27 * -2 + 1;\n    } while (bVar24 != 0);\n    _DAT_00612448 = ~uVar17 - 1;\n    while (iVar10 = (*pcVar25)(), iVar10 != -1) {\n      FUN_00405050(&DAT_00612420,&DAT_00612480);\n      lVar18 = (long)DAT_0061233c;\n      DAT_006124a0 = 0;\n      uVar17 = (ulong)DAT_006122b4;\n      FUN_004047a0(&DAT_00612420,&DAT_00612480,param_2[lVar18],*(long *)(lVar15 + lVar18 * 8) + 1,0,\n                   0,uVar17,lVar18);\n      DAT_006122b4 = 0;\n      iVar11 = DAT_0061233c + 1;\n      lVar18 = (long)iVar11;\n      while (iVar11 < param_1) {\n        lVar1 = lVar18 * 8;\n        ppuVar2 = param_2 + lVar18;\n        lVar18 = lVar18 + 1;\n        FUN_00404a40(&DAT_00612420,&DAT_00612480,*ppuVar2,*(undefined8 *)(lVar15 + lVar1),0,0,\n                     DAT_006124e0,(long)iVar10 + -1,DAT_006122b4);\n        uVar17 = extraout_RDX;\n        iVar11 = (int)lVar18;\n      }\n      FUN_00404c00(&DAT_00612420,&DAT_00612480,uVar17);\n    }\n  }\n  DAT_006123c4 = DAT_006123c8;\n  return DAT_006123c8;\n}\n\n",
            "funcName": "FUN_00402030"
        },
        {
            "funcStartAddr": "0x402de0",
            "funcEndAddr": "0x402e0b",
            "decompiledFuncCode": "\nvoid FUN_00402de0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00611ff0)\n            (FUN_00402030,unaff_retaddr,&stack0x00000008,FUN_0040bc10,FUN_0040bc70,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402de0"
        },
        {
            "funcStartAddr": "0x402e0b",
            "funcEndAddr": "0x402e2a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402e18) */\n/* WARNING: Removing unreachable block (ram,0x00402e22) */\n\nvoid FUN_00402e0b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402e0b"
        },
        {
            "funcStartAddr": "0x402e2a",
            "funcEndAddr": "0x402e61",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402e59) */\n\nvoid FUN_00402e2a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402e2a"
        },
        {
            "funcStartAddr": "0x402e61",
            "funcEndAddr": "0x402eb8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402e96) */\n\nvoid FUN_00402e61(void)\n\n{\n  if (DAT_00612388 != '\\0') {\n    return;\n  }\n  FUN_00402e0b();\n  DAT_00612388 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402e61"
        },
        {
            "funcStartAddr": "0x402eb8",
            "funcEndAddr": "0x402ebd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402e59) */\n\nvoid thunk_FUN_00402e2a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402eb8"
        },
        {
            "funcStartAddr": "0x402ec0",
            "funcEndAddr": "0x402ec1",
            "decompiledFuncCode": "\nvoid FUN_00402ec0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402ec0"
        },
        {
            "funcStartAddr": "0x402ed0",
            "funcEndAddr": "0x402ef7",
            "decompiledFuncCode": "\nvoid FUN_00402ed0(void)\n\n{\n  if (DAT_006122b0 != 0x7fffffff) {\n    DAT_006122b0 = DAT_006122b0 + 1;\n  }\n  DAT_006123cc = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402ed0"
        },
        {
            "funcStartAddr": "0x402f00",
            "funcEndAddr": "0x402f2a",
            "decompiledFuncCode": "\nvoid FUN_00402f00(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"environment is too large for exec\",5);\n  error(1,0,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00402f00"
        },
        {
            "funcStartAddr": "0x402f30",
            "funcEndAddr": "0x40318d",
            "decompiledFuncCode": "\nvoid FUN_00402f30(byte param_1,uint param_2)\n\n{\n  long lVar1;\n  __pid_t _Var2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint local_54;\n  uint local_3c [3];\n  \n  if (DAT_006123e8 == 0) {\n    return;\n  }\n  uVar8 = 0;\n  local_54 = (local_54 & 0xffffff00 | (uint)param_1) ^ 1;\n  do {\n    DAT_006123cc = 0;\n    uVar7 = param_2 <= uVar8 & local_54;\n    while( true ) {\n      do {\n        while (_Var2 = waitpid(-1,(int *)local_3c,uVar7), lVar1 = DAT_006123e8, _Var2 == -1) {\n          piVar3 = __errno_location();\n          if (*piVar3 != 4) {\n            uVar5 = dcgettext(0,\"error waiting for child process\",5);\n            error(1,*piVar3,uVar5);\n          }\n          if ((DAT_006123cc != 0) && (param_1 == 0)) {\n            uVar7 = 1;\n          }\n        }\n        if (_Var2 == 0) {\n          if (uVar7 == 0) {\n            uVar5 = dcgettext(0,\"WARNING: Lost track of %lu child processes\",5);\n            error(0,0,uVar5,lVar1);\n            return;\n          }\n          return;\n        }\n      } while (DAT_006123d8 == 0);\n      if (_Var2 == *DAT_006123e0) break;\n      uVar6 = 0;\n      while( true ) {\n        uVar6 = (ulong)((int)uVar6 + 1);\n        if (DAT_006123d8 <= uVar6) break;\n        if (DAT_006123e0[uVar6] == _Var2) goto LAB_00403040;\n      }\n      if (uVar6 != DAT_006123d8) goto LAB_00403040;\n    }\n    uVar6 = 0;\nLAB_00403040:\n    DAT_006123e0[uVar6] = 0;\n    uVar8 = uVar8 + 1;\n    DAT_006123e8 = DAT_006123e8 + -1;\n    if ((char)(local_3c[0] >> 8) == -1) {\n      uVar5 = dcgettext(0,\"%s: exited with status 255; aborting\",5);\n      error(0x7c,0,uVar5);\n    }\n    if ((char)local_3c[0] == '\\x7f') {\n      uVar7 = local_3c[0] >> 8;\n      uVar5 = *DAT_00612488;\n      uVar4 = dcgettext(0,\"%s: stopped by signal %d\",5);\n      error(0x7d,0,uVar4,uVar5,(char)uVar7);\n    }\n    if ('\\x01' < (char)(((byte)local_3c[0] & 0x7f) + 1)) {\n      uVar7 = local_3c[0] & 0x7f;\n      uVar5 = *DAT_00612488;\n      uVar4 = dcgettext(0,\"%s: terminated by signal %d\",5);\n      error(0x7d,0,uVar4,uVar5,uVar7);\n    }\n    if ((char)(local_3c[0] >> 8) != '\\0') {\n      DAT_006123c8 = 0x7b;\n    }\n    if (DAT_006123e8 == 0) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402f30"
        },
        {
            "funcStartAddr": "0x4031a0",
            "funcEndAddr": "0x4032a6",
            "decompiledFuncCode": "\nulong FUN_004031a0(int param_1)\n\n{\n  ulong uVar1;\n  int *piVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  long lVar6;\n  long lVar7;\n  ulong uVar8;\n  \n  uVar8 = DAT_006123d8;\n  if (DAT_006123d8 == 0) {\n    lVar6 = 0;\n    uVar3 = 0;\n    if (DAT_006123e0 == (int *)0x0) {\n      lVar7 = 0x80;\n      DAT_006123d8 = 0x20;\n    }\n    else {\nLAB_00403225:\n      DAT_006123d8 = DAT_006123d8 + 1 + (DAT_006123d8 >> 1);\n      lVar7 = DAT_006123d8 * 4;\n    }\n    piVar2 = (int *)FUN_004096d0(DAT_006123e0,lVar7);\n    uVar1 = DAT_006123d8;\n    uVar5 = uVar3;\n    DAT_006123e0 = piVar2;\n    if (uVar8 < DAT_006123d8) {\n      do {\n        piVar2[uVar8] = 0;\n        uVar8 = (ulong)((int)uVar5 + 1);\n        uVar5 = uVar8;\n      } while (uVar8 < uVar1);\n    }\nLAB_004031ef:\n    piVar4 = (int *)((long)piVar2 + lVar6);\n    if (*(int *)((long)piVar2 + lVar6) != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"0 == pids[i]\",\"xargs.c\",0x58c,\"add_proc\");\n    }\n  }\n  else if (*DAT_006123e0 == 0) {\n    uVar3 = 0;\n    piVar4 = DAT_006123e0;\n  }\n  else {\n    uVar3 = 0;\n    do {\n      uVar3 = (ulong)((int)uVar3 + 1);\n      lVar6 = uVar3 * 4;\n      if (DAT_006123d8 <= uVar3) {\n        piVar2 = DAT_006123e0;\n        if (uVar3 == DAT_006123d8) goto LAB_00403225;\n        goto LAB_004031ef;\n      }\n      piVar4 = DAT_006123e0 + uVar3;\n    } while (DAT_006123e0[uVar3] != 0);\n  }\n  *piVar4 = param_1;\n  DAT_006123e8 = DAT_006123e8 + 1;\n  DAT_006123f0 = 1;\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004031a0"
        },
        {
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x40356b",
            "decompiledFuncCode": "\nvoid FUN_004032b0(FILE *param_1)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  \n  uVar1 = DAT_00612528;\n  pcVar2 = (char *)dcgettext(0,\"Usage: %s [OPTION]... COMMAND [INITIAL-ARGS]...\\n\",5);\n  fprintf(param_1,pcVar2,uVar1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"Run COMMAND with arguments INITIAL-ARGS and more arguments read from input.\\n\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"Mandatory and optional arguments to long options are also\\nmandatory or optional for the corresponding short option.\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -0, --null                   items are separated by a null, not whitespace;\\n                                 disables quote and backslash processing and\\n                                 logical EOF processing\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -a, --arg-file=FILE          read arguments from FILE, not standard input\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -d, --delimiter=CHARACTER    items in input stream are separated by CHARACTER,\\n                                 not by whitespace; disables quote and backslash\\n                                 processing and logical EOF processing\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -E END                       set logical EOF string; if END occurs as a line\\n                                 of input, the rest of the input is ignored\\n                                 (ignored if -0 or -d was specified)\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -e, --eof[=END]              equivalent to -E END if END is specified;\\n                                 otherwise, there is no end-of-file string\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\"  -I R                         same as --replace=R\\n\",5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -i, --replace[=R]            replace R in INITIAL-ARGS with names read\\n                                 from standard input; if R is unspecified,\\n                                 assume {}\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -L, --max-lines=MAX-LINES    use at most MAX-LINES non-blank input lines per\\n                                 command line\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -l[MAX-LINES]                similar to -L but defaults to at most one non-\\n                                 blank input line if MAX-LINES is not specified\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -n, --max-args=MAX-ARGS      use at most MAX-ARGS arguments per command line\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -P, --max-procs=MAX-PROCS    run at most MAX-PROCS processes at a time\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\"  -p, --interactive            prompt before running commands\\n\",5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"      --process-slot-var=VAR   set environment variable VAR in child processes\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -r, --no-run-if-empty        if there are no arguments, then do not run COMMAND;\\n                                 if this option is not given, COMMAND will be\\n                                 run at least once\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -s, --max-chars=MAX-CHARS    limit length of command line to MAX-CHARS\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\"      --show-limits            show limits on command-line length\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -t, --verbose                print commands before executing them\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -x, --exit                   exit if the size (see -s) is exceeded\\n\"\n                             ,5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\"      --help                   display this help and exit\\n\",5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"      --version                output version information and exit\\n\",\n                             5);\n  fputs(pcVar2,param_1);\n  pcVar2 = (char *)dcgettext(0,\"\\nReport bugs to <bug-findutils@gnu.org>.\\n\",5);\n  fputs(pcVar2,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004032b0"
        },
        {
            "funcStartAddr": "0x403570",
            "funcEndAddr": "0x4036ad",
            "decompiledFuncCode": "\nlong FUN_00403570(char *param_1,uint param_2,long param_3,long param_4,int param_5)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  char *pcVar3;\n  ulong uVar4;\n  char *local_30;\n  \n  uVar4 = (ulong)param_2;\n  lVar2 = strtol(param_1,&local_30,10);\n  uVar1 = DAT_00612528;\n  if ((local_30 == param_1) || (*local_30 != '\\0')) {\n    pcVar3 = (char *)dcgettext(0,\"%s: invalid number for -%c option\\n\",5);\n    fprintf(stderr,pcVar3,uVar1,uVar4);\n    FUN_004032b0(stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(1);\n  }\n  if (lVar2 < param_3) {\n    pcVar3 = (char *)dcgettext(0,\"%s: value for -%c option should be >= %ld\\n\",5);\n    fprintf(stderr,pcVar3,uVar1,uVar4,param_3);\n    if (param_5 == 0) {\n      return param_3;\n    }\nLAB_0040369c:\n    FUN_004032b0(stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(1);\n  }\n  if ((-1 < param_4) && (param_4 < lVar2)) {\n    pcVar3 = (char *)dcgettext(0,\"%s: value for -%c option should be <= %ld\\n\",5);\n    fprintf(stderr,pcVar3,uVar1,uVar4,param_4);\n    lVar2 = param_4;\n    if (param_5 != 0) goto LAB_0040369c;\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_00403570"
        },
        {
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x403715",
            "decompiledFuncCode": "\nFILE * FUN_004036c0(undefined8 param_1)\n\n{\n  int iVar1;\n  int __fd;\n  FILE *pFVar2;\n  int *piVar3;\n  \n  pFVar2 = (FILE *)0x0;\n  __fd = FUN_00405410(param_1,0);\n  if (-1 < __fd) {\n    pFVar2 = fdopen(__fd,\"r\");\n    if (pFVar2 == (FILE *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n    }\n  }\n  return pFVar2;\n}\n\n",
            "funcName": "FUN_004036c0"
        },
        {
            "funcStartAddr": "0x403720",
            "funcEndAddr": "0x40373b",
            "decompiledFuncCode": "\nvoid FUN_00403720(void)\n\n{\n  if (1 < DAT_006122b0) {\n    DAT_006122b0 = DAT_006122b0 + -1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403720"
        },
        {
            "funcStartAddr": "0x403740",
            "funcEndAddr": "0x40377d",
            "decompiledFuncCode": "\nvoid FUN_00403740(void)\n\n{\n  if ((((DAT_00612450 == 0) && (DAT_006122b4 == '\\0')) && (DAT_00612480 != DAT_00612458)) &&\n     (DAT_00612420 == 0)) {\n    FUN_00404c00(&DAT_00612420,&DAT_00612480);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403740"
        },
        {
            "funcStartAddr": "0x403790",
            "funcEndAddr": "0x40389a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined  [16] FUN_00403790(undefined8 param_1,undefined8 param_2,undefined *param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  \n  puVar5 = DAT_006124e0 + ((DAT_00612438 + -1) - _DAT_006124a8);\n  puVar4 = DAT_006124e0;\n  if (DAT_006123b0 == '\\0') {\n    while (iVar1 = _IO_getc(DAT_006124e8), param_3 = DAT_006124e0, iVar1 != -1) {\n      if (DAT_006123c0 == iVar1) {\n        _DAT_006124d0 = _DAT_006124d0 + 1;\n        *puVar4 = 0;\n        goto LAB_00403836;\n      }\n      if (puVar5 <= puVar4) {\n        FUN_00403740();\n        uVar2 = dcgettext(0,\"argument line too long\",5);\n        error(1,0,uVar2);\n      }\n      *puVar4 = (char)iVar1;\n      puVar4 = puVar4 + 1;\n    }\n    DAT_006123b0 = '\\x01';\n    if (DAT_006124e0 != puVar4) {\n      *puVar4 = 0;\nLAB_00403836:\n      puVar4 = puVar4 + (1 - (long)param_3);\n      uVar3 = (ulong)puVar4 & 0xffffffff;\n      if (DAT_00612450 == 0) {\n        FUN_004047a0(&DAT_00612420,&DAT_00612480,param_3,(long)(int)puVar4,0,0,DAT_006122b4);\n        return CONCAT88(0x4037dc,(ulong)puVar4 & 0xffffffff);\n      }\n      goto LAB_00403849;\n    }\n  }\n  uVar3 = 0xffffffff;\nLAB_00403849:\n  return CONCAT88(param_3,uVar3);\n}\n\n",
            "funcName": "FUN_00403790"
        },
        {
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x403e78",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_004038b0(void)\n\n{\n  bool bVar1;\n  bool bVar2;\n  char *pcVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  ushort **ppuVar10;\n  char *pcVar11;\n  ulong uVar12;\n  char *pcVar13;\n  int iVar14;\n  uint local_40;\n  \n  pcVar13 = DAT_006124e0 + ((DAT_00612438 + -1) - _DAT_006124a8);\n  if (DAT_006123a0 == '\\0') {\n    bVar1 = false;\n    bVar2 = true;\n    uVar12 = 0xffffffffffffffff;\n    iVar7 = 1;\n    local_40 = 0;\n    pcVar11 = DAT_006124e0;\n    while (uVar4 = _IO_getc(DAT_006124e8), pcVar3 = DAT_006124e0, uVar4 != 0xffffffff) {\n      if (iVar7 == 1) goto LAB_00403a4d;\n      uVar6 = uVar4;\n      if (iVar7 != 2) goto joined_r0x00403914;\n      if (uVar4 == 10) goto LAB_00403bdd;\nLAB_004039a5:\n      if (local_40 == uVar4) {\n        do {\n          bVar1 = true;\n          uVar6 = _IO_getc(DAT_006124e8);\n          if (uVar6 == 0xffffffff) {\nLAB_00403b80:\n            pcVar13 = DAT_006124e0;\n            DAT_006123a0 = '\\x01';\n            if (pcVar11 == DAT_006124e0) {\n              DAT_006123a0 = '\\x01';\n              return -1;\n            }\n            *pcVar11 = '\\0';\n            iVar14 = ((int)pcVar11 + 1) - (int)pcVar13;\n            goto LAB_00403d7b;\n          }\n          uVar12 = (ulong)(int)uVar4;\njoined_r0x00403914:\n          iVar7 = (int)pcVar11;\n          if (uVar6 == 10) {\n            if (((uVar12 & 0xffffff80) != 0) ||\n               (ppuVar10 = __ctype_b_loc(), (*(byte *)(*ppuVar10 + uVar12) & 1) == 0)) {\n              _DAT_006124d0 = _DAT_006124d0 + 1;\n            }\n            pcVar3 = DAT_006124e0;\n            bVar1 = (bool)(bVar1 | DAT_006124e0 != pcVar11);\n            if (bVar1) {\n              *pcVar11 = '\\0';\n              iVar7 = (iVar7 + 1) - (int)pcVar3;\n              if (((DAT_006123f8 == (char *)0x0) || (*DAT_006123f8 != *pcVar3)) ||\n                 (iVar14 = strcmp(DAT_006123f8,pcVar3), iVar14 != 0)) {\n                if (DAT_00612450 == 0) {\n                  FUN_004047a0(&DAT_00612420,&DAT_00612480,pcVar3,(long)iVar7,0,0,DAT_006122b4);\n                  return iVar7;\n                }\n                return iVar7;\n              }\nLAB_00403b01:\n              if (bVar2) {\n                DAT_006123a0 = 1;\n                return -1;\n              }\n              DAT_006123a0 = 1;\n              return iVar7;\n            }\n            uVar4 = _IO_getc(DAT_006124e8);\n            if (uVar4 != 0xffffffff) {\n              uVar12 = 10;\n              goto LAB_00403a4d;\n            }\n            goto LAB_00403b80;\n          }\n          if (((DAT_00612450 == 0) && ((uVar6 & 0xffffff80) == 0)) &&\n             (ppuVar10 = __ctype_b_loc(), pcVar3 = DAT_006124e0,\n             (*(byte *)(*ppuVar10 + (int)uVar6) & 1) != 0)) {\n            *pcVar11 = '\\0';\n            iVar7 = (iVar7 + 1) - (int)pcVar3;\n            if (((DAT_006123f8 != (char *)0x0) && (*DAT_006123f8 == *pcVar3)) &&\n               (iVar14 = strcmp(DAT_006123f8,pcVar3), iVar14 == 0)) goto LAB_00403b01;\n            FUN_004047a0(&DAT_00612420,&DAT_00612480,pcVar3,(long)iVar7,0,0,DAT_006122b4);\n            pcVar11 = DAT_006124e0;\n            uVar4 = _IO_getc(DAT_006124e8);\n            bVar2 = false;\n            if (uVar4 != 0xffffffff) {\n              uVar12 = (ulong)(int)uVar6;\n              bVar1 = true;\nLAB_00403a4d:\n              if ((uVar4 & 0xffffff80) != 0) goto LAB_00403a97;\n              do {\n                ppuVar10 = __ctype_b_loc();\n                uVar6 = uVar4;\n                if ((((*(byte *)(*ppuVar10 + (int)uVar4) & 1) == 0) && (uVar4 != 10)) &&\n                   (uVar4 != 0xd)) goto LAB_00403a97;\n                while( true ) {\n                  uVar4 = _IO_getc(DAT_006124e8);\n                  if (uVar4 == 0xffffffff) goto LAB_00403b80;\n                  uVar12 = (ulong)(int)uVar6;\n                  if ((uVar4 & 0xffffff80) == 0) break;\nLAB_00403a97:\n                  uVar6 = uVar4;\n                  if (1 < uVar4 - 0xb) goto joined_r0x00403914;\n                }\n              } while( true );\n            }\n            goto LAB_00403b80;\n          }\n          if (uVar6 != 0x27) {\n            if (uVar6 == 0x5c) {\n              uVar6 = _IO_getc(DAT_006124e8);\n              if (uVar6 == 0xffffffff) goto LAB_00403b80;\n            }\n            else if (uVar6 == 0x22) goto LAB_00403bb0;\n            iVar7 = 0;\n            uVar5 = uVar6 | _DAT_00612400;\n            bVar1 = true;\n            uVar4 = uVar6;\n            goto joined_r0x0040395d;\n          }\nLAB_00403bb0:\n          uVar4 = _IO_getc(DAT_006124e8);\n          pcVar3 = DAT_006124e0;\n          local_40 = uVar6;\n          if (uVar4 == 0xffffffff) {\n            DAT_006123a0 = '\\x01';\n            if (pcVar11 == DAT_006124e0) {\n              DAT_006123a0 = '\\x01';\n              return -1;\n            }\n            *pcVar11 = '\\0';\n            iVar14 = (iVar7 + 1) - (int)pcVar3;\n            goto LAB_00403e60;\n          }\n          bVar1 = true;\n          if (uVar4 != 10) goto LAB_004039a5;\nLAB_00403bdd:\n          FUN_00403740();\n          if (local_40 == 0x22) {\n            iVar7 = 2;\n            uVar8 = dcgettext(0,\"double\",5);\n            uVar9 = dcgettext(0,\n                              \"unmatched %s quote; by default quotes are special to xargs unless you use the -0 option\"\n                              ,5);\n            uVar12 = 10;\n            error(1,0,uVar9,uVar8);\n            goto joined_r0x00403962;\n          }\n          uVar8 = dcgettext(0,\"single\",5);\n          uVar9 = dcgettext(0,\n                            \"unmatched %s quote; by default quotes are special to xargs unless you use the -0 option\"\n                            ,5);\n          error(1,0,uVar9,uVar8);\n          if (local_40 != 10) {\n            uVar12 = 10;\n            iVar7 = 2;\n            goto joined_r0x00403962;\n          }\n        } while( true );\n      }\n      iVar7 = 2;\n      uVar5 = uVar4 | _DAT_00612400;\njoined_r0x0040395d:\n      uVar12 = (ulong)(int)uVar4;\n      if (uVar5 == 0) {\n        uVar12 = 0;\n        uVar8 = dcgettext(0,\n                          \"WARNING: a NUL character occurred in the input.  It cannot be passed through in the argument list.  Did you mean to use the --null option?\"\n                          ,5);\n        error(0,0,uVar8);\n        _DAT_00612400 = 1;\n      }\njoined_r0x00403962:\n      if (pcVar13 <= pcVar11) {\n        FUN_00403740();\n        uVar8 = dcgettext(0,\"argument line too long\",5);\n        error(1,0,uVar8);\n      }\n      *pcVar11 = (char)uVar12;\n      pcVar11 = pcVar11 + 1;\n    }\n    DAT_006123a0 = '\\x01';\n    if (DAT_006124e0 != pcVar11) {\n      *pcVar11 = '\\0';\n      iVar14 = ((int)pcVar11 + 1) - (int)pcVar3;\n      if (iVar7 == 2) {\nLAB_00403e60:\n        FUN_00403740();\n        if (local_40 == 0x22) {\n          uVar8 = dcgettext(0,\"double\",5);\n        }\n        else {\n          uVar8 = dcgettext(0,\"single\",5);\n        }\n        uVar9 = dcgettext(0,\n                          \"unmatched %s quote; by default quotes are special to xargs unless you use the -0 option\"\n                          ,5);\n        error(1,0,uVar9,uVar8);\n      }\nLAB_00403d7b:\n      if (((!bVar2) || (DAT_006123f8 == (char *)0x0)) ||\n         ((*DAT_006123f8 != *DAT_006124e0 || (iVar7 = strcmp(DAT_006123f8,DAT_006124e0), iVar7 != 0)\n          ))) {\n        if (DAT_00612450 == 0) {\n          FUN_004047a0(&DAT_00612420,&DAT_00612480,DAT_006124e0,(long)iVar14,0,0,DAT_006122b4);\n          return iVar14;\n        }\n        return iVar14;\n      }\n    }\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_004038b0"
        },
        {
            "funcStartAddr": "0x403ec0",
            "funcEndAddr": "0x403f2d",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00403ec0(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = getpid();\n  if (_Var1 != _DAT_006123d0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"getpid () == parent\",\"xargs.c\",0x60c,\"wait_for_proc_all\");\n  }\n  if (DAT_006123a1 == '\\0') {\n    DAT_006123a1 = 1;\n    FUN_00402f30(1,0);\n    DAT_006123a1 = '\\0';\n    if (DAT_006123c4 != DAT_006123c8) {\n                    /* WARNING: Subroutine does not return */\n      _exit(DAT_006123c8);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403ec0"
        },
        {
            "funcStartAddr": "0x403f30",
            "funcEndAddr": "0x4040fd",
            "decompiledFuncCode": "\nulong FUN_00403f30(char param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined4 extraout_var;\n  ulong uVar5;\n  \n  if (DAT_00612480 != 1) {\n    uVar5 = 0;\n    do {\n      iVar1 = fprintf(stderr,\"%s \",*(undefined8 *)(DAT_00612488 + uVar5 * 8));\n      if (iVar1 < 0) {\n        uVar3 = dcgettext(0,\"Failed to write to stderr\",5);\n        piVar4 = __errno_location();\n        error(1,*piVar4,uVar3);\n      }\n      uVar5 = uVar5 + 1;\n    } while (uVar5 < DAT_00612480 - 1U);\n  }\n  if (param_1 == '\\0') {\n    _IO_putc(10,stderr);\n    return 0;\n  }\n  if ((DAT_006123a8 == (_IO_FILE *)0x0) &&\n     (DAT_006123a8 = (_IO_FILE *)FUN_004036c0(\"/dev/tty\"), DAT_006123a8 == (_IO_FILE *)0x0)) {\n    uVar3 = dcgettext(0,\"failed to open /dev/tty for reading\",5);\n    piVar4 = __errno_location();\n    error(1,*piVar4,uVar3);\n  }\n  fwrite(&DAT_0040d1ea,1,4,stderr);\n  iVar1 = FUN_00409e80(stderr);\n  if (iVar1 != 0) {\n    uVar3 = dcgettext(0,\"Failed to write to stderr\",5);\n    piVar4 = __errno_location();\n    error(1,*piVar4,uVar3);\n  }\n  uVar2 = _IO_getc(DAT_006123a8);\n  if ((uVar2 == 10) || (uVar2 == 0xffffffff)) {\n    uVar5 = (ulong)uVar2;\n  }\n  else {\n    do {\n      iVar1 = _IO_getc(DAT_006123a8);\n      uVar5 = CONCAT44(extraout_var,iVar1);\n      if (iVar1 == -1) break;\n    } while (iVar1 != 10);\n  }\n  if ((int)uVar5 == -1) {\n    uVar3 = dcgettext(0,\"Failed to read from stdin\",5);\n    piVar4 = __errno_location();\n    uVar5 = error(1,*piVar4,uVar3);\n  }\n  return uVar5 & 0xffffffffffffff00 | (ulong)((uVar2 & 0xffffffdf) == 0x59);\n}\n\n",
            "funcName": "FUN_00403f30"
        },
        {
            "funcStartAddr": "0x404120",
            "funcEndAddr": "0x404549",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00404120(void)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  __pid_t __pid;\n  uint uVar4;\n  long lVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  char *__s;\n  char **in_RCX;\n  int local_40;\n  int local_3c;\n  int local_38;\n  undefined8 local_34;\n  undefined2 local_2c;\n  \n  if ((DAT_006122b0 != 0) && ((ulong)(long)DAT_006122b0 <= DAT_006123e8)) {\n    do {\n      FUN_00402f30(0,1);\n    } while ((ulong)(long)DAT_006122b0 <= DAT_006123e8);\n  }\n  if (DAT_006123c1 == '\\0') {\nLAB_00404179:\n    if (DAT_006123c2 != '\\0') {\n      FUN_00403f30(0);\n    }\n  }\n  else {\n    cVar2 = FUN_00403f30(1);\n    if (cVar2 == '\\0') {\n      return 1;\n    }\n    if (DAT_006123c1 == '\\0') goto LAB_00404179;\n  }\n  FUN_00402f30(0,0);\n  iVar3 = pipe(&local_3c);\n  if (iVar3 != 0) {\n    uVar6 = dcgettext(0,\"could not create pipe before fork\",5);\n    piVar7 = __errno_location();\n    error(1,*piVar7,uVar6);\n  }\n  FUN_00409d40(local_38,2,1);\n  while (((__pid = fork(), __pid < 0 && (piVar7 = __errno_location(), *piVar7 == 0xb)) &&\n         (DAT_006123e8 != 0))) {\n    FUN_00402f30(0);\n  }\n  if (__pid == -1) {\n    uVar6 = dcgettext(0,\"cannot fork\",5);\n    piVar7 = __errno_location();\n    error(1,*piVar7,uVar6);\n  }\n  else if (__pid != 0) {\n    close(local_38);\n    lVar5 = FUN_00408fe0(local_3c,&local_40,4);\n    if (lVar5 == 4) {\n      close(local_3c);\n      waitpid(__pid,(int *)&local_34,0);\n      if (local_40 != 7) {\n        if (local_40 == 2) {\n                    /* WARNING: Subroutine does not return */\n          exit(0x7f);\n        }\n                    /* WARNING: Subroutine does not return */\n        exit(0x7e);\n      }\n      uVar6 = 0;\n    }\n    else {\n      if (lVar5 == -1) {\n        close(local_3c);\n        uVar6 = dcgettext(0,\n                          \"errno-buffer safe_read failed in xargs_do_exec (this is probably a bug, please report it)\"\n                          ,5);\n        piVar7 = __errno_location();\n        error(0,*piVar7,uVar6);\n      }\n      else if (lVar5 == 0) {\n        FUN_004031a0(__pid);\n      }\n      else {\n        uVar6 = dcgettext(0,\n                          \"read returned unexpected value %zu; this is probably a bug, please report it\"\n                          ,5);\n        piVar7 = __errno_location();\n        error(1,*piVar7,uVar6,lVar5);\n      }\n      close(local_3c);\n      uVar6 = 1;\n    }\n    return uVar6;\n  }\n  close(local_3c);\n  DAT_006123c8 = 0;\n  FUN_00405550();\n  uVar4 = FUN_004031a0();\n  iVar3 = snprintf((char *)0x0,0,\"%u\",(ulong)uVar4);\n  __s = (char *)malloc((long)(iVar3 + 1));\n  piVar7 = __errno_location();\n  if (__s == (char *)0x0) {\n    uVar6 = dcgettext(0,\"unable to allocate memory\",5);\n    error(0,*piVar7,uVar6);\n  }\n  else {\n    snprintf(__s,(long)(iVar3 + 1),\"%u\",(ulong)uVar4);\n    pcVar1 = DAT_006123b8;\n    if ((DAT_006123b8 != (char *)0x0) && (iVar3 = setenv(DAT_006123b8,__s,1), iVar3 < 0)) {\n      uVar6 = dcgettext(0,\"failed to set environment variable %s\",5);\n      error(0,*piVar7,uVar6,pcVar1);\n    }\n    free(__s);\n  }\n  if (_DAT_006124d8 == 0) {\n    local_2c = 0x6c;\n    local_34 = 0x6c756e2f7665642f;\n    close(0);\n    iVar3 = open((char *)&local_34,0);\n    if (iVar3 < 0) {\n      uVar6 = FUN_00408c90(0,8,&local_34);\n      error(0,*piVar7,\"%s\",uVar6);\n    }\n  }\n  cVar2 = FUN_00405070(in_RCX);\n  if (cVar2 == '\\0') {\n    execvp(*in_RCX,in_RCX);\n    if (*piVar7 == 0) goto LAB_00404480;\n  }\n  else {\n    *piVar7 = 7;\n  }\n  write(local_38,piVar7,4);\nLAB_00404480:\n  close(local_38);\n  if ((*piVar7 == 7) || (error(0,*piVar7,\"%s\",*in_RCX), *piVar7 != 2)) {\n    iVar3 = 0x7e;\n  }\n  else {\n    iVar3 = 0x7f;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(iVar3);\n}\n\n",
            "funcName": "FUN_00404120"
        },
        {
            "funcStartAddr": "0x404580",
            "funcEndAddr": "0x4045fa",
            "decompiledFuncCode": "\nundefined  [16] FUN_00404580(undefined8 param_1)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  FUN_00409e80(stderr);\n  uVar1 = dcgettext(0,\"Kevin Dalley\",5);\n  uVar2 = dcgettext(0,\"James Youngman\",5);\n  uVar3 = dcgettext(0,\"Eric B. Decker\",5);\n  FUN_00409550(stdout,param_1,\"GNU findutils\",PTR_s_4_6_0_006122b8,uVar3,uVar2);\n  return ZEXT816(uVar1);\n}\n\n",
            "funcName": "FUN_00404580"
        },
        {
            "funcStartAddr": "0x404600",
            "funcEndAddr": "0x4046d9",
            "decompiledFuncCode": "\nulong FUN_00404600(long param_1,long param_2,char param_3,ulong param_4)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  \n  uVar2 = *(ulong *)(param_2 + 0x40);\n  if (param_3 == '\\0') {\n    if ((param_4 < *(ulong *)(param_2 + 0x48)) || (*(ulong *)(param_2 + 0x48) == 0)) {\n      *(ulong *)(param_2 + 0x48) = param_4;\n    }\n    if ((uVar2 == 0) || (*(ulong *)(param_2 + 0x48) <= uVar2)) {\n      uVar1 = param_4 >> 1;\n    }\n    else {\n      uVar2 = *(ulong *)(param_2 + 0x48) - uVar2;\n      uVar1 = param_4 - (uVar2 >> 1);\n      if (uVar2 == 1) {\n        uVar1 = param_4 - 1;\n      }\n    }\n  }\n  else {\n    if (uVar2 < param_4) {\n      *(ulong *)(param_2 + 0x40) = param_4;\n      uVar2 = param_4;\n    }\n    if ((uVar2 == 0) || (*(ulong *)(param_2 + 0x48) <= uVar2)) {\n      lVar3 = *(long *)(param_1 + 0x38);\n      uVar1 = param_4 + 1;\n      if (param_4 == 0xffffffffffffffff) {\n        uVar1 = 0xffffffffffffffff;\n      }\n      if (lVar3 == 0) {\n        return uVar1;\n      }\n      goto LAB_0040463b;\n    }\n    uVar2 = *(ulong *)(param_2 + 0x48) - uVar2;\n    uVar1 = (uVar2 >> 1) + param_4;\n    if (uVar2 == 1) {\n      uVar1 = param_4 + 1;\n    }\n  }\n  lVar3 = *(long *)(param_1 + 0x38);\n  if (lVar3 == 0) {\n    if (uVar1 == 0) {\n      uVar1 = 1;\n    }\n    return uVar1;\n  }\nLAB_0040463b:\n  uVar2 = lVar3 + 1;\n  if (uVar2 < uVar1) {\n    return uVar1;\n  }\n  if (uVar2 == 0) {\n    uVar2 = 1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00404600"
        },
        {
            "funcStartAddr": "0x404700",
            "funcEndAddr": "0x404703",
            "decompiledFuncCode": "\nundefined8 FUN_00404700(void)\n\n{\n  return 0;\n}\n\n",
            "funcName": "FUN_00404700"
        },
        {
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404793",
            "decompiledFuncCode": "\nbool FUN_00404710(char *param_1,ulong param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  bool bVar5;\n  undefined auStack_28 [8];\n  ulong local_20;\n  \n  bVar5 = false;\n  pcVar2 = getenv(param_1);\n  if (pcVar2 != (char *)0x0) {\n    iVar1 = FUN_004098e0(pcVar2,auStack_28,10,&local_20,0);\n    if (iVar1 != 0) {\n      uVar3 = dcgettext(0,\"Environment variable %s is not set to a valid decimal number\",5);\n      piVar4 = __errno_location();\n      error(1,*piVar4,uVar3,param_1);\n      return false;\n    }\n    bVar5 = local_20 < param_2;\n  }\n  return bVar5;\n}\n\n",
            "funcName": "FUN_00404710"
        },
        {
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x404a18",
            "decompiledFuncCode": "\nvoid FUN_004047a0(int *param_1,ulong *param_2,char *param_3,long param_4,char *param_5,long param_6,\n                 int param_7)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  if (param_3 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"arg != NULL\",\"buildcmd.c\",0x165,\"bc_push_arg\");\n  }\n  if (param_7 == 0) {\n    *(undefined4 *)(param_2 + 7) = 1;\n    if (param_3 == \"do_not_care\") goto LAB_00404964;\nLAB_004047e6:\n    uVar1 = param_4 + param_6 + param_2[4];\n    if (*(ulong *)(param_1 + 6) <= uVar1 && uVar1 != *(ulong *)(param_1 + 6)) {\n      if ((param_7 == 0) && (*param_2 != *(ulong *)(param_1 + 0xe))) {\n        if (*(long *)(param_1 + 0xc) != 0) goto LAB_00404816;\nLAB_004049a0:\n        if ((*param_1 != 0) &&\n           ((*(long *)(param_1 + 0x12) != 0 || (*(long *)(param_1 + 0x14) != 0))))\n        goto LAB_00404816;\n      }\n      else {\n        uVar2 = dcgettext(0,\"cannot fit single argument within argument list size limit\",5);\n        error(1,0,uVar2);\n        if (*(long *)(param_1 + 0xc) == 0) goto LAB_004049a0;\nLAB_00404816:\n        uVar2 = dcgettext(0,\"argument list too long\",5);\n        error(1,0,uVar2);\n      }\n      FUN_00404c00(param_1,param_2);\n    }\n    uVar1 = *param_2;\n    if ((((param_7 == 0) && (*(long *)(param_1 + 0x14) != 0)) &&\n        (*(long *)(param_1 + 0x14) == uVar1 - *(long *)(param_1 + 0xe))) ||\n       (uVar1 == *(ulong *)(param_1 + 8))) {\n      FUN_00404c00(param_1,param_2);\n      uVar1 = *param_2;\n    }\n    uVar4 = param_2[2];\n    uVar3 = param_2[1];\n    if (uVar4 <= uVar1) {\nLAB_00404881:\n      if (uVar3 == 0) {\n        param_2[2] = 0x40;\n        uVar3 = FUN_00409680(0x200);\n        param_2[1] = uVar3;\n      }\n      else {\n        param_2[2] = uVar4 * 2;\n        uVar3 = FUN_004096d0(uVar3,uVar4 << 4);\n        param_2[1] = uVar3;\n      }\n      uVar1 = *param_2;\n      if (param_3 == \"do_not_care\") goto LAB_00404978;\n    }\n    uVar4 = param_2[4];\n    *param_2 = uVar1 + 1;\n    *(ulong *)(uVar3 + uVar1 * 8) = param_2[3] + uVar4;\n    if (param_5 != (char *)0x0) {\n      strcpy((char *)(param_2[3] + uVar4),param_5);\n      uVar4 = param_2[4] + param_6;\n      param_2[4] = uVar4;\n    }\n    strcpy((char *)(uVar4 + param_2[3]),param_3);\n    uVar4 = param_4 + param_2[4];\n    uVar1 = *param_2;\n    param_2[4] = uVar4;\n    if (param_7 == 0) {\n      if (((*(long *)(param_1 + 0x14) == 0) ||\n          (*(long *)(param_1 + 0x14) != uVar1 - *(long *)(param_1 + 0xe))) &&\n         (uVar1 != *(ulong *)(param_1 + 8))) {\n        return;\n      }\n    }\n    else if (uVar1 != *(ulong *)(param_1 + 8)) goto LAB_0040493b;\n    FUN_00404c00(param_1,param_2);\n  }\n  else {\n    if (param_3 != \"do_not_care\") goto LAB_004047e6;\nLAB_00404964:\n    uVar1 = *param_2;\n    uVar4 = param_2[2];\n    uVar3 = param_2[1];\n    if (uVar4 <= uVar1) goto LAB_00404881;\nLAB_00404978:\n    *param_2 = uVar1 + 1;\n    *(undefined8 *)(uVar3 + uVar1 * 8) = 0;\n  }\n  if (param_7 == 0) {\n    return;\n  }\n  uVar4 = param_2[4];\nLAB_0040493b:\n  param_2[5] = uVar4;\n  return;\n}\n\n",
            "funcName": "FUN_004047a0"
        },
        {
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404be8",
            "decompiledFuncCode": "\nvoid FUN_00404a40(long param_1,undefined8 param_2,char *param_3,ulong param_4,char *param_5,\n                 long param_6,char *param_7,long param_8)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  char *__dest;\n  ulong uVar3;\n  ulong __n;\n  \n  uVar3 = *(long *)(param_1 + 0x18) - 1;\n  __dest = DAT_006124f0;\n  if (DAT_006124f0 == (char *)0x0) {\n    __dest = (char *)FUN_00409680(*(long *)(param_1 + 0x18) + 1);\n    DAT_006124f0 = __dest;\n  }\n  do {\n    while (pcVar1 = (char *)FUN_004066f0(param_3,*(undefined8 *)(param_1 + 0x30)),\n          pcVar1 == (char *)0x0) {\n      if (uVar3 <= param_4) {\nLAB_00404bb5:\n        if (*param_3 != '\\0') {\n          uVar2 = dcgettext(0,\"command too long\",5);\n          error(1,0,uVar2);\n        }\n        goto LAB_00404b6c;\n      }\n      pcVar1 = param_3 + param_4;\n      strncpy(__dest,param_3,param_4);\n      uVar3 = uVar3 - param_4;\n      __dest = __dest + param_4;\n      param_4 = 0;\n      param_3 = pcVar1;\n      if (*pcVar1 == '\\0') goto LAB_00404b6c;\n    }\n    __n = (long)pcVar1 - (long)param_3;\n    if (uVar3 <= __n) goto LAB_00404bb5;\n    strncpy(__dest,param_3,__n);\n    __dest = __dest + __n;\n    param_3 = pcVar1;\n    if (uVar3 - __n <= (ulong)(param_8 + param_6)) goto LAB_00404bb5;\n    uVar3 = (uVar3 - __n) - (param_8 + param_6);\n    if (param_5 != (char *)0x0) {\n      strcpy(__dest,param_5);\n      __dest = __dest + param_6;\n    }\n    strcpy(__dest,param_7);\n    __dest = __dest + param_8;\n    param_3 = pcVar1 + *(long *)(param_1 + 0x28);\n    param_4 = (param_4 - *(long *)(param_1 + 0x28)) - __n;\n  } while (*param_3 != '\\0');\nLAB_00404b6c:\n  *__dest = '\\0';\n  FUN_004047a0(param_1,param_2,DAT_006124f0,__dest + (1 - (long)DAT_006124f0),0,0);\n  return;\n}\n\n",
            "funcName": "FUN_00404a40"
        },
        {
            "funcStartAddr": "0x404c00",
            "funcEndAddr": "0x404e1b",
            "decompiledFuncCode": "\nvoid FUN_00404c00(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  int iVar2;\n  void *__ptr;\n  ulong uVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  \n  FUN_004047a0(param_1,param_2,\"do_not_care\",0,0,0,0);\n  uVar7 = *param_2;\n  if (uVar7 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->cmd_argc > 0\",\"buildcmd.c\",0x115,\"bc_do_exec\");\n  }\n  if (*(long *)((param_2[1] - 8) + uVar7 * 8) != 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->cmd_argv[state->cmd_argc-1] == NULL\",\"buildcmd.c\",0x116,\"bc_do_exec\");\n  }\n  uVar9 = 0;\n  __ptr = (void *)FUN_00409680(uVar7 * 8 + 8);\n  uVar7 = *param_2;\n  uVar8 = *(ulong *)(param_1 + 0x38);\n  uVar6 = uVar7;\n  do {\n    if (uVar8 == 0) {\n      uVar3 = 0;\n      uVar4 = uVar9;\n    }\n    else {\n      uVar4 = param_2[1];\n      uVar3 = 0;\n      do {\n        uVar3 = uVar3 + 1;\n        *(undefined8 *)((long)__ptr + uVar3 * 8 + -8) = *(undefined8 *)((uVar4 - 8) + uVar3 * 8);\n      } while (uVar3 != uVar8);\n      uVar4 = uVar9 + uVar8;\n      uVar3 = uVar8;\n    }\n    if ((uVar3 < uVar6) && (uVar4 < uVar7)) {\n      uVar1 = param_2[1];\n      do {\n        uVar4 = uVar4 + 1;\n        uVar3 = uVar3 + 1;\n        *(undefined8 *)((long)__ptr + uVar3 * 8 + -8) = *(undefined8 *)((uVar1 - 8) + uVar4 * 8);\n        if (uVar6 <= uVar3) break;\n      } while (uVar4 < uVar7);\n      if (uVar3 < uVar8) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"dst_pos >= ctl->initial_argc\",\"buildcmd.c\",0x102,\"copy_args\");\n      }\n    }\n    uVar7 = param_2[6];\n    *(undefined8 *)((long)__ptr + uVar3 * 8) = 0;\n    iVar2 = (**(code **)(param_1 + 0x40))(param_1,uVar7,uVar3 & 0xffffffff,__ptr);\n    if (iVar2 == 0) {\n      if (*(long *)(param_1 + 0x38) + 1U < uVar6) {\n        uVar6 = FUN_00404600(param_1,param_2,0,uVar6);\n        uVar8 = *(ulong *)(param_1 + 0x38);\n      }\n      else {\n        uVar5 = dcgettext(0,\"can\\'t call exec() due to argument size restrictions\",5);\n        error(1,0,uVar5);\n        uVar8 = *(ulong *)(param_1 + 0x38);\n      }\n    }\n    else {\n      uVar6 = FUN_00404600(param_1,param_2,1,uVar6);\n      uVar8 = *(ulong *)(param_1 + 0x38);\n      uVar9 = (uVar9 - uVar8) + uVar3;\n    }\n    uVar7 = *param_2;\n    if (uVar7 - uVar8 <= uVar9 + 1) {\n      free(__ptr);\n      *param_2 = uVar8;\n      param_2[4] = param_2[5];\n      param_2[7] = 0xffffffff00000000;\n      return;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404c00"
        },
        {
            "funcStartAddr": "0x404e30",
            "funcEndAddr": "0x404e51",
            "decompiledFuncCode": "\nlong FUN_00404e30(void)\n\n{\n  long lVar1;\n  \n  lVar1 = sysconf(0);\n  if (lVar1 < 1) {\n    lVar1 = 0x7fffffffffffffff;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00404e30"
        },
        {
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404ea0",
            "decompiledFuncCode": "\nlong FUN_00404e60(void)\n\n{\n  char *__s;\n  size_t sVar1;\n  char **ppcVar2;\n  long lVar3;\n  \n  lVar3 = 0;\n  __s = *environ;\n  ppcVar2 = environ;\n  while (__s != (char *)0x0) {\n    sVar1 = strlen(__s);\n    ppcVar2 = ppcVar2 + 1;\n    lVar3 = lVar3 + 1 + sVar1;\n    __s = *ppcVar2;\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00404e60"
        },
        {
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404f6b",
            "decompiledFuncCode": "\nundefined8 FUN_00404ea0(undefined4 *param_1,long param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  \n  uVar1 = FUN_00404e60();\n  *(undefined8 *)(param_1 + 4) = 0x1000;\n  uVar2 = sysconf(0);\n  *param_1 = 0;\n  if ((long)uVar2 < 1) {\n    uVar2 = 0x7fffffffffffffff;\n  }\n  *(ulong *)(param_1 + 2) = uVar2;\n  if (uVar2 < uVar1) {\n    return 1;\n  }\n  if (uVar2 <= uVar1 + param_2) {\n    return 2;\n  }\n  uVar2 = uVar2 - (uVar1 + param_2);\n  *(ulong *)(param_1 + 2) = uVar2;\n  lVar3 = (uVar2 >> 3) - 2;\n  *(long *)(param_1 + 8) = lVar3;\n  if (lVar3 != 0) {\n    *(ulong *)(param_1 + 6) = uVar2;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    *(undefined8 *)(param_1 + 0xe) = 0;\n    *(code **)(param_1 + 0x10) = FUN_00404700;\n    *(undefined8 *)(param_1 + 0x12) = 0;\n    *(undefined8 *)(param_1 + 0x14) = 0;\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"ctl->max_arg_count > 0\",\"buildcmd.c\",0x216,\"bc_init_controlinfo\");\n}\n\n",
            "funcName": "FUN_00404ea0"
        },
        {
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404fa4",
            "decompiledFuncCode": "\nvoid FUN_00404f80(long param_1)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *(ulong *)(param_1 + 8);\n  if ((0x1ffff < uVar1) && (uVar1 = *(ulong *)(param_1 + 0x10), uVar1 < 0x20001)) {\n    uVar1 = 0x20000;\n  }\n  *(ulong *)(param_1 + 0x18) = uVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404f80"
        },
        {
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x40504d",
            "decompiledFuncCode": "\nvoid FUN_00404fb0(long param_1,undefined8 *param_2,undefined8 param_3)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  \n  uVar1 = *(ulong *)(param_1 + 0x18);\n  *param_2 = 0;\n  param_2[4] = 0;\n  param_2[1] = 0;\n  param_2[2] = 0;\n  param_2[8] = 0;\n  param_2[9] = 0;\n  if (uVar1 < 0x7ffffffffffff800) {\n    uVar2 = FUN_00409680(uVar1 + 1);\n    param_2[5] = 0;\n    param_2[3] = uVar2;\n    param_2[4] = 0;\n    param_2[7] = 0xffffffff00000000;\n    param_2[6] = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"ctl->arg_max <= (LONG_MAX - 2048L)\",\"buildcmd.c\",0x24c,\"bc_init_state\");\n}\n\n",
            "funcName": "FUN_00404fb0"
        },
        {
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x40506e",
            "decompiledFuncCode": "\nvoid FUN_00405050(long param_1,undefined8 *param_2)\n\n{\n  *param_2 = *(undefined8 *)(param_1 + 0x38);\n  param_2[4] = param_2[5];\n  param_2[7] = 0xffffffff00000000;\n  return;\n}\n\n",
            "funcName": "FUN_00405050"
        },
        {
            "funcStartAddr": "0x405070",
            "funcEndAddr": "0x4050d3",
            "decompiledFuncCode": "\nulong FUN_00405070(char **param_1)\n\n{\n  char *__s;\n  int iVar1;\n  size_t sVar2;\n  ulong extraout_RDX;\n  long lVar3;\n  long lVar4;\n  \n  lVar4 = 0;\n  lVar3 = 0;\n  __s = *param_1;\n  while (__s != (char *)0x0) {\n    sVar2 = strlen(__s);\n    lVar3 = lVar3 + 1;\n    lVar4 = lVar4 + sVar2;\n    __s = param_1[lVar3];\n  }\n  iVar1 = FUN_00404710(\"__GNU_FINDUTILS_EXEC_ARG_COUNT_LIMIT\",lVar3);\n  if (iVar1 != 0) {\n    return 1;\n  }\n  iVar1 = FUN_00404710(\"__GNU_FINDUTILS_EXEC_ARG_LENGTH_LIMIT\",lVar4);\n  return extraout_RDX & 0xffffff00 | (ulong)(iVar1 != 0);\n}\n\n",
            "funcName": "FUN_00405070"
        },
        {
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40515c",
            "decompiledFuncCode": "\nint FUN_004050e0(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  DIR *__dirp;\n  dirent *pdVar3;\n  int iVar4;\n  \n  __dirp = (DIR *)FUN_00405aa0(\"/proc/self/fd\");\n  if (__dirp == (DIR *)0x0) {\n    return -1;\n  }\n  bVar1 = false;\n  iVar4 = -1;\n  do {\n    pdVar3 = readdir(__dirp);\n    while( true ) {\n      if (pdVar3 == (dirent *)0x0) {\n        closedir(__dirp);\n        if (!bVar1) {\n          return -1;\n        }\n        return iVar4;\n      }\n      if ((pdVar3->d_name[0] == '.') && ((pdVar3->d_name[1] == '.' || (pdVar3->d_name[1] == '\\0'))))\n      break;\n      bVar1 = true;\n      iVar2 = FUN_004055f0(pdVar3->d_name,0);\n      if (iVar4 < iVar2) {\n        iVar4 = iVar2;\n      }\n      pdVar3 = readdir(__dirp);\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004050e0"
        },
        {
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x4051c6",
            "decompiledFuncCode": "\nundefined8 FUN_00405160(undefined8 param_1,long *param_2)\n\n{\n  long lVar1;\n  uint uVar2;\n  long lVar3;\n  undefined8 uVar4;\n  \n  uVar2 = FUN_00409d40(param_1,1);\n  if ((uVar2 & 1) == 0) {\n    lVar3 = FUN_00405740(*param_2,param_2[1] * 4 + 4,param_2 + 2);\n    if (lVar3 != 0) {\n      lVar1 = param_2[1];\n      *param_2 = lVar3;\n      *(int *)(lVar3 + lVar1 * 4) = (int)param_1;\n      param_2[1] = lVar1 + 1;\n      return 0;\n    }\n    uVar4 = 0xffffffff;\n  }\n  else {\n    uVar4 = 0;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405160"
        },
        {
            "funcStartAddr": "0x4051d0",
            "funcEndAddr": "0x405241",
            "decompiledFuncCode": "\nundefined8 FUN_004051d0(undefined8 param_1,long *param_2)\n\n{\n  ulong uVar1;\n  int iVar2;\n  ulong uVar3;\n  ulong uVar4;\n  int iVar5;\n  \n  iVar2 = (int)param_1;\n  uVar3 = FUN_00409d40(param_1,1);\n  if ((uVar3 & 1) != 0) {\n    return 0;\n  }\n  uVar3 = param_2[2];\n  uVar1 = param_2[1];\n  if (uVar3 < uVar1) {\n    iVar5 = *(int *)(*param_2 + uVar3 * 4);\n    if (iVar5 < iVar2) {\n      uVar3 = uVar3 + 1;\n      do {\n        uVar4 = uVar3;\n        if (uVar1 == uVar4) {\n          param_2[2] = uVar1;\n          goto LAB_00405228;\n        }\n        iVar5 = *(int *)(*param_2 + -4 + (uVar4 + 1) * 4);\n        uVar3 = uVar4 + 1;\n      } while (iVar5 < iVar2);\n      param_2[2] = uVar4;\n    }\n    if (iVar2 == iVar5) {\n      return 0;\n    }\n  }\nLAB_00405228:\n  *(int *)(param_2 + 3) = iVar2;\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004051d0"
        },
        {
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052a5",
            "decompiledFuncCode": "\nulong FUN_00405260(void)\n\n{\n  int iVar1;\n  ulong uVar2;\n  ulong uVar3;\n  rlimit local_18;\n  \n  uVar2 = sysconf(4);\n  if (uVar2 == 0xffffffffffffffff) {\n    uVar2 = 0x14;\n  }\n  iVar1 = getrlimit(RLIMIT_NOFILE,&local_18);\n  uVar3 = uVar2 & 0xffffffff;\n  if ((iVar1 == 0) &&\n     (uVar3 = local_18.rlim_cur & 0xffffffff, local_18.rlim_cur == 0xffffffffffffffff)) {\n    uVar3 = uVar2 & 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00405260"
        },
        {
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x40538f",
            "decompiledFuncCode": "\nundefined8 FUN_004052b0(int param_1,code *param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  pollfd *ppVar3;\n  undefined8 uVar4;\n  long lVar5;\n  int iVar6;\n  int iVar7;\n  pollfd local_238 [65];\n  \n  if (param_1 < 1) {\n    return 0;\n  }\n  iVar6 = 0;\n  do {\n    iVar2 = param_1 - iVar6;\n    iVar7 = 0x40;\n    if (iVar2 < 0x41) {\n      iVar7 = iVar2;\n    }\n    if (iVar2 < 1) {\n      iVar2 = poll(local_238,(long)iVar7,0);\n      if (iVar2 == -1) {\n        return 0xffffffff;\n      }\n    }\n    else {\n      iVar2 = 0;\n      ppVar3 = local_238;\n      do {\n        *(undefined2 *)((long)ppVar3 + 6) = 0;\n        iVar1 = iVar6 + iVar2;\n        iVar2 = iVar2 + 1;\n        *(undefined2 *)((long)ppVar3 + 4) = 5;\n        ppVar3->fd = iVar1;\n        ppVar3 = (pollfd *)((long)ppVar3 + 8);\n      } while (iVar2 < iVar7);\n      iVar2 = poll(local_238,(long)iVar7,0);\n      if (iVar2 == -1) {\n        return 0xffffffff;\n      }\n      lVar5 = 0;\n      do {\n        if ((local_238[lVar5].revents != 0x20) &&\n           (uVar4 = (*param_2)(local_238[lVar5].fd,param_3), (int)uVar4 != 0)) {\n          return uVar4;\n        }\n        lVar5 = lVar5 + 1;\n      } while ((int)lVar5 < iVar7);\n    }\n    iVar6 = iVar6 + iVar7;\n    if (param_1 <= iVar6) {\n      return 0;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004052b0"
        },
        {
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405403",
            "decompiledFuncCode": "\nvoid FUN_004053a0(void)\n\n{\n  int iVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  iVar1 = FUN_004050e0();\n  if (iVar1 < 0) {\n    iVar1 = FUN_00405260();\n  }\n  local_28 = 0;\n  local_18 = 0;\n  local_20 = 0;\n  FUN_004052b0(iVar1 + (uint)(iVar1 != 0x7fffffff),FUN_00405160,&local_28);\n  DAT_00612508 = local_28;\n  DAT_00612500 = local_20;\n  return;\n}\n\n",
            "funcName": "FUN_004053a0"
        },
        {
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x405507",
            "decompiledFuncCode": "\nint FUN_00405410(undefined8 param_1,uint param_2,undefined4 param_3)\n\n{\n  byte bVar1;\n  int iVar2;\n  \n  if ((param_2 & 0x40) == 0) {\n    param_3 = 0;\n  }\n  bVar1 = DAT_006124f9;\n  if (DAT_006124f9 == 0) {\n    iVar2 = FUN_00405b30(&DAT_0040ddc6,0x80000);\n    if (iVar2 < 0) {\n      DAT_006124f9 = 1;\n      DAT_006124f8 = bVar1;\n    }\n    else {\n      bVar1 = FUN_00409d40(iVar2,1);\n      close(iVar2);\n      DAT_006124f8 = bVar1 & 1;\n      DAT_006124f9 = 1;\n    }\n  }\n  iVar2 = FUN_00405b30(param_1,param_2 | 0x80000,param_3);\n  if ((-1 < iVar2) && (DAT_006124f8 == 0)) {\n    FUN_00405860(iVar2,1);\n    return iVar2;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "FUN_00405410"
        },
        {
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40554b",
            "decompiledFuncCode": "\nvoid FUN_00405520(void)\n\n{\n  free(DAT_00612508);\n  DAT_00612508 = (void *)0x0;\n  DAT_00612500 = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00405520"
        },
        {
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x4055f0",
            "decompiledFuncCode": "\nvoid FUN_00405550(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  int local_20;\n  \n  local_38 = DAT_00612508;\n  local_30 = DAT_00612500;\n  iVar1 = FUN_004050e0();\n  if (iVar1 < 0) {\n    iVar1 = FUN_00405260();\n  }\n  local_28 = 0;\n  local_20 = -1;\n  FUN_004052b0(iVar1 + (uint)(iVar1 != 0x7fffffff),FUN_004051d0,&local_38);\n  iVar1 = local_20;\n  if (local_20 < 0) {\n    return;\n  }\n  uVar2 = dcgettext(0,\n                    \"File descriptor %d will leak; please report this as a bug, remembering to include a detailed description of the simplest way to reproduce this problem.\"\n                    ,5);\n  error(0,0,uVar2,iVar1);\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"no_leaks\",\"fdleak.c\",0x17e,\"complain_about_leaky_fds\");\n}\n\n",
            "funcName": "FUN_00405550"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405735",
            "decompiledFuncCode": "\nulong FUN_004055f0(char *param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  char *local_30;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  uVar2 = strtol(param_1,&local_30,10);\n  if (uVar2 + 0x7fffffffffffffff < 0xfffffffffffffffe) {\n    if (uVar2 + 0x80000000 < 0x100000000) {\n      if (*local_30 != '\\0') {\n        uVar3 = FUN_00408c90(1,param_2,param_1);\n        uVar4 = FUN_00408c90(0,param_2,local_30);\n        uVar5 = dcgettext(0,\"Unexpected suffix %s on %s\",5);\n        error(1,*piVar1,uVar5,uVar4,uVar3);\n        return uVar2 & 0xffffffff;\n      }\n      if (local_30 == param_1) {\n        uVar3 = FUN_00408c90(0,param_2);\n        uVar4 = dcgettext(0,\"Expected an integer: %s\",5);\n        error(1,*piVar1,uVar4,uVar3);\n      }\n      goto LAB_00405671;\n    }\n  }\n  else {\n    error(1,*piVar1,\"%s\",param_1);\n  }\n  *piVar1 = 0x22;\n  error(1,0x22,\"%s\",param_1);\nLAB_00405671:\n  return uVar2 & 0xffffffff;\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405832",
            "decompiledFuncCode": "\nvoid * FUN_00405740(void *param_1,ulong param_2,ulong *param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  bool bVar3;\n  ulong uVar4;\n  int *piVar5;\n  ulong uVar6;\n  \n  piVar5 = __errno_location();\n  iVar1 = *piVar5;\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"wanted > 0u\",\"extendbuf.c\",0x47,\"extendbuf\");\n  }\n  uVar2 = *param_3;\n  if (uVar2 == 0) {\n    uVar6 = 0x20;\n    if (param_2 < 0x11) {\n      param_2 = 0x10;\n    }\n    else {\nLAB_00405794:\n      do {\n        uVar4 = uVar6;\n        if (param_2 <= uVar6) break;\n        bVar3 = uVar6 <= uVar6 * 2;\n        uVar6 = uVar6 * 2;\n        uVar4 = param_2;\n      } while (bVar3);\n      param_2 = uVar4;\n      if (uVar2 != 0) {\n        if (uVar2 == param_2) goto joined_r0x004057fa;\n        goto LAB_004057e8;\n      }\n    }\n    if (param_1 != (void *)0x0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"NULL == existing\",\"extendbuf.c\",0x4f,\"extendbuf\");\n    }\n    *param_3 = param_2;\n    param_1 = malloc(param_2);\n  }\n  else {\n    if (param_2 <= uVar2) goto joined_r0x004057fa;\n    uVar6 = uVar2 * 2;\n    if (uVar2 <= uVar2 * 2) goto LAB_00405794;\nLAB_004057e8:\n    *param_3 = param_2;\n    param_1 = realloc(param_1,param_2);\n  }\njoined_r0x004057fa:\n  if (param_1 != (void *)0x0) {\n    *piVar5 = iVar1;\n    return param_1;\n  }\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405840",
            "funcEndAddr": "0x40585d",
            "decompiledFuncCode": "\nvoid FUN_00405840(void *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00405740();\n  if (lVar1 != 0) {\n    return;\n  }\n  free(param_1);\n                    /* WARNING: Subroutine does not return */\n  FUN_004098a0();\n}\n\n",
            "funcName": "FUN_00405840"
        },
        {
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x4058b7",
            "decompiledFuncCode": "\nint FUN_00405860(ulong param_1,char param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = FUN_00409d40(param_1,1,0);\n  if ((int)uVar2 < 0) {\n    iVar3 = -1;\n  }\n  else {\n    uVar1 = uVar2 & 0xfffffffe;\n    if (param_2 != '\\0') {\n      uVar1 = uVar2 | 1;\n    }\n    iVar3 = 0;\n    if (uVar1 != uVar2) {\n      iVar3 = FUN_00409d40(param_1 & 0xffffffff,2);\n      iVar3 = -(uint)(iVar3 == -1);\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00405860"
        },
        {
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x4058ce",
            "decompiledFuncCode": "\nvoid FUN_004058c0(undefined8 param_1)\n\n{\n  FUN_00409d40(param_1,0x406,0);\n  return;\n}\n\n",
            "funcName": "FUN_004058c0"
        },
        {
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058d8",
            "decompiledFuncCode": "\nvoid FUN_004058d0(undefined8 param_1)\n\n{\n  DAT_00612510 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004058d0"
        },
        {
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4059d1",
            "decompiledFuncCode": "\nvoid FUN_004058e0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = FUN_00409ec0(stdin);\n  if (lVar2 == 0) {\n    iVar1 = FUN_0040b2b0(uVar3);\n    if (iVar1 == 0) {\n      FUN_00405a00();\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_00409ef0(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00409e80(stdin);\n      if (iVar1 != 0) {\n        FUN_0040b2b0(stdin);\n        goto LAB_00405938;\n      }\n    }\n    iVar1 = FUN_0040b2b0(stdin);\n    if (iVar1 == 0) {\n      FUN_00405a00();\n      return;\n    }\n  }\nLAB_00405938:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = DAT_00612510;\n  piVar4 = __errno_location();\n  if (lVar2 == 0) {\n    error(0,*piVar4,\"%s\",uVar3);\n  }\n  else {\n    uVar5 = FUN_00408e10(lVar2);\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n  FUN_00405a00();\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006122c0);\n}\n\n",
            "funcName": "FUN_004058e0"
        },
        {
            "funcStartAddr": "0x4059e0",
            "funcEndAddr": "0x4059e8",
            "decompiledFuncCode": "\nvoid FUN_004059e0(undefined8 param_1)\n\n{\n  DAT_00612520 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004059e0"
        },
        {
            "funcStartAddr": "0x4059f0",
            "funcEndAddr": "0x4059f8",
            "decompiledFuncCode": "\nvoid FUN_004059f0(undefined param_1)\n\n{\n  DAT_00612518 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004059f0"
        },
        {
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405a9e",
            "decompiledFuncCode": "\nvoid FUN_00405a00(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0040b2b0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00612518 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00612520 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00408e10();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00405a7e;\n    }\n  }\n  iVar1 = FUN_0040b2b0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00405a7e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006122c0);\n}\n\n",
            "funcName": "FUN_00405a00"
        },
        {
            "funcStartAddr": "0x405aa0",
            "funcEndAddr": "0x405b24",
            "decompiledFuncCode": "\nDIR * FUN_00405aa0(char *param_1)\n\n{\n  uint uVar1;\n  int __fd;\n  DIR *__dirp;\n  int *piVar2;\n  DIR *pDVar3;\n  int iVar4;\n  \n  __dirp = opendir(param_1);\n  if (__dirp != (DIR *)0x0) {\n    uVar1 = dirfd(__dirp);\n    if (uVar1 < 3) {\n      __fd = FUN_00409080(uVar1);\n      piVar2 = __errno_location();\n      if (__fd < 0) {\n        iVar4 = *piVar2;\n        pDVar3 = (DIR *)0x0;\n      }\n      else {\n        pDVar3 = fdopendir(__fd);\n        iVar4 = *piVar2;\n        if (pDVar3 == (DIR *)0x0) {\n          close(__fd);\n        }\n      }\n      closedir(__dirp);\n      *piVar2 = iVar4;\n      return pDVar3;\n    }\n  }\n  return __dirp;\n}\n\n",
            "funcName": "FUN_00405aa0"
        },
        {
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405b76",
            "decompiledFuncCode": "\nvoid FUN_00405b30(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_00409090(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405b30"
        },
        {
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405ce0",
            "decompiledFuncCode": "\nundefined8 FUN_00405b80(char *param_1,long param_2,ulong param_3,char **param_4)\n\n{\n  long lVar1;\n  undefined *puVar2;\n  char cVar3;\n  long lVar4;\n  ulong uVar5;\n  char *pcVar6;\n  undefined auStack_38 [8];\n  char **local_30;\n  ulong local_28;\n  long local_20;\n  \n  if (0x1fffffffffffffff < param_3) {\n    return 0;\n  }\n  puVar2 = auStack_38;\n  if (param_3 * 8 < 0xfb0) {\n    lVar1 = -(param_3 * 8 + 0x27 & 0xfffffffffffffff0);\n    puVar2 = auStack_38 + lVar1;\n    lVar1 = (long)&local_20 + lVar1;\n  }\n  else {\n    local_30 = param_4;\n    local_28 = param_3;\n    local_20 = param_2;\n    lVar1 = FUN_0040b890();\n    param_4 = local_30;\n    param_3 = local_28;\n    param_2 = local_20;\n  }\n  if (lVar1 == 0) {\n    return 0;\n  }\n  *(undefined8 *)(lVar1 + 8) = 1;\n  lVar4 = 0;\n  uVar5 = 2;\n  if (2 < param_3) {\n    do {\n      cVar3 = *(char *)(param_2 + lVar4);\n      while (*(char *)(param_2 + -1 + uVar5) != cVar3) {\n        if (lVar4 == 0) {\n          *(ulong *)(lVar1 + uVar5 * 8) = uVar5;\n          lVar4 = 0;\n          goto LAB_00405c22;\n        }\n        lVar4 = lVar4 - *(long *)(lVar1 + lVar4 * 8);\n        cVar3 = *(char *)(param_2 + lVar4);\n      }\n      lVar4 = lVar4 + 1;\n      *(ulong *)(lVar1 + uVar5 * 8) = uVar5 - lVar4;\nLAB_00405c22:\n      uVar5 = uVar5 + 1;\n    } while (param_3 != uVar5);\n  }\n  *param_4 = (char *)0x0;\n  cVar3 = *param_1;\n  uVar5 = 0;\n  pcVar6 = param_1;\njoined_r0x00405c43:\n  do {\n    if (cVar3 == '\\0') {\nLAB_00405c5f:\n      *(undefined8 *)(puVar2 + -8) = 0x405c64;\n      FUN_0040b900();\n      return 1;\n    }\n    if (*(char *)(param_2 + uVar5) == cVar3) {\n      uVar5 = uVar5 + 1;\n      if (param_3 == uVar5) {\n        *param_4 = param_1;\n        goto LAB_00405c5f;\n      }\n      cVar3 = pcVar6[1];\n      pcVar6 = pcVar6 + 1;\n      goto joined_r0x00405c43;\n    }\n    if (uVar5 == 0) {\n      cVar3 = pcVar6[1];\n      param_1 = param_1 + 1;\n      pcVar6 = pcVar6 + 1;\n    }\n    else {\n      lVar4 = *(long *)(lVar1 + uVar5 * 8);\n      param_1 = param_1 + lVar4;\n      uVar5 = uVar5 - lVar4;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00405b80"
        },
        {
            "funcStartAddr": "0x405d00",
            "funcEndAddr": "0x405d1d",
            "decompiledFuncCode": "\nvoid FUN_00405d00(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"iter->cur.wc == 0\",\"mbuiter.h\",0xb3,\"mbuiter_multi_next\");\n}\n\n",
            "funcName": "FUN_00405d00"
        },
        {
            "funcStartAddr": "0x405d20",
            "funcEndAddr": "0x406688",
            "decompiledFuncCode": "\nundefined8 FUN_00405d20(mbstate_t *param_1,byte *param_2,mbstate_t **param_3)\n\n{\n  byte *pbVar1;\n  byte *__s1;\n  mbstate_t *pmVar2;\n  mbstate_t *__s2;\n  char cVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  byte **ppbVar7;\n  byte **ppbVar8;\n  byte **ppbVar9;\n  byte *pbVar10;\n  mbstate_t ***pppmVar11;\n  mbstate_t *pmVar12;\n  long lVar13;\n  mbstate_t *pmVar14;\n  mbstate_t **local_118;\n  mbstate_t *local_110;\n  mbstate_t *local_108;\n  mbstate_t *local_100;\n  char local_f8;\n  mbstate_t local_f4;\n  undefined local_ec;\n  byte *local_e8;\n  byte *local_e0;\n  char local_d8;\n  int local_d4;\n  byte abStack_d0 [24];\n  char local_b8;\n  mbstate_t local_b4;\n  char local_ac;\n  mbstate_t *local_a8;\n  size_t local_a0;\n  char local_98;\n  int local_94 [7];\n  char local_78;\n  mbstate_t local_74;\n  char local_6c;\n  mbstate_t *local_68;\n  byte *local_60;\n  char local_58;\n  int local_54 [9];\n  \n  pppmVar11 = &local_118;\n  local_118 = param_3;\n  local_110 = param_1;\n  local_108 = (mbstate_t *)FUN_0040ba40(param_2);\n  if (local_108 < (mbstate_t *)0x492492492492493) {\n    if ((ulong)((long)local_108 * 0x38) < 0xfb0) {\n      lVar13 = -((long)local_108 * 0x38 + 0x27U & 0xfffffffffffffff0);\n      pppmVar11 = (mbstate_t ***)((long)&local_118 + lVar13);\n      ppbVar9 = (byte **)((long)&local_100 + lVar13);\n    }\n    else {\n      ppbVar9 = (byte **)FUN_0040b890();\n    }\n    pmVar2 = local_108;\n    if (ppbVar9 != (byte **)0x0) {\n      local_e8 = param_2;\n      local_f8 = '\\0';\n      local_ec = 0;\n      local_f4 = (mbstate_t)0x0;\n      ppbVar8 = ppbVar9;\n      do {\n        local_ec = 0;\n        if (local_f8 == '\\0') {\n          if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_e8 >> 5) * 4) >> (*local_e8 & 0x1f) & 1) ==\n              0) {\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x406220;\n            iVar4 = mbsinit(&local_f4);\n            if (iVar4 == 0) {\nLAB_004066af:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4066c8;\n              __assert_fail(\"mbsinit (&iter->state)\",\"mbuiter.h\",0x96,\"mbuiter_multi_next\");\n            }\n            local_f8 = '\\x01';\n            goto LAB_00405ea2;\n          }\n          local_e0 = (byte *)0x1;\n          local_d8 = '\\x01';\n          local_d4 = (int)(char)*local_e8;\n          local_ec = 1;\n          if ((char)*local_e8 == 0) goto LAB_00405f57;\nLAB_00405e45:\n          cVar3 = '\\x01';\n        }\n        else {\nLAB_00405ea2:\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x405ea7;\n          sVar5 = __ctype_get_mb_cur_max();\n          pbVar10 = local_e8;\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x405eb9;\n          uVar6 = FUN_00409040(pbVar10,sVar5);\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x405ed3;\n          local_e0 = (byte *)FUN_0040b170(&local_d4,pbVar10,uVar6,&local_f4);\n          pbVar10 = local_e8;\n          if (local_e0 == (byte *)0xffffffffffffffff) {\n            local_e0 = (byte *)0x1;\n            cVar3 = '\\0';\n            local_d8 = '\\0';\n            local_ec = 1;\n          }\n          else {\n            if (local_e0 != (byte *)0xfffffffffffffffe) {\n              if (local_e0 == (byte *)0x0) {\n                local_e0 = (byte *)0x1;\n                if (*local_e8 != 0) {\nLAB_00406696:\n                    /* WARNING: Subroutine does not return */\n                  *(undefined8 *)((long)pppmVar11 + -8) = 0x4066af;\n                  __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"mbuiter.h\",0xb2,\"mbuiter_multi_next\");\n                }\n                if (local_d4 != 0) {\nLAB_004066c8:\n                  *(undefined8 *)((long)pppmVar11 + -8) = 0x4066cd;\n                  FUN_00405d00();\nLAB_004066cd:\n                    /* WARNING: Subroutine does not return */\n                  *(undefined8 *)((long)pppmVar11 + -8) = 0x4066e6;\n                  __assert_fail(\"iter->cur.wc == 0\",\"mbuiter.h\",0xb3,\"mbuiter_multi_next\");\n                }\n              }\n              local_d8 = '\\x01';\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x405f35;\n              iVar4 = mbsinit(&local_f4);\n              if (iVar4 != 0) {\n                local_f8 = '\\0';\n              }\n              local_ec = 1;\n              if (local_d4 != 0) goto LAB_00405e45;\n              goto LAB_00405f57;\n            }\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x40628c;\n            local_e0 = (byte *)strlen((char *)pbVar10);\n            local_d8 = '\\0';\n            cVar3 = '\\0';\n            local_ec = 1;\n          }\n        }\n        pbVar1 = local_e0;\n        pbVar10 = local_e8;\n        local_ec = 1;\n        if (local_e8 == abStack_d0) {\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x406244;\n          pbVar10 = (byte *)memcpy(ppbVar8 + 3,pbVar10,(size_t)pbVar1);\n          *ppbVar8 = pbVar10;\n          cVar3 = local_d8;\n        }\n        else {\n          *ppbVar8 = local_e8;\n        }\n        ppbVar8[1] = local_e0;\n        *(char *)(ppbVar8 + 2) = cVar3;\n        if (cVar3 != '\\0') {\n          *(int *)((long)ppbVar8 + 0x14) = local_d4;\n        }\n        local_e8 = local_e8 + (long)local_e0;\n        ppbVar8 = ppbVar8 + 6;\n        local_ec = 0;\n      } while( true );\n    }\n  }\n  return 0;\nLAB_00405f57:\n  local_ec = 1;\n  lVar13 = 0;\n  ppbVar9[(long)pmVar2 * 6 + 1] = (byte *)0x1;\n  local_100 = (mbstate_t *)0x2;\n  ppbVar8 = ppbVar9;\n  if (local_108 < (mbstate_t *)0x3) {\nLAB_0040600b:\n    local_a8 = local_110;\n    local_b8 = '\\0';\n    local_ac = '\\0';\n    *local_118 = (mbstate_t *)0x0;\n    local_110 = &local_74;\n    local_78 = '\\0';\n    local_b4 = (mbstate_t)0x0;\n    local_74 = (mbstate_t)0x0;\n    local_6c = '\\0';\n    local_100 = &local_b4;\n    local_68 = local_a8;\n    pmVar14 = (mbstate_t *)0x0;\n    do {\n      do {\n        if (local_6c == '\\0') goto LAB_00406142;\n        if (local_58 != '\\0') goto LAB_00406182;\nLAB_00406092:\n        ppbVar8 = ppbVar9 + (long)pmVar14 * 6;\nLAB_0040609d:\n        __s2 = local_68;\n        pbVar10 = ppbVar8[1];\n        pmVar12 = local_100;\n        if (pbVar10 == local_60) {\n          pbVar1 = *ppbVar8;\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x406364;\n          iVar4 = memcmp(pbVar1,__s2,(size_t)pbVar10);\n          pmVar12 = local_100;\n          if (iVar4 == 0) goto LAB_004061a7;\n        }\njoined_r0x0040636f:\n        local_100 = pmVar12;\n        if (pmVar14 == (mbstate_t *)0x0) {\n          if (local_ac == '\\0') {\n            if (local_b8 == '\\0') {\n              if ((*(uint *)(&DAT_0040f520 + (ulong)(*(byte *)&local_a8->__count >> 5) * 4) >>\n                   (*(byte *)&local_a8->__count & 0x1f) & 1) != 0) {\n                local_a0 = 1;\n                local_98 = '\\x01';\n                local_94[0] = (int)(char)*(byte *)&local_a8->__count;\n                local_ac = '\\x01';\n                goto LAB_00406113;\n              }\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x406554;\n              iVar4 = mbsinit(pmVar12);\n              if (iVar4 == 0) goto LAB_004066af;\n              local_b8 = '\\x01';\n            }\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x406568;\n            sVar5 = __ctype_get_mb_cur_max();\n            pmVar12 = local_a8;\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x40657a;\n            uVar6 = FUN_00409040(pmVar12,sVar5);\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x406597;\n            local_a0 = FUN_0040b170(local_94,pmVar12,uVar6,&local_b4);\n            pmVar12 = local_a8;\n            if (local_a0 == 0xffffffffffffffff) {\n              local_a0 = 1;\n              local_98 = '\\0';\n              goto LAB_00406121;\n            }\n            if (local_a0 == 0xfffffffffffffffe) {\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x406683;\n              local_a0 = strlen((char *)pmVar12);\n              local_98 = '\\0';\n              goto LAB_00406121;\n            }\n            if (local_a0 == 0) {\n              local_a0 = 1;\n              if (*(byte *)&local_a8->__count != 0) goto LAB_00406696;\n              if (local_94[0] != 0) goto LAB_004066c8;\n            }\n            local_98 = '\\x01';\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x4065f7;\n            iVar4 = mbsinit(&local_b4);\n            if (iVar4 != 0) {\n              local_b8 = '\\0';\n            }\n            local_ac = '\\x01';\n          }\n          else if (local_98 == '\\0') goto LAB_00406121;\nLAB_00406113:\n          if (local_94[0] == 0) {\n                    /* WARNING: Subroutine does not return */\n            *(code **)((long)pppmVar11 + -8) = FUN_00402005;\n            abort();\n          }\nLAB_00406121:\n          local_a8 = (mbstate_t *)((long)&local_a8->__count + local_a0);\n          local_68 = (mbstate_t *)(local_60 + (long)&local_68->__count);\n          local_ac = '\\0';\n          local_6c = '\\0';\nLAB_00406142:\n          do {\n            pmVar12 = local_110;\n            if (local_78 == '\\0') {\n              if ((*(uint *)(&DAT_0040f520 + (ulong)(*(byte *)&local_68->__count >> 5) * 4) >>\n                   (*(byte *)&local_68->__count & 0x1f) & 1) == 0) {\n                *(undefined8 *)((long)pppmVar11 + -8) = 0x4062bc;\n                iVar4 = mbsinit(pmVar12);\n                if (iVar4 != 0) {\n                  local_78 = '\\x01';\n                  goto LAB_004062c8;\n                }\n                goto LAB_004066af;\n              }\n              local_60 = (byte *)0x1;\n              local_58 = '\\x01';\n              local_54[0] = (int)(char)*(byte *)&local_68->__count;\n              local_6c = '\\x01';\n            }\n            else {\nLAB_004062c8:\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4062cd;\n              sVar5 = __ctype_get_mb_cur_max();\n              pmVar12 = local_68;\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4062dc;\n              uVar6 = FUN_00409040(pmVar12,sVar5);\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4062f3;\n              local_60 = (byte *)FUN_0040b170(local_54,pmVar12,uVar6,&local_74);\n              pmVar12 = local_68;\n              if (local_60 == (byte *)0xffffffffffffffff) {\n                local_60 = (byte *)0x1;\n                local_58 = '\\0';\n                local_6c = '\\x01';\n                goto LAB_00406092;\n              }\n              if (local_60 == (byte *)0xfffffffffffffffe) {\n                *(undefined8 *)((long)pppmVar11 + -8) = 0x406631;\n                local_60 = (byte *)strlen((char *)pmVar12);\n                local_58 = '\\0';\n                local_6c = '\\x01';\n                goto LAB_00406092;\n              }\n              if (local_60 == (byte *)0x0) {\n                local_60 = (byte *)0x1;\n                if (*(byte *)&local_68->__count != 0) goto LAB_00406696;\n                if (local_54[0] != 0) goto LAB_004066c8;\n              }\n              local_58 = '\\x01';\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x406341;\n              iVar4 = mbsinit(&local_74);\n              if (iVar4 != 0) {\n                local_78 = '\\0';\n              }\n              local_6c = '\\x01';\n            }\nLAB_00406182:\n            if (local_54[0] == 0) goto LAB_004061d1;\n            ppbVar8 = ppbVar9 + (long)pmVar14 * 6;\n            if (*(char *)(ppbVar8 + 2) == '\\0') goto LAB_0040609d;\n            pmVar12 = local_100;\n            if (*(int *)((long)ppbVar8 + 0x14) != local_54[0]) goto joined_r0x0040636f;\nLAB_004061a7:\n            pmVar14 = (mbstate_t *)((long)&pmVar14->__count + 1);\n            local_68 = (mbstate_t *)(local_60 + (long)&local_68->__count);\n            local_6c = '\\0';\n            if (local_108 == pmVar14) {\n              *local_118 = local_a8;\nLAB_004061d1:\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4061d9;\n              FUN_0040b900(ppbVar9);\n              return 1;\n            }\n          } while( true );\n        }\n        pbVar10 = ppbVar9[(long)((long)&pmVar14->__count + (long)pmVar2 * 6)];\n        pmVar12 = (mbstate_t *)((long)pmVar14 - (long)pbVar10);\n      } while (pbVar10 == (byte *)0x0);\n      if (local_ac == '\\0') goto LAB_004063be;\n      if (local_98 != '\\0') goto LAB_00406408;\n      while( true ) {\n        local_ac = '\\0';\n        local_a8 = (mbstate_t *)((long)&local_a8->__count + local_a0);\n        pbVar10 = pbVar10 + -1;\n        pmVar14 = pmVar12;\n        if (pbVar10 == (byte *)0x0) break;\nLAB_004063be:\n        pmVar14 = local_100;\n        if (local_b8 == '\\0') {\n          if ((*(uint *)(&DAT_0040f520 + (ulong)(*(byte *)&local_a8->__count >> 5) * 4) >>\n               (*(byte *)&local_a8->__count & 0x1f) & 1) == 0) {\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x40642c;\n            iVar4 = mbsinit(pmVar14);\n            if (iVar4 != 0) {\n              local_b8 = '\\x01';\n              goto LAB_0040643b;\n            }\n            goto LAB_004066af;\n          }\n          local_a0 = 1;\n          local_98 = '\\x01';\n          local_94[0] = (int)(char)*(byte *)&local_a8->__count;\n          local_ac = '\\x01';\nLAB_00406408:\n          if (local_94[0] == 0) {\n            uVar6 = FUN_00402000();\n            return uVar6;\n          }\n        }\n        else {\nLAB_0040643b:\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x406440;\n          sVar5 = __ctype_get_mb_cur_max();\n          pmVar14 = local_a8;\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x406452;\n          uVar6 = FUN_00409040(pmVar14,sVar5);\n          *(undefined8 *)((long)pppmVar11 + -8) = 0x40646c;\n          local_a0 = FUN_0040b170(local_94,pmVar14,uVar6,&local_b4);\n          pmVar14 = local_a8;\n          if (local_a0 == 0xffffffffffffffff) {\n            local_a0 = 1;\n            local_98 = '\\0';\n          }\n          else {\n            if (local_a0 != 0xfffffffffffffffe) {\n              if (local_a0 == 0) {\n                local_a0 = 1;\n                if (*(byte *)&local_a8->__count != 0) goto LAB_00406696;\n                if (local_94[0] != 0) goto LAB_004066cd;\n              }\n              local_98 = '\\x01';\n              *(undefined8 *)((long)pppmVar11 + -8) = 0x4064c8;\n              iVar4 = mbsinit(&local_b4);\n              if (iVar4 != 0) {\n                local_b8 = '\\0';\n              }\n              local_ac = '\\x01';\n              goto LAB_00406408;\n            }\n            *(undefined8 *)((long)pppmVar11 + -8) = 0x40650c;\n            local_a0 = strlen((char *)pmVar14);\n            local_98 = '\\0';\n          }\n        }\n      }\n    } while( true );\n  }\nLAB_00405f80:\n  cVar3 = *(char *)(ppbVar8 + 8);\n  do {\n    ppbVar7 = ppbVar9 + lVar13 * 6;\n    if ((cVar3 == '\\0') || (*(char *)(ppbVar7 + 2) == '\\0')) {\n      pbVar10 = ppbVar8[7];\n      if (pbVar10 == ppbVar7[1]) {\n        pbVar1 = *ppbVar7;\n        __s1 = ppbVar8[6];\n        *(undefined8 *)((long)pppmVar11 + -8) = 0x405fd1;\n        iVar4 = memcmp(__s1,pbVar1,(size_t)pbVar10);\n        if (iVar4 == 0) goto LAB_00405fd5;\n      }\n    }\n    else if (*(int *)((long)ppbVar8 + 0x44) == *(int *)((long)ppbVar7 + 0x14)) {\nLAB_00405fd5:\n      lVar13 = lVar13 + 1;\n      ppbVar9[(long)((long)&local_100->__count + (long)pmVar2 * 6)] =\n           (byte *)((long)local_100 - lVar13);\n      goto LAB_00405feb;\n    }\n    if (lVar13 == 0) break;\n    lVar13 = lVar13 - (long)ppbVar9[(long)pmVar2 * 6 + lVar13];\n  } while( true );\n  ppbVar9[(long)((long)&local_100->__count + (long)pmVar2 * 6)] = (byte *)local_100;\nLAB_00405feb:\n  local_100 = (mbstate_t *)((long)&local_100->__count + 1);\n  ppbVar8 = ppbVar8 + 6;\n  if (local_108 == local_100) goto LAB_0040600b;\n  goto LAB_00405f80;\n}\n\n",
            "funcName": "FUN_00405d20"
        },
        {
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x407535",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte * FUN_004066f0(byte *param_1,byte *param_2)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  long lVar3;\n  byte bVar4;\n  byte bVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  byte bVar9;\n  ulong uVar10;\n  ulong uVar11;\n  byte *pbVar12;\n  ulong uVar13;\n  ulong uVar14;\n  long lVar15;\n  bool bVar16;\n  ulong local_180;\n  mbstate_t local_174;\n  undefined local_16c;\n  byte *local_168;\n  size_t local_160;\n  char local_158;\n  int local_154 [7];\n  char local_138;\n  mbstate_t local_134;\n  char local_12c;\n  byte *local_128;\n  size_t local_120;\n  char local_118;\n  int local_114 [7];\n  undefined4 local_f8;\n  mbstate_t mStack_f4;\n  undefined4 uStack_ec;\n  byte *local_e8;\n  size_t sStack_e0;\n  undefined4 local_d8;\n  int iStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 local_b8;\n  mbstate_t mStack_b4;\n  undefined4 uStack_ac;\n  byte *local_a8;\n  size_t sStack_a0;\n  undefined4 local_98;\n  int iStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 local_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  mbstate_t mStack_74;\n  undefined local_6c;\n  byte *local_68;\n  size_t local_60;\n  char local_58;\n  int local_54 [9];\n  \n  sVar7 = __ctype_get_mb_cur_max();\n  if (1 < sVar7) {\n    bVar5 = *param_2;\n    local_16c = 0;\n    local_174 = (mbstate_t)0x0;\n    local_168 = param_2;\n    if ((*(uint *)(&DAT_0040f520 + (ulong)(bVar5 >> 5) * 4) >> (bVar5 & 0x1f) & 1) == 0) {\n      iVar6 = mbsinit(&local_174);\n      if (iVar6 == 0) {\nLAB_0040758c:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"mbsinit (&iter->state)\",\"mbuiter.h\",0x96,\"mbuiter_multi_next\");\n      }\n      sVar7 = __ctype_get_mb_cur_max();\n      pbVar12 = local_168;\n      uVar8 = FUN_00409040(local_168,sVar7);\n      local_160 = FUN_0040b170(local_154,pbVar12,uVar8,&local_174);\n      if (local_160 == 0xffffffffffffffff) {\n        local_160 = 1;\n        local_158 = '\\0';\n        goto LAB_004068c7;\n      }\n      if (local_160 == 0xfffffffffffffffe) {\n        local_160 = strlen((char *)local_168);\n        local_158 = '\\0';\n        goto LAB_004068c7;\n      }\n      if (local_160 != 0) goto LAB_004074b0;\n      local_160 = 1;\n      if (*local_168 == 0) {\n        if (local_154[0] == 0) goto LAB_004074b0;\n        goto LAB_004074aa;\n      }\nLAB_004075a5:\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"mbuiter.h\",0xb2,\"mbuiter_multi_next\");\n    }\n    local_160 = 1;\n    local_158 = '\\x01';\n    local_154[0] = (int)(char)bVar5;\nLAB_00406842:\n    if (local_154[0] == 0) {\n      return param_1;\n    }\nLAB_004068c7:\n    local_16c = 1;\n    uVar14 = 0;\n    bVar5 = 1;\n    local_138 = '\\0';\n    local_134 = (mbstate_t)0x0;\n    local_12c = '\\0';\n    local_f8 = local_f8 & 0xffffff00;\n    mStack_f4 = (mbstate_t)0x0;\n    local_180 = 0;\n    uVar11 = 0;\n    local_128 = param_2;\n    local_e8 = param_1;\n    uVar2 = uStack_ec;\nLAB_00406920:\n    uStack_ec = uVar2 & 0xffffff00;\n    if ((char)local_f8 != '\\0') {\nLAB_00406f39:\n      sVar7 = __ctype_get_mb_cur_max();\n      pbVar12 = local_e8;\n      uVar8 = FUN_00409040(local_e8,sVar7);\n      sStack_e0 = FUN_0040b170(&iStack_d4,pbVar12,uVar8,&mStack_f4);\n      if (sStack_e0 == 0xffffffffffffffff) {\n        sStack_e0 = 1;\n        local_d8 = (uint)local_d8._1_3_;\n      }\n      else {\n        if (sStack_e0 != 0xfffffffffffffffe) {\n          if (sStack_e0 == 0) {\n            sStack_e0 = 1;\n            if (*local_e8 != 0) goto LAB_004075a5;\n            if (iStack_d4 != 0) goto LAB_004074aa;\n          }\n          local_d8 = CONCAT31(local_d8._1_3_,1);\n          iVar6 = mbsinit(&mStack_f4);\n          if (iVar6 != 0) {\n            local_f8 = local_f8 & 0xffffff00;\n          }\n          goto LAB_00406980;\n        }\n        sStack_e0 = strlen((char *)local_e8);\n        local_d8 = local_d8 >> 8;\n      }\n      local_d8 = local_d8 << 8;\n      uStack_ec = CONCAT31(uStack_ec._1_3_,1);\n      bVar9 = 9 < uVar14 & bVar5;\n      if ((bVar9 != 0) && (bVar5 = bVar9, uVar14 * 5 <= uVar11)) goto LAB_00407068;\nLAB_00406eb8:\n      sVar7 = sStack_e0;\n      uVar13 = uVar11 + 1;\n      if ((sStack_e0 == local_160) && (iVar6 = memcmp(local_e8,local_168,sStack_e0), iVar6 == 0)) {\nLAB_004069d1:\n        uVar13 = uVar11 + 1;\n        bVar9 = *param_2;\n        local_78 = local_78 & 0xffffff00;\n        sStack_a0 = sStack_e0;\n        local_a8 = local_e8 + sStack_e0;\n        local_b8 = local_f8;\n        mStack_b4.__count = mStack_f4.__count;\n        mStack_b4.__value.__wch = mStack_f4.__value.__wch;\n        local_98 = local_d8;\n        iStack_94 = iStack_d4;\n        uStack_90 = uStack_d0;\n        uStack_8c = uStack_cc;\n        local_88 = local_c8;\n        uStack_84 = uStack_c4;\n        uStack_80 = uStack_c0;\n        uStack_7c = uStack_bc;\n        uStack_ac = uStack_ec & 0xffffff00;\n        local_6c = 0;\n        mStack_74.__count = 0;\n        mStack_74.__value.__wch = 0;\n        local_68 = param_2;\n        if ((*(uint *)(&DAT_0040f520 + (ulong)(bVar9 >> 5) * 4) >> (bVar9 & 0x1f) & 1) == 0) {\n          iVar6 = mbsinit(&mStack_74);\n          if (iVar6 == 0) goto LAB_0040758c;\n          local_78 = CONCAT31(local_78._1_3_,1);\n          sVar7 = __ctype_get_mb_cur_max();\n          pbVar12 = local_68;\n          uVar8 = FUN_00409040(local_68,sVar7);\n          local_60 = FUN_0040b170(local_54,pbVar12,uVar8,&mStack_74);\n          if (local_60 == 0xffffffffffffffff) {\n            local_60 = 1;\n            local_58 = '\\0';\n            goto LAB_00406aa9;\n          }\n          if (local_60 == 0xfffffffffffffffe) {\n            local_60 = strlen((char *)local_68);\n            local_58 = '\\0';\n            goto LAB_00406aa9;\n          }\n          if (local_60 == 0) {\n            local_60 = 1;\n            if (*local_68 != 0) goto LAB_004075a5;\n            if (local_54[0] != 0) goto LAB_004074aa;\n          }\n          local_58 = '\\x01';\n          iVar6 = mbsinit(&mStack_74);\n          if (iVar6 != 0) {\n            local_78 = local_78 & 0xffffff00;\n          }\n        }\n        else {\n          local_60 = 1;\n          local_58 = '\\x01';\n          local_54[0] = (int)(char)bVar9;\n        }\n        local_6c = 1;\n        if (local_54[0] == 0) {\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\nLAB_00406aa9:\n        local_68 = local_68 + local_60;\n        do {\n          local_6c = 0;\n          uVar13 = uVar13 + 1;\n          if ((char)local_78 == '\\0') {\n            if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_68 >> 5) * 4) >> (*local_68 & 0x1f) & 1)\n                == 0) {\n              iVar6 = mbsinit(&mStack_74);\n              if (iVar6 != 0) {\n                local_78 = CONCAT31(local_78._1_3_,1);\n                goto LAB_00406c03;\n              }\n              goto LAB_0040758c;\n            }\n            local_60 = 1;\n            local_54[0] = (int)(char)*local_68;\n            local_58 = '\\x01';\njoined_r0x00406b23:\n            if (local_54[0] == 0) {\n              return local_e8;\n            }\n          }\n          else {\nLAB_00406c03:\n            sVar7 = __ctype_get_mb_cur_max();\n            pbVar12 = local_68;\n            uVar8 = FUN_00409040(local_68,sVar7);\n            local_60 = FUN_0040b170(local_54,pbVar12,uVar8,&mStack_74);\n            if (local_60 == 0xffffffffffffffff) {\n              local_60 = 1;\n              local_58 = '\\0';\n            }\n            else {\n              if (local_60 != 0xfffffffffffffffe) {\n                if (local_60 == 0) {\n                  local_60 = 1;\n                  if (*local_68 != 0) goto LAB_004075a5;\n                  if (local_54[0] != 0) goto LAB_004074aa;\n                }\n                local_58 = '\\x01';\n                iVar6 = mbsinit(&mStack_74);\n                if (iVar6 != 0) {\n                  local_78 = local_78 & 0xffffff00;\n                }\n                goto joined_r0x00406b23;\n              }\n              local_60 = strlen((char *)local_68);\n              local_58 = '\\0';\n            }\n          }\n          local_6c = 1;\n          if ((char)uStack_ac == '\\0') {\n            if ((char)local_b8 == '\\0') {\n              if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_a8 >> 5) * 4) >> (*local_a8 & 0x1f) & 1)\n                  != 0) {\n                sStack_a0 = 1;\n                iStack_94 = (int)(char)*local_a8;\n                local_98 = CONCAT31(local_98._1_3_,1);\n                uStack_ac = CONCAT31(uStack_ac._1_3_,1);\n                goto LAB_00406b8f;\n              }\n              iVar6 = mbsinit(&mStack_b4);\n              if (iVar6 == 0) goto LAB_0040758c;\n              local_b8 = CONCAT31(local_b8._1_3_,1);\n            }\n            sVar7 = __ctype_get_mb_cur_max();\n            pbVar12 = local_a8;\n            uVar8 = FUN_00409040(local_a8,sVar7);\n            sStack_a0 = FUN_0040b170(&iStack_94,pbVar12,uVar8,&mStack_b4);\n            if (sStack_a0 == 0xffffffffffffffff) {\n              sStack_a0 = 1;\n              local_98 = (uint)local_98._1_3_ << 8;\n              uStack_ac = CONCAT31(uStack_ac._1_3_,1);\n            }\n            else {\n              if (sStack_a0 != 0xfffffffffffffffe) {\n                if (sStack_a0 == 0) {\n                  sStack_a0 = 1;\n                  if (*local_a8 != 0) goto LAB_004075a5;\n                  if (iStack_94 != 0) goto LAB_004074aa;\n                }\n                local_98 = CONCAT31(local_98._1_3_,1);\n                iVar6 = mbsinit(&mStack_b4);\n                if (iVar6 != 0) {\n                  local_b8 = local_b8 & 0xffffff00;\n                }\n                uStack_ac = CONCAT31(uStack_ac._1_3_,1);\n                if (iStack_94 != 0) goto LAB_00406b9e;\n                goto LAB_00406e08;\n              }\n              sStack_a0 = strlen((char *)local_a8);\n              local_98 = local_98 & 0xffffff00;\n              uStack_ac = CONCAT31(uStack_ac._1_3_,1);\n            }\nLAB_00406cec:\n            sVar7 = sStack_e0;\n            if (sStack_a0 != local_60) break;\n            iVar6 = memcmp(local_a8,local_68,sStack_a0);\n            bVar16 = iVar6 != 0;\n          }\n          else {\n            if ((char)local_98 == '\\0') goto LAB_00406cec;\nLAB_00406b8f:\n            if (iStack_94 == 0) goto LAB_00406e08;\nLAB_00406b9e:\n            if (local_58 == '\\0') goto LAB_00406cec;\n            bVar16 = local_54[0] != iStack_94;\n          }\n          sVar7 = sStack_e0;\n          if (bVar16) break;\n          local_a8 = local_a8 + sStack_a0;\n          local_68 = local_68 + local_60;\n          uStack_ac = uStack_ac & 0xffffff00;\n        } while( true );\n      }\n      goto LAB_00406d0a;\n    }\n    if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_e8 >> 5) * 4) >> (*local_e8 & 0x1f) & 1) == 0) {\n      iVar6 = mbsinit(&mStack_f4);\n      if (iVar6 != 0) {\n        local_f8 = CONCAT31(local_f8._1_3_,1);\n        goto LAB_00406f39;\n      }\n      goto LAB_0040758c;\n    }\n    sStack_e0 = 1;\n    iStack_d4 = (int)(char)*local_e8;\n    local_d8 = CONCAT31(local_d8._1_3_,1);\n    uStack_ec._1_3_ = (undefined3)(uVar2 >> 8);\nLAB_00406980:\n    uStack_ec = CONCAT31(uStack_ec._1_3_,1);\n    if (iStack_d4 == 0) goto LAB_00406e08;\n    bVar9 = 9 < uVar14 & bVar5;\n    if ((bVar9 != 0) && (bVar5 = bVar9, uVar14 * 5 <= uVar11)) {\nLAB_00407068:\n      lVar15 = uVar11 - local_180;\n      if (lVar15 == 0) {\n        if (local_12c == '\\0') goto LAB_00407238;\n        if (local_118 != '\\0') {\nLAB_0040727e:\n          if (local_114[0] == 0) goto LAB_004070f6;\n        }\nLAB_0040728c:\n        bVar5 = 1;\n      }\n      else {\n        if (local_12c == '\\0') goto LAB_0040709f;\n        if (local_118 != '\\0') goto LAB_004070e1;\nLAB_00407086:\n        do {\n          local_12c = '\\0';\n          local_128 = local_128 + local_120;\n          lVar15 = lVar15 + -1;\n          if (lVar15 == 0) goto LAB_00407238;\nLAB_0040709f:\n          if (local_138 == '\\0') {\n            if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_128 >> 5) * 4) >> (*local_128 & 0x1f) & 1)\n                == 0) {\n              iVar6 = mbsinit(&local_134);\n              if (iVar6 != 0) {\n                local_138 = '\\x01';\n                goto LAB_0040713f;\n              }\n              goto LAB_0040758c;\n            }\n            local_120 = 1;\n            local_114[0] = (int)(char)*local_128;\n            local_118 = '\\x01';\n            local_12c = '\\x01';\n          }\n          else {\nLAB_0040713f:\n            sVar7 = __ctype_get_mb_cur_max();\n            pbVar12 = local_128;\n            uVar8 = FUN_00409040(local_128,sVar7);\n            local_120 = FUN_0040b170(local_114,pbVar12,uVar8,&local_134);\n            if (local_120 == 0xffffffffffffffff) {\n              local_120 = 1;\n              local_118 = '\\0';\n              goto LAB_00407086;\n            }\n            if (local_120 == 0xfffffffffffffffe) {\n              local_120 = strlen((char *)local_128);\n              local_118 = '\\0';\n              goto LAB_00407086;\n            }\n            if (local_120 == 0) {\n              local_120 = 1;\n              if (*local_128 != 0) goto LAB_004075a5;\n              if (local_114[0] != 0) goto LAB_004074aa;\n            }\n            local_118 = '\\x01';\n            iVar6 = mbsinit(&local_134);\n            if (iVar6 != 0) {\n              local_138 = '\\0';\n            }\n            local_12c = '\\x01';\n          }\nLAB_004070e1:\n        } while (local_114[0] != 0);\n        if (local_12c == '\\0') {\nLAB_00407238:\n          if (local_138 == '\\0') {\n            if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_128 >> 5) * 4) >> (*local_128 & 0x1f) & 1)\n                != 0) {\n              local_120 = 1;\n              local_114[0] = (int)(char)*local_128;\n              local_118 = '\\x01';\n              local_12c = '\\x01';\n              goto LAB_0040727e;\n            }\n            iVar6 = mbsinit(&local_134);\n            if (iVar6 == 0) goto LAB_0040758c;\n            local_138 = '\\x01';\n          }\n          sVar7 = __ctype_get_mb_cur_max();\n          pbVar12 = local_128;\n          uVar8 = FUN_00409040(local_128,sVar7);\n          local_120 = FUN_0040b170(local_114,pbVar12,uVar8,&local_134);\n          if (local_120 != 0xffffffffffffffff) {\n            if (local_120 == 0xfffffffffffffffe) {\n              local_120 = strlen((char *)local_128);\n              local_118 = '\\0';\n              local_12c = '\\x01';\n              goto LAB_0040728c;\n            }\n            if (local_120 == 0) {\n              local_120 = 1;\n              if (*local_128 != 0) goto LAB_004075a5;\n              if (local_114[0] != 0) goto LAB_004074aa;\n            }\n            local_118 = '\\x01';\n            iVar6 = mbsinit(&local_134);\n            if (iVar6 != 0) {\n              local_138 = '\\0';\n            }\n            local_12c = '\\x01';\n            goto LAB_0040727e;\n          }\n          local_120 = 1;\n          local_118 = '\\0';\n          local_12c = '\\x01';\n          goto LAB_0040728c;\n        }\nLAB_004070f6:\n        bVar5 = FUN_00405d20(param_1,param_2,&local_78);\n        if (bVar5 != 0) goto LAB_00407531;\n      }\n      local_180 = uVar11;\n      if ((char)local_d8 == '\\0') goto LAB_00406eb8;\n    }\n    uVar13 = uVar11 + 1;\n    if (local_158 == '\\0') goto LAB_00406eb8;\n    sVar7 = sStack_e0;\n    if (iStack_d4 == local_154[0]) goto LAB_004069d1;\nLAB_00406d0a:\n    local_e8 = local_e8 + sVar7;\n    uVar14 = uVar14 + 1;\n    uVar11 = uVar13;\n    uVar2 = uStack_ec;\n    goto LAB_00406920;\n  }\n  bVar5 = *param_2;\n  if (bVar5 != 0) {\n    bVar9 = *param_1;\n    if (bVar9 != 0) {\n      uVar13 = 0;\n      uVar14 = 0;\n      uVar11 = 0;\n      bVar4 = 1;\n      pbVar12 = param_2;\n      do {\n        uVar13 = uVar13 + 1;\n        pbVar1 = param_1 + 1;\n        if (bVar5 == bVar9) {\n          if (param_2[1] == 0) {\n            return param_1;\n          }\n          if (*pbVar1 == 0) break;\n          uVar10 = uVar14 + 2;\n          if (param_2[1] == *pbVar1) {\n            do {\n              lVar15 = uVar10 + -uVar14;\n              if (param_2[lVar15] == 0) {\n                return param_1;\n              }\n              lVar3 = uVar10 + -uVar14;\n              if (param_1[lVar3] == 0) goto LAB_00406e08;\n              uVar10 = uVar10 + 1;\n            } while (param_2[lVar15] == param_1[lVar3]);\n          }\n        }\n        else {\n          uVar10 = uVar14 + 1;\n          if (param_1[1] == 0) break;\n        }\n        uVar14 = uVar10;\n        bVar9 = 9 < uVar13 & bVar4;\n        if ((bVar9 != 0) && (bVar4 = bVar9, uVar13 * 5 <= uVar14)) {\n          if (pbVar12 != (byte *)0x0) {\n            sVar7 = strnlen((char *)pbVar12,uVar14 - uVar11);\n            pbVar12 = pbVar12 + sVar7;\n            uVar11 = uVar14;\n            if (*pbVar12 != 0) goto LAB_004067a0;\n          }\n          sVar7 = strlen((char *)param_2);\n          bVar4 = FUN_00405b80(pbVar1,param_2,sVar7,&local_78);\n          if (bVar4 != 0) {\nLAB_00407531:\n            return (byte *)CONCAT44(mStack_74.__count,local_78);\n          }\n          pbVar12 = (byte *)0x0;\n        }\nLAB_004067a0:\n        bVar9 = *pbVar1;\n        param_1 = pbVar1;\n      } while( true );\n    }\nLAB_00406e08:\n    param_1 = (byte *)0x0;\n  }\n  return param_1;\nLAB_004074aa:\n  FUN_00405d00();\nLAB_004074b0:\n  local_158 = '\\x01';\n  mbsinit(&local_174);\n  goto LAB_00406842;\n}\n\n",
            "funcName": "FUN_004066f0"
        },
        {
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x407659",
            "decompiledFuncCode": "\nvoid FUN_004075c0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = &DAT_0040ddc0;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040ddc8;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00612528 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004075c0"
        },
        {
            "funcStartAddr": "0x407660",
            "funcEndAddr": "0x40773f",
            "decompiledFuncCode": "\nchar * FUN_00407660(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040b320();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00407738:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040ddd9;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040ddce;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00407738;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040ddd5;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040ddd2;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00407660"
        },
        {
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x408666",
            "decompiledFuncCode": "\nulong FUN_00407760(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  ushort **ppuVar6;\n  long lVar7;\n  ulong uVar8;\n  byte bVar9;\n  byte bVar10;\n  char cVar11;\n  byte bVar12;\n  char *pcVar13;\n  ulong uVar14;\n  ulong uVar15;\n  bool bVar16;\n  uint uVar17;\n  byte bVar18;\n  ulong uVar19;\n  ulong uVar20;\n  bool bVar21;\n  bool bVar22;\n  byte local_ac;\n  size_t local_98;\n  char *local_70;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  uVar17 = param_6 & 2;\n  sVar5 = __ctype_get_mb_cur_max();\n  switch(param_5) {\n  case 0:\n    local_5b = false;\n    uVar15 = 0;\n    local_ac = 0;\n    local_98 = 0;\n    local_70 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar17 == 0) {\n      local_ac = 0;\nLAB_004079b6:\n      if (param_2 != 0) {\n        *param_1 = 0x27;\n      }\n      local_5b = false;\n      uVar15 = 1;\n      param_5 = 2;\n      local_98 = 1;\n      local_70 = \"\\'\";\n    }\n    else {\n      local_5b = true;\n      uVar15 = 0;\n      local_ac = 0;\n      local_98 = 1;\n      local_70 = \"\\'\";\n    }\n    break;\n  case 3:\n    local_5b = true;\n    uVar15 = 0;\n    param_5 = 2;\n    local_ac = 1;\n    local_98 = 1;\n    local_70 = \"\\'\";\n    break;\n  case 4:\n    if (uVar17 == 0) {\n      local_ac = 1;\n      goto LAB_004079b6;\n    }\n  case 1:\n    local_5b = true;\n    uVar15 = 0;\n    param_5 = 2;\n    local_ac = 0;\n    local_98 = 1;\n    local_70 = \"\\'\";\n    break;\n  case 5:\n    if (uVar17 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      uVar15 = 1;\n      local_ac = 1;\n      local_98 = 1;\n      local_70 = \"\\\"\";\n    }\n    else {\n      local_5b = true;\n      uVar15 = 0;\n      local_ac = 1;\n      local_98 = 1;\n      local_70 = \"\\\"\";\n    }\n    break;\n  case 6:\n    local_5b = true;\n    uVar15 = 0;\n    param_5 = 5;\n    local_ac = 1;\n    local_98 = 1;\n    local_70 = \"\\\"\";\n    break;\n  case 7:\n    local_5b = false;\n    uVar15 = 0;\n    local_ac = 1;\n    local_98 = 0;\n    local_70 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00407660(&DAT_0040dddd,param_5);\n      param_9 = (char *)FUN_00407660(\"\\'\",param_5);\n    }\n    uVar15 = 0;\n    if (uVar17 == 0) {\n      cVar11 = *param_8;\n      while (cVar11 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar11;\n        }\n        uVar15 = uVar15 + 1;\n        cVar11 = param_8[uVar15];\n      }\n    }\n    local_5b = uVar17 != 0;\n    local_98 = strlen(param_9);\n    local_ac = 1;\n    local_70 = param_9;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar20 = 0;\n  bVar9 = 0;\nLAB_00407800:\n  bVar21 = param_4 != uVar20;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar21 = param_3[uVar20] != '\\0';\n  }\n  if (bVar21 == false) {\n    bVar22 = (bool)(param_5 == 2 & local_5b & uVar15 == 0);\n    if (bVar22 == false) {\n      uVar20 = uVar15;\n      if (((local_70 != (char *)0x0) && (local_5b == false)) && (cVar11 = *local_70, cVar11 != '\\0')\n         ) {\n        do {\n          if (uVar20 < param_2) {\n            param_1[uVar20] = cVar11;\n          }\n          uVar20 = uVar20 + 1;\n          cVar11 = local_70[uVar20 - uVar15];\n        } while (cVar11 != '\\0');\n      }\n      if (param_2 <= uVar20) {\n        return uVar20;\n      }\n      param_1[uVar20] = 0;\n      return uVar20;\n    }\n    goto LAB_00407f40;\n  }\n  bVar2 = (bool)(param_5 != 2 & local_ac);\n  __s1 = (byte *)(param_3 + uVar20);\n  uVar14 = uVar15;\n  bVar22 = local_5b;\n  bVar3 = bVar9;\n  if (bVar2 != false) {\n    if (local_98 == 0) {\nLAB_00408110:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00408122_caseD_0;\n      default:\n        bVar2 = false;\n        goto switchD_00407efe_caseD_1;\n      case 7:\nswitchD_00408122_caseD_7:\n        bVar18 = 0x61;\n        break;\n      case 8:\nswitchD_00408122_caseD_8:\n        bVar18 = 0x62;\n        break;\n      case 9:\nswitchD_00408122_caseD_9:\n        bVar18 = 0x74;\n        break;\n      case 10:\nswitchD_00408122_caseD_a:\n        bVar18 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00408122_caseD_b:\n        bVar18 = 0x76;\n        break;\n      case 0xc:\nswitchD_00408122_caseD_c:\n        bVar18 = 0x66;\n        break;\n      case 0xd:\n        bVar2 = false;\nswitchD_004078f1_caseD_d:\n        uVar19 = 0xd;\n        bVar10 = 0x72;\n        bVar21 = param_5 == 2;\n        goto LAB_00407ce0;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar2 = false;\nswitchD_004078f1_caseD_20:\n        bVar21 = false;\n        goto LAB_00407bc8;\n      case 0x23:\n      case 0x7e:\n        bVar2 = false;\nswitchD_004078f1_caseD_23:\n        if (uVar20 == 0) {\n          bVar21 = false;\n          goto LAB_00407bc8;\n        }\n        goto switchD_004078f1_caseD_25;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar2 = false;\n        goto switchD_004078f1_caseD_25;\n      case 0x27:\n        bVar2 = false;\n        goto switchD_00407efe_caseD_27;\n      case 0x3f:\n        bVar2 = false;\n        goto switchD_00407efe_caseD_3f;\n      case 0x5c:\n        bVar2 = false;\n        goto switchD_004078f1_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar2 = false;\n        goto switchD_00407efe_caseD_7b;\n      }\n      bVar22 = false;\n      goto joined_r0x00407d05;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_98)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar20 + local_98) || (iVar4 = memcmp(__s1,local_70,local_98), iVar4 != 0))\n    goto LAB_00408110;\n    if (local_5b == false) {\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004078f1_caseD_0;\n      default:\n        goto switchD_00407efe_caseD_1;\n      case 7:\n        goto switchD_00408122_caseD_7;\n      case 8:\n        goto switchD_00408122_caseD_8;\n      case 9:\n        goto switchD_00408122_caseD_9;\n      case 10:\n        goto switchD_00408122_caseD_a;\n      case 0xb:\n        goto switchD_00408122_caseD_b;\n      case 0xc:\n        goto switchD_00408122_caseD_c;\n      case 0xd:\n        goto switchD_004078f1_caseD_d;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_004078f1_caseD_20;\n      case 0x23:\n      case 0x7e:\n        goto switchD_004078f1_caseD_23;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto switchD_004078f1_caseD_25;\n      case 0x27:\n        goto switchD_00407efe_caseD_27;\n      case 0x3f:\n        goto switchD_00407efe_caseD_3f;\n      case 0x5c:\n        goto switchD_004078f1_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00407efe_caseD_7b;\n      }\n    }\n    goto LAB_00407f52;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (local_ac == 0) {\n      if ((param_6 & 1) != 0) goto LAB_00408420;\n      if (local_5b == false) {\n        uVar20 = uVar20 + 1;\n        bVar18 = 0;\n        goto LAB_00408068;\n      }\n      bVar21 = false;\n      bVar16 = false;\n      if (param_7 != 0) {\n        bVar2 = false;\n        uVar19 = 0;\n        goto LAB_00407919;\n      }\n      bVar18 = 0;\n      goto LAB_00407e72;\n    }\nswitchD_00408122_caseD_0:\n    if (local_5b == false) {\n      bVar2 = false;\nswitchD_004078f1_caseD_0:\n      bVar22 = param_5 == 2;\n      bVar3 = (bVar9 ^ 1) & bVar22;\n      if (bVar3 == 0) {\n        bVar3 = bVar9;\n        if (uVar15 < param_2) goto LAB_00407e05;\n      }\n      else {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < param_2) {\n          param_1[uVar15 + 1] = 0x24;\n        }\n        if (uVar15 + 2 < param_2) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n        uVar14 = uVar15 + 3;\n        if (param_2 <= uVar14) {\n          uVar14 = uVar15 + 4;\n          bVar18 = 0x30;\n          goto LAB_00407c87;\n        }\nLAB_00407e05:\n        param_1[uVar14] = 0x5c;\n        uVar15 = uVar14;\n      }\n      uVar14 = uVar15 + 1;\n      if (param_5 != 2) {\n        uVar19 = 0x30;\n        bVar9 = bVar3;\n        if ((uVar20 + 1 < param_4) && ((byte)(param_3[uVar20 + 1] - 0x30U) < 10)) {\n          if (uVar14 < param_2) {\n            param_1[uVar14] = 0x30;\n          }\n          if (uVar15 + 2 < param_2) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar14 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\n        goto LAB_00407e3b;\n      }\n      bVar18 = 0x30;\n      goto LAB_00407c87;\n    }\n    bVar22 = param_5 == 2;\nLAB_00407f40:\n    if ((local_ac != 0) && (bVar22 != false)) {\n      param_5 = 4;\n    }\nLAB_00407f52:\n    uVar15 = FUN_00407760(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                          param_9);\n    return uVar15;\n  default:\nswitchD_00407efe_caseD_1:\n    if (sVar5 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar8 = 0;\n      do {\n        uVar1 = uVar20 + uVar8;\n        lVar7 = FUN_0040b170(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar7 == 0) {\n          bVar10 = local_ac & (bVar21 ^ 1U);\n          goto LAB_00408620;\n        }\n        bVar10 = local_ac;\n        if (lVar7 == -1) goto LAB_00408620;\n        if (lVar7 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00408620;\n          goto LAB_004086af;\n        }\n        bVar22 = (bool)(param_5 == 2 & local_5b);\n        if ((bVar22 != false) && (lVar7 != 1)) {\n          pcVar13 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar13 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar13 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) goto LAB_00407f40;\n            pcVar13 = pcVar13 + 1;\n          } while (param_3 + uVar1 + lVar7 != pcVar13);\n        }\n        iVar4 = iswprint(local_44);\n        if (iVar4 == 0) {\n          bVar21 = false;\n        }\n        uVar8 = uVar8 + lVar7;\n        iVar4 = mbsinit(local_40);\n      } while (iVar4 == 0);\n      bVar10 = (bVar21 ^ 1U) & local_ac;\n      goto LAB_00408620;\n    }\n    ppuVar6 = __ctype_b_loc();\n    uVar8 = 1;\n    bVar10 = ((byte)((*ppuVar6)[uVar19] >> 0xe) ^ 1) & local_ac;\n    goto LAB_00407ed8;\n  case 7:\n    uVar19 = 7;\n    bVar10 = 0x61;\n    bVar21 = param_5 == 2;\n    break;\n  case 8:\n    uVar19 = 8;\n    bVar10 = 0x62;\n    bVar21 = param_5 == 2;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar10 = 0x74;\n    goto LAB_00407f13;\n  case 10:\n    uVar19 = 10;\n    bVar10 = 0x6e;\n    goto LAB_00407f13;\n  case 0xb:\n    uVar19 = 0xb;\n    bVar10 = 0x76;\n    bVar21 = param_5 == 2;\n    break;\n  case 0xc:\n    uVar19 = 0xc;\n    bVar10 = 0x66;\n    bVar21 = param_5 == 2;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar10 = 0x72;\nLAB_00407f13:\n    bVar22 = (bool)(local_5b & param_5 == 2);\n    bVar2 = bVar22;\n    bVar21 = param_5 == 2;\n    if (bVar22 != false) goto LAB_00407f40;\n    break;\n  case 0x20:\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    goto LAB_00407bb6;\n  case 0x23:\n  case 0x7e:\n    goto LAB_00407bb1;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00407efe_caseD_25;\n  case 0x27:\nswitchD_00407efe_caseD_27:\n    bVar21 = false;\n    uVar19 = 0x27;\n    if (param_5 != 2) goto LAB_00407bc8;\n    if (local_5b == false) {\n      if (uVar15 < param_2) {\n        param_1[uVar15] = 0x27;\n      }\n      if (uVar15 + 1 < param_2) {\n        param_1[uVar15 + 1] = 0x5c;\n      }\n      if (uVar15 + 2 < param_2) {\n        param_1[uVar15 + 2] = 0x27;\n      }\n      uVar14 = uVar15 + 3;\n      bVar3 = 0;\n      bVar18 = 0x27;\nLAB_00407c87:\n      uVar20 = uVar20 + 1;\n      bVar9 = bVar3;\n      if (bVar2 != false) goto LAB_00407bef;\n      goto LAB_00407997;\n    }\n    goto LAB_00407f40;\n  case 0x3f:\nswitchD_00407efe_caseD_3f:\n    if (param_5 != 2) {\n      if (param_5 != 5) {\n        bVar21 = param_5 == 2;\n        uVar19 = 0x3f;\n        goto LAB_00407bc8;\n      }\n      if ((param_6 & 4) == 0) {\n        bVar21 = false;\n        uVar19 = 0x3f;\n        goto LAB_00407bc8;\n      }\n      uVar8 = uVar20 + 2;\n      bVar21 = false;\n      uVar19 = 0x3f;\n      if ((param_4 <= uVar8) || (param_3[uVar20 + 1] != '?')) goto LAB_00407bc8;\n      uVar19 = (ulong)(byte)param_3[uVar8];\n      if ((0x3e < (byte)param_3[uVar8]) || ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) == 0)) {\n        uVar19 = 0x3f;\n        goto LAB_00407bc8;\n      }\n      if (local_5b == false) {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < param_2) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < param_2) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < param_2) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar14 = uVar15 + 4;\n        bVar22 = false;\n        bVar21 = false;\n        uVar20 = uVar8;\nLAB_00407e3b:\n        bVar18 = (byte)uVar19;\n        uVar15 = uVar14;\n        bVar3 = bVar9;\n        if ((local_ac == 0) || (bVar22)) goto LAB_00407be0;\n        if (param_7 != 0) goto LAB_00407919;\n        goto LAB_00407e60;\n      }\n      goto LAB_00407f52;\n    }\n    if (local_5b == false) {\n      bVar21 = false;\n      bVar18 = 0x3f;\n      goto LAB_00407be0;\n    }\n    goto LAB_00407f40;\n  case 0x5c:\n    if (param_5 == 2) {\n      if (local_5b == false) {\n        uVar20 = uVar20 + 1;\n        bVar18 = 0x5c;\n        goto LAB_00408068;\n      }\n      goto LAB_00407f40;\n    }\nswitchD_004078f1_caseD_5c:\n    uVar19 = 0x5c;\n    bVar18 = 0x5c;\n    bVar10 = 0x5c;\n    bVar21 = (bool)(local_ac & local_5b & local_98 != 0);\n    if (bVar21 == false) break;\n    uVar20 = uVar20 + 1;\nLAB_00408068:\n    bVar21 = bVar9 != 0;\n    bVar9 = bVar3;\n    if (bVar21) {\n      if (uVar14 < param_2) {\n        param_1[uVar14] = 0x27;\n      }\n      if (uVar14 + 1 < param_2) {\n        param_1[uVar14 + 1] = 0x27;\n      }\n      uVar14 = uVar14 + 2;\n      bVar9 = 0;\n    }\n    goto LAB_00407997;\n  case 0x7b:\n  case 0x7d:\nswitchD_00407efe_caseD_7b:\n    bVar22 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar22 = param_3[1] != '\\0';\n    }\n    bVar21 = param_5 == 2;\n    if (bVar22) goto LAB_00407bc8;\nLAB_00407bb1:\n    bVar21 = param_5 == 2;\n    if (uVar20 != 0) goto LAB_00407bc8;\nLAB_00407bb6:\n    bVar21 = param_5 == 2;\n    bVar22 = (bool)(local_5b & bVar21);\n    if (bVar22 != false) goto LAB_00407f40;\nLAB_00407bc8:\n    bVar18 = (byte)uVar19;\n    bVar21 = (bool)((local_ac ^ 1 | bVar21) ^ 1 | local_5b);\n    if (bVar21 == false) {\nLAB_00407be0:\n      uVar20 = uVar20 + 1;\n      uVar14 = uVar15;\n      if (bVar2 == false) {\n        bVar9 = (bVar21 ^ 1U) & bVar3;\n        goto LAB_00408068;\n      }\nLAB_00407bef:\n      bVar22 = param_5 == 2;\n    }\n    else {\nswitchD_004078f1_caseD_25:\n      bVar18 = (byte)uVar19;\n      bVar21 = false;\n      if (param_7 == 0) {\nLAB_00407e60:\n        bVar22 = param_5 == 2;\n        uVar15 = uVar14;\n        bVar16 = bVar21;\n        bVar3 = bVar9;\n        if (bVar2 == false) {\nLAB_00407e72:\n          uVar20 = uVar20 + 1;\n          bVar9 = (bVar16 ^ 1U) & bVar3;\n          uVar14 = uVar15;\n          goto LAB_00408068;\n        }\n      }\n      else {\nLAB_00407919:\n        bVar18 = (byte)uVar19;\n        uVar14 = uVar15;\n        if ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar18 & 0x1f) & 1) == 0) goto LAB_00407e60;\n        bVar22 = param_5 == 2;\n        bVar3 = bVar9;\n      }\njoined_r0x00407d05:\n      if (local_5b != false) goto LAB_00407f40;\n      uVar20 = uVar20 + 1;\n    }\n    bVar9 = (bVar3 ^ 1) & bVar22;\n    if (bVar9 != 0) {\n      if (uVar14 < param_2) {\n        param_1[uVar14] = 0x27;\n      }\n      if (uVar14 + 1 < param_2) {\n        param_1[uVar14 + 1] = 0x24;\n      }\n      if (uVar14 + 2 < param_2) {\n        param_1[uVar14 + 2] = 0x27;\n      }\n      uVar14 = uVar14 + 3;\n      bVar3 = bVar9;\n    }\n    if (uVar14 < param_2) {\n      param_1[uVar14] = 0x5c;\n    }\n    uVar14 = uVar14 + 1;\n    bVar9 = bVar3;\nLAB_00407997:\n    if (uVar14 < param_2) {\n      param_1[uVar14] = bVar18;\n    }\n    uVar15 = uVar14 + 1;\n    goto LAB_00407800;\n  }\nLAB_00407ce0:\n  bVar22 = bVar21;\n  bVar18 = bVar10;\n  bVar21 = bVar22;\n  if (local_ac == 0) goto LAB_00407bc8;\n  goto joined_r0x00407d05;\n  while (__s1[uVar8] != 0) {\nLAB_004086af:\n    uVar8 = uVar8 + 1;\n    if (param_4 <= uVar20 + uVar8) break;\n  }\nLAB_00408620:\n  bVar12 = bVar10;\n  if (1 < uVar8) {\nLAB_0040842e:\n    uVar8 = uVar8 + uVar20;\n    bVar10 = 0;\n    uVar15 = uVar20;\n    do {\n      bVar18 = (byte)uVar19;\n      if (bVar12 == 0) {\n        bVar9 = (bVar10 ^ 1) & bVar3;\n        if (bVar2 != false) {\n          if (uVar14 < param_2) {\n            param_1[uVar14] = 0x5c;\n          }\n          uVar14 = uVar14 + 1;\n        }\n        uVar20 = uVar15 + 1;\n        if (uVar8 <= uVar20) goto LAB_00408068;\n        if (bVar9 == 0) {\n          bVar2 = false;\n        }\n        else {\n          if (uVar14 < param_2) {\n            param_1[uVar14] = 0x27;\n          }\n          if (uVar14 + 1 < param_2) {\n            param_1[uVar14 + 1] = 0x27;\n          }\n          uVar14 = uVar14 + 2;\n          bVar2 = false;\n          bVar3 = 0;\n        }\n      }\n      else {\n        bVar22 = param_5 == 2;\n        if (local_5b != false) goto LAB_00407f40;\n        bVar9 = (bVar3 ^ 1) & bVar22;\n        if (bVar9 != 0) {\n          if (uVar14 < param_2) {\n            param_1[uVar14] = 0x27;\n          }\n          if (uVar14 + 1 < param_2) {\n            param_1[uVar14 + 1] = 0x24;\n          }\n          if (uVar14 + 2 < param_2) {\n            param_1[uVar14 + 2] = 0x27;\n          }\n          uVar14 = uVar14 + 3;\n          bVar3 = bVar9;\n        }\n        if (uVar14 < param_2) {\n          param_1[uVar14] = 0x5c;\n        }\n        if (uVar14 + 1 < param_2) {\n          param_1[uVar14 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar14 + 2 < param_2) {\n          param_1[uVar14 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar20 = uVar15 + 1;\n        uVar14 = uVar14 + 3;\n        bVar18 = (bVar18 & 7) + 0x30;\n        bVar10 = bVar12;\n        bVar9 = bVar3;\n        if (uVar8 <= uVar20) goto LAB_00407997;\n      }\n      uVar15 = uVar15 + 1;\n      if (uVar14 < param_2) {\n        param_1[uVar14] = bVar18;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar15];\n      uVar14 = uVar14 + 1;\n    } while( true );\n  }\nLAB_00407ed8:\n  bVar12 = local_ac;\n  if (bVar10 != 0) goto LAB_0040842e;\nswitchD_00407efe_caseD_25:\n  bVar21 = param_5 == 2;\n  goto LAB_00407bc8;\nLAB_00408420:\n  uVar20 = uVar20 + 1;\n  goto LAB_00407800;\n}\n\n",
            "funcName": "FUN_00407760"
        },
        {
            "funcStartAddr": "0x408770",
            "funcEndAddr": "0x40890a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00408770(uint param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (-1 < (int)param_1) {\n    puVar8 = (undefined4 *)PTR_DAT_00612318;\n    if (DAT_00612330 <= param_1) {\n      if (PTR_DAT_00612318 == &DAT_00612320) {\n        puVar8 = (undefined4 *)FUN_004096d0(0);\n        uVar6 = PTR_DAT_00612328._4_4_;\n        uVar5 = PTR_DAT_00612328._0_4_;\n        uVar3 = _UNK_00612324;\n        PTR_DAT_00612318 = (undefined *)puVar8;\n        *puVar8 = _DAT_00612320;\n        puVar8[1] = uVar3;\n        puVar8[2] = uVar5;\n        puVar8[3] = uVar6;\n      }\n      else {\n        puVar8 = (undefined4 *)FUN_004096d0(PTR_DAT_00612318);\n        PTR_DAT_00612318 = (undefined *)puVar8;\n      }\n      memset(puVar8 + (ulong)DAT_00612330 * 4,0,((ulong)(param_1 + 1) - (ulong)DAT_00612330) * 0x10)\n      ;\n      DAT_00612330 = param_1 + 1;\n    }\n    uVar2 = param_4[1];\n    puVar10 = (ulong *)(puVar8 + (long)(int)param_1 * 4);\n    uVar4 = *puVar10;\n    __ptr = (undefined *)puVar10[1];\n    uVar9 = FUN_00407760(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                         *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n    if (uVar4 <= uVar9) {\n      uVar9 = uVar9 + 1;\n      *puVar10 = uVar9;\n      if (__ptr != &DAT_00612540) {\n        free(__ptr);\n      }\n      __ptr = (undefined *)FUN_00409680(uVar9);\n      uVar3 = *param_4;\n      puVar10[1] = (ulong)__ptr;\n      FUN_00407760(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                   *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n    }\n    *piVar7 = iVar1;\n    return __ptr;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408770"
        },
        {
            "funcStartAddr": "0x408910",
            "funcEndAddr": "0x408944",
            "decompiledFuncCode": "\nvoid FUN_00408910(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00612640;\n  }\n  FUN_00409840(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00408910"
        },
        {
            "funcStartAddr": "0x408950",
            "funcEndAddr": "0x40895f",
            "decompiledFuncCode": "\nundefined4 FUN_00408950(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00612640;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00408950"
        },
        {
            "funcStartAddr": "0x408960",
            "funcEndAddr": "0x40896f",
            "decompiledFuncCode": "\nvoid FUN_00408960(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00612640;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00408960"
        },
        {
            "funcStartAddr": "0x408970",
            "funcEndAddr": "0x4089a3",
            "decompiledFuncCode": "\nuint FUN_00408970(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00612640;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00408970"
        },
        {
            "funcStartAddr": "0x4089b0",
            "funcEndAddr": "0x4089c3",
            "decompiledFuncCode": "\nundefined4 FUN_004089b0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00612640;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004089b0"
        },
        {
            "funcStartAddr": "0x4089d0",
            "funcEndAddr": "0x4089fb",
            "decompiledFuncCode": "\nvoid FUN_004089d0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00612640;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004089d0"
        },
        {
            "funcStartAddr": "0x408a00",
            "funcEndAddr": "0x408a72",
            "decompiledFuncCode": "\nvoid FUN_00408a00(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00612640;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00407760(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00408a00"
        },
        {
            "funcStartAddr": "0x408a80",
            "funcEndAddr": "0x408b61",
            "decompiledFuncCode": "\nundefined8 FUN_00408a80(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00612640;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00407760(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00409680(lVar3 + 1);\n  FUN_00407760(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00408a80"
        },
        {
            "funcStartAddr": "0x408b70",
            "funcEndAddr": "0x408b7a",
            "decompiledFuncCode": "\nvoid FUN_00408b70(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00408a80(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00408b70"
        },
        {
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408c15",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408b80(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00612318;\n  if (1 < DAT_00612330) {\n    ppvVar2 = (void **)(PTR_DAT_00612318 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00612318 + (ulong)(DAT_00612330 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00612540) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00612320 = 0x100;\n    PTR_DAT_00612328 = &DAT_00612540;\n  }\n  if (__ptr_00 != &DAT_00612320) {\n    free(__ptr_00);\n    PTR_DAT_00612318 = &DAT_00612320;\n  }\n  DAT_00612330 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00408b80"
        },
        {
            "funcStartAddr": "0x408c20",
            "funcEndAddr": "0x408c31",
            "decompiledFuncCode": "\nvoid FUN_00408c20(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408770(param_1,param_2,0xffffffffffffffff,&DAT_00612640);\n  return;\n}\n\n",
            "funcName": "FUN_00408c20"
        },
        {
            "funcStartAddr": "0x408c40",
            "funcEndAddr": "0x408c4a",
            "decompiledFuncCode": "\nvoid FUN_00408c40(void)\n\n{\n  FUN_00408770();\n  return;\n}\n\n",
            "funcName": "FUN_00408c40"
        },
        {
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408c66",
            "decompiledFuncCode": "\nvoid FUN_00408c50(undefined8 param_1)\n\n{\n  FUN_00408770(0,param_1,0xffffffffffffffff,&DAT_00612640);\n  return;\n}\n\n",
            "funcName": "FUN_00408c50"
        },
        {
            "funcStartAddr": "0x408c70",
            "funcEndAddr": "0x408c82",
            "decompiledFuncCode": "\nvoid FUN_00408c70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408770(0,param_1,param_2,&DAT_00612640);\n  return;\n}\n\n",
            "funcName": "FUN_00408c70"
        },
        {
            "funcStartAddr": "0x408c90",
            "funcEndAddr": "0x408cf8",
            "decompiledFuncCode": "\nvoid FUN_00408c90(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00408770(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408c90"
        },
        {
            "funcStartAddr": "0x408d00",
            "funcEndAddr": "0x408d64",
            "decompiledFuncCode": "\nvoid FUN_00408d00(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00408770(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408d00"
        },
        {
            "funcStartAddr": "0x408d70",
            "funcEndAddr": "0x408d7c",
            "decompiledFuncCode": "\nvoid FUN_00408d70(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00408c90(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408d70"
        },
        {
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408d8f",
            "decompiledFuncCode": "\nvoid FUN_00408d80(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00408d00(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00408d80"
        },
        {
            "funcStartAddr": "0x408d90",
            "funcEndAddr": "0x408e00",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408d90(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_00612670;\n  local_48 = _DAT_00612640;\n  uStack_40 = uRam0000000000612648;\n  local_38 = _DAT_00612650;\n  uStack_30 = uRam0000000000612658;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_00612660;\n  uStack_20 = uRam0000000000612668;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00408770(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00408d90"
        },
        {
            "funcStartAddr": "0x408e00",
            "funcEndAddr": "0x408e0d",
            "decompiledFuncCode": "\nvoid FUN_00408e00(undefined8 param_1,char param_2)\n\n{\n  FUN_00408d90(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408e00"
        },
        {
            "funcStartAddr": "0x408e10",
            "funcEndAddr": "0x408e21",
            "decompiledFuncCode": "\nvoid FUN_00408e10(undefined8 param_1)\n\n{\n  FUN_00408d90(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00408e10"
        },
        {
            "funcStartAddr": "0x408e30",
            "funcEndAddr": "0x408e3a",
            "decompiledFuncCode": "\nvoid FUN_00408e30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408d90(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00408e30"
        },
        {
            "funcStartAddr": "0x408e40",
            "funcEndAddr": "0x408eae",
            "decompiledFuncCode": "\nvoid FUN_00408e40(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00408770(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408e40"
        },
        {
            "funcStartAddr": "0x408eb0",
            "funcEndAddr": "0x408f1c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408eb0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam0000000000612648;\n  local_38 = _DAT_00612650;\n  uStack_30 = uRam0000000000612658;\n  local_28 = _DAT_00612660;\n  lStack_20 = uRam0000000000612668;\n  local_18 = DAT_00612670;\n  local_48 = CONCAT44((int)((ulong)_DAT_00612640 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00408770(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408eb0"
        },
        {
            "funcStartAddr": "0x408f20",
            "funcEndAddr": "0x408f29",
            "decompiledFuncCode": "\nvoid FUN_00408f20(void)\n\n{\n  FUN_00408eb0();\n  return;\n}\n\n",
            "funcName": "FUN_00408f20"
        },
        {
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f47",
            "decompiledFuncCode": "\nvoid FUN_00408f30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00408eb0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00408f30"
        },
        {
            "funcStartAddr": "0x408f50",
            "funcEndAddr": "0x408f63",
            "decompiledFuncCode": "\nvoid FUN_00408f50(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00408eb0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00408f50"
        },
        {
            "funcStartAddr": "0x408f70",
            "funcEndAddr": "0x408f7a",
            "decompiledFuncCode": "\nvoid FUN_00408f70(void)\n\n{\n  FUN_00408770();\n  return;\n}\n\n",
            "funcName": "FUN_00408f70"
        },
        {
            "funcStartAddr": "0x408f80",
            "funcEndAddr": "0x408f92",
            "decompiledFuncCode": "\nvoid FUN_00408f80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408770(0,param_1,param_2,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408f80"
        },
        {
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x408fb1",
            "decompiledFuncCode": "\nvoid FUN_00408fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408770(param_1,param_2,0xffffffffffffffff,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408fa0"
        },
        {
            "funcStartAddr": "0x408fc0",
            "funcEndAddr": "0x408fd6",
            "decompiledFuncCode": "\nvoid FUN_00408fc0(undefined8 param_1)\n\n{\n  FUN_00408770(0,param_1,0xffffffffffffffff,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408fc0"
        },
        {
            "funcStartAddr": "0x408fe0",
            "funcEndAddr": "0x40903d",
            "decompiledFuncCode": "\nssize_t FUN_00408fe0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7fffe001) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00408fe0"
        },
        {
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409071",
            "decompiledFuncCode": "\nlong FUN_00409040(long param_1,long param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040b1a0(param_1,0,param_2);\n  if (lVar1 != 0) {\n    param_2 = (lVar1 - param_1) + 1;\n  }\n  return param_2;\n}\n\n",
            "funcName": "FUN_00409040"
        },
        {
            "funcStartAddr": "0x409080",
            "funcEndAddr": "0x40908e",
            "decompiledFuncCode": "\nvoid FUN_00409080(undefined8 param_1)\n\n{\n  FUN_00409d40(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00409080"
        },
        {
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x4090dc",
            "decompiledFuncCode": "\nuint FUN_00409090(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00409080();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00409090"
        },
        {
            "funcStartAddr": "0x4090e0",
            "funcEndAddr": "0x409488",
            "decompiledFuncCode": "\nulong FUN_004090e0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,\n                  undefined8 *param_5,undefined8 param_6)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  ulong uVar8;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  undefined8 local_40;\n  \n  if (param_2 == 0) {\n    fprintf(param_1,\"%s %s\\n\");\n  }\n  else {\n    fprintf(param_1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar2 = dcgettext(0,&DAT_0040eb2b,5);\n  fprintf(param_1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar2,0x7df);\n  pcVar3 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs(pcVar3,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar2 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = fprintf(param_1,pcVar3,uVar2);\n    return (ulong)uVar1;\n  case 2:\n    uVar2 = param_5[1];\n    uVar7 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = fprintf(param_1,pcVar3,uVar7,uVar2);\n    return (ulong)uVar1;\n  case 3:\n    uVar2 = param_5[2];\n    uVar7 = param_5[1];\n    uVar6 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = fprintf(param_1,pcVar3,uVar6,uVar7,uVar2);\n    return (ulong)uVar1;\n  case 4:\n    uVar2 = param_5[3];\n    uVar7 = param_5[2];\n    uVar6 = param_5[1];\n    uVar5 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    uVar1 = fprintf(param_1,pcVar3,uVar5,uVar6,uVar7,uVar2);\n    return (ulong)uVar1;\n  case 5:\n    uVar8 = param_5[4];\n    uVar7 = param_5[3];\n    uVar6 = param_5[2];\n    uVar2 = param_5[1];\n    uVar5 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\n    break;\n  case 6:\n    uVar2 = param_5[1];\n    uVar8 = param_5[4];\n    uVar7 = param_5[3];\n    uVar6 = param_5[2];\n    uVar5 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    break;\n  case 7:\n    local_50 = param_5[2];\n    local_58 = param_5[1];\n    uVar7 = param_5[6];\n    uVar6 = param_5[5];\n    uVar5 = param_5[4];\n    uVar2 = param_5[3];\n    uVar4 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\n    goto LAB_004091cb;\n  case 8:\n    uVar2 = param_5[3];\n    uVar7 = param_5[6];\n    uVar6 = param_5[5];\n    uVar5 = param_5[4];\n    local_50 = param_5[2];\n    local_58 = param_5[1];\n    uVar4 = *param_5;\n    pcVar3 = (char *)dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\nLAB_004091cb:\n    uVar1 = fprintf(param_1,pcVar3,uVar4,local_58,local_50,uVar2,uVar5,uVar6,uVar7);\n    return (ulong)uVar1;\n  case 9:\n    local_40 = param_5[8];\n    local_48 = param_5[3];\n    pcVar3 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[2];\n    local_58 = param_5[1];\n    uVar2 = param_5[7];\n    uVar7 = param_5[6];\n    uVar6 = param_5[5];\n    uVar5 = param_5[4];\n    uVar4 = *param_5;\n    goto LAB_00409240;\n  default:\n    local_40 = param_5[8];\n    local_48 = param_5[3];\n    pcVar3 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[2];\n    local_58 = param_5[1];\n    uVar2 = param_5[7];\n    uVar7 = param_5[6];\n    uVar6 = param_5[5];\n    uVar5 = param_5[4];\n    uVar4 = *param_5;\nLAB_00409240:\n    pcVar3 = (char *)dcgettext(0,pcVar3,5);\n    uVar1 = fprintf(param_1,pcVar3,uVar4,local_58,local_50,local_48,uVar5,uVar6,uVar7,uVar2,local_40\n                   );\n    return (ulong)uVar1;\n  }\n  fprintf(param_1,pcVar3,uVar5,uVar2,uVar6,uVar7);\n  return uVar8;\n}\n\n",
            "funcName": "FUN_004090e0"
        },
        {
            "funcStartAddr": "0x4094d0",
            "funcEndAddr": "0x4094f0",
            "decompiledFuncCode": "\nvoid FUN_004094d0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004090e0();\n  return;\n}\n\n",
            "funcName": "FUN_004094d0"
        },
        {
            "funcStartAddr": "0x4094f0",
            "funcEndAddr": "0x409549",
            "decompiledFuncCode": "\nvoid FUN_004094f0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004090e0();\n  return;\n}\n\n",
            "funcName": "FUN_004094f0"
        },
        {
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409608",
            "decompiledFuncCode": "\nvoid FUN_00409550(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004090e0();\n  return;\n}\n\n",
            "funcName": "FUN_00409550"
        },
        {
            "funcStartAddr": "0x409610",
            "funcEndAddr": "0x40967a",
            "decompiledFuncCode": "\nvoid FUN_00409610(void)\n\n{\n  FILE *__stream;\n  char *pcVar1;\n  \n  pcVar1 = (char *)dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  printf(pcVar1,\"bug-findutils@gnu.org\");\n  pcVar1 = (char *)dcgettext(0,\"%s home page: <%s>\\n\",5);\n  printf(pcVar1,\"GNU findutils\",\"http://www.gnu.org/software/findutils/\");\n  __stream = stdout;\n  pcVar1 = (char *)dcgettext(0,\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\",5)\n  ;\n  fputs(pcVar1,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00409610"
        },
        {
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x40969a",
            "decompiledFuncCode": "\nvoid FUN_00409680(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004098a0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00409680"
        },
        {
            "funcStartAddr": "0x4096a0",
            "funcEndAddr": "0x4096b3",
            "decompiledFuncCode": "\nvoid FUN_004096a0(ulong param_1,ulong param_2)\n\n{\n  if (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0) {\n    FUN_00409680(SUB168(ZEXT816(param_1) * ZEXT816(param_2),0));\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004098a0();\n}\n\n",
            "funcName": "FUN_004096a0"
        },
        {
            "funcStartAddr": "0x4096c0",
            "funcEndAddr": "0x4096c2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00409680(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004098a0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4096c0"
        },
        {
            "funcStartAddr": "0x4096d0",
            "funcEndAddr": "0x409700",
            "decompiledFuncCode": "\nvoid * FUN_004096d0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004098a0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004096d0"
        },
        {
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x409723",
            "decompiledFuncCode": "\nvoid FUN_00409710(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0) {\n    FUN_004096d0(param_1,SUB168(ZEXT816(param_2) * ZEXT816(param_3),0));\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004098a0();\n}\n\n",
            "funcName": "FUN_00409710"
        },
        {
            "funcStartAddr": "0x409730",
            "funcEndAddr": "0x40979f",
            "decompiledFuncCode": "\nvoid FUN_00409730(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x80);\n      uVar2 = (ulong)(0x80 < param_3) + SUB168(auVar1 / ZEXT816(param_3),0);\n      *param_2 = uVar2;\n      FUN_004096d0(0,uVar2 * param_3,SUB168(auVar1 % ZEXT816(param_3),0));\n      return;\n    }\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004098a0(param_1,param_2,SUB168(auVar1 % ZEXT816(param_3),0));\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004096d0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00409730"
        },
        {
            "funcStartAddr": "0x4097b0",
            "funcEndAddr": "0x4097fa",
            "decompiledFuncCode": "\nvoid FUN_004097b0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      uVar1 = 0x80;\n    }\n    *param_2 = uVar1;\n    FUN_004096d0(0,uVar1);\n    return;\n  }\n  if (uVar1 < 0xaaaaaaaaaaaaaaaa) {\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n    *param_2 = uVar1;\n    FUN_004096d0(param_1,uVar1);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004098a0();\n}\n\n",
            "funcName": "FUN_004097b0"
        },
        {
            "funcStartAddr": "0x409800",
            "funcEndAddr": "0x409817",
            "decompiledFuncCode": "\nvoid FUN_00409800(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00409680();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00409800"
        },
        {
            "funcStartAddr": "0x409820",
            "funcEndAddr": "0x409838",
            "decompiledFuncCode": "\nvoid FUN_00409820(size_t param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = calloc(param_1,param_2);\n  if (pvVar1 != (void *)0x0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004098a0();\n}\n\n",
            "funcName": "FUN_00409820"
        },
        {
            "funcStartAddr": "0x409840",
            "funcEndAddr": "0x409868",
            "decompiledFuncCode": "\nvoid FUN_00409840(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00409680(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00409840"
        },
        {
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x40989e",
            "decompiledFuncCode": "\nvoid FUN_00409870(char *param_1)\n\n{\n  size_t sVar1;\n  void *__dest;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00409680(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00409870"
        },
        {
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x4098d1",
            "decompiledFuncCode": "\nvoid FUN_004098a0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_006122c0,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004098a0"
        },
        {
            "funcStartAddr": "0x4098e0",
            "funcEndAddr": "0x409d1f",
            "decompiledFuncCode": "\nuint FUN_004098e0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  ulong uVar8;\n  byte bVar9;\n  uint uVar10;\n  int iVar11;\n  long lVar12;\n  uint uVar13;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar9 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar9 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar9 = *pbVar5;\n  }\n  if (bVar9 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar9 = *param_1, bVar9 == 0)) {\n      return 4;\n    }\n    uVar10 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar9);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar10 = 0;\n    }\n    else {\n      uVar10 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    if ((param_5 == (char *)0x0) || (bVar9 = *pbVar5, bVar9 == 0)) goto LAB_00409988;\n    pcVar7 = strchr(param_5,(int)(char)bVar9);\n    if (pcVar7 == (char *)0x0) goto switchD_00409a6e_caseD_43;\n  }\n  pcVar7 = strchr(param_5,0x30);\n  if (pcVar7 != (char *)0x0) {\n    bVar1 = pbVar5[1];\n    if (bVar1 == 0x44) {\nLAB_00409a76:\n      iVar11 = 2;\n      uVar8 = 1000;\n      goto LAB_00409a60;\n    }\n    if (bVar1 == 0x69) {\n      uVar8 = 0x400;\n      iVar11 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n      goto LAB_00409a60;\n    }\n    if (bVar1 == 0x42) goto LAB_00409a76;\n    switch(bVar9) {\n    case 0x42:\n      lVar12 = 1;\n      goto LAB_00409bfc;\n    default:\n      goto switchD_00409a6e_caseD_43;\n    case 0x45:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409bd8;\n    case 0x47:\n    case 0x67:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409bab;\n    case 0x4b:\n    case 0x6b:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409b84;\n    case 0x4d:\n    case 0x6d:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409b69;\n    case 0x50:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409b41;\n    case 0x54:\n    case 0x74:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409b19;\n    case 0x59:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409af4;\n    case 0x5a:\n      lVar12 = 1;\n      uVar8 = 0x400;\n      goto LAB_00409acd;\n    case 0x62:\n      lVar12 = 1;\n      goto LAB_00409ab7;\n    case 99:\n      lVar12 = 1;\n      break;\n    case 0x77:\n      lVar12 = 1;\n      goto LAB_00409a85;\n    }\n    goto LAB_00409a98;\n  }\n  iVar11 = 1;\n  uVar8 = 0x400;\nLAB_00409a60:\n  switch(bVar9) {\n  case 0x42:\n    lVar12 = (long)iVar11;\nLAB_00409bfc:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00409b93;\n  default:\nswitchD_00409a6e_caseD_43:\n    *param_4 = uVar6;\n    return uVar10 | 2;\n  case 0x45:\n    lVar12 = (long)iVar11;\nLAB_00409bd8:\n    iVar11 = 6;\n    uVar13 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816(uVar8),0);\n      if (SUB168(auVar2 * ZEXT816(uVar8) >> 0x40,0) != 0) {\n        uVar13 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    goto LAB_00409aec;\n  case 0x47:\n  case 0x67:\n    lVar12 = (long)iVar11;\nLAB_00409bab:\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar8) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar8) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar8), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar8),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar10 = 1;\n    }\n    break;\n  case 0x4b:\n  case 0x6b:\n    uVar8 = (ulong)(int)uVar8;\n    lVar12 = (long)iVar11;\nLAB_00409b84:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar8);\n    goto joined_r0x00409b74;\n  case 0x4d:\n  case 0x6d:\n    lVar12 = (long)iVar11;\nLAB_00409b69:\n    if (SUB168(ZEXT816(uVar6) * ZEXT816(uVar8) >> 0x40,0) != 0) goto LAB_00409b93;\n    auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar8) & (undefined  [16])0xffffffffffffffff) *\n             ZEXT816(uVar8);\njoined_r0x00409b74:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00409b93:\n      uVar10 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0x50:\n    lVar12 = (long)iVar11;\nLAB_00409b41:\n    iVar11 = 5;\n    uVar13 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816(uVar8),0);\n      if (SUB168(auVar2 * ZEXT816(uVar8) >> 0x40,0) != 0) {\n        uVar13 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    goto LAB_00409aec;\n  case 0x54:\n  case 0x74:\n    lVar12 = (long)iVar11;\nLAB_00409b19:\n    iVar11 = 4;\n    uVar13 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816(uVar8),0);\n      if (SUB168(auVar2 * ZEXT816(uVar8) >> 0x40,0) != 0) {\n        uVar13 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    goto LAB_00409aec;\n  case 0x59:\n    lVar12 = (long)iVar11;\nLAB_00409af4:\n    iVar11 = 8;\n    uVar13 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816(uVar8),0);\n      if (SUB168(auVar2 * ZEXT816(uVar8) >> 0x40,0) != 0) {\n        uVar13 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    goto LAB_00409aec;\n  case 0x5a:\n    lVar12 = (long)iVar11;\nLAB_00409acd:\n    iVar11 = 7;\n    uVar13 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816(uVar8),0);\n      if (SUB168(auVar2 * ZEXT816(uVar8) >> 0x40,0) != 0) {\n        uVar13 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\nLAB_00409aec:\n    uVar10 = uVar10 | uVar13;\n    break;\n  case 0x62:\n    lVar12 = (long)iVar11;\nLAB_00409ab7:\n    if (uVar6 >> 0x37 != 0) goto LAB_00409b93;\n    uVar6 = uVar6 << 9;\n    break;\n  case 99:\n    lVar12 = (long)iVar11;\n    break;\n  case 0x77:\n    lVar12 = (long)iVar11;\nLAB_00409a85:\n    if ((long)uVar6 < 0) goto LAB_00409b93;\n    uVar6 = uVar6 * 2;\n  }\nLAB_00409a98:\n  *param_2 = pbVar5 + lVar12;\n  if (pbVar5[lVar12] != 0) {\n    uVar10 = uVar10 | 2;\n  }\nLAB_00409988:\n  *param_4 = uVar6;\n  return uVar10;\n}\n\n",
            "funcName": "FUN_004098e0"
        },
        {
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409e6c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00409d40(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_00612678 < 0) {\n    iVar1 = FUN_00409d40(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_00612678 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_00612678 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00409d40(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_00612678 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00409d40"
        },
        {
            "funcStartAddr": "0x409e80",
            "funcEndAddr": "0x409ebb",
            "decompiledFuncCode": "\nvoid FUN_00409e80(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00409ef0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00409e80"
        },
        {
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409ee8",
            "decompiledFuncCode": "\nlong FUN_00409ec0(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00409ec0"
        },
        {
            "funcStartAddr": "0x409ef0",
            "funcEndAddr": "0x409f46",
            "decompiledFuncCode": "\nulong FUN_00409ef0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00409ef0"
        },
        {
            "funcStartAddr": "0x409f50",
            "funcEndAddr": "0x40a025",
            "decompiledFuncCode": "\nvoid FUN_00409f50(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xc];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xd];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_00409fcc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_00409fcc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_00409fcc:\n  param_2[0xd] = iVar2;\n  param_2[0xc] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00409f50"
        },
        {
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40afda",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint FUN_0040a030(uint param_1,undefined8 *param_2,char *param_3,char **param_4,int *param_5,\n                 int param_6,uint *param_7,int param_8)\n\n{\n  byte bVar1;\n  undefined8 uVar2;\n  uint *puVar3;\n  undefined8 uVar4;\n  int iVar5;\n  char cVar6;\n  uint uVar7;\n  int iVar8;\n  int iVar9;\n  uint uVar10;\n  char *pcVar11;\n  size_t sVar12;\n  long **pplVar13;\n  char *pcVar14;\n  long lVar15;\n  ulong uVar16;\n  char **ppcVar17;\n  long **pplVar18;\n  byte *pbVar19;\n  uint uVar20;\n  int iVar21;\n  byte *pbVar22;\n  byte *pbVar23;\n  char **ppcVar24;\n  bool bVar25;\n  bool bVar26;\n  byte bVar27;\n  char *local_98;\n  char **local_80;\n  uint local_6c;\n  int local_50;\n  long *local_48;\n  long **local_40;\n  \n  bVar27 = 0;\n  uVar20 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  *(undefined8 *)(param_7 + 4) = 0;\n  uVar7 = *param_7;\n  local_98 = param_3;\n  if (uVar7 == 0) {\n    *param_7 = 1;\n    uVar7 = 1;\nLAB_0040a093:\n    param_7[0xd] = uVar7;\n    param_7[0xc] = uVar7;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (param_8 == 0) {\n      pcVar11 = getenv(\"POSIXLY_CORRECT\");\n      if (pcVar11 == (char *)0x0) {\n        param_7[0xb] = 0;\n        if (*param_3 == '-') {\n          pbVar23 = *(byte **)(param_7 + 8);\nLAB_0040a350:\n          param_7[10] = 2;\n          local_98 = param_3 + 1;\n          goto LAB_0040a0e3;\n        }\n        if (*param_3 != '+') {\n          param_7[10] = 1;\n          pbVar23 = *(byte **)(param_7 + 8);\n          goto LAB_0040a0e3;\n        }\n        pbVar23 = *(byte **)(param_7 + 8);\n      }\n      else {\n        pbVar23 = *(byte **)(param_7 + 8);\n        param_7[0xb] = 1;\n        if (*param_3 == '-') goto LAB_0040a350;\n        if (*param_3 != '+') goto LAB_0040a0da;\n      }\nLAB_0040a455:\n      param_7[10] = 0;\n      local_98 = param_3 + 1;\n    }\n    else {\n      param_7[0xb] = 1;\n      pbVar23 = (byte *)0x0;\n      if (*param_3 == '-') goto LAB_0040a350;\n      if (*param_3 == '+') goto LAB_0040a455;\nLAB_0040a0da:\n      param_7[10] = 0;\n    }\nLAB_0040a0e3:\n    param_7[6] = 1;\n    cVar6 = *local_98;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040a093;\n    pbVar23 = *(byte **)(param_7 + 8);\n    cVar6 = *param_3;\n    if ((cVar6 - 0x2bU & 0xfd) == 0) {\n      cVar6 = param_3[1];\n      local_98 = param_3 + 1;\n    }\n  }\n  uVar7 = 0;\n  if (cVar6 != ':') {\n    uVar7 = uVar20;\n  }\n  if ((pbVar23 == (byte *)0x0) || (*pbVar23 == 0)) {\n    uVar20 = *param_7;\n    if (param_7[0xd] != uVar20 && (int)uVar20 <= (int)param_7[0xd]) {\n      param_7[0xd] = uVar20;\n    }\n    if ((int)uVar20 < (int)param_7[0xc]) {\n      param_7[0xc] = uVar20;\n    }\n    if (param_7[10] == 1) {\n      uVar10 = param_7[0xd];\n      if (param_7[0xc] == uVar10) {\n        if (uVar20 != uVar10) {\n          param_7[0xc] = uVar20;\n          uVar10 = uVar20;\n        }\n      }\n      else if (uVar20 != uVar10) {\n        FUN_00409f50(param_2,param_7);\n        uVar10 = *param_7;\n      }\n      uVar20 = uVar10;\n      uVar10 = uVar20;\n      if ((int)uVar20 < (int)param_1) {\n        lVar15 = (long)(int)uVar20;\n        do {\n          if ((*(char *)param_2[lVar15] == '-') && (((char *)param_2[lVar15])[1] != '\\0')) {\n            uVar20 = *param_7;\n            uVar10 = (uint)lVar15;\n            break;\n          }\n          uVar20 = (uint)lVar15 + 1;\n          lVar15 = lVar15 + 1;\n          *param_7 = uVar20;\n          uVar10 = uVar20;\n        } while ((int)lVar15 < (int)param_1);\n      }\n      param_7[0xd] = uVar10;\n    }\n    bVar25 = param_1 < uVar20;\n    bVar26 = param_1 == uVar20;\n    if (bVar26) {\n      param_1 = param_7[0xd];\n      uVar20 = param_7[0xc];\nLAB_0040a372:\n      if (uVar20 != param_1) {\n        *param_7 = uVar20;\n      }\n      return 0xffffffff;\n    }\n    lVar15 = 3;\n    pbVar23 = (byte *)param_2[(int)uVar20];\n    pbVar22 = pbVar23;\n    pbVar19 = &DAT_0040f291;\n    do {\n      if (lVar15 == 0) break;\n      lVar15 = lVar15 + -1;\n      bVar25 = *pbVar22 < *pbVar19;\n      bVar26 = *pbVar22 == *pbVar19;\n      pbVar22 = pbVar22 + (ulong)bVar27 * -2 + 1;\n      pbVar19 = pbVar19 + (ulong)bVar27 * -2 + 1;\n    } while (bVar26);\n    if ((!bVar25 && !bVar26) == bVar25) {\n      uVar20 = uVar20 + 1;\n      *param_7 = uVar20;\n      if (param_7[0xc] == param_7[0xd]) {\n        param_7[0xc] = uVar20;\n      }\n      else {\n        bVar25 = uVar20 != param_7[0xd];\n        uVar20 = param_7[0xc];\n        if (bVar25) {\n          FUN_00409f50(param_2,param_7);\n          uVar20 = param_7[0xc];\n        }\n      }\n      param_7[0xd] = param_1;\n      *param_7 = param_1;\n      goto LAB_0040a372;\n    }\n    if ((*pbVar23 != 0x2d) || (pbVar23[1] == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar23;\n      *param_7 = uVar20 + 1;\n      return 1;\n    }\n    pbVar23 = pbVar23 + (ulong)(param_4 != (char **)0x0 && pbVar23[1] == 0x2d) + 1;\n    *(byte **)(param_7 + 8) = pbVar23;\n  }\n  if (param_4 != (char **)0x0) {\n    uVar20 = *param_7;\n    cVar6 = *(char *)(param_2[(int)uVar20] + 1);\n    if ((cVar6 == '-') ||\n       ((param_6 != 0 &&\n        ((*(char *)(param_2[(int)uVar20] + 2) != '\\0' ||\n         (pcVar11 = strchr(local_98,(int)cVar6), pcVar11 == (char *)0x0)))))) {\n      uVar16 = (ulong)(int)uVar20;\n      pbVar22 = pbVar23;\n      if ((*pbVar23 == 0) || (*pbVar23 == 0x3d)) {\n        local_6c = 0;\n      }\n      else {\n        do {\n          pbVar22 = pbVar22 + 1;\n          if (*pbVar22 == 0) break;\n        } while (*pbVar22 != 0x3d);\n        local_6c = (int)pbVar22 - (int)pbVar23;\n      }\n      pcVar11 = *param_4;\n      if (pcVar11 != (char *)0x0) {\n        pplVar18 = (long **)0x0;\n        iVar21 = 0;\n        iVar5 = -1;\n        local_50 = 0;\n        local_80 = (char **)0x0;\n        ppcVar17 = param_4;\nLAB_0040a694:\n        iVar9 = strncmp(pcVar11,(char *)pbVar23,(ulong)local_6c);\n        iVar8 = local_50;\n        if (iVar9 == 0) {\n          sVar12 = strlen(pcVar11);\n          if (local_6c != (uint)sVar12) {\n            if (local_80 != (char **)0x0) {\n              if ((local_50 == 0) &&\n                 ((((param_6 != 0 || (*(int *)(local_80 + 1) != *(int *)(ppcVar17 + 1))) ||\n                   (local_80[2] != ppcVar17[2])) ||\n                  (iVar8 = param_6, *(int *)(local_80 + 3) != *(int *)(ppcVar17 + 3))))) {\n                pplVar13 = (long **)malloc(0x10);\n                if (pplVar13 == (long **)0x0) {\n                  while (pplVar18 != (long **)0x0) {\n                    pplVar13 = (long **)pplVar18[1];\n                    free(pplVar18);\n                    pplVar18 = pplVar13;\n                  }\n                  local_50 = 1;\n                  iVar8 = local_50;\n                }\n                else {\n                  *pplVar13 = (long *)ppcVar17;\n                  pplVar13[1] = (long *)pplVar18;\n                  pplVar18 = pplVar13;\n                  iVar8 = local_50;\n                }\n              }\n              goto LAB_0040a680;\n            }\n            pcVar11 = ppcVar17[4];\n            local_80 = ppcVar17;\n            iVar5 = iVar21;\n            goto joined_r0x0040a68d;\n          }\n          if ((local_50 != 0) || (pplVar18 != (long **)0x0)) {\n            while (pplVar18 != (long **)0x0) {\n              pplVar13 = (long **)pplVar18[1];\n              free(pplVar18);\n              pplVar18 = pplVar13;\n            }\n          }\n          uVar20 = *param_7;\n          local_80 = ppcVar17;\n          goto LAB_0040a716;\n        }\nLAB_0040a680:\n        local_50 = iVar8;\n        pcVar11 = ppcVar17[4];\njoined_r0x0040a68d:\n        if (pcVar11 != (char *)0x0) goto LAB_0040a68f;\n        uVar20 = *param_7;\n        uVar16 = (ulong)(int)uVar20;\n        if (((char)local_50 != '\\0') || (pplVar18 != (long **)0x0)) {\n          if (uVar7 != 0) {\n            if (pplVar18 != (long **)0x0) {\n              uVar4 = param_2[uVar16];\n              uVar2 = *param_2;\n              local_40 = pplVar18;\n              pcVar11 = (char *)dcgettext(0,\"%s: option \\'%s\\' is ambiguous; possibilities:\",5);\n              fprintf(stderr,pcVar11,uVar2,uVar4);\n              pplVar18 = &local_48;\n              while( true ) {\n                fprintf(stderr,\" \\'--%s\\'\",*local_80);\n                pplVar18 = (long **)pplVar18[1];\n                if (pplVar18 == (long **)0x0) break;\n                local_80 = (char **)*pplVar18;\n              }\n              fputc(10,stderr);\n            }\n            else {\n              if ((char)local_50 == '\\0') goto LAB_0040ab51;\n              uVar4 = param_2[uVar16];\n              uVar2 = *param_2;\n              pcVar11 = (char *)dcgettext(0,\"%s: option \\'%s\\' is ambiguous\\n\",5);\n              fprintf(stderr,pcVar11,uVar2,uVar4);\n            }\n            pcVar11 = *(char **)(param_7 + 8);\n            sVar12 = strlen(pcVar11);\n            *param_7 = *param_7 + 1;\n            param_7[2] = 0;\n            *(char **)(param_7 + 8) = pcVar11 + sVar12;\n            return 0x3f;\n          }\nLAB_0040ab51:\n          pcVar11 = *(char **)(param_7 + 8);\n          sVar12 = strlen(pcVar11);\n          param_7[2] = 0;\n          *(char **)(param_7 + 8) = pcVar11 + sVar12;\n          *param_7 = uVar20 + 1;\n          while (pplVar18 != (long **)0x0) {\n            pplVar13 = (long **)pplVar18[1];\n            free(pplVar18);\n            pplVar18 = pplVar13;\n          }\n          return 0x3f;\n        }\n        iVar21 = iVar5;\n        if (local_80 != (char **)0x0) {\nLAB_0040a716:\n          uVar10 = uVar20 + 1;\n          *param_7 = uVar10;\n          if (*pbVar22 == 0) {\n            if (*(int *)(local_80 + 1) == 1) {\n              if ((int)param_1 <= (int)uVar10) {\n                if (uVar7 != 0) {\n                  pcVar11 = *local_80;\n                  uVar4 = *param_2;\n                  pcVar14 = (char *)dcgettext(0,\"%s: option \\'--%s\\' requires an argument\\n\",5);\n                  fprintf(stderr,pcVar14,uVar4,pcVar11);\n                }\n                pcVar11 = *(char **)(param_7 + 8);\n                sVar12 = strlen(pcVar11);\n                *(char **)(param_7 + 8) = pcVar11 + sVar12;\n                param_7[2] = *(uint *)(local_80 + 3);\n                if (*local_98 == ':') {\n                  return 0x3a;\n                }\n                return 0x3f;\n              }\n              *param_7 = uVar20 + 2;\n              *(undefined8 *)(param_7 + 4) = param_2[(int)uVar10];\n            }\n          }\n          else {\n            if (*(int *)(local_80 + 1) == 0) {\n              if (uVar7 != 0) {\n                pcVar11 = *local_80;\n                uVar4 = *param_2;\n                if (((char *)param_2[(long)(int)uVar10 + -1])[1] == '-') {\n                  pcVar14 = (char *)dcgettext(0,\"%s: option \\'--%s\\' doesn\\'t allow an argument\\n\",5\n                                             );\n                  fprintf(stderr,pcVar14,uVar4,pcVar11);\n                }\n                else {\n                  cVar6 = *(char *)param_2[(long)(int)uVar10 + -1];\n                  pcVar14 = (char *)dcgettext(0,\"%s: option \\'%c%s\\' doesn\\'t allow an argument\\n\",5\n                                             );\n                  fprintf(stderr,pcVar14,uVar4,(ulong)(uint)(int)cVar6,pcVar11);\n                }\n              }\n              pcVar11 = *(char **)(param_7 + 8);\n              sVar12 = strlen(pcVar11);\n              *(char **)(param_7 + 8) = pcVar11 + sVar12;\n              param_7[2] = *(uint *)(local_80 + 3);\n              return 0x3f;\n            }\n            *(byte **)(param_7 + 4) = pbVar22 + 1;\n          }\n          pcVar11 = *(char **)(param_7 + 8);\n          sVar12 = strlen(pcVar11);\n          *(char **)(param_7 + 8) = pcVar11 + sVar12;\n          if (param_5 != (int *)0x0) {\n            *param_5 = iVar21;\n          }\n          puVar3 = (uint *)local_80[2];\n          uVar20 = *(uint *)(local_80 + 3);\n          goto joined_r0x0040ac44;\n        }\n      }\n      if (param_6 == 0) {\n        if (uVar7 == 0) goto LAB_0040a92f;\n        pbVar23 = *(byte **)(param_7 + 8);\n        pcVar11 = (char *)param_2[uVar16];\n        if (pcVar11[1] != '-') goto LAB_0040a8f1;\n      }\n      else {\n        pcVar11 = (char *)param_2[(int)uVar16];\n        if (pcVar11[1] != '-') {\n          pbVar23 = *(byte **)(param_7 + 8);\n          pcVar14 = strchr(local_98,(int)(char)*pbVar23);\n          uVar16 = uVar16 & 0xffffffff;\n          if (pcVar14 == (char *)0x0) {\n            if (uVar7 == 0) goto LAB_0040a92f;\nLAB_0040a8f1:\n            cVar6 = *pcVar11;\n            uVar4 = *param_2;\n            pcVar11 = (char *)dcgettext(0,\"%s: unrecognized option \\'%c%s\\'\\n\",5);\n            fprintf(stderr,pcVar11,uVar4,(ulong)(uint)(int)cVar6,pbVar23);\n            uVar16 = (ulong)*param_7;\n            goto LAB_0040a92f;\n          }\n          goto LAB_0040a178;\n        }\n        if (uVar7 == 0) goto LAB_0040a92f;\n        pbVar23 = *(byte **)(param_7 + 8);\n      }\n      uVar4 = *param_2;\n      pcVar11 = (char *)dcgettext(0,\"%s: unrecognized option \\'--%s\\'\\n\",5);\n      fprintf(stderr,pcVar11,uVar4,pbVar23);\n      uVar16 = (ulong)*param_7;\nLAB_0040a92f:\n      *(char **)(param_7 + 8) = \"\";\n      *param_7 = (int)uVar16 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n  }\nLAB_0040a178:\n  pbVar22 = pbVar23 + 1;\n  *(byte **)(param_7 + 8) = pbVar22;\n  bVar1 = *pbVar23;\n  uVar20 = (uint)(char)bVar1;\n  pcVar11 = strchr(local_98,uVar20);\n  if (pbVar23[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar1 - 0x3a) < 2) || (pcVar11 == (char *)0x0)) {\n    if (uVar7 != 0) {\n      uVar4 = *param_2;\n      pcVar11 = (char *)dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      fprintf(stderr,pcVar11,uVar4,(ulong)uVar20);\n    }\n    param_7[2] = uVar20;\n    return 0x3f;\n  }\n  if ((*pcVar11 != 'W') || (pcVar11[1] != ';')) {\n    if (pcVar11[1] == ':') {\n      if (pcVar11[2] == ':') {\n        if (pbVar23[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar22;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar10 = *param_7;\n        if (pbVar23[1] == 0) {\n          if (param_1 == uVar10) {\n            if (uVar7 != 0) {\n              uVar4 = *param_2;\n              pcVar11 = (char *)dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              fprintf(stderr,pcVar11,uVar4,(ulong)uVar20);\n            }\n            param_7[2] = uVar20;\n            uVar20 = (uint)(*local_98 != ':') * 5 + 0x3a;\n          }\n          else {\n            *param_7 = uVar10 + 1;\n            *(undefined8 *)(param_7 + 4) = param_2[(int)uVar10];\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar22;\n          *param_7 = uVar10 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar20;\n    }\n    return uVar20;\n  }\n  if (param_4 != (char **)0x0) {\n    uVar10 = *param_7;\n    if (pbVar23[1] == 0) {\n      if (param_1 == uVar10) {\n        if (uVar7 != 0) {\n          uVar4 = *param_2;\n          pcVar11 = (char *)dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n          fprintf(stderr,pcVar11,uVar4,(ulong)uVar20);\n        }\n        param_7[2] = uVar20;\n        return (uint)(*local_98 != ':') * 5 + 0x3a;\n      }\n      *param_7 = uVar10 + 1;\n      pbVar22 = (byte *)param_2[(int)uVar10];\n      *(byte **)(param_7 + 4) = pbVar22;\n    }\n    else {\n      *(byte **)(param_7 + 4) = pbVar22;\n      *param_7 = uVar10 + 1;\n    }\n    *(byte **)(param_7 + 8) = pbVar22;\n    bVar1 = *pbVar22;\n    pbVar23 = pbVar22;\n    while ((bVar1 != 0 && (bVar1 != 0x3d))) {\n      pbVar23 = pbVar23 + 1;\n      bVar1 = *pbVar23;\n    }\n    pcVar11 = *param_4;\n    if (pcVar11 != (char *)0x0) {\n      iVar21 = 0;\n      local_6c = 0;\n      ppcVar17 = (char **)0x0;\n      bVar25 = false;\n      do {\n        iVar8 = strncmp(pcVar11,(char *)pbVar22,(long)pbVar23 - (long)pbVar22);\n        ppcVar24 = ppcVar17;\n        iVar5 = local_6c;\n        bVar26 = bVar25;\n        if (iVar8 == 0) {\n          sVar12 = strlen(pcVar11);\n          if (((long)pbVar23 - (long)pbVar22 & 0xffffffffU) == sVar12) goto LAB_0040abfb;\n          ppcVar24 = param_4;\n          iVar5 = iVar21;\n          if (ppcVar17 != (char **)0x0) {\n            if (((param_6 == 0) && (*(int *)(ppcVar17 + 1) == *(int *)(param_4 + 1))) &&\n               (ppcVar17[2] == param_4[2])) {\n              ppcVar24 = ppcVar17;\n              iVar5 = local_6c;\n              bVar26 = true;\n              if (*(int *)(ppcVar17 + 3) == *(int *)(param_4 + 3)) {\n                bVar26 = bVar25;\n              }\n            }\n            else {\n              ppcVar24 = ppcVar17;\n              iVar5 = local_6c;\n              bVar26 = true;\n            }\n          }\n        }\n        local_6c = iVar5;\n        param_4 = param_4 + 4;\n        pcVar11 = *param_4;\n        iVar21 = iVar21 + 1;\n        ppcVar17 = ppcVar24;\n        bVar25 = bVar26;\n      } while (pcVar11 != (char *)0x0);\n      if (bVar26) {\n        if (uVar7 != 0) {\n          uVar4 = *param_2;\n          pcVar11 = (char *)dcgettext(0,\"%s: option \\'-W %s\\' is ambiguous\\n\",5);\n          fprintf(stderr,pcVar11,uVar4,pbVar22);\n          pbVar22 = *(byte **)(param_7 + 8);\n        }\n        sVar12 = strlen((char *)pbVar22);\n        *param_7 = *param_7 + 1;\n        *(byte **)(param_7 + 8) = pbVar22 + sVar12;\n        return 0x3f;\n      }\n      param_4 = ppcVar24;\n      iVar21 = local_6c;\n      if (ppcVar24 != (char **)0x0) {\nLAB_0040abfb:\n        local_6c = iVar21;\n        if (bVar1 == 0) {\n          if (*(int *)(param_4 + 1) == 1) {\n            uVar20 = *param_7;\n            if ((int)param_1 <= (int)uVar20) {\n              if (uVar7 != 0) {\n                uVar4 = *param_2;\n                pcVar11 = (char *)dcgettext(0,\"%s: option \\'-W %s\\' requires an argument\\n\",5);\n                fprintf(stderr,pcVar11,uVar4);\n              }\n              uVar16 = 0xffffffffffffffff;\n              pcVar11 = *(char **)(param_7 + 8);\n              do {\n                if (uVar16 == 0) break;\n                uVar16 = uVar16 - 1;\n                cVar6 = *pcVar11;\n                pcVar11 = pcVar11 + (ulong)bVar27 * -2 + 1;\n              } while (cVar6 != '\\0');\n              *(char **)(param_7 + 8) = *(char **)(param_7 + 8) + (~uVar16 - 1);\n              if (*local_98 != ':') {\n                return 0x3f;\n              }\n              return 0x3a;\n            }\n            *param_7 = uVar20 + 1;\n            *(undefined8 *)(param_7 + 4) = param_2[(int)uVar20];\n          }\n          else {\n            *(undefined8 *)(param_7 + 4) = 0;\n          }\n        }\n        else {\n          if (*(int *)(param_4 + 1) == 0) {\n            if (uVar7 != 0) {\n              pcVar11 = *param_4;\n              uVar4 = *param_2;\n              pcVar14 = (char *)dcgettext(0,\"%s: option \\'-W %s\\' doesn\\'t allow an argument\\n\",5);\n              fprintf(stderr,pcVar14,uVar4,pcVar11);\n              pbVar22 = *(byte **)(param_7 + 8);\n            }\n            sVar12 = strlen((char *)pbVar22);\n            *(byte **)(param_7 + 8) = pbVar22 + sVar12;\n            return 0x3f;\n          }\n          *(byte **)(param_7 + 4) = pbVar23 + 1;\n        }\n        sVar12 = strlen((char *)pbVar22);\n        *(byte **)(param_7 + 8) = pbVar22 + sVar12;\n        if (param_5 != (int *)0x0) {\n          *param_5 = local_6c;\n        }\n        puVar3 = (uint *)param_4[2];\n        uVar20 = *(uint *)(param_4 + 3);\njoined_r0x0040ac44:\n        if (puVar3 != (uint *)0x0) {\n          *puVar3 = uVar20;\n          return 0;\n        }\n        return uVar20;\n      }\n    }\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  return 0x57;\nLAB_0040a68f:\n  iVar21 = iVar21 + 1;\n  ppcVar17 = ppcVar17 + 4;\n  pbVar23 = *(byte **)(param_7 + 8);\n  goto LAB_0040a694;\n}\n\n",
            "funcName": "FUN_0040a030"
        },
        {
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b0c6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040b070(void)\n\n{\n  DAT_00612680 = DAT_0061233c;\n  _DAT_00612684 = DAT_00612338;\n  FUN_0040a030();\n  DAT_0061233c = DAT_00612680;\n  DAT_00612ec8 = DAT_00612690;\n  _DAT_00612334 = DAT_00612688;\n  return;\n}\n\n",
            "funcName": "FUN_0040b070"
        },
        {
            "funcStartAddr": "0x40b0d0",
            "funcEndAddr": "0x40b0e8",
            "decompiledFuncCode": "\nvoid FUN_0040b0d0(void)\n\n{\n  FUN_0040b070();\n  return;\n}\n\n",
            "funcName": "FUN_0040b0d0"
        },
        {
            "funcStartAddr": "0x40b0f0",
            "funcEndAddr": "0x40b103",
            "decompiledFuncCode": "\nvoid FUN_0040b0f0(void)\n\n{\n  FUN_0040b070();\n  return;\n}\n\n",
            "funcName": "FUN_0040b0f0"
        },
        {
            "funcStartAddr": "0x40b110",
            "funcEndAddr": "0x40b125",
            "decompiledFuncCode": "\nvoid FUN_0040b110(void)\n\n{\n  FUN_0040a030();\n  return;\n}\n\n",
            "funcName": "FUN_0040b110"
        },
        {
            "funcStartAddr": "0x40b130",
            "funcEndAddr": "0x40b146",
            "decompiledFuncCode": "\nvoid FUN_0040b130(void)\n\n{\n  FUN_0040b070();\n  return;\n}\n\n",
            "funcName": "FUN_0040b130"
        },
        {
            "funcStartAddr": "0x40b150",
            "funcEndAddr": "0x40b168",
            "decompiledFuncCode": "\nvoid FUN_0040b150(void)\n\n{\n  FUN_0040a030();\n  return;\n}\n\n",
            "funcName": "FUN_0040b150"
        },
        {
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b193",
            "decompiledFuncCode": "\nsize_t FUN_0040b170(wchar_t *param_1,char *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  size_t sVar1;\n  \n  if (param_2 == (char *)0x0) {\n    param_3 = 1;\n    param_2 = \"\";\n    param_1 = (wchar_t *)0x0;\n  }\n  else if (param_3 == 0) {\n    return 0xfffffffffffffffe;\n  }\n  sVar1 = mbrtowc(param_1,param_2,param_3,param_4);\n  return sVar1;\n}\n\n",
            "funcName": "FUN_0040b170"
        },
        {
            "funcStartAddr": "0x40b1a0",
            "funcEndAddr": "0x40b283",
            "decompiledFuncCode": "\nulong * FUN_0040b1a0(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_0040b1e0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_0040b1e0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040b1a0"
        },
        {
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b310",
            "decompiledFuncCode": "\nint FUN_0040b2b0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  long lVar3;\n  int *piVar4;\n  \n  lVar3 = __fpending();\n  iVar1 = ferror(param_1);\n  iVar2 = fclose(param_1);\n  if (iVar1 == 0) {\n    if (iVar2 == 0) {\n      return 0;\n    }\n    if (lVar3 == 0) {\n      piVar4 = __errno_location();\n      return -(uint)(*piVar4 != 9);\n    }\n  }\n  else if (iVar2 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return -1;\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_0040b2b0"
        },
        {
            "funcStartAddr": "0x40b320",
            "funcEndAddr": "0x40b874",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040b320(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_006126b8 != (char *)0x0) goto LAB_0040b35a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x74;\n    sVar5 = 0x66;\n    __n = 0x65;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040b445:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040b466;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040b445;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040b466:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040b500:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040b68c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040b500;\n              if (uVar4 == 0x23) goto LAB_0040b6f1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040b69f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                fclose(__stream);\n                goto LAB_0040b4a4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040b68c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040b69f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040b49e;\n    }\n  }\n  DAT_006126b8 = \"\";\nLAB_0040b35a:\n  cVar1 = *DAT_006126b8;\n  pcVar7 = DAT_006126b8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040b3b4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040b3b4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040b6f1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040b69f;\n  goto LAB_0040b500;\nLAB_0040b69f:\n  fclose(__stream);\n  if (local_d0 == 0) {\nLAB_0040b49e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040b4a4:\n  free(__file);\n  DAT_006126b8 = pcVar7;\n  goto LAB_0040b35a;\n}\n\n",
            "funcName": "FUN_0040b320"
        },
        {
            "funcStartAddr": "0x40b890",
            "funcEndAddr": "0x40b8fc",
            "decompiledFuncCode": "\nundefined8 * FUN_0040b890(ulong param_1)\n\n{\n  undefined8 uVar1;\n  undefined8 *puVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 < 0xfffffffffffffff0) {\n    puVar2 = (undefined8 *)malloc(param_1 + 0x10);\n    puVar3 = (undefined8 *)0x0;\n    if (puVar2 != (undefined8 *)0x0) {\n      puVar3 = puVar2 + 2;\n      *(undefined4 *)((long)puVar2 + 0xc) = 0x1415fb4a;\n      uVar1 = *(undefined8 *)(&DAT_006126c0 + ((ulong)puVar3 % 0x101) * 8);\n      *(undefined8 **)(&DAT_006126c0 + ((ulong)puVar3 % 0x101) * 8) = puVar3;\n      *puVar2 = uVar1;\n    }\n    return puVar3;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_0040b890"
        },
        {
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b978",
            "decompiledFuncCode": "\nvoid FUN_0040b900(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  undefined8 *puVar3;\n  \n  if ((param_1 != 0) && (*(int *)(param_1 - 4) == 0x1415fb4a)) {\n    uVar1 = *(ulong *)(&DAT_006126c0 + (param_1 % 0x101) * 8);\n    if (uVar1 != 0) {\n      if (uVar1 == param_1) {\n        puVar3 = (undefined8 *)(&DAT_006126c0 + (param_1 % 0x101) * 8);\n      }\n      else {\n        do {\n          uVar2 = uVar1;\n          uVar1 = *(ulong *)(uVar2 - 0x10);\n          if (uVar1 == 0) {\n            return;\n          }\n        } while (param_1 != uVar1);\n        puVar3 = (undefined8 *)(uVar2 - 0x10);\n      }\n      *puVar3 = *(undefined8 *)(param_1 - 0x10);\n      free((void *)(param_1 - 0x10));\n      return;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040b900"
        },
        {
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40b9af",
            "decompiledFuncCode": "\nuint FUN_0040b990(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n",
            "funcName": "FUN_0040b990"
        },
        {
            "funcStartAddr": "0x40b9c0",
            "funcEndAddr": "0x40ba11",
            "decompiledFuncCode": "\nvoid FUN_0040b9c0(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040b9c0"
        },
        {
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40ba37",
            "decompiledFuncCode": "\nuint FUN_0040ba20(byte param_1)\n\n{\n  return *(uint *)(&DAT_0040f520 + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n",
            "funcName": "FUN_0040ba20"
        },
        {
            "funcStartAddr": "0x40ba40",
            "funcEndAddr": "0x40bbf0",
            "decompiledFuncCode": "\nsize_t FUN_0040ba40(byte *param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  int iVar3;\n  size_t sVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  mbstate_t local_54;\n  undefined local_4c;\n  byte *local_48;\n  size_t local_40;\n  undefined local_38;\n  int local_34 [9];\n  \n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    sVar4 = strlen((char *)param_1);\n    return sVar4;\n  }\n  sVar4 = 0;\n  bVar1 = false;\n  local_54 = (mbstate_t)0x0;\n  local_48 = param_1;\n  do {\n    local_4c = 0;\n    if (bVar1) {\nLAB_0040bae7:\n      sVar5 = __ctype_get_mb_cur_max();\n      pbVar2 = local_48;\n      uVar6 = FUN_00409040(local_48,sVar5);\n      local_40 = FUN_0040b170(local_34,pbVar2,uVar6,&local_54);\n      if (local_40 == 0xffffffffffffffff) {\n        local_40 = 1;\n        local_38 = 0;\n      }\n      else {\n        if (local_40 != 0xfffffffffffffffe) {\n          if (local_40 == 0) {\n            local_40 = 1;\n            if (*local_48 != 0) {\n                    /* WARNING: Subroutine does not return */\n              __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"mbuiter.h\",0xb2,\"mbuiter_multi_next\");\n            }\n            if (local_34[0] != 0) {\n                    /* WARNING: Subroutine does not return */\n              __assert_fail(\"iter->cur.wc == 0\",\"mbuiter.h\",0xb3,\"mbuiter_multi_next\");\n            }\n          }\n          local_38 = 1;\n          iVar3 = mbsinit(&local_54);\n          if (iVar3 != 0) {\n            bVar1 = false;\n          }\n          goto LAB_0040bac6;\n        }\n        local_40 = strlen((char *)local_48);\n        local_38 = 0;\n      }\n    }\n    else {\n      if ((*(uint *)(&DAT_0040f520 + (ulong)(*local_48 >> 5) * 4) >> (*local_48 & 0x1f) & 1) == 0) {\n        iVar3 = mbsinit(&local_54);\n        if (iVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"mbsinit (&iter->state)\",\"mbuiter.h\",0x96,\"mbuiter_multi_next\");\n        }\n        bVar1 = true;\n        goto LAB_0040bae7;\n      }\n      local_40 = 1;\n      local_34[0] = (int)(char)*local_48;\n      local_38 = 1;\nLAB_0040bac6:\n      if (local_34[0] == 0) {\n        return sVar4;\n      }\n    }\n    local_48 = local_48 + local_40;\n    sVar4 = sVar4 + 1;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040ba40"
        },
        {
            "funcStartAddr": "0x40bc10",
            "funcEndAddr": "0x40bc6d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040bc43) */\n/* WARNING: Removing unreachable block (ram,0x0040bc48) */\n\nvoid FUN_0040bc10(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040bc10"
        },
        {
            "funcStartAddr": "0x40bc70",
            "funcEndAddr": "0x40bc71",
            "decompiledFuncCode": "\nvoid FUN_0040bc70(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040bc70"
        },
        {
            "funcStartAddr": "0x40bc80",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "\nvoid FUN_0040bc80(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_006122a8);\n  return;\n}\n\n",
            "funcName": "FUN_0040bc80"
        },
        {
            "funcStartAddr": "0x40bc98",
            "funcEndAddr": "0x40bcb8",
            "decompiledFuncCode": "\nundefined8 FUN_0040bc98(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00611e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040bc98"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}