{
    "funcCount": 112,
    "funcInfo": [
        {
            "funcStartAddr": "0x4018f5",
            "funcEndAddr": "0x4018fa",
            "decompiledFuncCode": "\nvoid FUN_004018f5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004018f5"
        },
        {
            "funcStartAddr": "0x4018fa",
            "funcEndAddr": "0x4018ff",
            "decompiledFuncCode": "\nvoid FUN_004018fa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004018fa"
        },
        {
            "funcStartAddr": "0x401909",
            "funcEndAddr": "0x40190e",
            "decompiledFuncCode": "\nvoid FUN_00401909(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401909"
        },
        {
            "funcStartAddr": "0x40190e",
            "funcEndAddr": "0x401913",
            "decompiledFuncCode": "\nvoid FUN_0040190e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040190e"
        },
        {
            "funcStartAddr": "0x401913",
            "funcEndAddr": "0x401918",
            "decompiledFuncCode": "\nvoid FUN_00401913(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401913"
        },
        {
            "funcStartAddr": "0x401918",
            "funcEndAddr": "0x40191d",
            "decompiledFuncCode": "\nvoid FUN_00401918(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401918"
        },
        {
            "funcStartAddr": "0x401930",
            "funcEndAddr": "0x40258d",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined4 FUN_00401930(int param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  ushort *puVar2;\n  long lVar3;\n  undefined8 *puVar4;\n  char cVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 *puVar10;\n  undefined4 *puVar11;\n  long lVar12;\n  ushort **ppuVar13;\n  __int32_t **pp_Var14;\n  size_t sVar15;\n  size_t sVar16;\n  undefined8 uVar17;\n  int *piVar18;\n  undefined **ppuVar19;\n  long lVar20;\n  ushort *puVar21;\n  ulong uVar22;\n  long *plVar23;\n  long *plVar24;\n  FILE *pFVar25;\n  char *pcVar26;\n  undefined uVar27;\n  int unaff_R15D;\n  bool bVar28;\n  char cVar29;\n  byte bVar30;\n  undefined auVar31 [16];\n  int *local_208;\n  long *local_200;\n  uint *local_1f8;\n  undefined8 *local_1f0;\n  ulong local_1e8;\n  long local_1e0;\n  long local_1d8;\n  int local_1cc;\n  int local_1bc;\n  long local_1b8;\n  long local_1b0;\n  long local_1a8;\n  undefined8 *local_1a0;\n  long local_198;\n  char local_187;\n  long local_178;\n  long local_170;\n  char acStack_148 [16];\n  undefined8 local_138 [33];\n  \n  bVar30 = 0;\n  uVar22 = (ulong)param_1;\n  FUN_00403f40(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00407e60(FUN_00403e60);\n  do {\n    while( true ) {\n      ppuVar19 = &PTR_s_complement_004082c0;\n      iVar6 = FUN_004075a0(uVar22 & 0xffffffff,param_2,\"+cCdst\",&PTR_s_complement_004082c0,0);\n      if (iVar6 != -1) break;\n      ppuVar19 = (undefined **)(ulong)DAT_0060d27c;\n      unaff_R15D = (int)uVar22 - DAT_0060d27c;\n      if (unaff_R15D == 2) {\n        if (DAT_0060f5c3 == 0) {\n          DAT_0060f5c0 = '\\x01';\n          iVar6 = 2;\n          if (DAT_0060f5c4 != 0) goto LAB_00401a94;\n        }\n        else {\n          DAT_0060f5c0 = '\\0';\n          if (DAT_0060f5c4 == 0) goto LAB_00401a7f;\n        }\n        local_1b8 = FUN_00406180(0x20);\n        *(undefined8 *)(local_1b8 + 8) = 0;\n        local_1b0 = local_1b8;\n        cVar5 = FUN_00403010(param_2[(int)DAT_0060d27c],&local_1b8);\n        if (cVar5 == '\\0') {\n          return 1;\n        }\nLAB_00401ea7:\n        local_178 = FUN_00406180(0x20);\n        local_170 = local_178;\n        *(undefined8 *)(local_178 + 8) = 0;\n        cVar5 = FUN_00403010(param_2[(long)(int)DAT_0060d27c + 1],&local_178);\n        if (cVar5 == '\\0') {\n          return 1;\n        }\n        plVar23 = &local_178;\nLAB_00401ae5:\n        plVar24 = &local_1b8;\n        FUN_00402a40(plVar24);\n        if (DAT_0060f5c2 != '\\0') {\n          local_1a8 = -2;\n          iVar6 = 0x100;\n          puVar10 = local_138;\n          for (ppuVar19 = (undefined **)&DAT_00000020; (FILE *)ppuVar19 != (FILE *)0x0;\n              ppuVar19 = (undefined **)(((FILE *)((long)ppuVar19 + -0xd8))->_unused2 + 0x13)) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + (ulong)bVar30 * -2 + 1;\n          }\n          while (iVar9 = FUN_00402bc0(plVar24,0), iVar9 != -1) {\n            bVar1 = *(byte *)((long)local_138 + (long)iVar9);\n            *(undefined *)((long)local_138 + (long)iVar9) = 1;\n            iVar6 = iVar6 - (uint)(bVar1 ^ 1);\n          }\n          param_2 = (undefined8 *)(long)iVar6;\n          local_1a0 = param_2;\n        }\n        lVar12 = local_198;\n        puVar10 = local_1a0;\n        if (local_198 != 0) {\nLAB_004024d7:\n          uVar17 = dcgettext(0,\"the [c*] repeat construct may not appear in string1\",5);\n          error(1,0,uVar17);\nLAB_004024f9:\n          uVar17 = dcgettext(0,\n                             \"when translating, the only character classes that may appear in\\nstring2 are \\'upper\\' and \\'lower\\'\"\n                             ,5);\n          error(1,0,uVar17);\nLAB_0040251b:\n          uVar17 = dcgettext(0,\"[=c=] expressions may not appear in string2 when translating\",5);\n          error(1,0,uVar17);\nLAB_0040253d:\n          uVar17 = dcgettext(0,\"when not truncating set1, string2 must be non-empty\",5);\n          error(1,0,uVar17);\nLAB_0040255f:\n          FUN_00402f90();\n          goto LAB_00402564;\n        }\n        if (plVar23 != (long *)0x0) {\n          FUN_00402a40(plVar23);\n          if ((puVar10 < (undefined8 *)plVar23[3]) || (plVar23[4] != 1)) {\n            if (1 < (ulong)plVar23[4]) goto LAB_00402318;\n            if (DAT_0060f5c0 != '\\0') goto LAB_00401f77;\n            param_2 = puVar10;\n            if (plVar23[4] != 0) goto LAB_00401b56;\n          }\n          else {\n            ppuVar19 = (undefined **)((long)puVar10 - (long)(undefined8 *)plVar23[3]);\n            bVar28 = DAT_0060f5c0 != '\\0';\n            *(undefined ***)(plVar23[5] + 0x18) = ppuVar19;\n            plVar23[3] = (long)puVar10;\n            if (bVar28) {\nLAB_00401f77:\n              if (*(char *)(plVar23 + 6) != '\\0') goto LAB_0040251b;\n              if (*(char *)((long)plVar23 + 0x32) != '\\0') goto LAB_004024f9;\n              cVar5 = *(char *)((long)plVar23 + 0x31);\n              if (cVar5 != '\\0') {\n                ppuVar13 = __ctype_b_loc();\n                lVar20 = 0;\n                puVar21 = *ppuVar13;\n                puVar2 = puVar21 + 0x100;\n                do {\n                  lVar12 = (lVar12 + 1) - (ulong)((*puVar21 & 0x100) == 0);\n                  lVar20 = (lVar20 + 1) - (ulong)((*puVar21 & 0x200) == 0);\n                  puVar21 = puVar21 + 1;\n                } while (puVar21 != puVar2);\n                local_1f8 = (uint *)local_138;\n                local_1f0 = local_1a0;\n                local_1e8 = plVar23[3];\n                local_1e0 = local_1b0;\n                local_1d8 = plVar23[1];\n                plVar23[2] = -2;\n                local_1a8 = -2;\n                local_208 = &local_1bc;\n                local_200 = plVar24;\n                local_1cc = unaff_R15D;\n                cVar29 = cVar5;\n                do {\n                  iVar6 = FUN_00402bc0(local_200,local_208);\n                  iVar9 = FUN_00402bc0(plVar23,local_1f8);\n                  uVar7 = (uint)local_138[0];\n                  ppuVar19 = (undefined **)(ulong)(uint)local_138[0];\n                  if (cVar5 == '\\0') {\n                    if ((uint)local_138[0] != 2) {\nLAB_0040205f:\n                      local_1b0 = *(long *)(local_1b0 + 8);\n                      local_1a8 = -1;\n                      lVar3 = *(long *)(plVar23[1] + 8);\n                      plVar23[2] = -1;\n                      plVar23[1] = lVar3;\n                      pFVar25 = (FILE *)(lVar20 + -1);\n                      if (local_1bc == 1) {\n                        pFVar25 = (FILE *)(lVar12 + -1);\n                      }\n                      local_1a0 = (undefined8 *)((long)local_1a0 - (long)pFVar25);\n                      ppuVar19 = (undefined **)(FILE *)(lVar12 + -1);\n                      if (uVar7 != 1) {\n                        ppuVar19 = (undefined **)(FILE *)(lVar20 + -1);\n                      }\n                      plVar23[3] = plVar23[3] - (long)ppuVar19;\n                    }\n                  }\n                  else if ((uint)local_138[0] != 2) {\n                    if ((cVar29 == '\\0') || (local_1bc == 2)) {\n                      uVar17 = dcgettext(0,\"misaligned [:upper:] and/or [:lower:] construct\",5);\n                      auVar31 = error(1,0,uVar17);\n                      piVar18 = local_208;\n                      local_208 = SUB168(auVar31,0);\n                      (*(code *)PTR___libc_start_main_0060cff0)\n                                (FUN_00401930,piVar18,&local_200,FUN_00407df0,FUN_00407e50,\n                                 SUB168(auVar31 >> 0x40,0),&local_208);\n                      do {\n                    /* WARNING: Do nothing block with infinite loop */\n                      } while( true );\n                    }\n                    goto LAB_0040205f;\n                  }\n                  cVar29 = local_1a8 == -1;\n                  cVar5 = plVar23[2] == -1;\n                  puVar10 = (undefined8 *)(ulong)(iVar6 + 1U);\n                } while ((iVar6 + 1U != 0) && (iVar9 != -1));\n                if ((local_1f0 < local_1a0) || (local_1e8 < (ulong)plVar23[3])) {\n                    /* WARNING: Subroutine does not return */\n                  __assert_fail(\"old_s1_len >= s1->length && old_s2_len >= s2->length\",\"src/tr.c\",\n                                0x4c5,\"validate_case_classes\");\n                }\n                local_1b0 = local_1e0;\n                plVar23[1] = local_1d8;\n                plVar24 = local_200;\n                unaff_R15D = local_1cc;\n              }\n              puVar4 = (undefined8 *)plVar23[3];\n              auVar31 = CONCAT88(puVar4,local_1a0);\n              if ((local_1a0 <= puVar4) || (DAT_0060f5c1 != '\\0')) goto LAB_00401bc1;\n              if (puVar4 != (undefined8 *)0x0) {\n                ppuVar19 = (undefined **)plVar23[1];\n                switch(*(int *)ppuVar19) {\n                case 0:\n                case 4:\n                  goto switchD_00402185_caseD_0;\n                case 1:\n                  uVar27 = *(undefined *)((long)((long)ppuVar19 + 0x10) + 1);\n                  goto LAB_00401b7d;\n                case 2:\n                  goto switchD_00402185_caseD_2;\n                default:\n                    /* WARNING: Subroutine does not return */\n                  abort();\n                }\n              }\n              goto LAB_0040253d;\n            }\nLAB_00401b56:\n            uVar17 = dcgettext(0,\"the [c*] construct may appear in string2 only when translating\",5)\n            ;\n            auVar31 = error(1,0,uVar17);\nswitchD_00402185_caseD_0:\n            uVar27 = *(undefined *)((long)ppuVar19 + 0x10);\nLAB_00401b7d:\n            puVar10 = (undefined8 *)(SUB168(auVar31,0) - SUB168(auVar31 >> 0x40,0));\n            puVar11 = (undefined4 *)FUN_00406180(0x20);\n            lVar12 = plVar23[1];\n            *(undefined8 *)(puVar11 + 2) = 0;\n            *puVar11 = 4;\n            *(undefined *)(puVar11 + 4) = uVar27;\n            *(undefined8 **)(puVar11 + 6) = puVar10;\n            if (lVar12 == 0) goto LAB_0040255f;\n            *(undefined4 **)(lVar12 + 8) = puVar11;\n            plVar23[1] = (long)puVar11;\n            plVar23[3] = (long)local_1a0;\nLAB_00401bc1:\n            param_2 = puVar10;\n            if ((DAT_0060f5c2 != '\\0') && (local_187 != '\\0')) {\n              if ((undefined8 *)plVar23[3] == local_1a0) {\n                plVar23[2] = -2;\n                uVar7 = FUN_00402bc0(plVar23,0);\n                param_2 = (undefined8 *)(ulong)uVar7;\n                if (uVar7 != 0xffffffff) {\n                  do {\n                    uVar8 = FUN_00402bc0(plVar23,0);\n                    if (uVar8 == 0xffffffff) goto LAB_00401c1a;\n                  } while (uVar7 == uVar8);\n                }\n              }\n              uVar17 = dcgettext(0,\n                                 \"when translating with complemented character classes,\\nstring2 must map all characters in the domain to one\"\n                                 ,5);\n              error(1,0,uVar17);\n              goto LAB_00402311;\n            }\n          }\n        }\nLAB_00401c1a:\n        FUN_00403f10(stdin,2);\n        bVar1 = DAT_0060f5c4;\n        if ((unaff_R15D == 1) && (DAT_0060f5c4 != 0)) {\n          FUN_00403860(plVar24,DAT_0060f5c2,&DAT_0060d4c0);\n          FUN_004038c0();\nLAB_00401c5c:\n          iVar6 = close(0);\n          puVar10 = param_2;\n          if (iVar6 == 0) {\n            return 0;\n          }\n          goto LAB_0040233a;\n        }\n        if (DAT_0060f5c3 == 0) {\nLAB_00401cca:\n          if (DAT_0060f5c0 != '\\0') {\n            lVar12 = 0;\n            if (DAT_0060f5c2 == '\\0') {\n              do {\n                (&DAT_0060d2c0)[lVar12] = (char)lVar12;\n                lVar12 = lVar12 + 1;\n              } while (lVar12 != 0x100);\n              param_2 = local_138;\n              local_1a8 = -2;\n              plVar23[2] = -2;\n              local_208 = &local_1bc;\nLAB_00401d4f:\n              iVar6 = FUN_00402bc0(plVar24,local_208);\n              iVar9 = FUN_00402bc0(plVar23,param_2);\n              if (local_1bc == 0) {\n                if ((uint)local_138[0] != 1) goto LAB_00401d2b;\n                ppuVar13 = __ctype_b_loc();\n                lVar12 = 0;\n                puVar2 = *ppuVar13;\n                do {\n                  if ((*(byte *)((long)puVar2 + lVar12 * 2 + 1) & 2) != 0) {\n                    pp_Var14 = __ctype_toupper_loc();\n                    (&DAT_0060d2c0)[lVar12] = (char)(*pp_Var14)[lVar12];\n                  }\n                  lVar12 = lVar12 + 1;\n                } while (lVar12 != 0x100);\n                goto LAB_00401db8;\n              }\n              if ((local_1bc == 1) && ((uint)local_138[0] == 0)) {\n                ppuVar13 = __ctype_b_loc();\n                lVar12 = 0;\n                puVar2 = *ppuVar13;\n                do {\n                  if ((*(byte *)((long)puVar2 + lVar12 * 2 + 1) & 1) != 0) {\n                    pp_Var14 = __ctype_tolower_loc();\n                    (&DAT_0060d2c0)[lVar12] = (char)(*pp_Var14)[lVar12];\n                  }\n                  lVar12 = lVar12 + 1;\n                } while (lVar12 != 0x100);\n                goto LAB_00401db8;\n              }\nLAB_00401d2b:\n              if ((iVar6 != -1) && (iVar9 != -1)) goto code_r0x00401d3e;\n              unaff_R15D = iVar6 + 1;\n              if ((unaff_R15D != 0) && (DAT_0060f5c1 == '\\0')) {\nLAB_00402564:\n                    /* WARNING: Subroutine does not return */\n                __assert_fail(\"c1 == -1 || truncate_set1\",\"src/tr.c\",0x75c,\"main\");\n              }\n            }\n            else {\n              FUN_00403860(plVar24,0,&DAT_0060d3c0);\n              plVar23[2] = -2;\n              lVar12 = 0;\n              do {\n                (&DAT_0060d2c0)[lVar12] = (char)lVar12;\n                lVar12 = lVar12 + 1;\n              } while (lVar12 != 0x100);\n              lVar12 = 0;\n              do {\n                if ((&DAT_0060d3c0)[lVar12] == '\\0') {\n                  iVar6 = FUN_00402bc0(plVar23,0);\n                  if (iVar6 == -1) {\n                    if (DAT_0060f5c1 == '\\0') {\n                    /* WARNING: Subroutine does not return */\n                      __assert_fail(\"ch != -1 || truncate_set1\",\"src/tr.c\",0x727,\"main\");\n                    }\n                    break;\n                  }\n                  (&DAT_0060d2c0)[lVar12] = (char)iVar6;\n                }\n                lVar12 = lVar12 + 1;\n              } while (lVar12 != 0x100);\n            }\n            if (bVar1 == 0) {\n              while (sVar16 = FUN_00402f40(&DAT_0060d5c0,0x2000), sVar16 != 0) {\n                ppuVar19 = (undefined **)stdout;\n                sVar15 = fwrite_unlocked(&DAT_0060d5c0,1,sVar16,stdout);\n                if (sVar16 != sVar15) {\n                  uVar17 = dcgettext(0,\"write error\",5);\n                  piVar18 = __errno_location();\n                  error(1,*piVar18,uVar17);\n                  goto LAB_004024d7;\n                }\n              }\n            }\n            else {\n              FUN_00403860(plVar23,0,&DAT_0060d4c0);\n              FUN_004038c0();\n            }\n          }\n          goto LAB_00401c5c;\n        }\n        if (unaff_R15D != 1) {\n          if ((unaff_R15D == 2) && (DAT_0060f5c4 != 0)) {\n            FUN_00403860(plVar24,DAT_0060f5c2,&DAT_0060d3c0);\n            FUN_00403860(plVar23,0,&DAT_0060d4c0);\n            FUN_004038c0();\n            goto LAB_00401c5c;\n          }\n          goto LAB_00401cca;\n        }\n        FUN_00403860(plVar24,DAT_0060f5c2,&DAT_0060d3c0);\n        do {\n          sVar16 = FUN_00402e70(&DAT_0060d5c0,0x2000);\n          if (sVar16 == 0) goto LAB_00401c5c;\n          ppuVar19 = (undefined **)stdout;\n          sVar15 = fwrite_unlocked(&DAT_0060d5c0,1,sVar16,stdout);\n          uVar7 = (uint)ppuVar19;\n        } while (sVar16 == sVar15);\nLAB_00402386:\n        uVar17 = dcgettext(0,\"write error\",5);\n        piVar18 = __errno_location();\n        iVar6 = error(1,*piVar18,uVar17);\nLAB_004023b0:\n        uVar22 = FUN_00405b60(param_2[(int)(iVar6 + uVar7)]);\n        uVar17 = dcgettext(0,\"extra operand %s\",5);\n        error(0,0,uVar17,uVar22);\n        if (unaff_R15D == 2) {\n          pcVar26 = \"Only one string may be given when deleting without squeezing repeats.\";\nLAB_004023f6:\n          uVar17 = dcgettext(0,pcVar26,5);\n          __fprintf_chk(stderr,1,\"%s\\n\",uVar17);\n        }\n      }\n      else {\n        if (DAT_0060f5c4 == DAT_0060f5c3) {\n          iVar9 = 2;\n          iVar6 = 2;\n        }\n        else {\nLAB_00401a7f:\n          iVar9 = 1;\n          iVar6 = 2 - (uint)(DAT_0060f5c4 < DAT_0060f5c3);\n        }\n        DAT_0060f5c0 = '\\0';\n        if (iVar9 <= unaff_R15D) {\nLAB_00401a94:\n          uVar7 = DAT_0060d27c;\n          if (unaff_R15D <= iVar6) {\n            local_1b8 = FUN_00406180(0x20);\n            *(undefined8 *)(local_1b8 + 8) = 0;\n            local_1b0 = local_1b8;\n            cVar5 = FUN_00403010(param_2[(int)DAT_0060d27c],&local_1b8);\n            if (cVar5 == '\\0') {\n              return 1;\n            }\n            plVar23 = (long *)0x0;\n            if (unaff_R15D == 2) goto LAB_00401ea7;\n            goto LAB_00401ae5;\n          }\n          goto LAB_004023b0;\n        }\n        if (unaff_R15D != 0) {\n          uVar22 = FUN_00405b60(param_2[uVar22 - 1]);\n          uVar17 = dcgettext(0,\"missing operand after %s\",5);\n          error(0,0,uVar17,uVar22);\n          pcVar26 = \"Two strings must be given when both deleting and squeezing repeats.\";\n          if (DAT_0060f5c4 == 0) {\n            pcVar26 = \"Two strings must be given when translating.\";\n          }\n          goto LAB_004023f6;\n        }\n        uVar17 = dcgettext(0,\"missing operand\",5);\n        error(0,0,uVar17);\n      }\nLAB_00401a15:\n      FUN_00403ac0(1);\nLAB_00401a20:\n      DAT_0060f5c2 = '\\x01';\n    }\n    if (iVar6 == 99) goto LAB_00401a20;\n    if (iVar6 < 100) {\n      if (iVar6 != -0x82) {\n        if (iVar6 != 0x43) {\n          if (iVar6 == -0x83) {\n            FUN_00406040(stdout,&DAT_00407f4e,\"GNU coreutils\",PTR_DAT_0060d210,\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n            exit(0);\n          }\n          goto LAB_00401a15;\n        }\n        goto LAB_00401a20;\n      }\nLAB_00402311:\n      FUN_00403ac0(0);\n      puVar10 = param_2;\nLAB_00402318:\n      uVar17 = dcgettext(0,\"only one [c*] repeat construct may appear in string2\",5);\n      error(1,0,uVar17);\nLAB_0040233a:\n      uVar17 = dcgettext(0,\"standard input\",5);\n      piVar18 = __errno_location();\n      error(1,*piVar18,uVar17);\nswitchD_00402185_caseD_2:\n      uVar7 = (uint)ppuVar19;\n      uVar17 = dcgettext(0,\n                         \"when translating with string1 longer than string2,\\nthe latter string must not end with a character class\"\n                         ,5);\n      error(1,0,uVar17);\n      param_2 = puVar10;\n      goto LAB_00402386;\n    }\n    if (iVar6 == 0x73) {\n      DAT_0060f5c4 = 1;\n    }\n    else if (iVar6 == 0x74) {\n      DAT_0060f5c1 = '\\x01';\n    }\n    else {\n      if (iVar6 != 100) goto LAB_00401a15;\n      DAT_0060f5c3 = 1;\n    }\n  } while( true );\ncode_r0x00401d3e:\n  (&DAT_0060d2c0)[iVar6] = (char)iVar9;\n  if ((uint)local_138[0] != 2) {\nLAB_00401db8:\n    local_1b0 = *(long *)(local_1b0 + 8);\n    local_1a8 = -1;\n    lVar12 = *(long *)(plVar23[1] + 8);\n    plVar23[2] = -1;\n    plVar23[1] = lVar12;\n  }\n  goto LAB_00401d4f;\n}\n\n",
            "funcName": "FUN_00401930"
        },
        {
            "funcStartAddr": "0x4025a0",
            "funcEndAddr": "0x4025cb",
            "decompiledFuncCode": "\nvoid FUN_004025a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060cff0)\n            (FUN_00401930,unaff_retaddr,&stack0x00000008,FUN_00407df0,FUN_00407e50,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_004025a0"
        },
        {
            "funcStartAddr": "0x4025cb",
            "funcEndAddr": "0x4025ea",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004025d8) */\n/* WARNING: Removing unreachable block (ram,0x004025e2) */\n\nvoid FUN_004025cb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004025cb"
        },
        {
            "funcStartAddr": "0x4025ea",
            "funcEndAddr": "0x402621",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402619) */\n\nvoid FUN_004025ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004025ea"
        },
        {
            "funcStartAddr": "0x402621",
            "funcEndAddr": "0x402678",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402656) */\n\nvoid FUN_00402621(void)\n\n{\n  if (DAT_0060d2a8 != '\\0') {\n    return;\n  }\n  FUN_004025cb();\n  DAT_0060d2a8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402621"
        },
        {
            "funcStartAddr": "0x402678",
            "funcEndAddr": "0x40267d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402619) */\n\nvoid thunk_FUN_004025ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402678"
        },
        {
            "funcStartAddr": "0x402680",
            "funcEndAddr": "0x4026f6",
            "decompiledFuncCode": "\nbyte FUN_00402680(long *param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  byte bVar3;\n  ulong uVar4;\n  byte bVar5;\n  \n  lVar1 = *param_1;\n  if ((*(char *)(lVar1 + param_2) == '*') &&\n     (lVar2 = param_1[1], *(char *)(lVar2 + param_2) == '\\0')) {\n    uVar4 = param_2 + 1;\n    if (uVar4 < (ulong)param_1[2]) {\n      bVar5 = *(byte *)(lVar1 + 1 + param_2);\n      if (bVar5 - 0x30 < 10) {\n        bVar3 = *(byte *)(lVar2 + 1 + param_2);\n        if (bVar3 != 0) {\n          return 0;\n        }\n        while( true ) {\n          uVar4 = uVar4 + 1;\n          if ((ulong)param_1[2] <= uVar4) {\n            return bVar3;\n          }\n          bVar5 = *(byte *)(lVar1 + uVar4);\n          if (9 < bVar5 - 0x30) break;\n          if (*(char *)(lVar2 + uVar4) != '\\0') {\n            return bVar3;\n          }\n        }\n      }\n      if (bVar5 == 0x5d) {\n        return *(byte *)(lVar2 + uVar4) ^ 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00402680"
        },
        {
            "funcStartAddr": "0x402710",
            "funcEndAddr": "0x40276c",
            "decompiledFuncCode": "\nbyte * FUN_00402710(byte param_1)\n\n{\n  byte *pbVar1;\n  ushort **ppuVar2;\n  \n  pbVar1 = (byte *)FUN_00406180(5);\n  ppuVar2 = __ctype_b_loc();\n  if ((*(byte *)((long)*ppuVar2 + (ulong)param_1 * 2 + 1) & 0x40) != 0) {\n    *pbVar1 = param_1;\n    pbVar1[1] = 0;\n    return pbVar1;\n  }\n  __sprintf_chk(pbVar1,1,5,\"\\\\%03o\",param_1);\n  return pbVar1;\n}\n\n",
            "funcName": "FUN_00402710"
        },
        {
            "funcStartAddr": "0x402780",
            "funcEndAddr": "0x402898",
            "decompiledFuncCode": "\nchar * FUN_00402780(byte *param_1,long param_2)\n\n{\n  byte bVar1;\n  char *pcVar2;\n  char *__dest;\n  ushort **ppuVar3;\n  byte *__src;\n  byte *pbVar4;\n  byte local_2d;\n  undefined local_2c;\n  \n  if (((long)((param_2 + 1U) * 4) < 0) || (param_2 + 1U >> 0x3e != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063d0();\n  }\n  pcVar2 = (char *)FUN_00406180();\n  if (param_2 != 0) {\n    pbVar4 = param_1 + param_2;\n    __dest = pcVar2;\n    do {\n      bVar1 = *param_1;\n      if (bVar1 == 10) {\n        __src = &DAT_00407ed2;\n      }\n      else if ((char)bVar1 < '\\v') {\n        __src = &DAT_00407ecc;\n        if (((bVar1 != 8) && (__src = &DAT_00407ed8, (char)bVar1 < '\\t')) &&\n           (__src = &DAT_00407ede, bVar1 != 7)) {\nLAB_0040282f:\n          ppuVar3 = __ctype_b_loc();\n          if ((*(byte *)((long)*ppuVar3 + (ulong)bVar1 * 2 + 1) & 0x40) == 0) {\n            __sprintf_chk(&local_2d,1,5,\"\\\\%03o\",bVar1);\n            __src = &local_2d;\n          }\n          else {\n            __src = &local_2d;\n            local_2c = 0;\n            local_2d = bVar1;\n          }\n        }\n      }\n      else {\n        __src = &DAT_00407ecf;\n        if ((((bVar1 != 0xc) && (__src = &DAT_00407edb, '\\v' < (char)bVar1)) &&\n            (__src = &DAT_00407ed5, bVar1 != 0xd)) && (__src = &DAT_00407eca, bVar1 != 0x5c))\n        goto LAB_0040282f;\n      }\n      param_1 = param_1 + 1;\n      __dest = stpcpy(__dest,(char *)__src);\n    } while (pbVar4 != param_1);\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402780"
        },
        {
            "funcStartAddr": "0x4028b0",
            "funcEndAddr": "0x4029f8",
            "decompiledFuncCode": "\nushort FUN_004028b0(undefined4 param_1,uint param_2)\n\n{\n  ushort uVar1;\n  ushort **ppuVar2;\n  \n  switch(param_1) {\n  case 0:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 8;\n    break;\n  case 1:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x400;\n    break;\n  case 2:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 1;\n    break;\n  case 3:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 2;\n    break;\n  case 4:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x800;\n    break;\n  case 5:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x8000;\n    break;\n  case 6:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x200;\n    break;\n  case 7:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x4000;\n    break;\n  case 8:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 4;\n    break;\n  case 9:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x2000;\n    break;\n  case 10:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x100;\n    break;\n  case 0xb:\n    ppuVar2 = __ctype_b_loc();\n    uVar1 = (*ppuVar2)[param_2 & 0xff] & 0x1000;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  return uVar1 & 0xff00 | (ushort)(uVar1 != 0);\n}\n\n",
            "funcName": "FUN_004028b0"
        },
        {
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ba6",
            "decompiledFuncCode": "\nvoid FUN_00402a40(long *param_1)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  char cVar3;\n  int iVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  bool bVar8;\n  \n  uVar7 = 0;\n  *(undefined2 *)(param_1 + 6) = 0;\n  param_1[4] = 0;\n  puVar2 = *(uint **)(*param_1 + 8);\n  *(undefined *)((long)param_1 + 0x32) = 0;\n  do {\n    if (puVar2 == (uint *)0x0) {\n      param_1[3] = uVar7;\n      return;\n    }\n    if (4 < *puVar2) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    switch(*puVar2) {\n    case 0:\n      uVar6 = 1;\n      break;\n    case 1:\n      if (*(byte *)((long)puVar2 + 0x11) < *(byte *)(puVar2 + 4)) goto LAB_00402ba7;\n      uVar6 = (ulong)(int)(((uint)*(byte *)((long)puVar2 + 0x11) - (uint)*(byte *)(puVar2 + 4)) + 1)\n      ;\n      break;\n    case 2:\n      *(undefined *)((long)param_1 + 0x31) = 1;\n      uVar1 = puVar2[4];\n      iVar4 = 0;\n      uVar6 = 0;\n      do {\n        cVar3 = FUN_004028b0(uVar1,iVar4);\n        uVar6 = (uVar6 + 1) - (ulong)(cVar3 == '\\0');\n        iVar4 = iVar4 + 1;\n      } while (iVar4 != 0x100);\n      if ((uVar1 != 6) && (uVar1 != 10)) {\n        *(undefined *)((long)param_1 + 0x32) = 1;\n      }\n      break;\n    case 3:\n      iVar4 = 0;\n      uVar6 = 0;\n      do {\n        cVar3 = (char)iVar4;\n        iVar4 = iVar4 + 1;\n        uVar6 = uVar6 + (*(char *)(puVar2 + 4) == cVar3);\n      } while (iVar4 != 0x100);\n      *(undefined *)(param_1 + 6) = 1;\n      break;\n    case 4:\n      uVar6 = *(ulong *)(puVar2 + 6);\n      if (uVar6 != 0) break;\n      param_1[5] = (long)puVar2;\n      param_1[4] = param_1[4] + 1;\n      goto LAB_00402ad0;\n    }\n    bVar8 = CARRY8(uVar6,uVar7);\n    uVar7 = uVar6 + uVar7;\n    if ((bVar8) || (uVar7 == 0xffffffffffffffff)) {\n      uVar5 = dcgettext(0,\"too many characters in set\",5);\n      error(1,0,uVar5);\nLAB_00402ba7:\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"p->u.range.last_char >= p->u.range.first_char\",\"src/tr.c\",0x4ee,\n                    \"get_spec_stats\");\n    }\nLAB_00402ad0:\n    puVar2 = *(uint **)(puVar2 + 2);\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402a40"
        },
        {
            "funcStartAddr": "0x402bc0",
            "funcEndAddr": "0x402dc8",
            "decompiledFuncCode": "\nulong FUN_00402bc0(long *param_1,undefined4 *param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  char cVar3;\n  long lVar4;\n  long lVar5;\n  uint uVar6;\n  int iVar7;\n  ulong uVar8;\n  uint *puVar9;\n  ulong uVar10;\n  \n  lVar4 = param_1[2];\nLAB_00402bd6:\n  if (param_2 != (undefined4 *)0x0) {\n    *param_2 = 2;\n  }\n  if (lVar4 == -2) {\n    puVar9 = *(uint **)(*param_1 + 8);\n    param_1[2] = -1;\n    param_1[1] = (long)puVar9;\n  }\n  else {\n    puVar9 = (uint *)param_1[1];\n  }\n  if (puVar9 == (uint *)0x0) {\n    return 0xffffffff;\n  }\n  if (4 < *puVar9) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  switch(*puVar9) {\n  default:\n    lVar4 = *(long *)(puVar9 + 2);\n    bVar1 = *(byte *)(puVar9 + 4);\n    param_1[2] = -1;\n    param_1[1] = lVar4;\n    return (ulong)bVar1;\n  case 1:\n    uVar8 = param_1[2] + 1;\n    if (param_1[2] == -1) {\n      uVar8 = (ulong)*(byte *)(puVar9 + 4);\n    }\n    bVar1 = *(byte *)((long)puVar9 + 0x11);\n    param_1[2] = uVar8;\n    uVar10 = uVar8 & 0xffffffff;\n    if (bVar1 != uVar8) {\n      return uVar10;\n    }\n    goto LAB_00402d06;\n  case 2:\n    uVar2 = puVar9[4];\n    if (param_2 != (undefined4 *)0x0) {\n      if (uVar2 == 6) {\n        *param_2 = 0;\n      }\n      else if (uVar2 == 10) {\n        *param_2 = 1;\n      }\n    }\n    uVar8 = param_1[2];\n    if (uVar8 == 0xffffffffffffffff) {\n      iVar7 = 0;\n      while (cVar3 = FUN_004028b0(uVar2,iVar7), cVar3 == '\\0') {\n        iVar7 = iVar7 + 1;\n        if (iVar7 == 0x100) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"i < N_CHARS\",\"src/tr.c\",0x434,\"get_next\");\n        }\n      }\n      uVar8 = (ulong)iVar7;\n      param_1[2] = uVar8;\n    }\n    cVar3 = FUN_004028b0(uVar2,uVar8 & 0xff);\n    if (cVar3 == '\\0') {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"is_char_class_member (p->u.char_class, s->state)\",\"src/tr.c\",0x437,\"get_next\");\n    }\n    uVar10 = uVar8 & 0xffffffff;\n    uVar6 = (int)uVar8 + 1;\n    if ((int)uVar6 < 0x100) {\n      do {\n        cVar3 = FUN_004028b0(uVar2,uVar6 & 0xff);\n        if (cVar3 != '\\0') {\n          param_1[2] = (long)(int)uVar6;\n          return uVar10;\n        }\n        uVar6 = uVar6 + 1;\n      } while (uVar6 != 0x100);\n    }\n    goto LAB_00402d06;\n  case 4:\n    break;\n  }\n  lVar4 = *(long *)(puVar9 + 6);\n  if (lVar4 != 0) {\n    uVar10 = (ulong)*(byte *)(puVar9 + 4);\n    lVar5 = param_1[2] + 1;\n    if (param_1[2] == -1) {\n      lVar5 = 1;\n    }\n    param_1[2] = lVar5;\n    if (lVar4 != lVar5) {\n      return uVar10;\n    }\nLAB_00402d06:\n    lVar4 = *(long *)(puVar9 + 2);\n    param_1[2] = -1;\n    param_1[1] = lVar4;\n    return uVar10;\n  }\n  lVar4 = *(long *)(puVar9 + 2);\n  param_1[2] = -1;\n  param_1[1] = lVar4;\n  lVar4 = -1;\n  goto LAB_00402bd6;\n}\n\n",
            "funcName": "FUN_00402bc0"
        },
        {
            "funcStartAddr": "0x402e10",
            "funcEndAddr": "0x402e40",
            "decompiledFuncCode": "\nvoid FUN_00402e10(void)\n\n{\n  undefined8 uVar1;\n  uint *puVar2;\n  long lVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  \n  uVar1 = dcgettext(0,\"read error\",5);\n  puVar2 = (uint *)__errno_location();\n  uVar5 = 1;\n  uVar4 = (ulong)*puVar2;\n  error(1,uVar4,uVar1);\n  lVar3 = FUN_00405b80(0,uVar5,uVar4);\n  if (lVar3 != -1) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00402e10();\n}\n\n",
            "funcName": "FUN_00402e10"
        },
        {
            "funcStartAddr": "0x402e40",
            "funcEndAddr": "0x402e61",
            "decompiledFuncCode": "\nvoid FUN_00402e40(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00405b80(0,param_1,param_2);\n  if (lVar1 != -1) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00402e10();\n}\n\n",
            "funcName": "FUN_00402e40"
        },
        {
            "funcStartAddr": "0x402e70",
            "funcEndAddr": "0x402f2c",
            "decompiledFuncCode": "\nulong FUN_00402e70(byte *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  \nLAB_00402e80:\n  do {\n    uVar2 = FUN_00405b80(0,param_1,param_2);\n    if (uVar2 == 0xffffffffffffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00402e10();\n    }\n    if (uVar2 == 0) {\n      return 0;\n    }\n    if ((&DAT_0060d3c0)[*param_1] == '\\0') {\n      uVar3 = 0;\n      uVar5 = 1;\n      uVar4 = uVar2;\n      if (uVar2 != 1) {\n        do {\n          uVar4 = uVar5;\n          if ((&DAT_0060d3c0)[param_1[uVar3 + 1]] != '\\0') break;\n          uVar1 = uVar5 + 1;\n          uVar3 = uVar5;\n          uVar5 = uVar1;\n          uVar4 = uVar2;\n        } while (uVar1 != uVar2);\n      }\n      uVar3 = uVar3 + 2;\n      if (uVar2 <= uVar3) {\n        return uVar4;\n      }\n    }\n    else {\n      uVar4 = 0;\n      uVar3 = 1;\n      if (uVar2 == 1) goto LAB_00402e80;\n    }\n    do {\n      if ((&DAT_0060d3c0)[param_1[uVar3]] == '\\0') {\n        param_1[uVar4] = param_1[uVar3];\n        uVar4 = uVar4 + 1;\n      }\n      uVar3 = uVar3 + 1;\n    } while (uVar3 < uVar2);\n    if (uVar4 != 0) {\n      return uVar4;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402e70"
        },
        {
            "funcStartAddr": "0x402f40",
            "funcEndAddr": "0x402f85",
            "decompiledFuncCode": "\nvoid FUN_00402f40(byte *param_1,undefined8 param_2)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  \n  lVar2 = FUN_00405b80(0,param_1,param_2);\n  if (lVar2 == -1) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00402e10();\n  }\n  pbVar1 = param_1 + lVar2;\n  if (lVar2 != 0) {\n    do {\n      pbVar3 = param_1 + 1;\n      *param_1 = (&DAT_0060d2c0)[*param_1];\n      param_1 = pbVar3;\n    } while (pbVar1 != pbVar3);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402f40"
        },
        {
            "funcStartAddr": "0x402f90",
            "funcEndAddr": "0x402fad",
            "decompiledFuncCode": "\nvoid FUN_00402f90(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"list->tail\",\"src/tr.c\",0x2cf,\"append_repeated_char\");\n}\n\n",
            "funcName": "FUN_00402f90"
        },
        {
            "funcStartAddr": "0x402fb0",
            "funcEndAddr": "0x403008",
            "decompiledFuncCode": "\nvoid FUN_00402fb0(long param_1,undefined param_2)\n\n{\n  long lVar1;\n  undefined4 *puVar2;\n  \n  puVar2 = (undefined4 *)FUN_00406180(0x20);\n  lVar1 = *(long *)(param_1 + 8);\n  *(undefined8 *)(puVar2 + 2) = 0;\n  *puVar2 = 0;\n  *(undefined *)(puVar2 + 4) = param_2;\n  if (lVar1 != 0) {\n    *(undefined4 **)(lVar1 + 8) = puVar2;\n    *(undefined4 **)(param_1 + 8) = puVar2;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"list->tail\",\"src/tr.c\",0x287,\"append_normal_char\");\n}\n\n",
            "funcName": "FUN_00402fb0"
        },
        {
            "funcStartAddr": "0x403010",
            "funcEndAddr": "0x40381a",
            "decompiledFuncCode": "\nchar FUN_00403010(byte *param_1,long param_2)\n\n{\n  ulong uVar1;\n  byte bVar2;\n  char cVar3;\n  char cVar4;\n  undefined uVar5;\n  char *__s2;\n  char cVar6;\n  uint uVar7;\n  int iVar8;\n  size_t sVar9;\n  void *pvVar10;\n  void *__ptr;\n  ulong uVar11;\n  ulong uVar12;\n  undefined4 *puVar13;\n  size_t sVar14;\n  undefined8 uVar15;\n  void *pvVar16;\n  uint uVar17;\n  long lVar18;\n  void *__ptr_00;\n  char *pcVar19;\n  uint uVar20;\n  ulong uVar21;\n  ulong uVar22;\n  long lVar23;\n  byte bVar24;\n  uint uVar25;\n  undefined *puVar26;\n  ulong local_b8;\n  long local_68;\n  char *local_60;\n  void *local_58;\n  void *local_50;\n  ulong local_48;\n  \n  sVar9 = strlen((char *)param_1);\n  pvVar10 = (void *)FUN_00406180(sVar9);\n  local_58 = pvVar10;\n  __ptr = (void *)FUN_00406350(sVar9,1);\n  local_50 = __ptr;\n  if (*param_1 == 0) {\n    local_b8 = 0;\n  }\n  else {\n    uVar11 = 0;\n    uVar21 = 0;\n    bVar24 = *param_1;\n    do {\n      while( true ) {\n        iVar8 = (int)uVar11;\n        uVar11 = (ulong)(iVar8 + 1);\n        uVar20 = (int)uVar21 + 1;\n        bVar2 = param_1[uVar11];\n        if (bVar24 != 0x5c) break;\n        *(undefined *)((long)__ptr + uVar21) = 1;\n        if (bVar2 == 0x62) {\n          bVar24 = 8;\n          uVar7 = iVar8 + 2;\n        }\n        else if ((char)bVar2 < 'c') {\n          if ((char)bVar2 < '8') {\n            if ((char)bVar2 < '0') {\n              if (bVar2 == 0) {\n                uVar15 = dcgettext(0,\n                                   \"warning: an unescaped backslash at end of string is not portable\"\n                                   ,5);\n                error(0,0,uVar15);\n                *(undefined *)((long)__ptr + uVar21) = 0;\n                uVar7 = iVar8 + 1;\n                bVar24 = 0x5c;\n              }\n              else {\nLAB_00403329:\n                uVar7 = iVar8 + 2;\n                bVar24 = bVar2;\n              }\n            }\n            else {\n              uVar7 = iVar8 + 2;\n              bVar24 = (byte)(bVar2 - 0x30);\n              if ((int)(char)param_1[uVar7] - 0x30U < 8) {\n                uVar25 = ((int)(char)param_1[uVar7] - 0x30U) + (bVar2 - 0x30) * 8;\n                bVar24 = (byte)uVar25;\n                uVar7 = iVar8 + 3;\n                uVar17 = (int)(char)param_1[iVar8 + 3] - 0x30;\n                if (uVar17 < 8) {\n                  if ((int)(uVar17 + (uVar25 & 0xff) * 8) < 0x100) {\n                    bVar24 = (char)uVar17 + bVar24 * '\\b';\n                    uVar7 = iVar8 + 4;\n                  }\n                  else {\n                    uVar15 = dcgettext(0,\n                                       \"warning: the ambiguous octal escape \\\\%c%c%c is being\\n\\tinterpreted as the 2-byte sequence \\\\0%c%c, %c\"\n                                       ,5);\n                    error(0,0,uVar15);\n                    uVar7 = iVar8 + 3;\n                  }\n                }\n              }\n            }\n          }\n          else if (bVar2 == 0x5c) {\n            bVar24 = 0x5c;\n            uVar7 = iVar8 + 2;\n          }\n          else {\n            bVar24 = 7;\n            uVar7 = iVar8 + 2;\n            if (bVar2 != 0x61) goto LAB_00403329;\n          }\n        }\n        else if (bVar2 == 0x72) {\n          bVar24 = 0xd;\n          uVar7 = iVar8 + 2;\n        }\n        else if ((char)bVar2 < 's') {\n          if (bVar2 == 0x66) {\n            bVar24 = 0xc;\n            uVar7 = iVar8 + 2;\n          }\n          else {\n            bVar24 = 10;\n            uVar7 = iVar8 + 2;\n            if (bVar2 != 0x6e) goto LAB_00403329;\n          }\n        }\n        else if (bVar2 == 0x74) {\n          bVar24 = 9;\n          uVar7 = iVar8 + 2;\n        }\n        else {\n          bVar24 = 0xb;\n          uVar7 = iVar8 + 2;\n          if (bVar2 != 0x76) goto LAB_00403329;\n        }\n        uVar11 = (ulong)uVar7;\n        *(byte *)((long)pvVar10 + uVar21) = bVar24;\n        uVar21 = (ulong)uVar20;\n        bVar24 = param_1[uVar11];\n        if (param_1[uVar11] == 0) goto LAB_004030f1;\n      }\n      *(byte *)((long)pvVar10 + uVar21) = bVar24;\n      uVar21 = (ulong)uVar20;\n      bVar24 = bVar2;\n    } while (bVar2 != 0);\nLAB_004030f1:\n    local_b8 = (ulong)uVar20;\n  }\n  local_48 = local_b8;\n  __ptr_00 = pvVar10;\n  uVar21 = 0;\nLAB_00403135:\n  do {\n    uVar11 = uVar21 + 2;\n    if (local_b8 <= uVar11) {\n      if (uVar21 < local_b8) {\n        puVar26 = (undefined *)((long)pvVar10 + uVar21);\n        do {\n          uVar5 = *puVar26;\n          puVar26 = puVar26 + 1;\n          FUN_00402fb0(param_2,uVar5);\n        } while ((undefined *)((long)pvVar10 + local_b8) != puVar26);\n      }\n      cVar4 = '\\x01';\nLAB_0040353b:\n      free(__ptr_00);\n      free(__ptr);\n      return cVar4;\n    }\n    cVar3 = *(char *)((long)__ptr_00 + uVar21 + 1);\n    uVar1 = uVar21 + 1;\n    if ((*(char *)((long)__ptr_00 + uVar21) == '[') &&\n       (cVar4 = *(char *)((long)__ptr + uVar21), cVar4 == '\\0')) {\n      if (((cVar3 == ':') || (cVar3 == '=')) && (*(char *)((long)__ptr + uVar1) == '\\0')) {\n        cVar6 = *(char *)((long)pvVar10 + uVar1);\n        uVar22 = uVar11;\n        do {\n          uVar12 = uVar22;\n          if (local_b8 - 1 <= uVar12) goto LAB_00403180;\n          uVar22 = uVar12 + 1;\n        } while ((((cVar6 != *(char *)((long)__ptr_00 + uVar12)) ||\n                  (*(char *)((long)__ptr_00 + uVar12 + 1) != ']')) ||\n                 (*(char *)((long)__ptr + uVar12) != '\\0')) ||\n                (*(char *)((long)__ptr + uVar22) != '\\0'));\n        pcVar19 = (char *)((long)pvVar10 + uVar11);\n        sVar9 = (-2 - uVar21) + uVar12;\n        if (sVar9 == 0) {\n          pcVar19 = \"missing character class name \\'[::]\\'\";\n          if (cVar6 != ':') {\n            pcVar19 = \"missing equivalence class character \\'[==]\\'\";\n          }\n          uVar15 = dcgettext(0,pcVar19,5);\n          error(0,0,uVar15);\n        }\n        else {\n          if (cVar6 == ':') {\n            lVar23 = 0;\n            do {\n              __s2 = (&PTR_s_alnum_004083a0)[lVar23];\n              iVar8 = strncmp(pcVar19,__s2,sVar9);\n              if ((iVar8 == 0) && (sVar14 = strlen(__s2), sVar9 == sVar14)) {\n                puVar13 = (undefined4 *)FUN_00406180();\n                *(undefined8 *)(puVar13 + 2) = 0;\n                lVar18 = *(long *)(param_2 + 8);\n                *puVar13 = 2;\n                puVar13[4] = (int)lVar23;\n                if (lVar18 == 0) goto LAB_00403844;\n                goto LAB_00403668;\n              }\n              lVar23 = lVar23 + 1;\n            } while (lVar23 != 0xc);\n            cVar6 = FUN_00402680(&local_58,uVar11);\n            if (cVar6 != '\\0') goto LAB_00403180;\n            pvVar10 = (void *)FUN_00402780(pcVar19,sVar9);\n            pvVar16 = (void *)FUN_00405b60(pvVar10);\n            pcVar19 = \"invalid character class %s\";\nLAB_00403613:\n            uVar15 = dcgettext(0,pcVar19,5);\n          }\n          else {\n            if (sVar9 == 1) {\n              puVar13 = (undefined4 *)FUN_00406180();\n              *(undefined8 *)(puVar13 + 2) = 0;\n              cVar3 = *pcVar19;\n              *puVar13 = 3;\n              *(char *)(puVar13 + 4) = cVar3;\n              lVar18 = *(long *)(param_2 + 8);\n              if (lVar18 == 0) {\n                    /* WARNING: Subroutine does not return */\n                __assert_fail(\"list->tail\",\"src/tr.c\",0x2e5,\"append_equiv_class\");\n              }\nLAB_00403668:\n              *(undefined4 **)(lVar18 + 8) = puVar13;\n              uVar21 = uVar12 + 2;\n              *(undefined4 **)(param_2 + 8) = puVar13;\n              goto LAB_00403280;\n            }\n            cVar6 = FUN_00402680(&local_58,uVar11);\n            if (cVar6 != '\\0') goto LAB_00403180;\n            pvVar16 = (void *)FUN_00402780(pcVar19,sVar9);\n            uVar15 = dcgettext(0,\"%s: equivalence class operand must be a single character\",5);\n            pvVar10 = pvVar16;\n          }\n          error(0,0,uVar15,pvVar16);\n          free(pvVar10);\n        }\n        goto LAB_0040353b;\n      }\nLAB_00403180:\n      if (((*(char *)((long)__ptr_00 + uVar11) != '*') || (*(char *)((long)__ptr + uVar11) != '\\0'))\n         || ((uVar22 = uVar21 + 3, local_b8 <= uVar22 ||\n             (*(char *)((long)__ptr + uVar21 + 3) != '\\0')))) goto LAB_00403110;\n      pcVar19 = (char *)((long)__ptr_00 + uVar22);\n      if (*pcVar19 == ']') {\nLAB_00403625:\n        local_68 = 0;\n      }\n      else {\n        do {\n          uVar12 = uVar22;\n          uVar22 = uVar12 + 1;\n          if ((local_b8 <= uVar22) || (*(char *)((long)__ptr + uVar12 + 1) != '\\0'))\n          goto LAB_00403110;\n        } while (*(char *)((long)__ptr_00 + uVar22) != ']');\n        lVar23 = ~uVar1 + uVar12;\n        if (lVar23 == 0) goto LAB_00403625;\n        iVar8 = FUN_00406410(pcVar19,&local_60,(*pcVar19 != '0') * '\\x02' + '\\b',&local_68,0);\n        if (((iVar8 != 0) || (local_68 == -1)) || (local_60 != pcVar19 + lVar23)) {\n          pvVar10 = (void *)FUN_00402780(pcVar19,lVar23);\n          pvVar16 = (void *)FUN_00405b60(pvVar10);\n          pcVar19 = \"invalid repeat count %s in [c*n] construct\";\n          goto LAB_00403613;\n        }\n      }\n      lVar18 = local_68;\n      puVar13 = (undefined4 *)FUN_00406180();\n      *(undefined8 *)(puVar13 + 2) = 0;\n      *(char *)(puVar13 + 4) = cVar3;\n      *puVar13 = 4;\n      lVar23 = *(long *)(param_2 + 8);\n      *(long *)(puVar13 + 6) = lVar18;\n      if (lVar23 == 0) {\n        FUN_00402f90();\nLAB_00403844:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"list->tail\",\"src/tr.c\",699,\"append_char_class\");\n      }\n      *(undefined4 **)(lVar23 + 8) = puVar13;\n      uVar21 = uVar22 + 1;\n      *(undefined4 **)(param_2 + 8) = puVar13;\nLAB_00403280:\n      local_b8 = local_48;\n      __ptr = local_50;\n      __ptr_00 = local_58;\n      goto LAB_00403135;\n    }\nLAB_00403110:\n    bVar24 = *(byte *)((long)pvVar10 + uVar21);\n    if ((cVar3 == '-') && (cVar4 = *(char *)((long)__ptr + uVar1), cVar4 == '\\0')) {\n      bVar2 = *(byte *)((long)pvVar10 + uVar11);\n      if (bVar2 < bVar24) {\n        pvVar10 = (void *)FUN_00402710(bVar24);\n        pvVar16 = (void *)FUN_00402710(bVar2);\n        uVar15 = dcgettext(0,\"range-endpoints of \\'%s-%s\\' are in reverse collating sequence order\",\n                           5);\n        error(0,0,uVar15,pvVar10,pvVar16);\n        free(pvVar10);\n        free(pvVar16);\n        goto LAB_0040353b;\n      }\n      puVar13 = (undefined4 *)FUN_00406180();\n      *(undefined8 *)(puVar13 + 2) = 0;\n      lVar23 = *(long *)(param_2 + 8);\n      *puVar13 = 1;\n      *(byte *)(puVar13 + 4) = bVar24;\n      *(byte *)((long)puVar13 + 0x11) = bVar2;\n      if (lVar23 == 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"list->tail\",\"src/tr.c\",0x2a5,\"append_range\");\n      }\n      *(undefined4 **)(lVar23 + 8) = puVar13;\n      uVar21 = uVar21 + 3;\n      *(undefined4 **)(param_2 + 8) = puVar13;\n    }\n    else {\n      FUN_00402fb0();\n      uVar21 = uVar1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403010"
        },
        {
            "funcStartAddr": "0x403860",
            "funcEndAddr": "0x4038b0",
            "decompiledFuncCode": "\nvoid FUN_00403860(long param_1,char param_2,byte *param_3)\n\n{\n  byte *pbVar1;\n  int iVar2;\n  \n  *(undefined8 *)(param_1 + 0x10) = 0xfffffffffffffffe;\n  while( true ) {\n    iVar2 = FUN_00402bc0(param_1,0);\n    if (iVar2 == -1) break;\n    param_3[iVar2] = 1;\n  }\n  if (param_2 != '\\0') {\n    pbVar1 = param_3 + 0x100;\n    do {\n      *param_3 = *param_3 ^ 1;\n      param_3 = param_3 + 1;\n    } while (param_3 != pbVar1);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403860"
        },
        {
            "funcStartAddr": "0x4038c0",
            "funcEndAddr": "0x403aa5",
            "decompiledFuncCode": "\nvoid FUN_004038c0(code *param_1)\n\n{\n  char *pcVar1;\n  size_t sVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  int iVar9;\n  ulong uVar10;\n  size_t sVar11;\n  undefined uVar12;\n  \n  uVar6 = 0;\n  iVar9 = 0x7fffffff;\n  uVar8 = 0;\nLAB_004038d5:\n  do {\n    if (uVar6 <= uVar8) goto LAB_004039e3;\n    if ((iVar9 == 0x7fffffff) || (uVar3 = uVar8, iVar9 != (char)(&DAT_0060d5c0)[uVar8])) {\nLAB_004038f8:\n      do {\n        uVar7 = (ulong)(&DAT_0060d5c0)[uVar8];\n        uVar5 = uVar8;\n        uVar3 = uVar8;\n        uVar10 = uVar8;\n        if ((&DAT_0060d4c0)[uVar7] == '\\0') goto LAB_00403a5d;\nLAB_00403915:\n        sVar11 = 1;\n        sVar2 = 0;\n        uVar10 = uVar3;\nLAB_00403920:\n        iVar9 = (int)(char)uVar7;\n        if ((uVar3 != 0) && ((&DAT_0060d5bf)[uVar3] == (char)uVar7)) {\n          sVar11 = sVar2;\n        }\n        uVar8 = uVar3 + 1;\n        if ((sVar11 != 0) &&\n           (sVar2 = fwrite_unlocked(&DAT_0060d5c0 + uVar10,1,sVar11,stdout), sVar11 != sVar2)) {\nLAB_00403963:\n          uVar3 = dcgettext(0,\"write error\",5);\n          piVar4 = __errno_location();\n          uVar10 = 1;\n          uVar12 = 1;\n          uVar5 = error(1,*piVar4,uVar3);\n          do {\n            uVar8 = uVar3;\n            if ((bool)uVar12) {\n              uVar3 = uVar5 + 1;\n              uVar7 = (ulong)(byte)(&DAT_0060d5c1)[uVar5];\n              uVar8 = uVar6;\n              if (((&DAT_0060d4c0)[uVar7] != '\\0') && (uVar8 = uVar3, uVar3 < uVar6)) {\nLAB_00403a7d:\n                sVar2 = uVar3 - uVar10;\n                sVar11 = sVar2 + 1;\n                goto LAB_00403920;\n              }\n            }\n            sVar11 = uVar6 - uVar10;\n            if ((sVar11 != 0) &&\n               (sVar2 = fwrite_unlocked(&DAT_0060d5c0 + uVar10,1,sVar11,stdout), sVar11 != sVar2))\n            goto LAB_00403963;\n            iVar9 = 0x7fffffff;\n            if (uVar8 < uVar6) goto LAB_004038f8;\nLAB_004039e3:\n            uVar6 = (*param_1)(&DAT_0060d5c0,0x2000);\n            if (uVar6 == 0) {\n              return;\n            }\n            uVar8 = 0;\n            if (iVar9 != 0x7fffffff) break;\n            uVar3 = 0;\n            uVar7 = (ulong)DAT_0060d5c0;\n            uVar5 = uVar3;\n            uVar10 = uVar3;\n            if ((&DAT_0060d4c0)[uVar7] != '\\0') goto LAB_00403915;\nLAB_00403a5d:\n            while( true ) {\n              uVar3 = uVar5 + 2;\n              uVar12 = uVar3 == uVar6;\n              if (uVar6 <= uVar3) break;\n              uVar7 = (ulong)(byte)(&DAT_0060d5c2)[uVar5];\n              uVar5 = uVar3;\n              if ((&DAT_0060d4c0)[uVar7] != '\\0') goto LAB_00403a7d;\n            }\n          } while( true );\n        }\n        if (uVar6 <= uVar8) goto LAB_004038d5;\n        uVar3 = uVar8;\n      } while (iVar9 != (char)(&DAT_0060d5c0)[uVar8]);\n    }\n    do {\n      uVar8 = uVar3 + 1;\n      if (uVar8 == uVar6) goto LAB_004038d5;\n      pcVar1 = &DAT_0060d5c1 + uVar3;\n      uVar3 = uVar8;\n    } while (*pcVar1 == iVar9);\n    iVar9 = 0x7fffffff;\n  } while( true );\n}\n\n",
            "funcName": "FUN_004038c0"
        },
        {
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403e3d",
            "decompiledFuncCode": "\nvoid FUN_00403ac0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0060f5d8;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_00403aff;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... SET1 [SET2]\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Translate, squeeze, and/or delete characters from standard input,\\nwriting to standard output.\\n\\n  -c, -C, --complement    use the complement of SET1\\n  -d, --delete            delete characters in SET1, do not translate\\n  -s, --squeeze-repeats   replace each sequence of a repeated character\\n                            that is listed in the last specified SET,\\n                            with a single occurrence of that character\\n  -t, --truncate-set1     first truncate SET1 to length of SET2\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nSETs are specified as strings of characters.  Most represent themselves.\\nInterpreted sequences are:\\n\\n  \\\\NNN            character with octal value NNN (1 to 3 octal digits)\\n  \\\\\\\\              backslash\\n  \\\\a              audible BEL\\n  \\\\b              backspace\\n  \\\\f              form feed\\n  \\\\n              new line\\n  \\\\r              return\\n  \\\\t              horizontal tab\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  \\\\v              vertical tab\\n  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 in ascending order\\n  [CHAR*]         in SET2, copies of CHAR until length of SET1\\n  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal if starting with 0\\n  [:alnum:]       all letters and digits\\n  [:alpha:]       all letters\\n  [:blank:]       all horizontal whitespace\\n  [:cntrl:]       all control characters\\n  [:digit:]       all digits\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  [:graph:]       all printable characters, not including space\\n  [:lower:]       all lower case letters\\n  [:print:]       all printable characters, including space\\n  [:punct:]       all punctuation characters\\n  [:space:]       all horizontal or vertical whitespace\\n  [:upper:]       all upper case letters\\n  [:xdigit:]      all hexadecimal digits\\n  [=CHAR=]        all characters which are equivalent to CHAR\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nTranslation occurs if -d is not given and both SET1 and SET2 appear.\\n-t may be used only when translating.  SET2 is extended to length of\\nSET1 by repeating its last character as necessary.  Excess characters\\nof SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to\\nexpand in ascending order; used in SET2 while translating, they may\\nonly be used in pairs to specify case conversion.  -s uses the last\\nspecified SET, and occurs after translation or deletion.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00407f51;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x407fcb;\n  local_78[1] = (byte *)0x407f63;\n  local_78[2] = (byte *)0x407f79;\n  local_78[3] = (byte *)0x407f83;\n  local_78[4] = (byte *)0x407f92;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_00407f4e;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_00407f4e;\n        goto LAB_00403e13;\n      }\n    }\n    pbVar9 = &DAT_00407f4e;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00407f4e);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00403e13:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_00407f4e);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00407f4e);\n    if (pbVar9 != &DAT_00407f4e) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_00403aff:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00403ac0"
        },
        {
            "funcStartAddr": "0x403e40",
            "funcEndAddr": "0x403e48",
            "decompiledFuncCode": "\nvoid FUN_00403e40(undefined8 param_1)\n\n{\n  DAT_0060f5d0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403e40"
        },
        {
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x403e58",
            "decompiledFuncCode": "\nvoid FUN_00403e50(undefined param_1)\n\n{\n  DAT_0060f5c8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403e50"
        },
        {
            "funcStartAddr": "0x403e60",
            "funcEndAddr": "0x403efe",
            "decompiledFuncCode": "\nvoid FUN_00403e60(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004076a0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060f5c8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060f5d0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_004059b0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00403ede;\n    }\n  }\n  iVar1 = FUN_004076a0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00403ede:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060d218);\n}\n\n",
            "funcName": "FUN_00403e60"
        },
        {
            "funcStartAddr": "0x403f00",
            "funcEndAddr": "0x403f05",
            "decompiledFuncCode": "\nvoid FUN_00403f00(void)\n\n{\n  (*(code *)PTR_posix_fadvise_0060d0f0)();\n  return;\n}\n\n",
            "funcName": "FUN_00403f00"
        },
        {
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x403f2c",
            "decompiledFuncCode": "\nvoid FUN_00403f10(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403f10"
        },
        {
            "funcStartAddr": "0x403f40",
            "funcEndAddr": "0x403fd9",
            "decompiledFuncCode": "\nvoid FUN_00403f40(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00409488;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060f5d8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403f40"
        },
        {
            "funcStartAddr": "0x403fe0",
            "funcEndAddr": "0x4040bf",
            "decompiledFuncCode": "\nchar * FUN_00403fe0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00407760();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004040b8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00409499;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040948e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004040b8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00409495;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00409492;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403fe0"
        },
        {
            "funcStartAddr": "0x4040e0",
            "funcEndAddr": "0x405213",
            "decompiledFuncCode": "\nulong FUN_004040e0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404d31:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00404966;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404d31;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403fe0(&DAT_0040949d,param_5);\n      param_9 = (char *)FUN_00403fe0(&DAT_0040a9ef);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00404178:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00404188:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404908;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00404880:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404892_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_004046fe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404595;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404892_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404892_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404892_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00404595;\n      case 0xc:\nswitchD_00404892_caseD_c:\n        bVar17 = 0x66;\nLAB_00404595:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004044e8;\n        }\nLAB_004045a0:\n        bVar23 = false;\n        goto LAB_0040435b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00404278_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004044b0;\n      case 0x20:\n        bVar25 = false;\nLAB_004048da:\n        uVar19 = 0x20;\n        goto LAB_004048a2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00404278_caseD_21:\n        bVar25 = false;\n        goto LAB_004044bb;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_004048ba:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004042c8;\n        }\n        bVar23 = false;\n        goto LAB_004042df;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_004048a2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004042e1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_004046fe_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_004046fe_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00404278_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_004046fe_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004044d7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00404880;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404278_caseD_0;\n      default:\n        goto switchD_004046fe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004045a0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404892_caseD_9;\n      case 10:\n        goto switchD_00404892_caseD_a;\n      case 0xb:\n        goto switchD_00404892_caseD_b;\n      case 0xc:\n        goto switchD_00404892_caseD_c;\n      case 0xd:\n        goto switchD_00404278_caseD_d;\n      case 0x20:\n        goto LAB_004048da;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00404278_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_004048ba;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_004048a2;\n      case 0x27:\n        goto switchD_004046fe_caseD_27;\n      case 0x3f:\n        goto switchD_004046fe_caseD_3f;\n      case 0x5c:\n        goto switchD_00404278_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_004046fe_caseD_7b;\n      }\n      goto LAB_00404322;\n    }\n    goto LAB_004044fa;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404892_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00404278_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004043d8;\n          }\nLAB_0040461a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040461a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004043d8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00404659:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004043d8;\n        goto LAB_004042e1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004044ec;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004042c8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00404188;\n  default:\nswitchD_004046fe_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00407620(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040500a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00405147;\n          goto LAB_00405137;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004044ec;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040500a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004046d4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404712;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404712;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404712:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040472a:\n      param_5 = 2;\n      goto LAB_004044ec;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004042b6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004042b6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040472a;\n    goto LAB_004042c8;\n  case 0x23:\n  case 0x7e:\nLAB_004042ad:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004042b6;\n    goto LAB_004044bb;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_004046fe_caseD_25;\n  case 0x27:\nswitchD_004046fe_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004042c8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004043d8;\n    }\n    goto LAB_004044ec;\n  case 0x3f:\nswitchD_004046fe_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004043d8;\n      }\n      goto LAB_004044ec;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004042c8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00404659;\n      }\n      goto LAB_004044fa;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004042c8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00404278_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004043f4;\n    }\n    if (local_5c) goto LAB_004044ec;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004043f4;\n  case 0x7b:\n  case 0x7d:\nswitchD_004046fe_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_004042ad;\n    goto LAB_004044bb;\n  }\nLAB_004044b0:\n  if (!bVar6) {\nLAB_004044bb:\n    bVar23 = false;\n    goto LAB_004042c8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004044d7;\nLAB_00404908:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004044ec:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004044fa:\n    uVar9 = FUN_004040e0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004051dd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_004040e0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004051dd;\nLAB_00404966:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00404178;\n  while (__s1[uVar21] != 0) {\nLAB_00405137:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00405147:\n  bVar23 = false;\nLAB_0040500a:\n  if (1 < uVar21) {\nLAB_00404bce:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004044ec;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040436d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004043f4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004046d4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00404bce;\n  }\nswitchD_004046fe_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004042c8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004042df:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004042e1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004043d8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004043d8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004043f4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040436d;\n    }\n  }\njoined_r0x004044d7:\n  if (local_5c) {\nLAB_004044e8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004044ec;\n  }\nLAB_00404322:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040435b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040436d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00404188;\n}\n\n",
            "funcName": "FUN_004040e0"
        },
        {
            "funcStartAddr": "0x405310",
            "funcEndAddr": "0x4054ab",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00405310(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060d258;\n  if (DAT_0060d270 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004063d0();\n    }\n    if (PTR_DAT_0060d258 == &DAT_0060d260) {\n      puVar8 = (undefined4 *)FUN_004061e0(0);\n      uVar6 = PTR_DAT_0060d268._4_4_;\n      uVar5 = PTR_DAT_0060d268._0_4_;\n      uVar3 = _UNK_0060d264;\n      PTR_DAT_0060d258 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060d260;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_004061e0(PTR_DAT_0060d258);\n      PTR_DAT_0060d258 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060d270 * 4,0,(long)((param_1 + 1) - DAT_0060d270) << 4);\n    DAT_0060d270 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_004040e0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060f5e0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00406180(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_004040e0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00405310"
        },
        {
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x4054e4",
            "decompiledFuncCode": "\nvoid FUN_004054b0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f6e0;\n  }\n  FUN_00406380(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004054b0"
        },
        {
            "funcStartAddr": "0x4054f0",
            "funcEndAddr": "0x4054ff",
            "decompiledFuncCode": "\nundefined4 FUN_004054f0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f6e0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004054f0"
        },
        {
            "funcStartAddr": "0x405500",
            "funcEndAddr": "0x40550f",
            "decompiledFuncCode": "\nvoid FUN_00405500(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f6e0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405500"
        },
        {
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "\nuint FUN_00405510(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f6e0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405510"
        },
        {
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x405563",
            "decompiledFuncCode": "\nundefined4 FUN_00405550(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f6e0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405550"
        },
        {
            "funcStartAddr": "0x405570",
            "funcEndAddr": "0x40559b",
            "decompiledFuncCode": "\nvoid FUN_00405570(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f6e0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405570"
        },
        {
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405612",
            "decompiledFuncCode": "\nvoid FUN_004055a0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060f6e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_004040e0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004055a0"
        },
        {
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405701",
            "decompiledFuncCode": "\nundefined8 FUN_00405620(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060f6e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_004040e0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00406180(lVar3 + 1);\n  FUN_004040e0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405620"
        },
        {
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x40571a",
            "decompiledFuncCode": "\nvoid FUN_00405710(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405620(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405710"
        },
        {
            "funcStartAddr": "0x405720",
            "funcEndAddr": "0x4057b5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405720(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060d258;\n  if (1 < DAT_0060d270) {\n    ppvVar2 = (void **)(PTR_DAT_0060d258 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060d258 + (ulong)(DAT_0060d270 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060f5e0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060d260 = 0x100;\n    PTR_DAT_0060d268 = &DAT_0060f5e0;\n  }\n  if (__ptr_00 != &DAT_0060d260) {\n    free(__ptr_00);\n    PTR_DAT_0060d258 = &DAT_0060d260;\n  }\n  DAT_0060d270 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405720"
        },
        {
            "funcStartAddr": "0x4057c0",
            "funcEndAddr": "0x4057d1",
            "decompiledFuncCode": "\nvoid FUN_004057c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405310(param_1,param_2,0xffffffffffffffff,&DAT_0060f6e0);\n  return;\n}\n\n",
            "funcName": "FUN_004057c0"
        },
        {
            "funcStartAddr": "0x4057e0",
            "funcEndAddr": "0x4057ea",
            "decompiledFuncCode": "\nvoid FUN_004057e0(void)\n\n{\n  FUN_00405310();\n  return;\n}\n\n",
            "funcName": "FUN_004057e0"
        },
        {
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405806",
            "decompiledFuncCode": "\nvoid FUN_004057f0(undefined8 param_1)\n\n{\n  FUN_00405310(0,param_1,0xffffffffffffffff,&DAT_0060f6e0);\n  return;\n}\n\n",
            "funcName": "FUN_004057f0"
        },
        {
            "funcStartAddr": "0x405810",
            "funcEndAddr": "0x405822",
            "decompiledFuncCode": "\nvoid FUN_00405810(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405310(0,param_1,param_2,&DAT_0060f6e0);\n  return;\n}\n\n",
            "funcName": "FUN_00405810"
        },
        {
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x405898",
            "decompiledFuncCode": "\nvoid FUN_00405830(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405310(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405830"
        },
        {
            "funcStartAddr": "0x4058a0",
            "funcEndAddr": "0x405904",
            "decompiledFuncCode": "\nvoid FUN_004058a0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405310(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004058a0"
        },
        {
            "funcStartAddr": "0x405910",
            "funcEndAddr": "0x40591c",
            "decompiledFuncCode": "\nvoid FUN_00405910(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00405830(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405910"
        },
        {
            "funcStartAddr": "0x405920",
            "funcEndAddr": "0x40592f",
            "decompiledFuncCode": "\nvoid FUN_00405920(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004058a0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405920"
        },
        {
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x4059a0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405930(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060f710;\n  local_48 = _DAT_0060f6e0;\n  uStack_40 = uRam000000000060f6e8;\n  local_38 = _DAT_0060f6f0;\n  uStack_30 = uRam000000000060f6f8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060f700;\n  uStack_20 = uRam000000000060f708;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00405310(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00405930"
        },
        {
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x4059ad",
            "decompiledFuncCode": "\nvoid FUN_004059a0(undefined8 param_1,char param_2)\n\n{\n  FUN_00405930(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004059a0"
        },
        {
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x4059c1",
            "decompiledFuncCode": "\nvoid FUN_004059b0(undefined8 param_1)\n\n{\n  FUN_00405930(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004059b0"
        },
        {
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x4059da",
            "decompiledFuncCode": "\nvoid FUN_004059d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405930(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004059d0"
        },
        {
            "funcStartAddr": "0x4059e0",
            "funcEndAddr": "0x405a4e",
            "decompiledFuncCode": "\nvoid FUN_004059e0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405310(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004059e0"
        },
        {
            "funcStartAddr": "0x405a50",
            "funcEndAddr": "0x405abc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405a50(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060f6e8;\n  local_38 = _DAT_0060f6f0;\n  uStack_30 = uRam000000000060f6f8;\n  local_28 = _DAT_0060f700;\n  lStack_20 = uRam000000000060f708;\n  local_18 = DAT_0060f710;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060f6e0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00405310(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405a50"
        },
        {
            "funcStartAddr": "0x405ac0",
            "funcEndAddr": "0x405ac9",
            "decompiledFuncCode": "\nvoid FUN_00405ac0(void)\n\n{\n  FUN_00405a50();\n  return;\n}\n\n",
            "funcName": "FUN_00405ac0"
        },
        {
            "funcStartAddr": "0x405ad0",
            "funcEndAddr": "0x405ae7",
            "decompiledFuncCode": "\nvoid FUN_00405ad0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405a50(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405ad0"
        },
        {
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405b03",
            "decompiledFuncCode": "\nvoid FUN_00405af0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00405a50(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405af0"
        },
        {
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b1a",
            "decompiledFuncCode": "\nvoid FUN_00405b10(void)\n\n{\n  FUN_00405310();\n  return;\n}\n\n",
            "funcName": "FUN_00405b10"
        },
        {
            "funcStartAddr": "0x405b20",
            "funcEndAddr": "0x405b32",
            "decompiledFuncCode": "\nvoid FUN_00405b20(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405310(0,param_1,param_2,&DAT_0060d220);\n  return;\n}\n\n",
            "funcName": "FUN_00405b20"
        },
        {
            "funcStartAddr": "0x405b40",
            "funcEndAddr": "0x405b51",
            "decompiledFuncCode": "\nvoid FUN_00405b40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405310(param_1,param_2,0xffffffffffffffff,&DAT_0060d220);\n  return;\n}\n\n",
            "funcName": "FUN_00405b40"
        },
        {
            "funcStartAddr": "0x405b60",
            "funcEndAddr": "0x405b76",
            "decompiledFuncCode": "\nvoid FUN_00405b60(undefined8 param_1)\n\n{\n  FUN_00405310(0,param_1,0xffffffffffffffff,&DAT_0060d220);\n  return;\n}\n\n",
            "funcName": "FUN_00405b60"
        },
        {
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405bdd",
            "decompiledFuncCode": "\nssize_t FUN_00405b80(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7fffe001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00405b80"
        },
        {
            "funcStartAddr": "0x405be0",
            "funcEndAddr": "0x405f84",
            "decompiledFuncCode": "\nundefined8\nFUN_00405be0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040a1eb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405e5c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405e5c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405ef9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405ef9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405cda;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00405cda:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405be0"
        },
        {
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405fe0",
            "decompiledFuncCode": "\nvoid FUN_00405fc0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405be0();\n  return;\n}\n\n",
            "funcName": "FUN_00405fc0"
        },
        {
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406039",
            "decompiledFuncCode": "\nvoid FUN_00405fe0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405be0();\n  return;\n}\n\n",
            "funcName": "FUN_00405fe0"
        },
        {
            "funcStartAddr": "0x406040",
            "funcEndAddr": "0x4060f8",
            "decompiledFuncCode": "\nvoid FUN_00406040(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405be0();\n  return;\n}\n\n",
            "funcName": "FUN_00406040"
        },
        {
            "funcStartAddr": "0x406100",
            "funcEndAddr": "0x406174",
            "decompiledFuncCode": "\nvoid FUN_00406100(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00406100"
        },
        {
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x40619a",
            "decompiledFuncCode": "\nvoid FUN_00406180(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063d0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406180"
        },
        {
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061c1",
            "decompiledFuncCode": "\nvoid FUN_004061a0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00406180();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063d0();\n}\n\n",
            "funcName": "FUN_004061a0"
        },
        {
            "funcStartAddr": "0x4061d0",
            "funcEndAddr": "0x4061d2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00406180(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063d0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4061d0"
        },
        {
            "funcStartAddr": "0x4061e0",
            "funcEndAddr": "0x406210",
            "decompiledFuncCode": "\nvoid * FUN_004061e0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063d0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004061e0"
        },
        {
            "funcStartAddr": "0x406220",
            "funcEndAddr": "0x406241",
            "decompiledFuncCode": "\nvoid FUN_00406220(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_004061e0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063d0();\n}\n\n",
            "funcName": "FUN_00406220"
        },
        {
            "funcStartAddr": "0x406250",
            "funcEndAddr": "0x4062c8",
            "decompiledFuncCode": "\nvoid FUN_00406250(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004062ab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004062ab:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063d0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004061e0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406250"
        },
        {
            "funcStartAddr": "0x4062e0",
            "funcEndAddr": "0x40632a",
            "decompiledFuncCode": "\nvoid FUN_004062e0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_004061e0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040632a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040632a:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063d0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_004061e0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004062e0"
        },
        {
            "funcStartAddr": "0x406330",
            "funcEndAddr": "0x406347",
            "decompiledFuncCode": "\nvoid FUN_00406330(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00406180();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406330"
        },
        {
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x40637e",
            "decompiledFuncCode": "\nvoid FUN_00406350(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063d0();\n}\n\n",
            "funcName": "FUN_00406350"
        },
        {
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x4063a8",
            "decompiledFuncCode": "\nvoid FUN_00406380(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00406180(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406380"
        },
        {
            "funcStartAddr": "0x4063b0",
            "funcEndAddr": "0x4063c3",
            "decompiledFuncCode": "\nvoid FUN_004063b0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00406180(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004063b0"
        },
        {
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x406401",
            "decompiledFuncCode": "\nvoid FUN_004063d0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060d218,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004063d0"
        },
        {
            "funcStartAddr": "0x406410",
            "funcEndAddr": "0x4067be",
            "decompiledFuncCode": "\nulong FUN_00406410(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_004064b2;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040659c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0040658a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00406571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040a5b8)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0040658a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_004065f7;\n  default:\nswitchD_0040659c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406684;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x004065bc;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_004065f7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x004065bc:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_004065f7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406684;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406684;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406684;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00406684:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_004065f7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_004065f7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_004064b2:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00406410"
        },
        {
            "funcStartAddr": "0x406850",
            "funcEndAddr": "0x406925",
            "decompiledFuncCode": "\nvoid FUN_00406850(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_004068cc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_004068cc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_004068cc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00406850"
        },
        {
            "funcStartAddr": "0x406930",
            "funcEndAddr": "0x406f2e",
            "decompiledFuncCode": "\nint FUN_00406930(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00406b50;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00406a90;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00406a90;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00406a90:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_0040a9e9,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00406b50:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00406930"
        },
        {
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x4074b7",
            "decompiledFuncCode": "\nuint FUN_00406f50(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00406f9a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040709d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040709d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_004070a8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00407018;\nLAB_004070bc:\n    if (*pbVar8 == 0) goto LAB_00407018;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00406f9a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_004070a8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_004070bc;\nLAB_00407018:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00406850(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00407186:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040aa01;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00406850(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00407186;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040aa01;\n        goto LAB_004072e5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00407290;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00406930(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040aa02);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00407290:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040aa20;\nLAB_004072e5:\n  uVar3 = FUN_00406930(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00406f50"
        },
        {
            "funcStartAddr": "0x407520",
            "funcEndAddr": "0x407576",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407520(void)\n\n{\n  DAT_0060f720 = DAT_0060d27c;\n  _DAT_0060f724 = DAT_0060d278;\n  FUN_00406f50();\n  DAT_0060d27c = DAT_0060f720;\n  _DAT_0060f760 = DAT_0060f730;\n  _DAT_0060d274 = DAT_0060f728;\n  return;\n}\n\n",
            "funcName": "FUN_00407520"
        },
        {
            "funcStartAddr": "0x407580",
            "funcEndAddr": "0x407598",
            "decompiledFuncCode": "\nvoid FUN_00407580(void)\n\n{\n  FUN_00407520();\n  return;\n}\n\n",
            "funcName": "FUN_00407580"
        },
        {
            "funcStartAddr": "0x4075a0",
            "funcEndAddr": "0x4075b3",
            "decompiledFuncCode": "\nvoid FUN_004075a0(void)\n\n{\n  FUN_00407520();\n  return;\n}\n\n",
            "funcName": "FUN_004075a0"
        },
        {
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x4075d5",
            "decompiledFuncCode": "\nvoid FUN_004075c0(void)\n\n{\n  FUN_00406f50();\n  return;\n}\n\n",
            "funcName": "FUN_004075c0"
        },
        {
            "funcStartAddr": "0x4075e0",
            "funcEndAddr": "0x4075f6",
            "decompiledFuncCode": "\nvoid FUN_004075e0(void)\n\n{\n  FUN_00407520();\n  return;\n}\n\n",
            "funcName": "FUN_004075e0"
        },
        {
            "funcStartAddr": "0x407600",
            "funcEndAddr": "0x407618",
            "decompiledFuncCode": "\nvoid FUN_00407600(void)\n\n{\n  FUN_00406f50();\n  return;\n}\n\n",
            "funcName": "FUN_00407600"
        },
        {
            "funcStartAddr": "0x407620",
            "funcEndAddr": "0x40768f",
            "decompiledFuncCode": "\nsize_t FUN_00407620(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40aa1f;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00407644;\n  }\n  param_1 = &local_1c;\nLAB_00407644:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00407700(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00407620"
        },
        {
            "funcStartAddr": "0x4076a0",
            "funcEndAddr": "0x4076fc",
            "decompiledFuncCode": "\nulong FUN_004076a0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00407cd0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004076a0"
        },
        {
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x407756",
            "decompiledFuncCode": "\nbool FUN_00407700(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040aa24;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00407700"
        },
        {
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x407cb4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00407760(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060f758 != (char *)0x0) goto LAB_0040779a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00407885:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_004078a6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00407885;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_004078a6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00407940:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00407acc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00407940;\n              if (uVar4 == 0x23) goto LAB_00407b31;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00407adf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00407cd0(__stream);\n                goto LAB_004078e4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00407acc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00407adf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_004078de;\n    }\n  }\n  DAT_0060f758 = \"\";\nLAB_0040779a:\n  cVar1 = *DAT_0060f758;\n  pcVar7 = DAT_0060f758;\n  do {\n    if (cVar1 == '\\0') {\nLAB_004077f4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_004077f4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00407b31:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00407adf;\n  goto LAB_00407940;\nLAB_00407adf:\n  FUN_00407cd0(__stream);\n  if (local_d0 == 0) {\nLAB_004078de:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_004078e4:\n  free(__file);\n  DAT_0060f758 = pcVar7;\n  goto LAB_0040779a;\n}\n\n",
            "funcName": "FUN_00407760"
        },
        {
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407d48",
            "decompiledFuncCode": "\nint FUN_00407cd0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00407d37;\n    }\n    iVar1 = FUN_00407d50(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00407d37:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00407cd0"
        },
        {
            "funcStartAddr": "0x407d50",
            "funcEndAddr": "0x407d8b",
            "decompiledFuncCode": "\nvoid FUN_00407d50(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00407d90(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00407d50"
        },
        {
            "funcStartAddr": "0x407d90",
            "funcEndAddr": "0x407de6",
            "decompiledFuncCode": "\nulong FUN_00407d90(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00407d90"
        },
        {
            "funcStartAddr": "0x407df0",
            "funcEndAddr": "0x407e4d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00407e23) */\n/* WARNING: Removing unreachable block (ram,0x00407e28) */\n\nvoid FUN_00407df0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00407df0"
        },
        {
            "funcStartAddr": "0x407e50",
            "funcEndAddr": "0x407e51",
            "decompiledFuncCode": "\nvoid FUN_00407e50(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00407e50"
        },
        {
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407e78",
            "decompiledFuncCode": "\nvoid FUN_00407e60(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060d208);\n  return;\n}\n\n",
            "funcName": "FUN_00407e60"
        },
        {
            "funcStartAddr": "0x407e78",
            "funcEndAddr": "0x407e98",
            "decompiledFuncCode": "\nundefined8 FUN_00407e78(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060ce30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407e78"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tr.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}