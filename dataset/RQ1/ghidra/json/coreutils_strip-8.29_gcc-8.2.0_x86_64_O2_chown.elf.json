{
    "funcCount": 187,
    "funcInfo": [
        {
            "funcStartAddr": "0x402135",
            "funcEndAddr": "0x40213a",
            "decompiledFuncCode": "\nvoid FUN_00402135(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402135"
        },
        {
            "funcStartAddr": "0x40213a",
            "funcEndAddr": "0x40213f",
            "decompiledFuncCode": "\nvoid FUN_0040213a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040213a"
        },
        {
            "funcStartAddr": "0x40213f",
            "funcEndAddr": "0x402144",
            "decompiledFuncCode": "\nvoid FUN_0040213f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040213f"
        },
        {
            "funcStartAddr": "0x402144",
            "funcEndAddr": "0x402149",
            "decompiledFuncCode": "\nvoid FUN_00402144(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402144"
        },
        {
            "funcStartAddr": "0x40214e",
            "funcEndAddr": "0x402153",
            "decompiledFuncCode": "\nvoid FUN_0040214e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040214e"
        },
        {
            "funcStartAddr": "0x402153",
            "funcEndAddr": "0x402158",
            "decompiledFuncCode": "\nvoid FUN_00402153(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402153"
        },
        {
            "funcStartAddr": "0x402158",
            "funcEndAddr": "0x40215d",
            "decompiledFuncCode": "\nvoid FUN_00402158(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402158"
        },
        {
            "funcStartAddr": "0x40215d",
            "funcEndAddr": "0x402162",
            "decompiledFuncCode": "\nvoid FUN_0040215d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040215d"
        },
        {
            "funcStartAddr": "0x402162",
            "funcEndAddr": "0x402167",
            "decompiledFuncCode": "\nvoid FUN_00402162(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402162"
        },
        {
            "funcStartAddr": "0x402167",
            "funcEndAddr": "0x40216c",
            "decompiledFuncCode": "\nvoid FUN_00402167(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402167"
        },
        {
            "funcStartAddr": "0x40216c",
            "funcEndAddr": "0x402171",
            "decompiledFuncCode": "\nvoid FUN_0040216c(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040216c"
        },
        {
            "funcStartAddr": "0x402171",
            "funcEndAddr": "0x402176",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_402171"
        },
        {
            "funcStartAddr": "0x402180",
            "funcEndAddr": "0x402655",
            "decompiledFuncCode": "\nbyte FUN_00402180(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  byte bVar3;\n  int iVar4;\n  long lVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  ulong uVar9;\n  int iVar10;\n  char *pcVar11;\n  undefined auVar12 [16];\n  undefined8 uStack_118;\n  long local_110;\n  __uid_t local_108;\n  __gid_t local_104;\n  undefined4 local_100;\n  undefined4 local_fc;\n  undefined4 local_f8;\n  char local_f4;\n  long local_f0;\n  undefined local_e8;\n  undefined local_e7;\n  char *local_e0;\n  long local_d8 [2];\n  stat local_c8;\n  \n  bVar1 = false;\n  pcVar11 = (char *)0xffffffff;\n  uVar9 = (ulong)param_1;\n  uVar8 = 0x10;\n  local_108 = 0xffffffff;\n  local_104 = 0xffffffff;\n  local_100 = 0xffffffff;\n  local_fc = 0xffffffff;\n  FUN_00403cb0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040c620(FUN_00403bc0);\n  FUN_00402c50(&local_f8);\nLAB_00402210:\n  iVar10 = (int)pcVar11;\n  iVar4 = FUN_00409c90(uVar9 & 0xffffffff,param_2,\"HLPRcfhv\",&PTR_s_recursive_0040d320,0);\n  pcVar2 = DAT_00612390;\n  if (iVar4 == -1) {\n    if (local_f4 == '\\0') {\n      uVar8 = 0x10;\n    }\n    else if ((int)uVar8 == 0x10) {\n      if (iVar10 == 1) goto LAB_0040266a;\n      iVar10 = 0;\n    }\n    local_e8 = iVar10 != 0;\n    pcVar11 = DAT_00612390;\n    iVar4 = DAT_0061233c;\n    if (DAT_00612390 == (char *)0x0) {\n      if (1 < param_1 - DAT_0061233c) {\n        uVar9 = FUN_00405c50(param_2[DAT_0061233c],&local_108,&local_104,&local_e0,local_d8);\n        if (uVar9 == 0) {\n          if (local_e0 == (char *)0x0) goto LAB_0040258c;\n          goto LAB_00402529;\n        }\n        goto LAB_00402640;\n      }\n    }\n    else if (0 < param_1 - DAT_0061233c) {\n      iVar4 = __xstat(1,DAT_00612390,&local_c8);\n      if (iVar4 != 0) {\n        param_2 = (undefined8 *)FUN_00405680(4,pcVar2);\n        uVar8 = dcgettext(0,\"failed to get attributes of %s\",5);\n        piVar6 = __errno_location();\n        error(1,*piVar6,uVar8,param_2);\nLAB_00402640:\n        uVar8 = FUN_004058d0(param_2[DAT_0061233c]);\n        error(1,0,\"%s: %s\",uVar9,uVar8);\nLAB_0040266a:\n        uVar8 = dcgettext(0,\"-R --dereference requires either -H or -L\",5);\n        auVar12 = error(1,0,uVar8);\n        uVar8 = uStack_118;\n        uStack_118 = SUB168(auVar12,0);\n        (*(code *)PTR___libc_start_main_00611ff0)\n                  (FUN_00402180,uVar8,&local_110,FUN_0040c5b0,FUN_0040c610,SUB168(auVar12 >> 0x40,0)\n                   ,&uStack_118);\n        do {\n                    /* WARNING: Do nothing block with infinite loop */\n        } while( true );\n      }\n      local_108 = local_c8.st_uid;\n      local_104 = local_c8.st_gid;\n      local_e0 = (char *)FUN_00402cd0();\n      local_d8[0] = FUN_00402c90(local_c8.st_gid);\n      goto LAB_0040247c;\n    }\nLAB_004025a6:\n    if (iVar4 < param_1) {\n      uVar8 = FUN_004058d0(param_2[uVar9 - 1]);\n      uVar7 = dcgettext(0,\"missing operand after %s\",5);\n      error(0,0,uVar7,uVar8);\n    }\n    else {\n      uVar7 = dcgettext(0,\"missing operand\",5);\n      error(0,0,uVar7);\n    }\n  }\n  else {\n    if (iVar4 == 0x66) {\n      local_e7 = 1;\n      goto LAB_00402210;\n    }\n    if (0x66 < iVar4) {\n      if (iVar4 == 0x81) {\n        lVar5 = FUN_00405c50(DAT_00612550,&local_100,&local_fc,0);\n        if (lVar5 != 0) {\n          local_110 = lVar5;\n          FUN_004058d0(DAT_00612550);\n          error(1,0,\"%s: %s\",local_110);\nLAB_004023d0:\n          local_f4 = '\\x01';\n        }\n      }\n      else {\n        if (0x81 < iVar4) goto LAB_004022a8;\n        if (iVar4 == 0x76) {\n          local_f8 = 0;\n        }\n        else if (iVar4 == 0x80) {\n          pcVar11 = (char *)0x1;\n        }\n        else {\n          if (iVar4 != 0x68) goto LAB_00402299;\n          pcVar11 = (char *)0x0;\n        }\n      }\n      goto LAB_00402210;\n    }\n    if (iVar4 == 0x4c) {\n      uVar8 = 2;\n      goto LAB_00402210;\n    }\n    if (iVar4 < 0x4d) {\n      if (iVar4 == -0x82) {\n        iVar4 = FUN_00402770(0);\n        goto LAB_004025a6;\n      }\n      if (iVar4 == 0x48) {\n        uVar8 = 0x11;\n        goto LAB_00402210;\n      }\n      if (iVar4 == -0x83) {\n        FUN_00406180(stdout,\"chown\",\"GNU coreutils\",PTR_DAT_006122d0,\"David MacKenzie\",\n                     \"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n    }\n    else {\n      if (iVar4 == 0x52) goto LAB_004023d0;\n      if (iVar4 == 99) {\n        local_f8 = 1;\n        goto LAB_00402210;\n      }\n      if (iVar4 == 0x50) {\n        uVar8 = 0x10;\n        goto LAB_00402210;\n      }\n    }\n  }\nLAB_00402299:\n  do {\n    iVar4 = FUN_00402770(1);\nLAB_004022a8:\n    if (iVar4 == 0x83) {\n      bVar1 = true;\n      goto LAB_00402210;\n    }\n    if (iVar4 < 0x83) {\n      bVar1 = false;\n      goto LAB_00402210;\n    }\n  } while (iVar4 != 0x84);\n  DAT_00612390 = DAT_00612550;\n  goto LAB_00402210;\nLAB_0040247c:\n  if ((local_f4 == '\\0') || (!bVar1)) {\nLAB_0040248c:\n    bVar3 = FUN_00403a80(param_2 + DAT_0061233c,(uint)uVar8 | 0x400,local_108,local_104,local_100,\n                         local_fc,&local_f8,(long)DAT_0061233c);\n    return bVar3 ^ 1;\n  }\n  local_f0 = FUN_004058f0(&DAT_00612380);\n  if (local_f0 != 0) goto LAB_0040248c;\n  param_2 = (undefined8 *)FUN_00405680(4,\"/\");\n  uVar8 = dcgettext(0,\"failed to get attributes of %s\",5);\n  piVar6 = __errno_location();\n  error(1,*piVar6,uVar8,param_2);\nLAB_0040258c:\n  if (local_d8[0] != 0) {\n    local_e0 = \"\";\n  }\nLAB_00402529:\n  DAT_0061233c = DAT_0061233c + 1;\n  goto LAB_0040247c;\n}\n\n",
            "funcName": "FUN_00402180"
        },
        {
            "funcStartAddr": "0x402690",
            "funcEndAddr": "0x4026bb",
            "decompiledFuncCode": "\nvoid FUN_00402690(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00611ff0)\n            (FUN_00402180,unaff_retaddr,&stack0x00000008,FUN_0040c5b0,FUN_0040c610,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402690"
        },
        {
            "funcStartAddr": "0x4026bb",
            "funcEndAddr": "0x4026da",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004026c8) */\n/* WARNING: Removing unreachable block (ram,0x004026d2) */\n\nvoid FUN_004026bb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004026bb"
        },
        {
            "funcStartAddr": "0x4026da",
            "funcEndAddr": "0x402711",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402709) */\n\nvoid FUN_004026da(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004026da"
        },
        {
            "funcStartAddr": "0x402711",
            "funcEndAddr": "0x402768",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402746) */\n\nvoid FUN_00402711(void)\n\n{\n  if (DAT_00612368 != '\\0') {\n    return;\n  }\n  FUN_004026bb();\n  DAT_00612368 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402711"
        },
        {
            "funcStartAddr": "0x402768",
            "funcEndAddr": "0x40276d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402709) */\n\nvoid thunk_FUN_004026da(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402768"
        },
        {
            "funcStartAddr": "0x402770",
            "funcEndAddr": "0x402bcd",
            "decompiledFuncCode": "\nvoid FUN_00402770(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_006123a8;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_004027af;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Change the owner and/or group of each FILE to OWNER and/or GROUP.\\nWith --reference, change the owner and group of each FILE to those of RFILE.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"                         (useful only on systems that can change the\\n                         ownership of a symlink)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --from=CURRENT_OWNER:CURRENT_GROUP\\n                         change the owner and/or group of each file only if\\n                         its current owner and/or group match those specified\\n                         here.  Either may be omitted, in which case a match\\n                         is not required for the omitted attribute\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --no-preserve-root  do not treat \\'/\\' specially (the default)\\n      --preserve-root    fail to operate recursively on \\'/\\'\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --reference=RFILE  use RFILE\\'s owner and group rather than\\n                         specifying OWNER:GROUP values\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -R, --recursive        operate on files and directories recursively\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                         to a directory, traverse it\\n  -L                     traverse every symbolic link to a directory\\n                         encountered\\n  -P                     do not traverse any symbolic links (default)\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nOwner is unchanged if missing.  Group is unchanged if missing, but changed\\nto login group if implied by a \\':\\' following a symbolic OWNER.\\nOWNER and GROUP may be numeric as well as symbolic.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar7 = DAT_006123a8;\n  uVar3 = dcgettext(0,\n                    \"\\nExamples:\\n  %s root /u        Change the owner of /u to \\\"root\\\".\\n  %s root:staff /u  Likewise, but also change its group to \\\"staff\\\".\\n  %s -hR root /u    Change the owner of /u and subfiles to \\\"root\\\".\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7,uVar7);\n  local_88 = &DAT_0040c68a;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40c704;\n  local_78[1] = (byte *)0x40c69c;\n  local_78[2] = (byte *)0x40c6b2;\n  local_78[3] = (byte *)0x40c6bc;\n  local_78[4] = (byte *)0x40c6cb;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar11 = *ppbVar5;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 6;\n    pbVar10 = (byte *)\"chown\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar6[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"chown\";\n        goto LAB_00402ba3;\n      }\n    }\n    pcVar4 = \"chown\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chown\");\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402ba3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,\"chown\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chown\");\n    if (pcVar4 != \"chown\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pcVar4,pcVar8);\nLAB_004027af:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402770"
        },
        {
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x402c39",
            "decompiledFuncCode": "\nchar * FUN_00402bd0(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  if (param_1 == (char *)0x0) {\n    param_1 = param_2;\n    if (param_2 != (char *)0x0) goto LAB_00402c30;\n    pcVar3 = (char *)0x0;\n  }\n  else {\n    if (param_2 == (char *)0x0) {\nLAB_00402c30:\n      pcVar3 = (char *)FUN_004064f0(param_1);\n      return pcVar3;\n    }\n    sVar1 = strlen(param_1);\n    sVar2 = strlen(param_2);\n    pcVar3 = (char *)FUN_004062c0(sVar1 + 2 + sVar2);\n    pcVar4 = stpcpy(pcVar3,param_1);\n    *pcVar4 = ':';\n    strcpy(pcVar4 + 1,param_2);\n  }\n  return pcVar3;\n}\n\n",
            "funcName": "FUN_00402bd0"
        },
        {
            "funcStartAddr": "0x402c50",
            "funcEndAddr": "0x402c7c",
            "decompiledFuncCode": "\nvoid FUN_00402c50(undefined4 *param_1)\n\n{\n  *param_1 = 2;\n  *(undefined *)(param_1 + 1) = 0;\n  *(undefined8 *)(param_1 + 2) = 0;\n  *(undefined2 *)(param_1 + 4) = 1;\n  *(undefined8 *)(param_1 + 6) = 0;\n  *(undefined8 *)(param_1 + 8) = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00402c50"
        },
        {
            "funcStartAddr": "0x402c80",
            "funcEndAddr": "0x402c81",
            "decompiledFuncCode": "\nvoid FUN_00402c80(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402c80"
        },
        {
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x402cc7",
            "decompiledFuncCode": "\nvoid FUN_00402c90(__gid_t param_1)\n\n{\n  group *pgVar1;\n  undefined8 uVar2;\n  undefined auStack_28 [32];\n  \n  pgVar1 = getgrgid(param_1);\n  if (pgVar1 != (group *)0x0) {\n    FUN_004064f0(pgVar1->gr_name);\n    return;\n  }\n  uVar2 = FUN_00403c60(param_1,auStack_28);\n  FUN_004064f0(uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00402c90"
        },
        {
            "funcStartAddr": "0x402cd0",
            "funcEndAddr": "0x402d07",
            "decompiledFuncCode": "\nvoid FUN_00402cd0(__uid_t param_1)\n\n{\n  passwd *ppVar1;\n  undefined8 uVar2;\n  undefined auStack_28 [32];\n  \n  ppVar1 = getpwuid(param_1);\n  if (ppVar1 != (passwd *)0x0) {\n    FUN_004064f0(ppVar1->pw_name);\n    return;\n  }\n  uVar2 = FUN_00403c60(param_1,auStack_28);\n  FUN_004064f0(uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00402cd0"
        },
        {
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x4039b7",
            "decompiledFuncCode": "\nuint FUN_00402d10(long param_1,long param_2,__uid_t param_3,__gid_t param_4,uint param_5,\n                 uint param_6,int *param_7)\n\n{\n  ushort uVar1;\n  byte *pbVar2;\n  __ino_t *p_Var3;\n  long *plVar4;\n  uint uVar5;\n  char cVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  void *pvVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  long lVar14;\n  uint unaff_EBP;\n  uint uVar15;\n  undefined4 uVar16;\n  void *pvVar17;\n  byte *pbVar18;\n  char *pcVar19;\n  __uid_t _Var20;\n  byte *pbVar21;\n  long lVar22;\n  stat *psVar23;\n  __gid_t _Var24;\n  bool bVar25;\n  bool bVar26;\n  byte bVar27;\n  void *local_180;\n  void *local_178;\n  void *local_170;\n  void *local_168;\n  int local_160;\n  stat local_158;\n  stat local_c8;\n  \n  bVar27 = 0;\n  pbVar2 = *(byte **)(param_2 + 0x38);\n  uVar1 = *(ushort *)(param_2 + 0x70);\n  switch(uVar1) {\n  case 1:\n    unaff_EBP = (uint)*(byte *)(param_7 + 1);\n    if (*(byte *)(param_7 + 1) != 0) {\n      plVar4 = *(long **)(param_7 + 2);\n      if (plVar4 == (long *)0x0) {\n        return unaff_EBP;\n      }\n      if (*(long *)(param_2 + 0x80) != *plVar4) {\n        return unaff_EBP;\n      }\n      bVar25 = *(ulong *)(param_2 + 0x78) < (ulong)plVar4[1];\n      bVar26 = *(ulong *)(param_2 + 0x78) == plVar4[1];\n      if (!bVar26) {\n        return unaff_EBP;\n      }\n      lVar14 = 2;\n      pbVar18 = pbVar2;\n      pbVar21 = (byte *)0x40efb1;\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar25 = *pbVar18 < *pbVar21;\n        bVar26 = *pbVar18 == *pbVar21;\n        pbVar18 = pbVar18 + 1;\n        pbVar21 = pbVar21 + 1;\n      } while (bVar26);\n      if ((!bVar25 && !bVar26) == bVar25) {\n        uVar11 = FUN_00405680(4,pbVar2);\n        uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n        error(0,0,uVar12,uVar11);\n      }\n      else {\n        uVar11 = FUN_004055a0(1,4,\"/\");\n        uVar12 = FUN_004055a0(0,4,pbVar2);\n        uVar13 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n        error(0,0,uVar13,uVar12,uVar11);\n      }\n      uVar11 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n      error(0,0,uVar11);\n      fts_set(param_1,param_2,4);\n      fts_read(param_1);\n      return 0;\n    }\n    break;\n  case 2:\n    cVar6 = FUN_004065a0();\n    if (cVar6 != '\\0') {\n      uVar11 = FUN_00405750(0,3,pbVar2);\n      uVar12 = dcgettext(0,\n                         \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                         ,5);\n      error(0,0,uVar12,uVar11);\n      return 0;\n    }\n    break;\n  case 4:\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 != 0) goto LAB_00403095;\n    uVar11 = FUN_00405680(4,pbVar2);\n    pcVar19 = \"cannot read directory %s\";\nLAB_00403138:\n    pcVar19 = (char *)dcgettext(0,pcVar19,5);\n    uVar16 = *(undefined4 *)(param_2 + 0x40);\nLAB_0040314a:\n    uVar15 = (uint)bVar27;\n    error(0,uVar16,pcVar19,uVar11);\n    iVar7 = *param_7;\n    goto joined_r0x0040309c;\n  case 6:\n    if (*(char *)(param_7 + 1) == '\\0') {\n      return 1;\n    }\n    break;\n  case 7:\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 == 0) {\n      uVar11 = FUN_00405750(0,3,pbVar2);\n      uVar16 = *(undefined4 *)(param_2 + 0x40);\n      pcVar19 = \"%s\";\n      goto LAB_0040314a;\n    }\n    goto LAB_00403095;\n  case 10:\n    if ((*(long *)(param_2 + 0x58) == 0) && (*(long *)(param_2 + 0x20) == 0)) {\n      *(undefined8 *)(param_2 + 0x20) = 1;\n      fts_set(param_1,param_2,1);\n      return 1;\n    }\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 == 0) {\n      uVar11 = FUN_00405680(4,pbVar2);\n      pcVar19 = \"cannot access %s\";\n      goto LAB_00403138;\n    }\nLAB_00403095:\n    iVar7 = *param_7;\n    uVar15 = 0;\njoined_r0x0040309c:\n    if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402fa3;\n    lVar14 = *(long *)(param_7 + 8);\n    lVar22 = *(long *)(param_7 + 6);\n    uVar15 = 0;\n    local_178 = (void *)0x0;\n    local_180 = (void *)0x0;\n    local_160 = 3;\n    goto LAB_00402eeb;\n  }\n  uVar15 = (uint)uVar1;\n  pcVar19 = *(char **)(param_2 + 0x30);\n  psVar23 = (stat *)(param_2 + 0x78);\n  cVar6 = *(char *)(param_7 + 4);\n  if ((((param_5 & param_6) != 0xffffffff) || (*param_7 != 2)) || (*(long *)(param_7 + 2) != 0)) {\n    if (cVar6 != '\\0') goto LAB_00402da8;\n    goto LAB_00402dc0;\n  }\n  if (cVar6 == '\\0') {\n    if (((uVar1 & 0xfffd) != 4) && (1 < (ushort)(uVar1 - 1))) {\nLAB_00402e55:\n      uVar16 = *(undefined4 *)(param_1 + 0x2c);\n      if (cVar6 == '\\0') goto LAB_00402e61;\n      if ((param_5 & param_6) == 0xffffffff) {\nLAB_00403532:\n        iVar7 = FUN_00406a00(uVar16,pcVar19,param_3,param_4,0);\n        bVar25 = iVar7 == 0;\n        goto LAB_00402e90;\n      }\n      uVar15 = psVar23->st_mode & 0xf000;\n      if (uVar15 == 0x8000) {\n        uVar5 = 0x900;\n      }\n      else {\n        uVar5 = 0x10900;\n        if (uVar15 != 0x4000) goto LAB_00403532;\n      }\n      iVar7 = __openat_2(uVar16,pcVar19,uVar5);\n      if (iVar7 < 0) {\n        piVar9 = __errno_location();\n        if (*piVar9 == 0xd) {\n          if ((psVar23->st_mode & 0xf000) == 0x8000) {\n            iVar7 = __openat_2(uVar16,pcVar19,uVar5 | 1);\n            if (-1 < iVar7) goto LAB_004033d0;\n            if (*piVar9 != 0xd) goto LAB_004032c0;\n          }\n          uVar16 = *(undefined4 *)(param_1 + 0x2c);\n          goto LAB_00403532;\n        }\n        goto LAB_004032c0;\n      }\nLAB_004033d0:\n      iVar8 = __fxstat(1,iVar7,&local_c8);\n      if (iVar8 != 0) {\nLAB_00403630:\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        close(iVar7);\n        *piVar9 = iVar8;\n        goto LAB_004032c0;\n      }\n      if ((psVar23->st_ino == local_c8.st_ino) && (psVar23->st_dev == local_c8.st_dev)) {\n        if (((param_5 == 0xffffffff) || (param_5 == local_c8.st_uid)) &&\n           ((param_6 == 0xffffffff || (param_6 == local_c8.st_gid)))) {\n          iVar8 = fchown(iVar7,param_3,param_4);\n          if (iVar8 != 0) goto LAB_00403630;\n          iVar7 = close(iVar7);\n          if (iVar7 != 0) goto LAB_004032c0;\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          close(iVar7);\n          *piVar9 = iVar8;\n        }\n        goto LAB_00402e99;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      iVar7 = *param_7;\n      *piVar9 = iVar8;\n      if ((iVar7 == 2) || (iVar7 != 0)) {\n        uVar15 = 0;\n        goto LAB_00402fa3;\n      }\n      uVar15 = 0;\nLAB_00403450:\n      local_160 = 3;\n      goto LAB_00403458;\n    }\n    uVar16 = *(undefined4 *)(param_1 + 0x2c);\nLAB_00402e61:\n    iVar7 = FUN_00406a00(uVar16,pcVar19,param_3,param_4,0x100);\n    bVar25 = iVar7 == 0;\n    if ((bVar25) || (piVar9 = __errno_location(), *piVar9 != 0x5f)) {\nLAB_00402e90:\n      if (!bVar25) {\nLAB_004032c0:\n        uVar15 = (uint)*(byte *)((long)param_7 + 0x11);\n        if (*(byte *)((long)param_7 + 0x11) == 0) {\n          uVar11 = FUN_00405680(4,pbVar2);\n          if (param_3 == 0xffffffff) {\n            uVar12 = dcgettext(0,\"changing group of %s\",5);\n          }\n          else {\n            uVar12 = dcgettext(0,\"changing ownership of %s\",5);\n          }\n          piVar9 = __errno_location();\n          error(0,*piVar9,uVar12,uVar11);\n          iVar7 = *param_7;\n        }\n        else {\n          iVar7 = *param_7;\n          uVar15 = 0;\n        }\n        if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402fa3;\n        goto LAB_00403450;\n      }\nLAB_00402e99:\n      if (*param_7 == 2) {\nLAB_004034d3:\n        uVar15 = 1;\n        goto LAB_00402fa3;\n      }\n      if ((param_3 == 0xffffffff) || (_Var20 = psVar23->st_uid, _Var20 == param_3)) {\n        if ((param_4 == 0xffffffff) || (_Var24 = psVar23->st_gid, _Var24 == param_4)) {\n          if (*param_7 == 0) {\n            local_160 = 4;\n            uVar15 = 1;\n            goto LAB_00403458;\n          }\n          goto LAB_004034d3;\n        }\n        _Var20 = psVar23->st_uid;\n        local_160 = 2;\n        uVar15 = 1;\n      }\n      else {\n        local_160 = 2;\n        _Var24 = psVar23->st_gid;\n        uVar15 = 1;\n      }\n      goto LAB_00402ecc;\n    }\n    uVar15 = 1;\n    if ((*param_7 == 2) || (*param_7 != 0)) goto LAB_00402fa3;\n    local_178 = (void *)FUN_00402cd0(psVar23->st_uid);\n    local_180 = (void *)FUN_00402c90(psVar23->st_gid);\n    uVar11 = FUN_00405680(4,pbVar2);\n    uVar12 = dcgettext(0,\"neither symbolic link %s nor referent has been changed\\n\",5);\n    __printf_chk(1,uVar12,uVar11);\n  }\n  else {\nLAB_00402da8:\n    if ((*(uint *)(param_2 + 0x90) & 0xf000) == 0xa000) {\n      iVar7 = __fxstatat(1,*(int *)(param_1 + 0x2c),pcVar19,&local_158,0);\n      if (iVar7 == 0) {\n        uVar15 = (uint)*(ushort *)(param_2 + 0x70);\n        psVar23 = &local_158;\n        goto LAB_00402dc0;\n      }\n      uVar15 = (uint)*(byte *)((long)param_7 + 0x11);\n      if (*(byte *)((long)param_7 + 0x11) == 0) {\n        uVar11 = FUN_00405680(4,pbVar2);\n        uVar12 = dcgettext(0,\"cannot dereference %s\",5);\n        piVar9 = __errno_location();\n        error(0,*piVar9,uVar12,uVar11);\n        iVar7 = *param_7;\n      }\n      else {\n        iVar7 = *param_7;\n        uVar15 = 0;\n      }\n      if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402fa3;\n      psVar23 = &local_158;\n      local_160 = 3;\n      goto LAB_00403458;\n    }\nLAB_00402dc0:\n    uVar15 = unaff_EBP & 0xffffff00 | (uint)(((ushort)uVar15 & 0xfffd) == 4) |\n             uVar15 & 0xffffff00 | (uint)((ushort)((ushort)uVar15 - 1) < 2);\n    cVar6 = (char)uVar15;\n    if ((param_5 == 0xffffffff) || (psVar23->st_uid == param_5)) {\n      if (param_6 == 0xffffffff) {\n        if (((cVar6 != '\\0') && (p_Var3 = *(__ino_t **)(param_7 + 2), p_Var3 != (__ino_t *)0x0)) &&\n           (psVar23->st_ino == *p_Var3)) {\n          bVar25 = psVar23->st_dev < p_Var3[1];\n          bVar26 = psVar23->st_dev == p_Var3[1];\n          if (bVar26) goto LAB_004031b0;\n        }\n      }\n      else {\n        if (((cVar6 != '\\0') && (p_Var3 = *(__ino_t **)(param_7 + 2), p_Var3 != (__ino_t *)0x0)) &&\n           (psVar23->st_ino == *p_Var3)) {\n          bVar25 = psVar23->st_dev < p_Var3[1];\n          bVar26 = psVar23->st_dev == p_Var3[1];\n          if (bVar26) {\nLAB_004031b0:\n            lVar14 = 2;\n            pbVar18 = pbVar2;\n            pbVar21 = (byte *)0x40efb1;\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar25 = *pbVar18 < *pbVar21;\n              bVar26 = *pbVar18 == *pbVar21;\n              pbVar18 = pbVar18 + (ulong)bVar27 * -2 + 1;\n              pbVar21 = pbVar21 + (ulong)bVar27 * -2 + 1;\n            } while (bVar26);\n            if ((!bVar25 && !bVar26) == bVar25) {\n              uVar11 = FUN_00405680(4,pbVar2);\n              uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n              error(0,0,uVar12,uVar11);\n            }\n            else {\n              uVar11 = FUN_004055a0(1,4,\"/\");\n              uVar12 = FUN_004055a0(0,4,pbVar2);\n              uVar13 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n              error(0,0,uVar13,uVar12,uVar11);\n            }\n            uVar11 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n            error(0,0,uVar11);\n            return 0;\n          }\n        }\n        if (psVar23->st_gid != param_6) goto LAB_0040372d;\n      }\n      cVar6 = *(char *)(param_7 + 4);\n      goto LAB_00402e55;\n    }\n    if (cVar6 == '\\0') {\n      if ((*param_7 != 2) && (*param_7 == 0)) {\n        uVar15 = 1;\n        local_160 = 4;\n        goto LAB_00403458;\n      }\n      goto LAB_004034d3;\n    }\n    p_Var3 = *(__ino_t **)(param_7 + 2);\n    if ((p_Var3 == (__ino_t *)0x0) || (*p_Var3 != psVar23->st_ino)) {\n      iVar7 = *param_7;\n    }\n    else {\n      bVar25 = psVar23->st_dev < p_Var3[1];\n      bVar26 = psVar23->st_dev == p_Var3[1];\n      if (bVar26) goto LAB_004031b0;\nLAB_0040372d:\n      iVar7 = *param_7;\n      uVar15 = 1;\n    }\n    if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402fa3;\n    local_160 = 4;\nLAB_00403458:\n    _Var20 = psVar23->st_uid;\n    _Var24 = psVar23->st_gid;\nLAB_00402ecc:\n    local_178 = (void *)FUN_00402cd0(_Var20);\n    local_180 = (void *)FUN_00402c90(_Var24);\n    lVar14 = *(long *)(param_7 + 8);\n    lVar22 = *(long *)(param_7 + 6);\nLAB_00402eeb:\n    pvVar10 = (void *)FUN_00402bd0(lVar22,lVar14);\n    pvVar17 = (void *)0x0;\n    if (lVar14 != 0) {\n      pvVar17 = local_180;\n    }\n    local_170 = pvVar10;\n    if (lVar22 == 0) {\n      local_168 = (void *)FUN_00402bd0(0,pvVar17);\n      if (local_160 == 3) goto LAB_00403330;\n      if (local_160 == 4) {\n        if (lVar14 == 0) {\n          uVar11 = dcgettext(0,\"ownership of %s retained\\n\",5);\n        }\n        else {\n          uVar11 = dcgettext(0,\"group of %s retained as %s\\n\",5);\n        }\n      }\n      else if (lVar14 == 0) {\n        uVar11 = dcgettext(0,\"no change to ownership of %s\\n\",5);\n      }\n      else {\n        uVar11 = dcgettext(0,\"changed group of %s from %s to %s\\n\",5);\n      }\n    }\n    else {\n      local_168 = (void *)FUN_00402bd0(local_178,pvVar17);\n      if (local_160 == 3) {\nLAB_00403330:\n        if (local_168 == (void *)0x0) {\n          pcVar19 = \"failed to change ownership of %s to %s\\n\";\n          if ((lVar22 == 0) && (pcVar19 = \"failed to change group of %s to %s\\n\", lVar14 == 0)) {\n            pcVar19 = \"failed to change ownership of %s\\n\";\n          }\n          uVar11 = dcgettext(0,pcVar19,5);\n          local_170 = (void *)0x0;\n          local_168 = pvVar10;\n        }\n        else if (lVar22 == 0) {\n          if (lVar14 == 0) {\n            uVar11 = dcgettext(0,\"failed to change ownership of %s\\n\",5);\n          }\n          else {\n            uVar11 = dcgettext(0,\"failed to change group of %s from %s to %s\\n\",5);\n          }\n        }\n        else {\n          uVar11 = dcgettext(0,\"failed to change ownership of %s from %s to %s\\n\",5);\n        }\n      }\n      else if (local_160 == 4) {\n        uVar11 = dcgettext(0,\"ownership of %s retained as %s\\n\",5);\n      }\n      else {\n        uVar11 = dcgettext(0,\"changed ownership of %s from %s to %s\\n\",5);\n      }\n    }\n    uVar12 = FUN_00405680(4,pbVar2);\n    __printf_chk(1,uVar11,uVar12,local_168,local_170);\n    free(local_168);\n    free(local_170);\n  }\n  free(local_178);\n  free(local_180);\nLAB_00402fa3:\n  if (*(char *)(param_7 + 1) == '\\0') {\n    fts_set(param_1,param_2,4);\n  }\n  return uVar15;\n}\n\n",
            "funcName": "FUN_00402d10"
        },
        {
            "funcStartAddr": "0x403a80",
            "funcEndAddr": "0x403b8f",
            "decompiledFuncCode": "\nbyte FUN_00403a80(undefined8 param_1,ulong param_2,undefined4 param_3,undefined4 param_4,\n                 uint param_5,uint param_6,int *param_7)\n\n{\n  uint uVar1;\n  byte bVar2;\n  int iVar3;\n  undefined8 uVar4;\n  long lVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  byte bVar8;\n  \n  if (((param_5 & param_6) == 0xffffffff) && (*(char *)(param_7 + 4) == '\\0')) {\n    uVar1 = (uint)param_2;\n    param_2 = param_2 & 0xffffffff;\n    if (*param_7 == 2) {\n      param_2 = (ulong)(uVar1 | 8);\n    }\n  }\n  bVar8 = 1;\n  uVar4 = FUN_00406550(param_1,param_2,0);\n  while (lVar5 = fts_read(uVar4), lVar5 != 0) {\n    bVar2 = FUN_00402d10(uVar4,lVar5,param_3,param_4,param_5,param_6,param_7);\n    bVar8 = bVar8 & bVar2;\n  }\n  piVar6 = __errno_location();\n  if (*piVar6 != 0) {\n    bVar8 = *(byte *)((long)param_7 + 0x11);\n    if (bVar8 == 0) {\n      uVar7 = dcgettext(0,\"fts_read failed\",5);\n      error(0,*piVar6,uVar7);\n    }\n    else {\n      bVar8 = 0;\n    }\n  }\n  iVar3 = fts_close(uVar4);\n  if (iVar3 != 0) {\n    bVar8 = 0;\n    uVar4 = dcgettext(0,\"fts_close failed\",5);\n    error(0,*piVar6,uVar4);\n  }\n  return bVar8;\n}\n\n",
            "funcName": "FUN_00403a80"
        },
        {
            "funcStartAddr": "0x403ba0",
            "funcEndAddr": "0x403ba8",
            "decompiledFuncCode": "\nvoid FUN_00403ba0(undefined8 param_1)\n\n{\n  DAT_006123a0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403ba0"
        },
        {
            "funcStartAddr": "0x403bb0",
            "funcEndAddr": "0x403bb8",
            "decompiledFuncCode": "\nvoid FUN_00403bb0(undefined param_1)\n\n{\n  DAT_00612398 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403bb0"
        },
        {
            "funcStartAddr": "0x403bc0",
            "funcEndAddr": "0x403c5e",
            "decompiledFuncCode": "\nvoid FUN_00403bc0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00409ec0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00612398 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_006123a0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00405720();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00403c3e;\n    }\n  }\n  iVar1 = FUN_00409ec0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00403c3e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006122d8);\n}\n\n",
            "funcName": "FUN_00403bc0"
        },
        {
            "funcStartAddr": "0x403c60",
            "funcEndAddr": "0x403ca4",
            "decompiledFuncCode": "\nchar * FUN_00403c60(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403c60"
        },
        {
            "funcStartAddr": "0x403cb0",
            "funcEndAddr": "0x403d49",
            "decompiledFuncCode": "\nvoid FUN_00403cb0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040d960;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_006123a8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403cb0"
        },
        {
            "funcStartAddr": "0x403d50",
            "funcEndAddr": "0x403e2f",
            "decompiledFuncCode": "\nchar * FUN_00403d50(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040b370();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403e28:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d971;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d966;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403e28;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d96d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d96a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403d50"
        },
        {
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x404f83",
            "decompiledFuncCode": "\nulong FUN_00403e50(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404aa1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_004046d6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404aa1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403d50(&DAT_0040d975,param_5);\n      param_9 = (char *)FUN_00403d50(&DAT_0040f1d4);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403ee8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403ef8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404678;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_004045f0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404602_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040446e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404305;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404602_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404602_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404602_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00404305;\n      case 0xc:\nswitchD_00404602_caseD_c:\n        bVar17 = 0x66;\nLAB_00404305:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00404258;\n        }\nLAB_00404310:\n        bVar23 = false;\n        goto LAB_004040cb;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403fe8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00404220;\n      case 0x20:\n        bVar25 = false;\nLAB_0040464a:\n        uVar19 = 0x20;\n        goto LAB_00404612;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403fe8_caseD_21:\n        bVar25 = false;\n        goto LAB_0040422b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040462a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00404038;\n        }\n        bVar23 = false;\n        goto LAB_0040404f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00404612:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00404051;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040446e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040446e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403fe8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040446e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00404247;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_004045f0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403fe8_caseD_0;\n      default:\n        goto switchD_0040446e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404310;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404602_caseD_9;\n      case 10:\n        goto switchD_00404602_caseD_a;\n      case 0xb:\n        goto switchD_00404602_caseD_b;\n      case 0xc:\n        goto switchD_00404602_caseD_c;\n      case 0xd:\n        goto switchD_00403fe8_caseD_d;\n      case 0x20:\n        goto LAB_0040464a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403fe8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040462a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00404612;\n      case 0x27:\n        goto switchD_0040446e_caseD_27;\n      case 0x3f:\n        goto switchD_0040446e_caseD_3f;\n      case 0x5c:\n        goto switchD_00403fe8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040446e_caseD_7b;\n      }\n      goto LAB_00404092;\n    }\n    goto LAB_0040426a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404602_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403fe8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00404148;\n          }\nLAB_0040438a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040438a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00404148;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_004043c9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00404148;\n        goto LAB_00404051;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040425c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00404038;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403ef8;\n  default:\nswitchD_0040446e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00409d10(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00404d7a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404eb7;\n          goto LAB_00404ea7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040425c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00404d7a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00404444;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404482;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404482;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404482:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040449a:\n      param_5 = 2;\n      goto LAB_0040425c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00404026;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00404026:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040449a;\n    goto LAB_00404038;\n  case 0x23:\n  case 0x7e:\nLAB_0040401d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00404026;\n    goto LAB_0040422b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040446e_caseD_25;\n  case 0x27:\nswitchD_0040446e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00404038;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00404148;\n    }\n    goto LAB_0040425c;\n  case 0x3f:\nswitchD_0040446e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00404148;\n      }\n      goto LAB_0040425c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00404038;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_004043c9;\n      }\n      goto LAB_0040426a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00404038;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403fe8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00404164;\n    }\n    if (local_5c) goto LAB_0040425c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00404164;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040446e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040401d;\n    goto LAB_0040422b;\n  }\nLAB_00404220:\n  if (!bVar6) {\nLAB_0040422b:\n    bVar23 = false;\n    goto LAB_00404038;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00404247;\nLAB_00404678:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040425c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040426a:\n    uVar9 = FUN_00403e50(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00404f4d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00403e50(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00404f4d;\nLAB_004046d6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403ee8;\n  while (__s1[uVar21] != 0) {\nLAB_00404ea7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404eb7:\n  bVar23 = false;\nLAB_00404d7a:\n  if (1 < uVar21) {\nLAB_0040493e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040425c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_004040dd;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00404164;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00404444:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040493e;\n  }\nswitchD_0040446e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00404038:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_0040404f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00404051:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00404148;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00404148:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00404164:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_004040dd;\n    }\n  }\njoined_r0x00404247:\n  if (local_5c) {\nLAB_00404258:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040425c;\n  }\nLAB_00404092:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_004040cb:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_004040dd:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403ef8;\n}\n\n",
            "funcName": "FUN_00403e50"
        },
        {
            "funcStartAddr": "0x405080",
            "funcEndAddr": "0x40521b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00405080(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00612318;\n  if (DAT_00612330 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00406510();\n    }\n    if (PTR_DAT_00612318 == &DAT_00612320) {\n      puVar8 = (undefined4 *)FUN_00406320(0);\n      uVar6 = PTR_DAT_00612328._4_4_;\n      uVar5 = PTR_DAT_00612328._0_4_;\n      uVar3 = _UNK_00612324;\n      PTR_DAT_00612318 = (undefined *)puVar8;\n      *puVar8 = _DAT_00612320;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00406320(PTR_DAT_00612318);\n      PTR_DAT_00612318 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00612330 * 4,0,(long)((param_1 + 1) - DAT_00612330) << 4);\n    DAT_00612330 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00403e50(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_006123c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_004062c0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00403e50(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00405080"
        },
        {
            "funcStartAddr": "0x405220",
            "funcEndAddr": "0x405254",
            "decompiledFuncCode": "\nvoid FUN_00405220(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006124c0;\n  }\n  FUN_004064c0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405220"
        },
        {
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x40526f",
            "decompiledFuncCode": "\nundefined4 FUN_00405260(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006124c0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00405260"
        },
        {
            "funcStartAddr": "0x405270",
            "funcEndAddr": "0x40527f",
            "decompiledFuncCode": "\nvoid FUN_00405270(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006124c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405270"
        },
        {
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x4052b3",
            "decompiledFuncCode": "\nuint FUN_00405280(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006124c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405280"
        },
        {
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x4052d3",
            "decompiledFuncCode": "\nundefined4 FUN_004052c0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006124c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004052c0"
        },
        {
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x40530b",
            "decompiledFuncCode": "\nvoid FUN_004052e0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006124c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004052e0"
        },
        {
            "funcStartAddr": "0x405310",
            "funcEndAddr": "0x405382",
            "decompiledFuncCode": "\nvoid FUN_00405310(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_006124c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00403e50(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405310"
        },
        {
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405471",
            "decompiledFuncCode": "\nundefined8 FUN_00405390(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_006124c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00403e50(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_004062c0(lVar3 + 1);\n  FUN_00403e50(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405390"
        },
        {
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x40548a",
            "decompiledFuncCode": "\nvoid FUN_00405480(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405390(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405480"
        },
        {
            "funcStartAddr": "0x405490",
            "funcEndAddr": "0x405525",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405490(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00612318;\n  if (1 < DAT_00612330) {\n    ppvVar2 = (void **)(PTR_DAT_00612318 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00612318 + (ulong)(DAT_00612330 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_006123c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00612320 = 0x100;\n    PTR_DAT_00612328 = &DAT_006123c0;\n  }\n  if (__ptr_00 != &DAT_00612320) {\n    free(__ptr_00);\n    PTR_DAT_00612318 = &DAT_00612320;\n  }\n  DAT_00612330 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405490"
        },
        {
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x405541",
            "decompiledFuncCode": "\nvoid FUN_00405530(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405080(param_1,param_2,0xffffffffffffffff,&DAT_006124c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405530"
        },
        {
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x40555a",
            "decompiledFuncCode": "\nvoid FUN_00405550(void)\n\n{\n  FUN_00405080();\n  return;\n}\n\n",
            "funcName": "FUN_00405550"
        },
        {
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x405576",
            "decompiledFuncCode": "\nvoid FUN_00405560(undefined8 param_1)\n\n{\n  FUN_00405080(0,param_1,0xffffffffffffffff,&DAT_006124c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405560"
        },
        {
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x405592",
            "decompiledFuncCode": "\nvoid FUN_00405580(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405080(0,param_1,param_2,&DAT_006124c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405580"
        },
        {
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405608",
            "decompiledFuncCode": "\nvoid FUN_004055a0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405080(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004055a0"
        },
        {
            "funcStartAddr": "0x405610",
            "funcEndAddr": "0x405674",
            "decompiledFuncCode": "\nvoid FUN_00405610(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405080(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405610"
        },
        {
            "funcStartAddr": "0x405680",
            "funcEndAddr": "0x40568c",
            "decompiledFuncCode": "\nvoid FUN_00405680(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_004055a0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405680"
        },
        {
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x40569f",
            "decompiledFuncCode": "\nvoid FUN_00405690(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405610(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405690"
        },
        {
            "funcStartAddr": "0x4056a0",
            "funcEndAddr": "0x405710",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004056a0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_006124f0;\n  local_48 = _DAT_006124c0;\n  uStack_40 = uRam00000000006124c8;\n  local_38 = _DAT_006124d0;\n  uStack_30 = uRam00000000006124d8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_006124e0;\n  uStack_20 = uRam00000000006124e8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00405080(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_004056a0"
        },
        {
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x40571d",
            "decompiledFuncCode": "\nvoid FUN_00405710(undefined8 param_1,char param_2)\n\n{\n  FUN_004056a0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405710"
        },
        {
            "funcStartAddr": "0x405720",
            "funcEndAddr": "0x405731",
            "decompiledFuncCode": "\nvoid FUN_00405720(undefined8 param_1)\n\n{\n  FUN_004056a0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405720"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x40574a",
            "decompiledFuncCode": "\nvoid FUN_00405740(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004056a0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x4057be",
            "decompiledFuncCode": "\nvoid FUN_00405750(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405080(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405750"
        },
        {
            "funcStartAddr": "0x4057c0",
            "funcEndAddr": "0x40582c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004057c0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam00000000006124c8;\n  local_38 = _DAT_006124d0;\n  uStack_30 = uRam00000000006124d8;\n  local_28 = _DAT_006124e0;\n  lStack_20 = uRam00000000006124e8;\n  local_18 = DAT_006124f0;\n  local_48 = CONCAT44((int)((ulong)_DAT_006124c0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00405080(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004057c0"
        },
        {
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x405839",
            "decompiledFuncCode": "\nvoid FUN_00405830(void)\n\n{\n  FUN_004057c0();\n  return;\n}\n\n",
            "funcName": "FUN_00405830"
        },
        {
            "funcStartAddr": "0x405840",
            "funcEndAddr": "0x405857",
            "decompiledFuncCode": "\nvoid FUN_00405840(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004057c0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405840"
        },
        {
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x405873",
            "decompiledFuncCode": "\nvoid FUN_00405860(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_004057c0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405860"
        },
        {
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x40588a",
            "decompiledFuncCode": "\nvoid FUN_00405880(void)\n\n{\n  FUN_00405080();\n  return;\n}\n\n",
            "funcName": "FUN_00405880"
        },
        {
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x4058a2",
            "decompiledFuncCode": "\nvoid FUN_00405890(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405080(0,param_1,param_2,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_00405890"
        },
        {
            "funcStartAddr": "0x4058b0",
            "funcEndAddr": "0x4058c1",
            "decompiledFuncCode": "\nvoid FUN_004058b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405080(param_1,param_2,0xffffffffffffffff,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_004058b0"
        },
        {
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058e6",
            "decompiledFuncCode": "\nvoid FUN_004058d0(undefined8 param_1)\n\n{\n  FUN_00405080(0,param_1,0xffffffffffffffff,&DAT_006122e0);\n  return;\n}\n\n",
            "funcName": "FUN_004058d0"
        },
        {
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x405938",
            "decompiledFuncCode": "\n__ino_t * FUN_004058f0(__ino_t *param_1)\n\n{\n  int iVar1;\n  stat local_98;\n  \n  iVar1 = __lxstat(1,\"/\",&local_98);\n  if (iVar1 == 0) {\n    *param_1 = local_98.st_ino;\n    param_1[1] = local_98.st_dev;\n    return param_1;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_004058f0"
        },
        {
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x405c2c",
            "decompiledFuncCode": "\nundefined8\nFUN_00405940(char *param_1,long param_2,__uid_t *param_3,__gid_t *param_4,char **param_5,\n            char **param_6)\n\n{\n  int iVar1;\n  group *pgVar2;\n  char *pcVar3;\n  char *__name;\n  passwd *ppVar4;\n  void *__ptr;\n  undefined8 uVar5;\n  char *pcVar6;\n  long lVar7;\n  __gid_t __gid;\n  bool bVar8;\n  __uid_t local_6c;\n  ulong local_58 [5];\n  \n  __gid = 0xffffffff;\n  local_6c = *param_3;\n  if (param_4 != (__gid_t *)0x0) {\n    __gid = *param_4;\n  }\n  if (param_5 != (char **)0x0) {\n    *param_5 = (char *)0x0;\n  }\n  if (param_6 != (char **)0x0) {\n    *param_6 = (char *)0x0;\n  }\n  if (param_2 == 0) {\n    __name = (char *)0x0;\n    pcVar3 = (char *)0x0;\n    if (*param_1 == '\\0') goto LAB_004059ef;\n    __name = (char *)FUN_004064f0();\nLAB_00405b38:\n    if (__name == (char *)0x0) {\nLAB_00405b9a:\n      pcVar3 = (char *)0x0;\n      goto LAB_004059ef;\n    }\n    pcVar3 = (char *)0x0;\n    bVar8 = param_2 != 0;\n    if (*__name == '+') {\nLAB_00405b56:\n      if (bVar8) {\n        endpwent();\n        pcVar6 = \"invalid spec\";\n        __ptr = (void *)0x0;\n        goto LAB_00405b67;\n      }\n      iVar1 = FUN_004065d0(__name,0,10,local_58,\"\");\n      if ((iVar1 != 0) || (local_6c = (__uid_t)local_58[0], 0xfffffffe < local_58[0])) {\n        endpwent();\n        pcVar6 = \"invalid user\";\n        __ptr = (void *)0x0;\n        goto LAB_00405b67;\n      }\n      endpwent();\n      goto joined_r0x00405c11;\n    }\nLAB_00405a8a:\n    ppVar4 = getpwnam(__name);\n    if (ppVar4 == (passwd *)0x0) goto LAB_00405b56;\n    local_6c = ppVar4->pw_uid;\n    if (bVar8) {\n      __gid = ppVar4->pw_gid;\n      pgVar2 = getgrgid(__gid);\n      if (pgVar2 == (group *)0x0) {\n        pcVar3 = (char *)FUN_00403c60(__gid,local_58);\n      }\n      else {\n        pcVar3 = pgVar2->gr_name;\n      }\n      pcVar3 = (char *)FUN_004064f0(pcVar3);\n      endgrent();\n      endpwent();\n      goto LAB_004059ef;\n    }\n    endpwent();\n    if (pcVar3 == (char *)0x0) goto LAB_004059ef;\n    if (*pcVar3 != '+') goto LAB_004059ca;\n    goto LAB_00405acb;\n  }\n  lVar7 = param_2 - (long)param_1;\n  if (lVar7 != 0) {\n    __name = (char *)FUN_004064c0(param_1,lVar7 + 1);\n    __name[lVar7] = '\\0';\n    if (*(char *)(param_2 + 1) == '\\0') goto LAB_00405b38;\n    pcVar3 = (char *)(param_2 + 1);\n    if (__name == (char *)0x0) goto LAB_004059b1;\n    bVar8 = pcVar3 == (char *)0x0 && param_2 != 0;\n    if (*__name != '+') goto LAB_00405a8a;\n    goto LAB_00405b56;\n  }\n  if (*(char *)(param_2 + 1) == '\\0') {\n    __name = (char *)0x0;\n    goto LAB_00405b9a;\n  }\nLAB_004059b1:\n  pcVar3 = (char *)(param_2 + 1);\n  __name = (char *)0x0;\njoined_r0x00405c11:\n  if (pcVar3 == (char *)0x0) goto LAB_004059ef;\n  if (*pcVar3 == '+') {\nLAB_00405acb:\n    iVar1 = FUN_004065d0(pcVar3,0,10,local_58,\"\");\n    if ((iVar1 != 0) || (0xfffffffe < local_58[0])) {\n      endgrent();\n      pcVar6 = \"invalid group\";\n      __ptr = (void *)FUN_004064f0(pcVar3);\nLAB_00405b67:\n      free(__name);\n      free(__ptr);\n      uVar5 = dcgettext(0,pcVar6,5);\n      return uVar5;\n    }\n  }\n  else {\nLAB_004059ca:\n    pgVar2 = getgrnam(pcVar3);\n    if (pgVar2 == (group *)0x0) goto LAB_00405acb;\n    local_58[0] = (ulong)pgVar2->gr_gid;\n  }\n  __gid = (__gid_t)local_58[0];\n  endgrent();\n  pcVar3 = (char *)FUN_004064f0(pcVar3);\nLAB_004059ef:\n  *param_3 = local_6c;\n  if (param_4 != (__gid_t *)0x0) {\n    *param_4 = __gid;\n  }\n  if (param_5 != (char **)0x0) {\n    *param_5 = __name;\n    __name = (char *)0x0;\n  }\n  if (param_6 != (char **)0x0) {\n    *param_6 = pcVar3;\n    pcVar3 = (char *)0x0;\n  }\n  free(__name);\n  free(pcVar3);\n  return 0;\n}\n\n",
            "funcName": "FUN_00405940"
        },
        {
            "funcStartAddr": "0x405c50",
            "funcEndAddr": "0x405d0d",
            "decompiledFuncCode": "\nlong FUN_00405c50(char *param_1,undefined8 param_2,long param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  char *pcVar1;\n  long lVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar2 = FUN_00405940(param_1,0,param_2,0,param_4,param_5);\n    return lVar2;\n  }\n  pcVar1 = strchr(param_1,0x3a);\n  lVar2 = FUN_00405940(param_1,pcVar1,param_2,param_3,param_4,param_5);\n  if (pcVar1 != (char *)0x0) {\n    return lVar2;\n  }\n  if (lVar2 != 0) {\n    pcVar1 = strchr(param_1,0x2e);\n    if (pcVar1 == (char *)0x0) {\n      return lVar2;\n    }\n    lVar3 = FUN_00405940(param_1,pcVar1,param_2,param_3,param_4,param_5);\n    if (lVar3 != 0) {\n      return lVar2;\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00405c50"
        },
        {
            "funcStartAddr": "0x405d20",
            "funcEndAddr": "0x4060c4",
            "decompiledFuncCode": "\nundefined8\nFUN_00405d20(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040e6f3,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405f9c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405f9c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00406039;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00406039:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405e1a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00405e1a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405d20"
        },
        {
            "funcStartAddr": "0x406100",
            "funcEndAddr": "0x406120",
            "decompiledFuncCode": "\nvoid FUN_00406100(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405d20();\n  return;\n}\n\n",
            "funcName": "FUN_00406100"
        },
        {
            "funcStartAddr": "0x406120",
            "funcEndAddr": "0x406179",
            "decompiledFuncCode": "\nvoid FUN_00406120(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405d20();\n  return;\n}\n\n",
            "funcName": "FUN_00406120"
        },
        {
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x406238",
            "decompiledFuncCode": "\nvoid FUN_00406180(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405d20();\n  return;\n}\n\n",
            "funcName": "FUN_00406180"
        },
        {
            "funcStartAddr": "0x406240",
            "funcEndAddr": "0x4062b4",
            "decompiledFuncCode": "\nvoid FUN_00406240(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00406240"
        },
        {
            "funcStartAddr": "0x4062c0",
            "funcEndAddr": "0x4062da",
            "decompiledFuncCode": "\nvoid FUN_004062c0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00406510();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004062c0"
        },
        {
            "funcStartAddr": "0x4062e0",
            "funcEndAddr": "0x406301",
            "decompiledFuncCode": "\nvoid FUN_004062e0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_004062c0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00406510();\n}\n\n",
            "funcName": "FUN_004062e0"
        },
        {
            "funcStartAddr": "0x406310",
            "funcEndAddr": "0x406312",
            "decompiledFuncCode": "\nvoid thunk_FUN_004062c0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00406510();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_406310"
        },
        {
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x406350",
            "decompiledFuncCode": "\nvoid * FUN_00406320(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00406510();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00406320"
        },
        {
            "funcStartAddr": "0x406360",
            "funcEndAddr": "0x406381",
            "decompiledFuncCode": "\nvoid FUN_00406360(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00406320();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00406510();\n}\n\n",
            "funcName": "FUN_00406360"
        },
        {
            "funcStartAddr": "0x406390",
            "funcEndAddr": "0x406408",
            "decompiledFuncCode": "\nvoid FUN_00406390(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004063eb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004063eb:\n                    /* WARNING: Subroutine does not return */\n      FUN_00406510(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00406320(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406390"
        },
        {
            "funcStartAddr": "0x406420",
            "funcEndAddr": "0x40646a",
            "decompiledFuncCode": "\nvoid FUN_00406420(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00406320(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040646a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040646a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00406510();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00406320(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00406420"
        },
        {
            "funcStartAddr": "0x406470",
            "funcEndAddr": "0x406487",
            "decompiledFuncCode": "\nvoid FUN_00406470(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_004062c0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406470"
        },
        {
            "funcStartAddr": "0x406490",
            "funcEndAddr": "0x4064be",
            "decompiledFuncCode": "\nvoid FUN_00406490(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00406510();\n}\n\n",
            "funcName": "FUN_00406490"
        },
        {
            "funcStartAddr": "0x4064c0",
            "funcEndAddr": "0x4064e8",
            "decompiledFuncCode": "\nvoid FUN_004064c0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_004062c0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004064c0"
        },
        {
            "funcStartAddr": "0x4064f0",
            "funcEndAddr": "0x406503",
            "decompiledFuncCode": "\nvoid FUN_004064f0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_004062c0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004064f0"
        },
        {
            "funcStartAddr": "0x406510",
            "funcEndAddr": "0x406541",
            "decompiledFuncCode": "\nvoid FUN_00406510(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_006122d8,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406510"
        },
        {
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406591",
            "decompiledFuncCode": "\nvoid FUN_00406550(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00406510();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n",
            "funcName": "FUN_00406550"
        },
        {
            "funcStartAddr": "0x4065a0",
            "funcEndAddr": "0x4065c1",
            "decompiledFuncCode": "\nbool FUN_004065a0(long param_1,long param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  \n  bVar1 = true;\n  uVar2 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar2 != 0x10) && (bVar1 = false, uVar2 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004065a0"
        },
        {
            "funcStartAddr": "0x4065d0",
            "funcEndAddr": "0x40697c",
            "decompiledFuncCode": "\nulong FUN_004065d0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00406670;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040674c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0040673a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00406729. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040eae0)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0040673a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_004067a7;\n  default:\nswitchD_0040674c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406834;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040676c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_004067a7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040676c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_004067a7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406834;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406834;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406834;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00406834:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_004067a7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_004067a7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00406670:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_004065d0"
        },
        {
            "funcStartAddr": "0x406a00",
            "funcEndAddr": "0x406c42",
            "decompiledFuncCode": "\nulong FUN_00406a00(uint param_1,char *param_2,uint param_3,__gid_t param_4,uint param_5)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint *puVar5;\n  uint *puVar6;\n  int *piVar7;\n  ulong *puVar8;\n  ulong *puVar9;\n  uint local_ff8 [1010];\n  \n  if ((param_5 & 0xfffffeff) != 0) {\n    piVar7 = __errno_location();\n    uVar2 = 0xffffffff;\n    *piVar7 = 0x16;\n    goto LAB_00406b3e;\n  }\n  puVar9 = (ulong *)(ulong)param_3;\n  if ((param_1 == 0xffffff9c) || (*param_2 == '/')) {\n    if (param_5 == 0x100) {\n      uVar2 = lchown(param_2,param_3,param_4);\n    }\n    else {\n      uVar2 = chown(param_2,param_3,param_4);\n    }\n    goto LAB_00406b3e;\n  }\n  puVar8 = (ulong *)(ulong)param_1;\n  puVar5 = (uint *)FUN_00409d90(local_ff8,puVar8,param_2);\n  if (puVar5 == (uint *)0x0) goto LAB_00406ad0;\n  if (param_5 == 0x100) {\n    uVar2 = lchown((char *)puVar5,param_3,param_4);\n  }\n  else {\n    uVar2 = chown((char *)puVar5,param_3,param_4);\n  }\n  puVar6 = (uint *)__errno_location();\n  uVar1 = *puVar6;\n  if (puVar5 != local_ff8) {\n    free(puVar5);\n  }\n  puVar8 = (ulong *)(ulong)uVar1;\n  if (uVar2 != 0xffffffff) goto LAB_00406b3e;\n  if (uVar1 < 0x27) {\n    if ((0x4000102006U >> ((ulong)puVar8 & 0x3f) & 1) == 0) {\nLAB_00406b81:\n      *puVar6 = uVar1;\n      goto LAB_00406b3e;\n    }\n  }\n  else if (uVar1 != 0x5f) goto LAB_00406b81;\nLAB_00406ad0:\n  iVar3 = FUN_0040b990(local_ff8);\n  if (iVar3 == 0) {\n    if (((int)param_1 < 0) || (local_ff8[0] != param_1)) {\n      iVar3 = fchdir(param_1);\n      if (iVar3 == 0) {\n        if (param_5 == 0x100) {\n          uVar2 = lchown(param_2,param_3,param_4);\n          puVar8 = puVar9;\n        }\n        else {\n          uVar2 = chown(param_2,param_3,param_4);\n          puVar8 = puVar9;\n        }\n        if (uVar2 == 0xffffffff) {\n          piVar7 = __errno_location();\n          iVar3 = *piVar7;\n          iVar4 = FUN_0040b9e0(local_ff8);\n          if (iVar4 == 0) {\n            FUN_0040ba00(local_ff8);\n            if (iVar3 != 0) {\n              *piVar7 = iVar3;\n            }\n            goto LAB_00406b3e;\n          }\n        }\n        else {\n          iVar3 = FUN_0040b9e0(local_ff8);\n          if (iVar3 == 0) {\n            FUN_0040ba00(local_ff8);\n            goto LAB_00406b3e;\n          }\n        }\n        piVar7 = __errno_location();\n        FUN_0040b910(*piVar7);\n        goto LAB_00406c62;\n      }\n      piVar7 = __errno_location();\n      uVar2 = 0xffffffff;\n      iVar3 = *piVar7;\n      FUN_0040ba00(local_ff8);\n      *piVar7 = iVar3;\n    }\n    else {\n      uVar2 = 0xffffffff;\n      FUN_0040ba00(local_ff8);\n      piVar7 = __errno_location();\n      *piVar7 = 9;\n    }\nLAB_00406b3e:\n    return (ulong)uVar2;\n  }\nLAB_00406c62:\n  puVar5 = (uint *)__errno_location();\n  puVar9 = (ulong *)(ulong)*puVar5;\n  FUN_0040b8e0();\n  if (puVar9[1] != puVar8[1]) {\n    return 0;\n  }\n  return *puVar8 & 0xffffffffffffff00 | (ulong)(*puVar9 == *puVar8);\n}\n\n",
            "funcName": "FUN_00406a00"
        },
        {
            "funcStartAddr": "0x406c70",
            "funcEndAddr": "0x406c87",
            "decompiledFuncCode": "\nulong FUN_00406c70(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00406c70"
        },
        {
            "funcStartAddr": "0x406c90",
            "funcEndAddr": "0x406c9d",
            "decompiledFuncCode": "\nulong FUN_00406c90(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_00406c90"
        },
        {
            "funcStartAddr": "0x406ca0",
            "funcEndAddr": "0x406cac",
            "decompiledFuncCode": "\nulong FUN_00406ca0(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00406ca0"
        },
        {
            "funcStartAddr": "0x406cb0",
            "funcEndAddr": "0x406cba",
            "decompiledFuncCode": "\nulong FUN_00406cb0(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00406cb0"
        },
        {
            "funcStartAddr": "0x406cc0",
            "funcEndAddr": "0x406ce2",
            "decompiledFuncCode": "\nulong FUN_00406cc0(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406cc0"
        },
        {
            "funcStartAddr": "0x406cf0",
            "funcEndAddr": "0x406e7e",
            "decompiledFuncCode": "\nint FUN_00406cf0(long param_1,long param_2,char param_3)\n\n{\n  stat *__stat_buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __stat_buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = __xstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n    if (iVar1 == 0) {\nLAB_00406d87:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = __lxstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = __fxstatat(1,*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__stat_buf,0x100);\n    if (iVar1 == 0) goto LAB_00406d87;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__stat_buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n",
            "funcName": "FUN_00406cf0"
        },
        {
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x406f92",
            "decompiledFuncCode": "\nlong FUN_00406ea0(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00406ef5:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00406ef5;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n",
            "funcName": "FUN_00406ea0"
        },
        {
            "funcStartAddr": "0x406fa0",
            "funcEndAddr": "0x40702a",
            "decompiledFuncCode": "\nvoid * FUN_00406fa0(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n",
            "funcName": "FUN_00406fa0"
        },
        {
            "funcStartAddr": "0x407030",
            "funcEndAddr": "0x40706a",
            "decompiledFuncCode": "\nvoid FUN_00407030(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_00407030"
        },
        {
            "funcStartAddr": "0x407080",
            "funcEndAddr": "0x4070a9",
            "decompiledFuncCode": "\nvoid FUN_00407080(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_0040b2d0(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_0040b320(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00407080"
        },
        {
            "funcStartAddr": "0x4070c0",
            "funcEndAddr": "0x4071c4",
            "decompiledFuncCode": "\nlong FUN_004070c0(long param_1)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  undefined8 *__ptr;\n  undefined8 *puVar4;\n  long lVar5;\n  statfs local_98;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  if ((*(byte *)(lVar3 + 0x49) & 2) == 0) {\n    return 0;\n  }\n  lVar5 = *(long *)(lVar3 + 0x50);\n  if (lVar5 == 0) {\n    lVar5 = FUN_0040a8f0(0xd,0,FUN_00406ca0,FUN_00406cb0,free);\n    *(long *)(lVar3 + 0x50) = lVar5;\n    if (lVar5 == 0) {\n      iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n      if (iVar2 == 0) {\n        return local_98.f_type;\n      }\n      return 0;\n    }\n  }\n  local_98.f_type = *(long *)(param_1 + 0x78);\n  lVar3 = FUN_0040a680(lVar5,&local_98);\n  if (lVar3 == 0) {\n    iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n    if (iVar2 != 0) {\n      return 0;\n    }\n    __ptr = (undefined8 *)malloc(0x10);\n    if (__ptr != (undefined8 *)0x0) {\n      uVar1 = *(undefined8 *)(param_1 + 0x78);\n      __ptr[1] = local_98.f_type;\n      *__ptr = uVar1;\n      puVar4 = (undefined8 *)FUN_0040b090(lVar5,__ptr);\n      if (puVar4 != (undefined8 *)0x0) {\n        if (__ptr == puVar4) {\n          return local_98.f_type;\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(__ptr);\n    }\n  }\n  else {\n    local_98.f_type = *(long *)(lVar3 + 8);\n  }\n  return local_98.f_type;\n}\n\n",
            "funcName": "FUN_004070c0"
        },
        {
            "funcStartAddr": "0x4071e0",
            "funcEndAddr": "0x40723a",
            "decompiledFuncCode": "\nbool FUN_004071e0(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_004070c0();\n  if (lVar1 != 0x9fa0) {\n    if (lVar1 < 0x9fa1) {\n      if (lVar1 == 0) {\n        return false;\n      }\n      return lVar1 != 0x6969;\n    }\n    if (lVar1 != 0x5346414f) {\n      if (lVar1 == 0x58465342) {\n        return (bool)2;\n      }\n      return (bool)((lVar1 == 0x52654973) + '\\x01');\n    }\n  }\n  return false;\n}\n\n",
            "funcName": "FUN_004071e0"
        },
        {
            "funcStartAddr": "0x407250",
            "funcEndAddr": "0x4072b3",
            "decompiledFuncCode": "\nvoid FUN_00407250(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0040b2e0(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00407250"
        },
        {
            "funcStartAddr": "0x4072c0",
            "funcEndAddr": "0x40730f",
            "decompiledFuncCode": "\nuint FUN_004072c0(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_00407250(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_00407080(param_1 + 0x60);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_004072c0"
        },
        {
            "funcStartAddr": "0x407320",
            "funcEndAddr": "0x40737f",
            "decompiledFuncCode": "\nundefined8 FUN_00407320(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n",
            "funcName": "FUN_00407320"
        },
        {
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x4073e6",
            "decompiledFuncCode": "\nulong FUN_00407390(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  \n  if ((param_1 & 0x102) == 0) {\n    pvVar1 = malloc(0x20);\n    *param_2 = pvVar1;\n    uVar2 = 0;\n    if (pvVar1 != (void *)0x0) {\n      FUN_00409f20();\n      return 1;\n    }\n  }\n  else {\n    pvVar1 = (void *)FUN_0040a8f0(0x1f,0,FUN_00406c90,FUN_00406c70,free);\n    *param_2 = pvVar1;\n    uVar2 = (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00407390"
        },
        {
            "funcStartAddr": "0x4073f0",
            "funcEndAddr": "0x40742e",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00409fd8) */\n/* WARNING: Removing unreachable block (ram,0x0040b968) */\n\nvoid FUN_004073f0(int param_1,uint param_2,char *param_3)\n\n{\n  int iVar1;\n  uint __oflag;\n  \n  __oflag = (param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900;\n  if ((param_2 & 0x200) != 0) {\n    iVar1 = openat(param_1,param_3,__oflag,0);\n    FUN_0040ba20(iVar1);\n    return;\n  }\n  iVar1 = open(param_3,__oflag,0);\n  FUN_0040ba20(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004073f0"
        },
        {
            "funcStartAddr": "0x407440",
            "funcEndAddr": "0x4075f0",
            "decompiledFuncCode": "\nint FUN_00407440(long param_1,long param_2,int param_3,byte *param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  stat local_c8;\n  \n  uVar9 = *(uint *)(param_1 + 0x48);\n  bVar10 = false;\n  bVar11 = param_4 == (byte *)0x0;\n  iVar3 = param_3;\n  if (bVar11) {\nLAB_004074e0:\n    if ((uVar9 & 4) != 0) {\nLAB_00407550:\n      if (((uVar9 & 0x200) != 0) && (-1 < param_3)) {\n        close(param_3);\n        return 0;\n      }\n      return 0;\n    }\n    if (param_3 < 0) {\n      bVar2 = 0;\nLAB_0040757e:\n      iVar3 = FUN_004073f0(*(undefined4 *)(param_1 + 0x2c),uVar9,param_4);\n      if (iVar3 < 0) {\n        return -1;\n      }\n    }\n    else {\n      bVar2 = 0;\n    }\n  }\n  else {\n    lVar6 = 3;\n    pbVar7 = param_4;\n    pbVar8 = &DAT_0040ee19;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar7 < *pbVar8;\n      bVar11 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar11);\n    if ((!bVar10 && !bVar11) != bVar10) goto LAB_004074e0;\n    if ((uVar9 & 4) != 0) goto LAB_00407550;\n    if (param_3 < 0) {\n      if ((uVar9 & 0x200) == 0) {\n        bVar2 = 1;\n      }\n      else {\n        bVar2 = FUN_0040b2d0(param_1 + 0x60);\n        if (bVar2 == 0) {\n          iVar3 = FUN_0040b320(param_1 + 0x60);\n          if (-1 < iVar3) {\n            bVar2 = 1;\n            param_3 = iVar3;\n            goto LAB_004074f2;\n          }\n          uVar9 = *(uint *)(param_1 + 0x48);\n          bVar2 = 1;\n        }\n      }\n      goto LAB_0040757e;\n    }\n    bVar2 = 1;\n  }\nLAB_004074f2:\n  iVar4 = __fxstat(1,iVar3,&local_c8);\n  if (iVar4 == 0) {\n    if ((*(__dev_t *)(param_2 + 0x78) == local_c8.st_dev) &&\n       (*(__ino_t *)(param_2 + 0x80) == local_c8.st_ino)) {\n      if ((*(byte *)(param_1 + 0x49) & 2) != 0) {\n        FUN_00407250(param_1,iVar3,bVar2 ^ 1);\n        return 0;\n      }\n      iVar4 = fchdir(iVar3);\n      goto LAB_00407533;\n    }\n    piVar5 = __errno_location();\n    *piVar5 = 2;\n  }\n  iVar4 = -1;\nLAB_00407533:\n  if (param_3 < 0) {\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\n    close(iVar3);\n    *piVar5 = iVar1;\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00407440"
        },
        {
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x4076b4",
            "decompiledFuncCode": "\nundefined8 FUN_00407610(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_00409f30(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_0040b090(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00407610"
        },
        {
            "funcStartAddr": "0x4076c0",
            "funcEndAddr": "0x407751",
            "decompiledFuncCode": "\nvoid FUN_004076c0(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  void *__ptr;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_00402153;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        lVar3 = *(long *)(lVar1 + 0x80);\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = lVar3;\n      }\n    }\n    return;\n  }\n  local_28 = *(undefined8 *)(param_3 + 0x78);\n  local_20 = *(undefined8 *)(param_3 + 0x80);\n  __ptr = (void *)FUN_0040b0d0(*param_2,&local_28);\n  if (__ptr != (void *)0x0) {\n    free(__ptr);\n    return;\n  }\nFUN_00402153:\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004076c0"
        },
        {
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x4080ca",
            "decompiledFuncCode": "\nvoid * FUN_00407760(long *param_1,int param_2)\n\n{\n  DIR *__dirp;\n  ulong uVar1;\n  long lVar2;\n  bool bVar3;\n  undefined *puVar4;\n  char cVar5;\n  undefined2 uVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  dirent *pdVar10;\n  size_t sVar11;\n  void *pvVar12;\n  undefined8 uVar13;\n  void *pvVar14;\n  DIR *pDVar15;\n  long lVar16;\n  long lVar17;\n  uint uVar18;\n  ushort uVar19;\n  ulong uVar20;\n  uint uVar21;\n  undefined4 uVar22;\n  bool bVar23;\n  void *local_90;\n  ulong local_88;\n  void *local_80;\n  ulong local_78;\n  ulong local_60;\n  undefined *local_58;\n  ulong local_50;\n  char local_3a;\n  \n  lVar17 = *param_1;\n  __dirp = *(DIR **)(lVar17 + 0x18);\n  if (__dirp == (DIR *)0x0) {\n    uVar21 = *(uint *)(param_1 + 9);\n    uVar18 = uVar21 & 0x10;\n    if ((uVar18 != 0) && (uVar18 = 0x20000, (uVar21 & 1) != 0)) {\n      uVar18 = (uint)(*(long *)(lVar17 + 0x58) != 0) << 0x11;\n    }\n    uVar22 = 0xffffff9c;\n    if ((uVar21 & 0x204) == 0x200) {\n      uVar22 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    iVar7 = FUN_0040b940(uVar22,*(undefined8 *)(lVar17 + 0x30),\n                         (uVar21 & 0x800) << 7 | uVar18 | 0x90900);\n    if (-1 < iVar7) {\n      pDVar15 = fdopendir(iVar7);\n      if (pDVar15 != (DIR *)0x0) {\n        *(DIR **)(lVar17 + 0x18) = pDVar15;\n        if (*(short *)(lVar17 + 0x70) == 0xb) {\n          uVar6 = FUN_00406cf0(param_1,lVar17,0);\n          *(undefined2 *)(lVar17 + 0x70) = uVar6;\n        }\n        else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n          FUN_004076c0(*(uint *)(param_1 + 9),param_1 + 0xb,lVar17);\n          FUN_00406cf0(param_1,lVar17,0);\n          cVar5 = FUN_00407610(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar17);\n          if (cVar5 == '\\0') {\n            piVar9 = __errno_location();\n            *piVar9 = 0xc;\n            return (void *)0x0;\n          }\n        }\n        local_60 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n        if (param_2 == 2) {\nLAB_00407f10:\n          bVar23 = false;\n          uVar21 = *(uint *)(param_1 + 9);\n          goto LAB_004077b4;\n        }\n        if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar17 + 0x88) == 2)) &&\n           (iVar8 = FUN_004071e0(lVar17), iVar8 != 0)) {\n          if (param_2 != 3) goto LAB_00407f10;\n          bVar3 = false;\n          bVar23 = true;\n        }\n        else {\n          bVar23 = param_2 == 3;\n          bVar3 = true;\n        }\n        if (((*(byte *)((long)param_1 + 0x49) & 2) == 0) ||\n           (iVar7 = FUN_0040bde0(iVar7,0x406,3), -1 < iVar7)) {\n          iVar8 = FUN_00407440(param_1,lVar17,iVar7,0);\n          if (iVar8 == 0) goto LAB_004077ab;\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) goto LAB_00407c4d;\nLAB_00407c62:\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n          if (((uVar21 & 0x200) != 0) && (-1 < iVar7)) {\n            close(iVar7);\n            uVar21 = *(uint *)(param_1 + 9);\n          }\n        }\n        else {\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) {\nLAB_00407c4d:\n            piVar9 = __errno_location();\n            *(int *)(lVar17 + 0x40) = *piVar9;\n            goto LAB_00407c62;\n          }\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n        }\n        *(undefined8 *)(lVar17 + 0x18) = 0;\n        bVar23 = false;\n        goto LAB_004077b4;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      *piVar9 = iVar8;\n    }\n    *(undefined8 *)(lVar17 + 0x18) = 0;\njoined_r0x00407edf:\n    if (param_2 == 3) {\n      *(undefined2 *)(lVar17 + 0x70) = 4;\n      piVar9 = __errno_location();\n      *(int *)(lVar17 + 0x40) = *piVar9;\n    }\n    return (void *)0x0;\n  }\n  iVar7 = dirfd(__dirp);\n  if (iVar7 < 0) {\n    closedir(*(DIR **)(lVar17 + 0x18));\n    *(undefined8 *)(lVar17 + 0x18) = 0;\n    goto joined_r0x00407edf;\n  }\n  if (param_1[8] == 0) {\n    local_60 = 100000;\n    uVar21 = *(uint *)(param_1 + 9);\n    bVar23 = true;\n  }\n  else {\n    local_60 = 0xffffffffffffffff;\nLAB_004077ab:\n    bVar23 = true;\n    uVar21 = *(uint *)(param_1 + 9);\n  }\nLAB_004077b4:\n  uVar1 = *(ulong *)(lVar17 + 0x48);\n  local_88 = uVar1;\n  local_50 = uVar1 - 1;\n  if (*(char *)(*(long *)(lVar17 + 0x38) + -1 + uVar1) != '/') {\n    local_88 = uVar1 + 1;\n    local_50 = uVar1;\n  }\n  local_58 = (undefined *)0x0;\n  if ((uVar21 & 4) != 0) {\n    local_58 = (undefined *)(local_50 + param_1[4]) + 1;\n    *(undefined *)(local_50 + param_1[4]) = 0x2f;\n  }\n  local_78 = param_1[6] - local_88;\n  local_3a = '\\0';\n  lVar16 = *(long *)(lVar17 + 0x58);\n  local_90 = (void *)0x0;\n  local_80 = (void *)0x0;\n  uVar1 = 0;\n  do {\n    do {\n      uVar20 = uVar1;\n      pDVar15 = *(DIR **)(lVar17 + 0x18);\n      if (pDVar15 == (DIR *)0x0) goto joined_r0x00407d8b;\n      piVar9 = __errno_location();\n      *piVar9 = 0;\n      pdVar10 = readdir(pDVar15);\n      if (pdVar10 == (dirent *)0x0) {\n        if (*piVar9 != 0) {\n          *(int *)(lVar17 + 0x40) = *piVar9;\n          *(ushort *)(lVar17 + 0x70) = (-(ushort)(((ulong)__dirp | uVar20) == 0) & 0xfffd) + 7;\n        }\n        if (*(DIR **)(lVar17 + 0x18) != (DIR *)0x0) {\n          closedir(*(DIR **)(lVar17 + 0x18));\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n        }\n        goto joined_r0x00407d8b;\n      }\n    } while ((((*(byte *)(param_1 + 9) & 0x20) == 0) && (pdVar10->d_name[0] == '.')) &&\n            ((uVar1 = uVar20, pdVar10->d_name[1] == '\\0' ||\n             (*(short *)(pdVar10->d_name + 1) == 0x2e))));\n    sVar11 = strlen(pdVar10->d_name);\n    pvVar12 = (void *)FUN_00406fa0(param_1,pdVar10->d_name,sVar11);\n    if (pvVar12 == (void *)0x0) {\nLAB_00407cc0:\n      iVar7 = *piVar9;\n      free(pvVar12);\n      FUN_00407030(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = iVar7;\n      return (void *)0x0;\n    }\n    if (local_78 <= sVar11) {\n      lVar2 = param_1[4];\n      cVar5 = FUN_00407320(param_1 + 4,param_1 + 6,local_50 + 2 + sVar11);\n      if (cVar5 == '\\0') goto LAB_00407cc0;\n      puVar4 = local_58;\n      if ((param_1[4] != lVar2) &&\n         (local_3a = cVar5, puVar4 = (undefined *)(param_1[4] + local_88),\n         (*(byte *)(param_1 + 9) & 4) == 0)) {\n        puVar4 = local_58;\n      }\n      local_58 = puVar4;\n      local_78 = param_1[6] - local_88;\n    }\n    if (CARRY8(sVar11,local_88)) {\n      free(pvVar12);\n      FUN_00407030(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = 0x24;\n      return (void *)0x0;\n    }\n    *(long *)((long)pvVar12 + 0x58) = lVar16 + 1;\n    lVar2 = *param_1;\n    *(size_t *)((long)pvVar12 + 0x48) = sVar11 + local_88;\n    *(long *)((long)pvVar12 + 8) = lVar2;\n    *(__ino_t *)((long)pvVar12 + 0x80) = pdVar10->d_ino;\n    uVar21 = *(uint *)(param_1 + 9);\n    if ((uVar21 & 4) == 0) {\n      *(void **)((long)pvVar12 + 0x30) = (void *)((long)pvVar12 + 0x108);\n    }\n    else {\n      *(undefined8 *)((long)pvVar12 + 0x30) = *(undefined8 *)((long)pvVar12 + 0x38);\n      memmove(local_58,(void *)((long)pvVar12 + 0x108),*(long *)((long)pvVar12 + 0x60) + 1);\n      uVar21 = *(uint *)(param_1 + 9);\n    }\n    if ((param_1[8] == 0) || ((uVar21 & 0x400) != 0)) {\n      uVar18 = pdVar10->d_type - 1;\n      if (((uVar21 & 0x18) == 0x18) && ((pdVar10->d_type & 0xfb) != 0)) {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040ee20 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 1;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 1;\n        }\n      }\n      else {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040ee20 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 2;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 2;\n        }\n      }\n      *(undefined8 *)((long)pvVar12 + 0xa8) = uVar13;\n    }\n    else {\n      uVar6 = FUN_00406cf0(param_1,pvVar12,0);\n      *(undefined2 *)((long)pvVar12 + 0x70) = uVar6;\n    }\n    *(undefined8 *)((long)pvVar12 + 0x10) = 0;\n    pvVar14 = pvVar12;\n    if (local_80 != (void *)0x0) {\n      *(void **)((long)local_90 + 0x10) = pvVar12;\n      pvVar14 = local_80;\n    }\n    local_80 = pvVar14;\n    uVar1 = uVar20 + 1;\n    local_90 = pvVar12;\n  } while (uVar20 + 1 < local_60);\n  uVar20 = uVar20 + 1;\njoined_r0x00407d8b:\n  if (local_3a != '\\0') {\n    lVar2 = param_1[4];\n    for (lVar16 = param_1[1]; pvVar12 = local_80, lVar16 != 0; lVar16 = *(long *)(lVar16 + 0x10)) {\n      if (*(long *)(lVar16 + 0x30) != lVar16 + 0x108) {\n        *(long *)(lVar16 + 0x30) = (*(long *)(lVar16 + 0x30) - *(long *)(lVar16 + 0x38)) + lVar2;\n      }\n      *(long *)(lVar16 + 0x38) = lVar2;\n    }\n    while (pvVar14 = pvVar12, -1 < *(long *)((long)pvVar14 + 0x58)) {\n      if (*(long *)((long)pvVar14 + 0x30) != (long)pvVar14 + 0x108) {\n        *(long *)((long)pvVar14 + 0x30) =\n             (*(long *)((long)pvVar14 + 0x30) - *(long *)((long)pvVar14 + 0x38)) + lVar2;\n      }\n      *(long *)((long)pvVar14 + 0x38) = lVar2;\n      pvVar12 = *(void **)((long)pvVar14 + 0x10);\n      if (*(void **)((long)pvVar14 + 0x10) == (void *)0x0) {\n        pvVar12 = *(void **)((long)pvVar14 + 8);\n      }\n    }\n  }\n  if ((*(byte *)(param_1 + 9) & 4) != 0) {\n    if ((param_1[6] == local_88) || (uVar20 == 0)) {\n      local_58 = local_58 + -1;\n    }\n    *local_58 = 0;\n  }\n  if ((__dirp == (DIR *)0x0) && (bVar23)) {\n    if ((param_2 == 1) || (uVar20 == 0)) {\n      if (*(long *)(lVar17 + 0x58) == 0) {\n        iVar7 = FUN_004072c0(param_1);\n      }\n      else {\n        iVar7 = FUN_00407440(param_1,*(undefined8 *)(lVar17 + 8),0xffffffff,&DAT_0040ee19);\n      }\n      if (iVar7 != 0) {\n        *(undefined2 *)(lVar17 + 0x70) = 7;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        FUN_00407030(local_80);\n        return (void *)0x0;\n      }\n      goto LAB_00407e28;\n    }\n  }\n  else {\nLAB_00407e28:\n    if (uVar20 == 0) {\n      if (((param_2 == 3) && (*(short *)(lVar17 + 0x70) != 4)) && (*(short *)(lVar17 + 0x70) != 7))\n      {\n        *(undefined2 *)(lVar17 + 0x70) = 6;\n      }\n      FUN_00407030(local_80);\n      return (void *)0x0;\n    }\n  }\n  lVar16 = param_1[8];\n  if (10000 < uVar20) {\n    if (lVar16 != 0) goto LAB_00407de7;\n    lVar17 = FUN_004070c0(lVar17);\n    if ((lVar17 != 0x6969) && (lVar17 != 0x1021994)) {\n      param_1[8] = (long)FUN_00406cc0;\n      pvVar12 = (void *)FUN_00406ea0(param_1,local_80,uVar20);\n      param_1[8] = 0;\n      return pvVar12;\n    }\n    lVar16 = param_1[8];\n  }\n  if (lVar16 == 0) {\n    return local_80;\n  }\n  if (uVar20 == 1) {\n    return local_80;\n  }\nLAB_00407de7:\n  pvVar12 = (void *)FUN_00406ea0(param_1,local_80,uVar20);\n  return pvVar12;\n}\n\n",
            "funcName": "FUN_00407760"
        },
        {
            "funcStartAddr": "0x408120",
            "funcEndAddr": "0x408490",
            "decompiledFuncCode": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  int iVar4;\n  long *__ptr;\n  size_t sVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  int *piVar9;\n  ulong uVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  void *local_50;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar9 = __errno_location();\n    *piVar9 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  if ((param_2 & 2) == 0) {\n    *(uint *)(__ptr + 9) = param_2;\n  }\n  else {\n    *(uint *)(__ptr + 9) = param_2 & 0xfffffdff | 4;\n  }\n  pcVar11 = *param_1;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  if (pcVar11 == (char *)0x0) {\n    uVar10 = 0x1000;\n  }\n  else {\n    uVar10 = 0;\n    ppcVar12 = param_1;\n    do {\n      sVar5 = strlen(pcVar11);\n      if (uVar10 < sVar5) {\n        uVar10 = sVar5;\n      }\n      ppcVar12 = ppcVar12 + 1;\n      pcVar11 = *ppcVar12;\n    } while (pcVar11 != (char *)0x0);\n    uVar10 = uVar10 + 1;\n    if (uVar10 < 0x1000) {\n      uVar10 = 0x1000;\n    }\n  }\n  local_42 = FUN_00407320(__ptr + 4,__ptr + 6,uVar10);\n  if (local_42 == 0) goto LAB_004083eb;\n  pcVar11 = *param_1;\n  if (pcVar11 == (char *)0x0) {\n    local_50 = (void *)0x0;\n    if (param_3 != 0) {\nLAB_00408233:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_00408240;\n    }\nLAB_00408422:\n    lVar7 = 0;\nLAB_0040835c:\n    lVar8 = FUN_00406fa0(__ptr,\"\",0);\n    *__ptr = lVar8;\n    if (lVar8 != 0) {\n      *(long *)(lVar8 + 0x10) = lVar7;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar8 + 0x70) = 9;\n      cVar2 = FUN_00407390(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar4 = FUN_004073f0(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0040ee1a);\n          *(int *)(__ptr + 5) = iVar4;\n          if (iVar4 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_0040b2b0(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_004083d0:\n    FUN_00407030(lVar7);\n    free(local_50);\n  }\n  else {\n    local_50 = (void *)FUN_00406fa0(__ptr,\"\",0);\n    if (local_50 != (void *)0x0) {\n      pcVar11 = *param_1;\n      *(undefined8 *)((long)local_50 + 0x58) = 0xffffffffffffffff;\n      *(undefined8 *)((long)local_50 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_00408233;\nLAB_00408240:\n      if (pcVar11 == (char *)0x0) goto LAB_00408422;\n      local_40 = 0;\n      uVar10 = 0;\n      lVar8 = 0;\n      do {\n        sVar5 = strlen(pcVar11);\n        if (((2 < sVar5) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) &&\n           (pcVar11[sVar5 - 1] == '/')) {\n          do {\n            if (pcVar11[sVar5 - 2] != '/') break;\n            sVar5 = sVar5 - 1;\n          } while (sVar5 != 1);\n        }\n        lVar6 = FUN_00406fa0(__ptr,pcVar11,sVar5);\n        lVar7 = lVar8;\n        if (lVar6 == 0) goto LAB_004083d0;\n        *(undefined8 *)(lVar6 + 0x58) = 0;\n        *(void **)(lVar6 + 8) = local_50;\n        *(long *)(lVar6 + 0x30) = lVar6 + 0x108;\n        lVar7 = lVar6;\n        if ((lVar8 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_00406cf0(__ptr,lVar6,0);\n          *(undefined2 *)(lVar6 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_004082d8;\n          *(undefined8 *)(lVar6 + 0x10) = 0;\n          if (lVar8 != 0) goto LAB_00408470;\n        }\n        else {\n          *(undefined8 *)(lVar6 + 0xa8) = 2;\n          *(undefined2 *)(lVar6 + 0x70) = 0xb;\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar6 + 0x10) = 0;\nLAB_00408470:\n            *(long *)(local_40 + 0x10) = lVar6;\n            lVar7 = lVar8;\n          }\n          else {\nLAB_004082d8:\n            *(long *)(lVar6 + 0x10) = lVar8;\n            lVar6 = local_40;\n          }\n        }\n        local_40 = lVar6;\n        uVar10 = uVar10 + 1;\n        pcVar11 = param_1[uVar10];\n        lVar8 = lVar7;\n      } while (pcVar11 != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar10)) {\n        lVar7 = FUN_00406ea0(__ptr,lVar7,uVar10);\n      }\n      goto LAB_0040835c;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_004083eb:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n",
            "funcName": "fts_open"
        },
        {
            "funcStartAddr": "0x4084c0",
            "funcEndAddr": "0x40860e",
            "decompiledFuncCode": "\nint fts_close(void **param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  void *__ptr;\n  void *__ptr_00;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar1 = *(long *)((long)__ptr + 0x58);\n    while (__ptr_00 = __ptr, -1 < lVar1) {\n      while (__ptr = *(void **)((long)__ptr_00 + 0x10), __ptr != (void *)0x0) {\n        free(__ptr_00);\n        __ptr_00 = __ptr;\n        if (*(long *)((long)__ptr + 0x58) < 0) goto LAB_0040850b;\n      }\n      __ptr = *(void **)((long)__ptr_00 + 8);\n      free(__ptr_00);\n      lVar1 = *(long *)((long)__ptr + 0x58);\n    }\nLAB_0040850b:\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_00407030();\n  }\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar2 = fchdir(*(int *)(param_1 + 5));\n      if (iVar2 == 0) {\n        iVar2 = close(*(int *)(param_1 + 5));\n        if (iVar2 == 0) goto LAB_00408542;\n        piVar4 = __errno_location();\n      }\n      else {\n        piVar4 = __errno_location();\n        iVar2 = *piVar4;\n        iVar3 = close(*(int *)(param_1 + 5));\n        if ((iVar3 == 0) || (iVar2 != 0)) goto LAB_00408544;\n      }\n      iVar2 = *piVar4;\n      goto LAB_00408544;\n    }\n  }\n  else if ((-1 < *(int *)((long)param_1 + 0x2c)) &&\n          (iVar2 = close(*(int *)((long)param_1 + 0x2c)), iVar2 != 0)) {\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    goto LAB_00408544;\n  }\nLAB_00408542:\n  iVar2 = 0;\nLAB_00408544:\n  FUN_00407080(param_1 + 0xc);\n  if (param_1[10] != (void *)0x0) {\n    FUN_0040ab30();\n  }\n  if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n    free(param_1[0xb]);\n  }\n  else if (param_1[0xb] != (void *)0x0) {\n    FUN_0040ab30();\n  }\n  free(param_1);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    *piVar4 = iVar2;\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "fts_close"
        },
        {
            "funcStartAddr": "0x408640",
            "funcEndAddr": "0x408d6a",
            "decompiledFuncCode": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  char *__s;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  char *pcVar10;\n  size_t sVar11;\n  long lVar12;\n  void *pvVar13;\n  void *pvVar14;\n  uint uVar15;\n  \n  pvVar14 = *param_1;\n  if (pvVar14 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar15 = *(uint *)(param_1 + 9);\n  if ((uVar15 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar14 + 0x74);\n  *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_00406cf0(param_1,pvVar14,0);\n    *(undefined2 *)((long)pvVar14 + 0x70) = uVar6;\n    return pvVar14;\n  }\n  sVar2 = *(short *)((long)pvVar14 + 0x70);\n  pvVar13 = pvVar14;\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00408797;\n      goto LAB_004086c0;\n    }\n    sVar7 = FUN_00406cf0(param_1,pvVar14,1);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar14;\n      if (sVar7 != 0xb) {\n        return pvVar14;\n      }\n      goto LAB_00408a00;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_004073f0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0040ee1a);\n      *(int *)((long)pvVar14 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n        *(int *)((long)pvVar14 + 0x40) = iVar8;\n        *param_1 = pvVar14;\n        return pvVar14;\n      }\n      *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00408977;\n    }\n    *param_1 = pvVar14;\nLAB_0040898e:\n    if (*(long *)((long)pvVar14 + 0x58) != 0) goto LAB_0040899e;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00408832;\nLAB_00408797:\n      if (((uVar15 & 0x40) != 0) && (*(void **)((long)pvVar14 + 0x78) != param_1[3])) {\nLAB_00408832:\n        if ((*(byte *)((long)pvVar14 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar14 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_00407030();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n        FUN_004076c0(uVar3,param_1 + 0xb,pvVar14);\n        return pvVar14;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_00408a59:\n        pvVar13 = (void *)FUN_00407760(param_1,3);\n        param_1[1] = pvVar13;\n        if (pvVar13 == (void *)0x0) {\n          uVar15 = *(uint *)(param_1 + 9);\n          if ((uVar15 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar14 + 0x40) != 0) && (*(short *)((long)pvVar14 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n          }\n          FUN_004076c0(uVar15,param_1 + 0xb,pvVar14);\n          return pvVar14;\n        }\n      }\n      else {\n        if ((uVar15 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar15 & 0xffffdfff;\n          FUN_00407030();\n          param_1[1] = (void *)0x0;\n          goto LAB_00408a59;\n        }\n        iVar8 = FUN_00407440(param_1,pvVar14,0xffffffff,*(undefined8 *)((long)pvVar14 + 0x30));\n        if (iVar8 == 0) {\n          pvVar13 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          pvVar13 = param_1[1];\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 1;\n          *(int *)((long)pvVar14 + 0x40) = iVar8;\n          for (pvVar14 = pvVar13; pvVar14 != (void *)0x0; pvVar14 = *(void **)((long)pvVar14 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar14 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar14 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n      pvVar14 = pvVar13;\n    }\n    else {\nLAB_004086c0:\n      do {\n        pvVar14 = *(void **)((long)pvVar13 + 0x10);\n        if (pvVar14 == (void *)0x0) {\n          pvVar14 = *(void **)((long)pvVar13 + 8);\n          if (*(long *)((long)pvVar14 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar14 + 0x48);\n            *param_1 = pvVar14;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar14 = (void *)FUN_00407760(param_1,3);\n            if (pvVar14 != (void *)0x0) {\n              free(pvVar13);\n              goto LAB_0040893a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar14 = *(void **)((long)pvVar13 + 8);\n          }\n          *param_1 = pvVar14;\n          free(pvVar13);\n          if (*(long *)((long)pvVar14 + 0x58) == -1) {\n            free(pvVar14);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar14 + 0x70) != 0xb) {\n            *(undefined *)((long)param_1[4] + *(long *)((long)pvVar14 + 0x48)) = 0;\n            if (*(long *)((long)pvVar14 + 0x58) == 0) {\n              iVar8 = FUN_004072c0(param_1);\n              if (iVar8 == 0) goto LAB_00408726;\nLAB_00408b3f:\n              piVar9 = __errno_location();\n              *(int *)((long)pvVar14 + 0x40) = *piVar9;\n              *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n              if (*(short *)((long)pvVar14 + 0x70) == 2) {\n                return (void *)0x0;\n              }\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              if ((*(ushort *)((long)pvVar14 + 0x72) & 2) == 0) {\n                if (((*(ushort *)((long)pvVar14 + 0x72) & 1) == 0) &&\n                   (iVar8 = FUN_00407440(param_1,*(undefined8 *)((long)pvVar14 + 8),0xffffffff,\n                                         &DAT_0040ee19), iVar8 != 0)) goto LAB_00408b3f;\n              }\n              else {\n                iVar8 = *(int *)((long)pvVar14 + 0x44);\n                if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                    iVar8 = fchdir(iVar8);\n                    if (iVar8 != 0) {\n                      piVar9 = __errno_location();\n                      *(int *)((long)pvVar14 + 0x40) = *piVar9;\n                      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                    }\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                  else {\n                    FUN_00407250(param_1,iVar8,1);\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                }\n                close(iVar8);\n              }\nLAB_00408726:\n              uVar15 = *(uint *)(param_1 + 9);\n              if (*(short *)((long)pvVar14 + 0x70) == 2) goto LAB_00408758;\n            }\n            if (*(int *)((long)pvVar14 + 0x40) == 0) {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n              FUN_004076c0(uVar15,param_1 + 0xb,pvVar14);\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            }\nLAB_00408758:\n            if ((uVar15 & 0x4000) != 0) {\n              return (void *)0x0;\n            }\n            return pvVar14;\n          }\n          goto FUN_00402158;\n        }\n        *param_1 = pvVar14;\n        free(pvVar13);\n        if (*(long *)((long)pvVar14 + 0x58) == 0) {\n          iVar8 = FUN_004072c0(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n            free(param_1[0xb]);\n          }\n          else if (param_1[0xb] != (void *)0x0) {\n            FUN_0040ab30();\n          }\n          __s = (char *)((long)pvVar14 + 0x108);\n          pvVar13 = param_1[4];\n          *(long *)((long)pvVar14 + 0x48) = *(long *)((long)pvVar14 + 0x60);\n          memmove(pvVar13,__s,*(long *)((long)pvVar14 + 0x60) + 1);\n          pcVar10 = strrchr(__s,0x2f);\n          if ((pcVar10 != (char *)0x0) &&\n             ((__s != pcVar10 || (*(char *)((long)pvVar14 + 0x109) != '\\0')))) {\n            sVar11 = strlen(pcVar10 + 1);\n            memmove(__s,pcVar10 + 1,sVar11 + 1);\n            *(size_t *)((long)pvVar14 + 0x60) = sVar11;\n          }\n          pvVar13 = param_1[4];\n          uVar3 = *(undefined4 *)(param_1 + 9);\n          *(void **)((long)pvVar14 + 0x38) = pvVar13;\n          *(void **)((long)pvVar14 + 0x30) = pvVar13;\n          FUN_00407390(uVar3,param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar14 + 0x70);\n          goto LAB_00408977;\n        }\n        pvVar13 = pvVar14;\n      } while (*(short *)((long)pvVar14 + 0x74) == 4);\n      if (*(short *)((long)pvVar14 + 0x74) == 2) {\n        sVar7 = FUN_00406cf0(param_1,pvVar14,1);\n        *(short *)((long)pvVar14 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_004073f0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0040ee1a);\n          *(int *)((long)pvVar14 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            *(int *)((long)pvVar14 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n      }\n    }\nLAB_0040893a:\n    lVar4 = *(long *)(*(long *)((long)pvVar14 + 8) + 0x48);\n    lVar12 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar14 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar12 = lVar4;\n    }\n    pvVar13 = param_1[4];\n    *(undefined *)(lVar12 + (long)pvVar13) = 0x2f;\n    memmove((undefined *)(lVar12 + (long)pvVar13) + 1,(void *)((long)pvVar14 + 0x108),\n            *(long *)((long)pvVar14 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar14 + 0x70);\nLAB_00408977:\n    *param_1 = pvVar14;\n    if (sVar7 != 0xb) {\nLAB_00408981:\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040898e;\n    }\nLAB_00408a00:\n    if (*(long *)((long)pvVar14 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar14 + 0xa8) == 1) {\n        return pvVar14;\n      }\nFUN_00402158:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    lVar4 = *(long *)((long)pvVar14 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_004071e0(lVar4), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00408981;\n    }\n    sVar7 = FUN_00406cf0(param_1,pvVar14,0);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar14 + 0x90) & 0xf000) != 0x4000) goto LAB_00408981;\n    if (*(long *)((long)pvVar14 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040899e;\n    }\n    if (sVar7 != 1) {\n      return pvVar14;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar14 + 0x78);\nLAB_0040899e:\n  cVar5 = FUN_00407610(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar14);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar14 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar14;\n}\n\n",
            "funcName": "fts_read"
        },
        {
            "funcStartAddr": "0x408da0",
            "funcEndAddr": "0x408dc5",
            "decompiledFuncCode": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n",
            "funcName": "fts_set"
        },
        {
            "funcStartAddr": "0x408dd0",
            "funcEndAddr": "0x408f1c",
            "decompiledFuncCode": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_00407030();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_004073f0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0040ee1a);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_00407760(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_00407250(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_00407760(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n",
            "funcName": "fts_children"
        },
        {
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x409015",
            "decompiledFuncCode": "\nvoid FUN_00408f40(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_00408fbc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_00408fbc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_00408fbc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00408f40"
        },
        {
            "funcStartAddr": "0x409020",
            "funcEndAddr": "0x40961e",
            "decompiledFuncCode": "\nint FUN_00409020(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00409240;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00409180;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00409180;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00409180:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00409240:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00409020"
        },
        {
            "funcStartAddr": "0x409640",
            "funcEndAddr": "0x409ba7",
            "decompiledFuncCode": "\nuint FUN_00409640(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040968a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040978d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040978d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00409798:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00409708;\nLAB_004097ac:\n    if (*pbVar8 == 0) goto LAB_00409708;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040968a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00409798;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_004097ac;\nLAB_00409708:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00408f40(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00409876:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040ef59;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00408f40(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00409876;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040ef59;\n        goto LAB_004099d5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00409980;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00409020(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040ef5a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00409980:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040ef78;\nLAB_004099d5:\n  uVar3 = FUN_00409020(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00409640"
        },
        {
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409c66",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00409c10(void)\n\n{\n  DAT_00612500 = DAT_0061233c;\n  _DAT_00612504 = DAT_00612338;\n  FUN_00409640();\n  DAT_0061233c = DAT_00612500;\n  DAT_00612550 = DAT_00612510;\n  _DAT_00612334 = DAT_00612508;\n  return;\n}\n\n",
            "funcName": "FUN_00409c10"
        },
        {
            "funcStartAddr": "0x409c70",
            "funcEndAddr": "0x409c88",
            "decompiledFuncCode": "\nvoid FUN_00409c70(void)\n\n{\n  FUN_00409c10();\n  return;\n}\n\n",
            "funcName": "FUN_00409c70"
        },
        {
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409ca3",
            "decompiledFuncCode": "\nvoid FUN_00409c90(void)\n\n{\n  FUN_00409c10();\n  return;\n}\n\n",
            "funcName": "FUN_00409c90"
        },
        {
            "funcStartAddr": "0x409cb0",
            "funcEndAddr": "0x409cc5",
            "decompiledFuncCode": "\nvoid FUN_00409cb0(void)\n\n{\n  FUN_00409640();\n  return;\n}\n\n",
            "funcName": "FUN_00409cb0"
        },
        {
            "funcStartAddr": "0x409cd0",
            "funcEndAddr": "0x409ce6",
            "decompiledFuncCode": "\nvoid FUN_00409cd0(void)\n\n{\n  FUN_00409c10();\n  return;\n}\n\n",
            "funcName": "FUN_00409cd0"
        },
        {
            "funcStartAddr": "0x409cf0",
            "funcEndAddr": "0x409d08",
            "decompiledFuncCode": "\nvoid FUN_00409cf0(void)\n\n{\n  FUN_00409640();\n  return;\n}\n\n",
            "funcName": "FUN_00409cf0"
        },
        {
            "funcStartAddr": "0x409d10",
            "funcEndAddr": "0x409d7f",
            "decompiledFuncCode": "\nsize_t FUN_00409d10(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40ef77;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00409d34;\n  }\n  param_1 = &local_1c;\nLAB_00409d34:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_0040a000(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00409d10"
        },
        {
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409ea2",
            "decompiledFuncCode": "\nundefined * FUN_00409d90(undefined *param_1,undefined4 param_2,char *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  size_t sVar3;\n  char acStack_48 [40];\n  \n  if (*param_3 == '\\0') {\n    *param_1 = 0;\n    return param_1;\n  }\n  if (DAT_00612538 == 0) {\n    iVar1 = open(\"/proc/self/fd\",0x10900);\n    if (iVar1 < 0) {\n      DAT_00612538 = 0xffffffff;\n      return (undefined *)0x0;\n    }\n    __sprintf_chk(acStack_48,1,0x20,\"/proc/self/fd/%d/../fd\",iVar1);\n    iVar2 = access(acStack_48,0);\n    DAT_00612538 = (-(uint)(iVar2 == 0) & 2) - 1;\n    close(iVar1);\n  }\n  if (DAT_00612538 < 0) {\nLAB_00409e1d:\n    param_1 = (undefined *)0x0;\n  }\n  else {\n    sVar3 = strlen(param_3);\n    if (0xfc0 < sVar3 + 0x1b) {\n      param_1 = (undefined *)malloc(sVar3 + 0x1b);\n      if (param_1 == (undefined *)0x0) goto LAB_00409e1d;\n    }\n    iVar1 = __sprintf_chk(param_1,1,0xffffffffffffffff,\"/proc/self/fd/%d/\",param_2);\n    strcpy(param_1 + iVar1,param_3);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00409d90"
        },
        {
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409f1c",
            "decompiledFuncCode": "\nulong FUN_00409ec0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040bd60(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00409ec0"
        },
        {
            "funcStartAddr": "0x409f20",
            "funcEndAddr": "0x409f30",
            "decompiledFuncCode": "\nvoid FUN_00409f20(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n",
            "funcName": "FUN_00409f20"
        },
        {
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409fa4",
            "decompiledFuncCode": "\nundefined8 FUN_00409f30(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  uVar2 = param_1[2];\n  lVar3 = param_2[1];\n  if (uVar2 == 0) {\n    param_1[2] = 1;\n  }\n  else {\n    if ((*param_1 == lVar3) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    uVar1 = uVar2 + 1;\n    param_1[2] = uVar1;\n    if ((uVar2 & uVar1) != 0) {\n      return 0;\n    }\n    if (uVar1 == 0) {\n      return 1;\n    }\n  }\n  lVar4 = *param_2;\n  *param_1 = lVar3;\n  param_1[1] = lVar4;\n  return 0;\n}\n\n",
            "funcName": "FUN_00409f30"
        },
        {
            "funcStartAddr": "0x409fb0",
            "funcEndAddr": "0x409ff6",
            "decompiledFuncCode": "\nvoid FUN_00409fb0(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040ba20(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409fb0"
        },
        {
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a056",
            "decompiledFuncCode": "\nbool FUN_0040a000(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040efec;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_0040a000"
        },
        {
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a0f1",
            "decompiledFuncCode": "\nulong FUN_0040a060(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_0040a0e0:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_0040a0e0;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040a060"
        },
        {
            "funcStartAddr": "0x40a100",
            "funcEndAddr": "0x40a110",
            "decompiledFuncCode": "\nulong FUN_0040a100(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_0040a100"
        },
        {
            "funcStartAddr": "0x40a110",
            "funcEndAddr": "0x40a117",
            "decompiledFuncCode": "\nbool FUN_0040a110(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_0040a110"
        },
        {
            "funcStartAddr": "0x40a120",
            "funcEndAddr": "0x40a141",
            "decompiledFuncCode": "\nlong FUN_0040a120(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040a120"
        },
        {
            "funcStartAddr": "0x40a150",
            "funcEndAddr": "0x40a255",
            "decompiledFuncCode": "\nlong FUN_0040a150(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_0040a120();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040a1dc:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040a1dc;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_0040a150"
        },
        {
            "funcStartAddr": "0x40a270",
            "funcEndAddr": "0x40a2ea",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040a270(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040f070) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040f084 < fVar1) && (fVar1 < DAT_0040f088)) && (_DAT_0040f08c < pfVar2[3])) &&\n     (_DAT_0040f090 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040f084;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040f094)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040f070;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a270"
        },
        {
            "funcStartAddr": "0x40a2f0",
            "funcEndAddr": "0x40a42a",
            "decompiledFuncCode": "\nundefined8 FUN_0040a2f0(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0040a318:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_0040a120(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0040a38f;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0040a38f:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0040a318;\n    plVar3 = (long *)FUN_0040a120(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040a2f0"
        },
        {
            "funcStartAddr": "0x40a440",
            "funcEndAddr": "0x40a445",
            "decompiledFuncCode": "\nundefined8 FUN_0040a440(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_0040a440"
        },
        {
            "funcStartAddr": "0x40a450",
            "funcEndAddr": "0x40a455",
            "decompiledFuncCode": "\nundefined8 FUN_0040a450(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_0040a450"
        },
        {
            "funcStartAddr": "0x40a460",
            "funcEndAddr": "0x40a465",
            "decompiledFuncCode": "\nundefined8 FUN_0040a460(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_0040a460"
        },
        {
            "funcStartAddr": "0x40a470",
            "funcEndAddr": "0x40a4bf",
            "decompiledFuncCode": "\nvoid FUN_0040a470(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a470"
        },
        {
            "funcStartAddr": "0x40a4c0",
            "funcEndAddr": "0x40a522",
            "decompiledFuncCode": "\nbool FUN_0040a4c0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0040a4d8:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0040a4d8;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040a4c0"
        },
        {
            "funcStartAddr": "0x40a530",
            "funcEndAddr": "0x40a66c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040a530(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040a59d;\n    }\n  }\nLAB_0040a59d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040f0a8) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_0040a530"
        },
        {
            "funcStartAddr": "0x40a680",
            "funcEndAddr": "0x40a6cb",
            "decompiledFuncCode": "\nlong FUN_0040a680(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_0040a120();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040a680"
        },
        {
            "funcStartAddr": "0x40a6e0",
            "funcEndAddr": "0x40a71a",
            "decompiledFuncCode": "\nlong FUN_0040a6e0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00402162();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00402162();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040a6e0"
        },
        {
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a789",
            "decompiledFuncCode": "\nlong FUN_0040a730(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_0040a120();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040a730"
        },
        {
            "funcStartAddr": "0x40a7a0",
            "funcEndAddr": "0x40a800",
            "decompiledFuncCode": "\nulong FUN_0040a7a0(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a7a0"
        },
        {
            "funcStartAddr": "0x40a810",
            "funcEndAddr": "0x40a87b",
            "decompiledFuncCode": "\nlong FUN_0040a810(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040a810"
        },
        {
            "funcStartAddr": "0x40a890",
            "funcEndAddr": "0x40a8c1",
            "decompiledFuncCode": "\nulong FUN_0040a890(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a890"
        },
        {
            "funcStartAddr": "0x40a8d0",
            "funcEndAddr": "0x40a8f0",
            "decompiledFuncCode": "\nvoid FUN_0040a8d0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_0040a8d0"
        },
        {
            "funcStartAddr": "0x40a8f0",
            "funcEndAddr": "0x40aa70",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_0040a8f0(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_0040a100;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_0040a110;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040f070;\n    cVar1 = FUN_0040a270(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a9d0;\n    fVar4 = DAT_0040f098;\n    if ((long)param_1 < 0) goto LAB_0040aa53;\nLAB_0040aa0e:\n    fVar3 = (float)param_1;\nLAB_0040aa17:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040f09c <= fVar3) goto LAB_0040a9d0;\n    if (fVar3 < _DAT_0040f0a0) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040f0a0) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_0040a270(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a9d0;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040aa0e;\nLAB_0040aa53:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_0040aa17;\n    }\n  }\n  __nmemb = (void *)FUN_0040a060(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_0040a9d0:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_0040a8f0"
        },
        {
            "funcStartAddr": "0x40aa80",
            "funcEndAddr": "0x40ab25",
            "decompiledFuncCode": "\nvoid FUN_0040aa80(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0040ab13;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0040ab13:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_0040aa80"
        },
        {
            "funcStartAddr": "0x40ab30",
            "funcEndAddr": "0x40ac00",
            "decompiledFuncCode": "\nvoid FUN_0040ab30(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040abcc;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040ab8f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040ab8f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040abcc:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040ab30"
        },
        {
            "funcStartAddr": "0x40ac10",
            "funcEndAddr": "0x40adfb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0040ac10(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040f09c <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040f0a0) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040f0a0) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_0040a060(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_0040a2f0(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_0040a2f0(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_0040a2f0(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040ac10"
        },
        {
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40b061",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040ae10(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_0040a150(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040af0a;\nLAB_0040ae7b:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_0040ae92;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040ae7b;\nLAB_0040af0a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_0040ae92;\n  }\n  FUN_0040a270(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040f09c <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040f0a0 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0040f0a0) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_0040ac10(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_0040a150(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_0040216c();\n      return uVar5;\n    }\n  }\nLAB_0040ae92:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_0040ae10"
        },
        {
            "funcStartAddr": "0x40b090",
            "funcEndAddr": "0x40b0c4",
            "decompiledFuncCode": "\nundefined8 FUN_0040b090(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_0040ae10(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b090"
        },
        {
            "funcStartAddr": "0x40b0d0",
            "funcEndAddr": "0x40b28f",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0040b0d0(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_0040a150(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_0040a270(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040f0a0 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040f0a0) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_0040ac10(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_0040b0d0"
        },
        {
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b2cb",
            "decompiledFuncCode": "\nvoid FUN_0040b2b0(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040b2b0"
        },
        {
            "funcStartAddr": "0x40b2d0",
            "funcEndAddr": "0x40b2d5",
            "decompiledFuncCode": "\nundefined FUN_0040b2d0(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n",
            "funcName": "FUN_0040b2d0"
        },
        {
            "funcStartAddr": "0x40b2e0",
            "funcEndAddr": "0x40b315",
            "decompiledFuncCode": "\nundefined4 FUN_0040b2e0(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar4 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar3 = *(int *)(param_1 + 0x14) + uVar4 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar3 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar3;\n  if (*(uint *)(param_1 + 0x18) == uVar3) {\n    *(uint *)(param_1 + 0x18) = uVar4 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040b2e0"
        },
        {
            "funcStartAddr": "0x40b320",
            "funcEndAddr": "0x40b35b",
            "decompiledFuncCode": "\nundefined4 FUN_0040b320(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  \n  if (*(char *)(param_1 + 0x1c) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040b320"
        },
        {
            "funcStartAddr": "0x40b370",
            "funcEndAddr": "0x40b8c4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040b370(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00612540 != (char *)0x0) goto LAB_0040b3aa;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040b495:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040b4b6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040b495;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040b4b6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040b550:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040b6dc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040b550;\n              if (uVar4 == 0x23) goto LAB_0040b741;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040b6ef;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040bd60(__stream);\n                goto LAB_0040b4f4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040b6dc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040b6ef;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040b4ee;\n    }\n  }\n  DAT_00612540 = \"\";\nLAB_0040b3aa:\n  cVar1 = *DAT_00612540;\n  pcVar7 = DAT_00612540;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040b404:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040b404;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040b741:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040b6ef;\n  goto LAB_0040b550;\nLAB_0040b6ef:\n  FUN_0040bd60(__stream);\n  if (local_d0 == 0) {\nLAB_0040b4ee:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040b4f4:\n  free(__file);\n  DAT_00612540 = pcVar7;\n  goto LAB_0040b3aa;\n}\n\n",
            "funcName": "FUN_0040b370"
        },
        {
            "funcStartAddr": "0x40b8e0",
            "funcEndAddr": "0x40b90b",
            "decompiledFuncCode": "\nvoid FUN_0040b8e0(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"unable to record current working directory\",5);\n  error(DAT_006122d8,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040b8e0"
        },
        {
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40b93b",
            "decompiledFuncCode": "\nvoid FUN_0040b910(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"failed to return to initial working directory\",5);\n  error(DAT_006122d8,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040b910"
        },
        {
            "funcStartAddr": "0x40b940",
            "funcEndAddr": "0x40b985",
            "decompiledFuncCode": "\nvoid FUN_0040b940(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_3 & 0x40) != 0) {\n    uVar2 = param_4 & 0xffffffff;\n  }\n  iVar1 = openat(param_1,param_2,param_3,uVar2);\n  FUN_0040ba20(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040b940"
        },
        {
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40b9d3",
            "decompiledFuncCode": "\nint FUN_0040b990(int *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = FUN_00409fb0(&DAT_0040ee1a,0x80000);\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  lVar2 = FUN_0040bfc0(0,0);\n  *(long *)(param_1 + 2) = lVar2;\n  return -(uint)(lVar2 == 0);\n}\n\n",
            "funcName": "FUN_0040b990"
        },
        {
            "funcStartAddr": "0x40b9e0",
            "funcEndAddr": "0x40b9f6",
            "decompiledFuncCode": "\nvoid FUN_0040b9e0(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  FUN_0040baf0(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040b9e0"
        },
        {
            "funcStartAddr": "0x40ba00",
            "funcEndAddr": "0x40ba19",
            "decompiledFuncCode": "\nvoid FUN_0040ba00(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040ba00"
        },
        {
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40ba6c",
            "decompiledFuncCode": "\nuint FUN_0040ba20(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0040c5a0();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040ba20"
        },
        {
            "funcStartAddr": "0x40ba70",
            "funcEndAddr": "0x40baa0",
            "decompiledFuncCode": "\nvoid FUN_0040ba70(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n",
            "funcName": "FUN_0040ba70"
        },
        {
            "funcStartAddr": "0x40bab0",
            "funcEndAddr": "0x40bae6",
            "decompiledFuncCode": "\nundefined8 FUN_0040bab0(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    FUN_0040ba70(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040bab0"
        },
        {
            "funcStartAddr": "0x40baf0",
            "funcEndAddr": "0x40bd46",
            "decompiledFuncCode": "\nint FUN_0040baf0(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  undefined *puVar5;\n  char *__s;\n  int local_2c;\n  \n  iVar1 = chdir(param_1);\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x24) {\n    return iVar1;\n  }\n  sVar3 = strlen(param_1);\n  local_2c = -100;\n  if (sVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (sVar3 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar4 = strspn(param_1,\"/\");\n  if (sVar4 == 2) {\n    puVar5 = (undefined *)FUN_0040c490(param_1 + 3,0x2f,sVar3 - 3);\n    if (puVar5 == (undefined *)0x0) {\n      return -1;\n    }\n    *puVar5 = 0;\n    iVar1 = FUN_0040bab0(&local_2c,param_1);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040bc20;\n    sVar4 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar4;\n  }\n  else {\n    __s = param_1;\n    if (sVar4 != 0) {\n      iVar1 = FUN_0040bab0(&local_2c,\"/\");\n      if (iVar1 != 0) goto LAB_0040bc20;\n      __s = param_1 + sVar4;\n    }\n  }\n  if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n  }\n  param_1 = param_1 + sVar3;\n  if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n  }\n  while (0xfff < (long)param_1 - (long)__s) {\n    puVar5 = (undefined *)memrchr(__s,0x2f,0x1000);\n    if (puVar5 == (undefined *)0x0) {\n      *piVar2 = 0x24;\n      return -1;\n    }\n    *puVar5 = 0;\n    if (0xfff < (long)puVar5 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n    }\n    iVar1 = FUN_0040bab0(&local_2c,__s);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040bc20;\n    sVar3 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar3;\n  }\n  if (((param_1 <= __s) || (iVar1 = FUN_0040bab0(&local_2c,__s), iVar1 == 0)) &&\n     (iVar1 = fchdir(local_2c), iVar1 == 0)) {\n    FUN_0040ba70(local_2c);\n    return 0;\n  }\nLAB_0040bc20:\n  iVar1 = *piVar2;\n  FUN_0040ba70(local_2c);\n  *piVar2 = iVar1;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040baf0"
        },
        {
            "funcStartAddr": "0x40bd60",
            "funcEndAddr": "0x40bdd8",
            "decompiledFuncCode": "\nint FUN_0040bd60(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040bdc7;\n    }\n    iVar1 = FUN_0040bf20(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040bdc7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040bd60"
        },
        {
            "funcStartAddr": "0x40bde0",
            "funcEndAddr": "0x40bf0c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040bde0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_00612548 < 0) {\n    iVar1 = FUN_0040bde0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_00612548 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_00612548 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040bde0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_00612548 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040bde0"
        },
        {
            "funcStartAddr": "0x40bf20",
            "funcEndAddr": "0x40bf5b",
            "decompiledFuncCode": "\nvoid FUN_0040bf20(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_0040bf60(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040bf20"
        },
        {
            "funcStartAddr": "0x40bf60",
            "funcEndAddr": "0x40bfb6",
            "decompiledFuncCode": "\nulong FUN_0040bf60(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040bf60"
        },
        {
            "funcStartAddr": "0x40bfc0",
            "funcEndAddr": "0x40c465",
            "decompiledFuncCode": "\nvoid * FUN_0040bfc0(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_0040bff2:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_0040bff2;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_0040c2d8:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_0040c391;\n          goto joined_r0x0040c39f;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0040c3fd:\n          close(iVar6);\n          goto joined_r0x0040c39f;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0040c3fd;\n        }\nLAB_0040c150:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_0040c360;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_0040c391;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_0040c360:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_0040c150;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_0040c26f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_0040c391:\n          closedir(__dirp);\n          goto joined_r0x0040c39f;\n        }\nLAB_0040c26f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_0040c2d8;\n      }\n      goto LAB_0040c3c0;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_0040c3c0:\n  iVar7 = *piVar8;\njoined_r0x0040c39f:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040bfc0"
        },
        {
            "funcStartAddr": "0x40c490",
            "funcEndAddr": "0x40c573",
            "decompiledFuncCode": "\nulong * FUN_0040c490(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_0040c4d0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_0040c4d0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040c490"
        },
        {
            "funcStartAddr": "0x40c5a0",
            "funcEndAddr": "0x40c5ae",
            "decompiledFuncCode": "\nvoid FUN_0040c5a0(undefined8 param_1)\n\n{\n  FUN_0040bde0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040c5a0"
        },
        {
            "funcStartAddr": "0x40c5b0",
            "funcEndAddr": "0x40c60d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040c5e3) */\n/* WARNING: Removing unreachable block (ram,0x0040c5e8) */\n\nvoid FUN_0040c5b0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040c5b0"
        },
        {
            "funcStartAddr": "0x40c610",
            "funcEndAddr": "0x40c611",
            "decompiledFuncCode": "\nvoid FUN_0040c610(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040c610"
        },
        {
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40c638",
            "decompiledFuncCode": "\nvoid FUN_0040c620(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_006122c8);\n  return;\n}\n\n",
            "funcName": "FUN_0040c620"
        },
        {
            "funcStartAddr": "0x40c638",
            "funcEndAddr": "0x40c658",
            "decompiledFuncCode": "\nundefined8 FUN_0040c638(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00611e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040c638"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}