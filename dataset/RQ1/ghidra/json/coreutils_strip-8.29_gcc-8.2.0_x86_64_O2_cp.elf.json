{
    "funcCount": 256,
    "funcInfo": [
        {
            "funcStartAddr": "0x402a50",
            "funcEndAddr": "0x402a55",
            "decompiledFuncCode": "\nvoid FUN_00402a50(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a50"
        },
        {
            "funcStartAddr": "0x402a55",
            "funcEndAddr": "0x402a5a",
            "decompiledFuncCode": "\nvoid FUN_00402a55(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a55"
        },
        {
            "funcStartAddr": "0x402a5a",
            "funcEndAddr": "0x402a5f",
            "decompiledFuncCode": "\nvoid FUN_00402a5a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a5a"
        },
        {
            "funcStartAddr": "0x402a5f",
            "funcEndAddr": "0x402a64",
            "decompiledFuncCode": "\nvoid FUN_00402a5f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a5f"
        },
        {
            "funcStartAddr": "0x402a64",
            "funcEndAddr": "0x402a69",
            "decompiledFuncCode": "\nvoid FUN_00402a64(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a64"
        },
        {
            "funcStartAddr": "0x402a6e",
            "funcEndAddr": "0x402a73",
            "decompiledFuncCode": "\nvoid FUN_00402a6e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a6e"
        },
        {
            "funcStartAddr": "0x402a73",
            "funcEndAddr": "0x402a78",
            "decompiledFuncCode": "\nvoid FUN_00402a73(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a73"
        },
        {
            "funcStartAddr": "0x402a78",
            "funcEndAddr": "0x402a7d",
            "decompiledFuncCode": "\nvoid FUN_00402a78(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a78"
        },
        {
            "funcStartAddr": "0x402a7d",
            "funcEndAddr": "0x402a82",
            "decompiledFuncCode": "\nvoid FUN_00402a7d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402a7d"
        },
        {
            "funcStartAddr": "0x402a87",
            "funcEndAddr": "0x402a8c",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_402a87"
        },
        {
            "funcStartAddr": "0x402a90",
            "funcEndAddr": "0x403194",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte FUN_00402a90(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  ulong uVar2;\n  byte bVar3;\n  int iVar4;\n  char *pcVar5;\n  long lVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *pcVar10;\n  char *pcVar11;\n  char *pcVar12;\n  undefined local_122;\n  undefined local_121;\n  char *local_120;\n  undefined4 local_118;\n  int local_114;\n  int local_110;\n  int iStack_10c;\n  undefined8 local_108;\n  undefined2 local_100;\n  undefined4 local_fc;\n  undefined8 local_f8;\n  undefined8 local_f0;\n  undefined local_e8;\n  int local_e4;\n  undefined8 local_e0;\n  undefined8 local_d8;\n  stat local_c8;\n  \n  FUN_0040c3a0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_004128f0(FUN_0040a800);\n  DAT_0061b4ca = '\\0';\n  FUN_00405170(&local_118);\n  local_110 = 4;\n  iStack_10c = 2;\n  local_e4 = 0;\n  local_114 = 1;\n  local_108 = 0x100000000;\n  local_100 = 0;\n  local_fc = 0;\n  local_f8 = 0x1000000;\n  local_f0 = 0;\n  pcVar5 = getenv(\"POSIXLY_CORRECT\");\n  local_122 = 0;\n  local_e0 = 0;\n  local_e8 = pcVar5 != (char *)0x0;\n  local_d8 = 0;\n  local_120 = (char *)0x0;\n  local_121 = 0;\n  bVar1 = false;\n  pcVar5 = (char *)0x0;\n  pcVar11 = (char *)0x0;\n  pcVar12 = (char *)0x0;\n  pcVar10 = local_120;\nLAB_00402b88:\n  do {\n    local_120 = pcVar10;\n    iVar4 = FUN_00411340(param_1,param_2,\"abdfHilLnprst:uvxPRS:TZ\",&PTR_s_archive_00413540,0);\n    uVar2 = local_f8;\n    if (iVar4 == -1) {\n      if ((local_108._7_1_ != '\\0') && (local_f0._4_1_ != '\\0')) goto LAB_004030ab;\n      if (bVar1) {\n        pcVar10 = \"options --backup and --no-clobber are mutually exclusive\";\n        if (local_110 == 2) goto LAB_004030b5;\n        if ((local_e4 == 2) && (iStack_10c != 2)) {\nLAB_00403098:\n          pcVar10 = \"--reflink can be used only with --sparse=auto\";\n          goto LAB_004030b5;\n        }\n        uVar8 = dcgettext(0,\"backup type\",5);\n        local_118 = FUN_0040a730(uVar8,pcVar11);\n      }\n      else if (local_e4 == 2) {\n        if (iStack_10c != 2) goto LAB_00403098;\n        local_118 = 0;\n      }\n      else {\n        local_118 = 0;\n      }\n      FUN_0040a180(pcVar12);\n      if (local_114 == 1) {\n        if ((local_f0._2_1_ == '\\0') || (local_108._7_1_ != '\\0')) {\n          local_114 = 4;\n          goto LAB_00402f43;\n        }\n        local_114 = 2;\nLAB_0040302d:\n        local_108._0_5_ = CONCAT14(local_121,(undefined4)local_108);\n        local_108 = local_108 & 0xffffff0000000000 | (ulong)(uint5)local_108;\n      }\n      else {\nLAB_00402f43:\n        if (local_f0._2_1_ != '\\0') goto LAB_0040302d;\n      }\n      if ((local_f8._1_1_ == '\\0') && (local_120 == (char *)0x0)) {\n        if ((local_f8._6_1_ != '\\0') && (DAT_0061b4ca == '\\0')) {\nLAB_00402ff5:\n          uVar8 = dcgettext(0,\"cannot preserve security context without an SELinux-enabled kernel\",5\n                           );\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar8);\n        }\n      }\n      else {\n        if (local_f8._6_1_ == '\\0') {\n          local_f8 = local_f8 & 0xffff00ffffffffff;\n        }\n        else {\n          if (local_f8._5_1_ != '\\0') {\n            uVar8 = dcgettext(0,\"cannot set target context and preserve it\",5);\n                    /* WARNING: Subroutine does not return */\n            error(1,0,uVar8);\n          }\n          if (DAT_0061b4ca == '\\0') goto LAB_00402ff5;\n        }\n        if (local_120 != (char *)0x0) {\nLAB_004030d4:\n          piVar7 = __errno_location();\n          *piVar7 = 0x5f;\n          uVar8 = FUN_0040e020(local_120);\n          uVar9 = dcgettext(0,\"failed to set default file creation context to %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar7,uVar9,uVar8);\n        }\n      }\n      if ((char)local_f0 == '\\0') {\n        FUN_00409500();\n        bVar3 = FUN_004041b0(param_1 - DAT_0061b43c,param_2 + DAT_0061b43c,pcVar5,local_122,\n                             &local_118);\n        return bVar3 ^ 1;\n      }\n      uVar8 = dcgettext(0,\"cannot preserve extended attributes, cp is built without xattr support\",5\n                       );\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar8);\n    }\n    pcVar10 = local_120;\n    switch(iVar4) {\n    case 0x48:\n      local_114 = 3;\n      break;\n    case 0x4c:\n      local_114 = 4;\n      break;\n    case 0x50:\n      local_114 = 2;\n      break;\n    case 0x52:\n    case 0x72:\n      local_f0._0_3_ = CONCAT12(1,(undefined2)local_f0);\n      local_f0 = local_f0 & 0xffffffffff000000 | (ulong)(uint3)local_f0;\n      break;\n    case 0x53:\n      bVar1 = true;\n      pcVar12 = DAT_0061bae0;\n      break;\n    case 0x54:\n      local_122 = 1;\n      break;\n    case 0x5a:\n      if (DAT_0061b4ca == '\\0') {\n        if (DAT_0061bae0 != (char *)0x0) {\n          uVar8 = dcgettext(0,\"warning: ignoring --context; it requires an SELinux-enabled kernel\",5\n                           );\n                    /* WARNING: Subroutine does not return */\n          error(0,0,uVar8);\n        }\n      }\n      else {\n        pcVar10 = DAT_0061bae0;\n        if (DAT_0061bae0 == (char *)0x0) {\n          local_f8._0_2_ = CONCAT11(1,(undefined)local_f8);\n          local_f8 = local_f8 & 0xffffffffffff0000 | (ulong)(ushort)local_f8;\n          pcVar10 = local_120;\n        }\n      }\n      break;\n    case 0x61:\n      local_114 = 2;\n      local_f8._0_3_ = CONCAT12(1,(ushort)local_f8);\n      local_f8._0_4_ = (uint)local_f8 & 0xff000000 | (uint)(uint3)local_f8;\n      local_fc._0_2_ = CONCAT11(1,(undefined)local_fc);\n      local_fc = CONCAT22(0x101,(undefined2)local_fc);\n      local_f8._0_5_ = CONCAT14(1,(uint)local_f8);\n      local_f8 = local_f8 & 0xffffff0000000000 | (ulong)(uint5)local_f8;\n      if (DAT_0061b4ca != '\\0') {\n        local_f8._0_6_ = CONCAT15(1,(uint5)local_f8);\n        local_f8 = uVar2 & 0xffff000000000000 | (ulong)(uint6)local_f8;\n      }\n      local_f8 = CONCAT17(1,(undefined7)local_f8);\n      local_f0._0_3_ = CONCAT21(0x101,(char)local_f0);\n      local_f0 = local_f0 & 0xffffffffff000000 | (ulong)(uint3)local_f0;\n      break;\n    case 0x62:\n      bVar1 = true;\n      if (DAT_0061bae0 != (char *)0x0) {\n        pcVar11 = DAT_0061bae0;\n      }\n      break;\n    case 100:\n      local_f8._0_3_ = CONCAT12(1,(ushort)local_f8);\n      local_f8 = local_f8 & 0xffffffffff000000 | (ulong)(uint3)local_f8;\n      local_114 = 2;\n      break;\n    case 0x66:\n      local_108._0_7_ = CONCAT16(1,(uint6)local_108);\n      local_108 = local_108 & 0xff00000000000000 | (ulong)(uint7)local_108;\n      break;\n    case 0x69:\n      local_110 = 3;\n      break;\n    case 0x6c:\n      local_108 = CONCAT17(1,(uint7)local_108);\n      break;\n    case 0x6e:\n      local_110 = 2;\n      break;\n    case 0x73:\n      local_f0._0_5_ = CONCAT14(1,(undefined4)local_f0);\n      local_f0 = local_f0 & 0xffffff0000000000 | (ulong)(uint5)local_f0;\n      break;\n    case 0x74:\n      goto switchD_00402bb8_caseD_74;\n    case 0x75:\n      local_f0._0_6_ = CONCAT15(1,(uint5)local_f0);\n      local_f0 = local_f0 & 0xffff000000000000 | (ulong)(uint6)local_f0;\n      break;\n    case 0x76:\n      local_f0._0_7_ = CONCAT16(1,(uint6)local_f0);\n      local_f0 = local_f0 & 0xff00000000000000 | (ulong)(uint7)local_f0;\n      break;\n    case 0x78:\n      local_fc = CONCAT31(local_fc._1_3_,1);\n      break;\n    case 0x80:\n      local_f8 = local_f8 & 0xffffffff00ffffff;\n      break;\n    case 0x81:\n      local_121 = 1;\n      break;\n    case 0x82:\n      FUN_00403280(DAT_0061bae0,&local_118,0);\n      break;\n    case 0x83:\n      DAT_0061b4c9 = 1;\n      break;\n    case 0x84:\n      if (DAT_0061bae0 != (char *)0x0) {\n        FUN_00403280(DAT_0061bae0,&local_118,1);\n        local_f8._0_5_ = CONCAT14(1,(uint)local_f8);\n        local_f8 = local_f8 & 0xffffff0000000000 | (ulong)(uint5)local_f8;\n        break;\n      }\n    case 0x70:\n      local_fc._0_2_ = CONCAT11(1,(undefined)local_fc);\n      local_fc = CONCAT22(0x101,(undefined2)local_fc);\n      local_f8._0_5_ = CONCAT14(1,(uint)local_f8);\n      local_f8 = local_f8 & 0xffffff0000000000 | (ulong)(uint5)local_f8;\n      break;\n    case 0x85:\n      if (DAT_0061bae0 == (char *)0x0) {\n        local_e4 = 2;\n      }\n      else {\n        lVar6 = FUN_00409ff0(\"--reflink\",DAT_0061bae0,&PTR_DAT_00413910,&DAT_00413900,4,\n                             PTR_FUN_0061b3c8);\n        local_e4 = *(int *)(&DAT_00413900 + lVar6 * 4);\n      }\n      break;\n    case 0x86:\n      lVar6 = FUN_00409ff0(\"--sparse\",DAT_0061bae0,&PTR_s_never_00413940,&DAT_00413928,4,\n                           PTR_FUN_0061b3c8);\n      iStack_10c = *(int *)(&DAT_00413928 + lVar6 * 4);\n      break;\n    case 0x87:\n      DAT_0061b4c8 = 1;\n      break;\n    case 0x88:\n      local_108._0_6_ = CONCAT15(1,(uint5)local_108);\n      local_108 = local_108 & 0xffff000000000000 | (ulong)(uint6)local_108;\n      break;\n    case -0x83:\n      FUN_0040ff60(stdout,&DAT_004129a5,\"GNU coreutils\",PTR_DAT_0061b3c0,\"Torbjorn Granlund\",\n                   \"David MacKenzie\",\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    case -0x82:\n      FUN_00403c80(0);\nLAB_004030ab:\n      pcVar10 = \"cannot make both hard and symbolic links\";\nLAB_004030b5:\n      uVar8 = dcgettext(0,pcVar10,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar8);\n    default:\n      FUN_00403c80(1);\n      goto LAB_004030d4;\n    }\n  } while( true );\nswitchD_00402bb8_caseD_74:\n  if (pcVar5 != (char *)0x0) {\n    uVar8 = dcgettext(0,\"multiple target directories specified\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar8);\n  }\n  iVar4 = __xstat(1,DAT_0061bae0,&local_c8);\n  if (iVar4 != 0) {\n    uVar8 = FUN_0040ddd0(4,DAT_0061bae0);\n    uVar9 = dcgettext(0,\"failed to access %s\",5);\n    piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar7,uVar9,uVar8);\n  }\n  pcVar5 = DAT_0061bae0;\n  if ((local_c8.st_mode & 0xf000) != 0x4000) {\n    uVar8 = FUN_0040ddd0(4,DAT_0061bae0);\n    uVar9 = dcgettext(0,\"target %s is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar9,uVar8);\n  }\n  goto LAB_00402b88;\n}\n\n",
            "funcName": "FUN_00402a90"
        },
        {
            "funcStartAddr": "0x4031a0",
            "funcEndAddr": "0x4031cb",
            "decompiledFuncCode": "\nvoid FUN_004031a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0061aff0)\n            (FUN_00402a90,unaff_retaddr,&stack0x00000008,FUN_00412880,FUN_004128e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_004031a0"
        },
        {
            "funcStartAddr": "0x4031cb",
            "funcEndAddr": "0x4031ea",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004031d8) */\n/* WARNING: Removing unreachable block (ram,0x004031e2) */\n\nvoid FUN_004031cb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004031cb"
        },
        {
            "funcStartAddr": "0x4031ea",
            "funcEndAddr": "0x403221",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403219) */\n\nvoid FUN_004031ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004031ea"
        },
        {
            "funcStartAddr": "0x403221",
            "funcEndAddr": "0x403278",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403256) */\n\nvoid FUN_00403221(void)\n\n{\n  if (DAT_0061b468 != '\\0') {\n    return;\n  }\n  FUN_004031cb();\n  DAT_0061b468 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00403221"
        },
        {
            "funcStartAddr": "0x403278",
            "funcEndAddr": "0x40327d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403219) */\n\nvoid thunk_FUN_004031ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_403278"
        },
        {
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x403312",
            "decompiledFuncCode": "\nvoid FUN_00403280(undefined8 param_1,undefined8 param_2,char param_3)\n\n{\n  char *__s;\n  char *pcVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  pcVar3 = \"--preserve\";\n  __s = (char *)FUN_00410310();\n  if (param_3 == '\\0') {\n    pcVar3 = \"--no-preserve\";\n  }\n  pcVar1 = strchr(__s,0x2c);\n  if (pcVar1 != (char *)0x0) {\n    *pcVar1 = '\\0';\n  }\n  lVar2 = FUN_00409ff0(pcVar3,__s,&PTR_DAT_00413500,&DAT_004134e0,4,PTR_FUN_0061b3c8);\n  if (*(uint *)(&DAT_004134e0 + lVar2 * 4) < 7) {\n                    /* WARNING: Could not recover jumptable at 0x0040330b. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)(&PTR_LAB_00412c40)[*(uint *)(&DAT_004134e0 + lVar2 * 4)])();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00403280"
        },
        {
            "funcStartAddr": "0x4033e0",
            "funcEndAddr": "0x403494",
            "decompiledFuncCode": "\nuint FUN_004033e0(char *param_1,stat *param_2,undefined *param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  \n  uVar2 = __xstat(1,param_1,param_2);\n  if (uVar2 == 0) {\n    if ((param_2->st_mode & 0xf000) == 0x4000) {\n      return 1;\n    }\n  }\n  else {\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n      if (iVar1 == 2) {\n        *param_3 = 1;\n        return 0;\n      }\n      uVar4 = FUN_0040ddd0(4,param_1);\n      uVar5 = dcgettext(0,\"failed to access %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,iVar1,uVar5,uVar4);\n    }\n    uVar2 = (uint)((param_2->st_mode & 0xf000) == 0x4000);\n  }\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_004033e0"
        },
        {
            "funcStartAddr": "0x4034a0",
            "funcEndAddr": "0x403a02",
            "decompiledFuncCode": "\nundefined8\nFUN_004034a0(char *param_1,long param_2,long param_3,long *param_4,char *param_5,long param_6)\n\n{\n  undefined uVar1;\n  undefined4 uVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  char cVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  size_t sVar10;\n  char *pcVar11;\n  char *pcVar12;\n  uint *puVar13;\n  undefined4 *puVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  int *piVar17;\n  uint uVar18;\n  char *pcVar19;\n  ulong uVar20;\n  uint uVar21;\n  long alStack_180 [2];\n  long *local_170;\n  char *local_168;\n  char *local_160;\n  stat local_158;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  __nlink_t local_b8;\n  uint uStack_b0;\n  __uid_t _Stack_ac;\n  undefined8 local_a8;\n  __dev_t _Stack_a0;\n  __off_t local_98;\n  __blksize_t _Stack_90;\n  __blkcnt_t local_88;\n  __time_t _Stack_80;\n  long local_78;\n  __time_t _Stack_70;\n  long local_68;\n  __time_t _Stack_60;\n  long local_58;\n  long lStack_50;\n  long local_48;\n  long lStack_40;\n  \n  alStack_180[0] = 0x4034d7;\n  alStack_180[1] = param_3;\n  local_170 = param_4;\n  local_168 = param_5;\n  sVar10 = strlen(param_1);\n  lVar4 = -(sVar10 + 0x18 & 0xfffffffffffffff0);\n  *(undefined8 *)((long)alStack_180 + lVar4) = 0x4034f7;\n  pcVar11 = (char *)memcpy((void *)((long)&local_170 + lVar4),param_1,sVar10 + 1);\n  *(undefined8 *)((long)alStack_180 + lVar4) = 0x403502;\n  sVar10 = FUN_0040aa80(pcVar11);\n  lVar5 = -(sVar10 + 0x18 & 0xfffffffffffffff0);\n  pcVar19 = (char *)((long)&local_170 + lVar5 + lVar4);\n  *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403527;\n  memcpy(pcVar19,pcVar11,sVar10);\n  pcVar19[sVar10] = '\\0';\n  *local_170 = 0;\n  *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x40354e;\n  iVar7 = __xstat(1,pcVar19,&local_158);\n  if (iVar7 == 0) {\n    pcVar11 = pcVar19;\n    if ((local_158.st_mode & 0xf000) != 0x4000) {\nLAB_0040397b:\n      *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403985;\n      uVar15 = FUN_0040ddd0(4,pcVar11);\n      *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403999;\n      uVar16 = dcgettext(0,\"%s exists but is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n      *(undefined **)((long)alStack_180 + lVar5 + lVar4) = &UNK_004039aa;\n      error(0,0,uVar16,uVar15);\n    }\n    *local_168 = '\\0';\n  }\n  else {\n    pcVar19 = pcVar11 + param_2;\n    cVar6 = *pcVar19;\n    local_160 = pcVar19;\n    while (cVar6 == '/') {\n      pcVar19 = pcVar19 + 1;\n      cVar6 = *pcVar19;\n    }\n    while( true ) {\n      *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x40358a;\n      pcVar12 = strchr(pcVar19,0x2f);\n      if (pcVar12 == (char *)0x0) break;\n      *pcVar12 = '\\0';\n      *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4035ad;\n      iVar7 = __xstat(1,pcVar11,&local_158);\n      pcVar19 = local_160;\n      if ((iVar7 == 0) && ((*(uint *)(param_6 + 0x1c) & 0xffffff00) == 0)) {\nLAB_004035c2:\n        pcVar19 = local_160;\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4035d8;\n        cVar6 = FUN_00404fc0(pcVar19,pcVar11,0,0,param_6);\n        if (cVar6 == '\\0') {\n          return 0;\n        }\n        if ((local_158.st_mode & 0xf000) != 0x4000) goto LAB_0040397b;\n        *local_168 = '\\0';\nLAB_00403600:\n        if ((*(ulong *)(param_6 + 0x20) & 0xff000000ff00) != 0) {\n          uVar1 = *(undefined *)(param_6 + 0x25);\n          *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4038ea;\n          cVar6 = FUN_00405090(pcVar11,uVar1,0);\n          if ((cVar6 == '\\0') && (*(char *)(param_6 + 0x26) != '\\0')) {\n            return 0;\n          }\n        }\n      }\n      else {\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403658;\n        iVar8 = __xstat(1,pcVar19,(stat *)&local_c8);\n        if (iVar8 == 0) {\n          if ((uStack_b0 & 0xf000) != 0x4000) {\n            uVar18 = 0x14;\n            goto LAB_0040385c;\n          }\n        }\n        else {\n          *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403665;\n          puVar13 = (uint *)__errno_location();\n          uVar18 = *puVar13;\n          if (uVar18 != 0) {\nLAB_0040385c:\n            pcVar11 = local_160;\n            local_168 = (char *)((ulong)local_168 & 0xffffffff00000000 | (ulong)uVar18);\n            *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403874;\n            uVar15 = FUN_0040ddd0(4,pcVar11);\n            *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403888;\n            uVar16 = dcgettext(0,\"failed to get attributes of %s\",5);\n            uVar20 = (ulong)local_168 & 0xffffffff;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)((long)alStack_180 + lVar5 + lVar4) = &UNK_004038a1;\n            error(0,uVar20,uVar16,uVar15);\n          }\n        }\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x40367b;\n        puVar14 = (undefined4 *)FUN_004100e0(0xa8);\n        pcVar19 = local_160;\n        *puVar14 = local_c8;\n        puVar14[1] = uStack_c4;\n        puVar14[2] = uStack_c0;\n        puVar14[3] = uStack_bc;\n        *(__nlink_t *)(puVar14 + 4) = local_b8;\n        *(ulong *)(puVar14 + 6) = CONCAT44(_Stack_ac,uStack_b0);\n        *(undefined8 *)(puVar14 + 8) = local_a8;\n        *(__dev_t *)(puVar14 + 10) = _Stack_a0;\n        *(__off_t *)(puVar14 + 0xc) = local_98;\n        *(__blksize_t *)(puVar14 + 0xe) = _Stack_90;\n        *(__blkcnt_t *)(puVar14 + 0x10) = local_88;\n        *(__time_t *)(puVar14 + 0x12) = _Stack_80;\n        *(long *)(puVar14 + 0x14) = local_78;\n        *(__time_t *)(puVar14 + 0x16) = _Stack_70;\n        *(long *)(puVar14 + 0x18) = local_68;\n        *(__time_t *)(puVar14 + 0x1a) = _Stack_60;\n        *(long *)(puVar14 + 0x1c) = local_58;\n        *(long *)(puVar14 + 0x1e) = lStack_50;\n        *(long *)(puVar14 + 0x20) = local_48;\n        *(long *)(puVar14 + 0x22) = lStack_40;\n        *(undefined *)(puVar14 + 0x24) = 0;\n        *(long *)(puVar14 + 0x26) = (long)pcVar12 - (long)pcVar11;\n        lVar3 = *local_170;\n        *local_170 = (long)puVar14;\n        *(long *)(puVar14 + 0x28) = lVar3;\n        if (iVar7 == 0) goto LAB_004035c2;\n        uVar2 = puVar14[6];\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x40372a;\n        cVar6 = FUN_00404fc0(pcVar19,pcVar11,uVar2,1,param_6);\n        if (cVar6 == '\\0') {\n          return 0;\n        }\n        uVar18 = puVar14[6];\n        *local_168 = '\\x01';\n        if (*(char *)(param_6 + 0x1d) == '\\0') {\n          uVar21 = 0;\n          uVar9 = 0xffffffff;\n          if (*(char *)(param_6 + 0x1e) != '\\0') {\n            uVar21 = uVar18 & 0x12;\n            uVar9 = ~uVar21;\n          }\n        }\n        else {\n          uVar21 = uVar18 & 0x3f;\n          uVar9 = ~uVar21;\n        }\n        if (*(char *)(param_6 + 0x20) != '\\0') {\n          uVar18 = 0x1ff;\n        }\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403774;\n        iVar7 = mkdir(pcVar11,uVar18 & uVar9 & 0xfff);\n        pcVar19 = local_160;\n        lVar3 = alStack_180[1];\n        if (iVar7 != 0) {\n          *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403a1a;\n          uVar15 = FUN_0040ddd0(4,pcVar11);\n          pcVar11 = \"cannot make directory %s\";\n          goto LAB_004039dc;\n        }\n        if (alStack_180[1] != 0) {\n          *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4037a1;\n          __printf_chk(1,lVar3,pcVar19,pcVar11);\n        }\n        *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4037b5;\n        iVar7 = __lxstat(1,pcVar11,&local_158);\n        if (iVar7 != 0) {\n          *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4039cf;\n          uVar15 = FUN_0040ddd0(4,pcVar11);\n          pcVar11 = \"failed to get attributes of %s\";\n          goto LAB_004039dc;\n        }\n        if (*(char *)(param_6 + 0x1e) == '\\0') {\n          if ((~local_158.st_mode & uVar21) != 0) {\n            *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403913;\n            uVar18 = FUN_004053d0();\n            uVar21 = uVar21 & ~uVar18;\n            if ((~local_158.st_mode & uVar21) != 0) {\n              *(undefined *)(puVar14 + 0x24) = 1;\n              puVar14[6] = uVar21 | local_158.st_mode;\n              goto LAB_00403800;\n            }\n          }\n          if ((local_158.st_mode & 0x1c0) != 0x1c0) {\n            *(undefined *)(puVar14 + 0x24) = 1;\n            puVar14[6] = uVar21 | local_158.st_mode;\n            goto LAB_00403800;\n          }\n        }\n        else {\nLAB_00403800:\n          if ((local_158.st_mode & 0x1c0) != 0x1c0) {\n            uVar18 = local_158.st_mode | 0x1c0;\n            *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x40381c;\n            iVar7 = chmod(pcVar11,uVar18);\n            if (iVar7 != 0) {\n              *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x403a36;\n              uVar15 = FUN_0040ddd0(4,pcVar11);\n              pcVar11 = \"setting permissions for %s\";\nLAB_004039dc:\n              *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4039e3;\n              uVar16 = dcgettext(0,pcVar11,5);\n              *(undefined8 *)((long)alStack_180 + lVar5 + lVar4) = 0x4039eb;\n              piVar17 = __errno_location();\n              iVar7 = *piVar17;\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)((long)alStack_180 + lVar5 + lVar4) = &UNK_004039fc;\n              error(0,iVar7,uVar16,uVar15);\n            }\n          }\n        }\n        if (*local_168 == '\\0') goto LAB_00403600;\n      }\n      cVar6 = pcVar12[1];\n      pcVar19 = pcVar12 + 1;\n      *pcVar12 = '/';\n      while (cVar6 == '/') {\n        pcVar19 = pcVar19 + 1;\n        cVar6 = *pcVar19;\n      }\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_004034a0"
        },
        {
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403c55",
            "decompiledFuncCode": "\nundefined8 FUN_00403a50(char *param_1,long param_2,long param_3,long param_4)\n\n{\n  __gid_t _Var1;\n  __uid_t __owner;\n  undefined4 uVar2;\n  __mode_t __mode;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  size_t sVar6;\n  char *pcVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  int *piVar10;\n  undefined8 auStack_60 [2];\n  undefined8 local_50;\n  undefined8 local_48;\n  undefined8 local_40;\n  \n  auStack_60[0] = 0x403a72;\n  sVar6 = strlen(param_1);\n  lVar3 = -(sVar6 + 0x18 & 0xfffffffffffffff0);\n  *(undefined8 *)((long)auStack_60 + lVar3) = 0x403a92;\n  pcVar7 = (char *)memcpy((void *)((long)&local_50 + lVar3),param_1,sVar6 + 1);\n  if (param_3 != 0) {\n    do {\n      cVar4 = *(char *)(param_4 + 0x1f);\n      pcVar7[*(long *)(param_3 + 0x98)] = '\\0';\n      if (cVar4 != '\\0') {\n        auStack_60[1] = *(undefined8 *)(param_3 + 0x48);\n        local_50 = *(undefined8 *)(param_3 + 0x50);\n        local_48 = *(undefined8 *)(param_3 + 0x58);\n        local_40 = *(undefined8 *)(param_3 + 0x60);\n        *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b29;\n        iVar5 = FUN_0040f8a0(pcVar7,auStack_60 + 1);\n        if (iVar5 != 0) {\n          *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b41;\n          uVar8 = FUN_0040ddd0(4,pcVar7);\n          *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b55;\n          uVar9 = dcgettext(0,\"failed to preserve times for %s\",5);\n          *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b5d;\n          piVar10 = __errno_location();\n          iVar5 = *piVar10;\n                    /* WARNING: Subroutine does not return */\n          *(undefined **)((long)auStack_60 + lVar3) = &UNK_00403b6e;\n          error(0,iVar5,uVar9,uVar8);\n        }\n      }\n      if (*(char *)(param_4 + 0x1d) == '\\0') {\nLAB_00403ab3:\n        if (*(char *)(param_4 + 0x1e) == '\\0') goto LAB_00403ac1;\nLAB_00403bc0:\n        uVar2 = *(undefined4 *)(param_3 + 0x18);\n        *(undefined8 *)((long)auStack_60 + lVar3) = 0x403bd6;\n        iVar5 = FUN_00409b40(pcVar7 + param_2,0xffffffff,pcVar7,0xffffffff,uVar2);\n        if (iVar5 != 0) {\n          return 0;\n        }\n      }\n      else {\n        _Var1 = *(__gid_t *)(param_3 + 0x20);\n        __owner = *(__uid_t *)(param_3 + 0x1c);\n        *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b86;\n        iVar5 = lchown(pcVar7,__owner,_Var1);\n        if (iVar5 == 0) goto LAB_00403ab3;\n        *(undefined8 *)((long)auStack_60 + lVar3) = 0x403b96;\n        cVar4 = FUN_004051b0(param_4);\n        if (cVar4 == '\\0') {\n          *(undefined8 *)((long)auStack_60 + lVar3) = 0x403c65;\n          uVar8 = FUN_0040ddd0(4,pcVar7);\n          pcVar7 = \"failed to preserve ownership for %s\";\n          goto LAB_00403c15;\n        }\n        _Var1 = *(__gid_t *)(param_3 + 0x20);\n        *(undefined8 *)((long)auStack_60 + lVar3) = 0x403bb1;\n        lchown(pcVar7,0xffffffff,_Var1);\n        if (*(char *)(param_4 + 0x1e) != '\\0') goto LAB_00403bc0;\nLAB_00403ac1:\n        if (*(char *)(param_3 + 0x90) != '\\0') {\n          __mode = *(__mode_t *)(param_3 + 0x18);\n          *(undefined8 *)((long)auStack_60 + lVar3) = 0x403bf3;\n          iVar5 = chmod(pcVar7,__mode);\n          if (iVar5 != 0) {\n            *(undefined8 *)((long)auStack_60 + lVar3) = 0x403c08;\n            uVar8 = FUN_0040ddd0(4,pcVar7);\n            pcVar7 = \"failed to preserve permissions for %s\";\nLAB_00403c15:\n            *(undefined8 *)((long)auStack_60 + lVar3) = 0x403c1c;\n            uVar9 = dcgettext(0,pcVar7,5);\n            *(undefined8 *)((long)auStack_60 + lVar3) = 0x403c24;\n            piVar10 = __errno_location();\n            iVar5 = *piVar10;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)((long)auStack_60 + lVar3) = &UNK_00403c35;\n            error(0,iVar5,uVar9,uVar8);\n          }\n        }\n      }\n      pcVar7[*(long *)(param_3 + 0x98)] = '/';\n      param_3 = *(long *)(param_3 + 0xa0);\n    } while (param_3 != 0);\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00403a50"
        },
        {
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x4041a5",
            "decompiledFuncCode": "\nvoid FUN_00403c80(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0061b920;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_00403cbf;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -a, --archive                same as -dR --preserve=all\\n      --attributes-only        don\\'t copy the file data, just the attributes\\n      --backup[=CONTROL]       make a backup of each existing destination file\\n  -b                           like --backup but does not accept an argument\\n      --copy-contents          copy contents of special files when recursive\\n  -d                           same as --no-dereference --preserve=links\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -f, --force                  if an existing destination file cannot be\\n                                 opened, remove it and try again (this option\\n                                 is ignored when the -n option is also used)\\n  -i, --interactive            prompt before overwrite (overrides a previous -n\\n                                  option)\\n  -H                           follow command-line symbolic links in SOURCE\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -l, --link                   hard link files instead of copying\\n  -L, --dereference            always follow symbolic links in SOURCE\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -n, --no-clobber             do not overwrite an existing file (overrides\\n                                 a previous -i option)\\n  -P, --no-dereference         never follow symbolic links in SOURCE\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -p                           same as --preserve=mode,ownership,timestamps\\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\\n                                 mode,ownership,timestamps), if possible\\n                                 additional attributes: context, links, xattr,\\n                                 all\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --no-preserve=ATTR_LIST  don\\'t preserve the specified attributes\\n      --parents                use full source file name under DIRECTORY\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -R, -r, --recursive          copy directories recursively\\n      --reflink[=WHEN]         control clone/CoW copies. See below\\n      --remove-destination     remove each existing destination file before\\n                                 attempting to open it (contrast with --force)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --sparse=WHEN            control creation of sparse files. See below\\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n                                 argument\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -s, --symbolic-link          make symbolic links instead of copying\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n  -T, --no-target-directory    treat DEST as a normal file\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -u, --update                 copy only when the SOURCE file is newer\\n                                 than the destination file or when the\\n                                 destination file is missing\\n  -v, --verbose                explain what is being done\\n  -x, --one-file-system        stay on this file system\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -Z                           set SELinux security context of destination\\n                                 file to default type\\n      --context[=CTX]          like -Z, or if CTX is specified then set the\\n                                 SELinux or SMACK security context to CTX\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nBy default, sparse SOURCE files are detected by a crude heuristic and the\\ncorresponding DEST file is made sparse as well.  That is the behavior\\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\\nfile whenever the SOURCE file contains a long enough sequence of zero bytes.\\nUse --sparse=never to inhibit creation of sparse files.\\n\\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\\ndata blocks are copied only when modified.  If this is not possible the copy\\nfails, or if --reflink=auto is specified, fall back to a standard copy.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe backup suffix is \\'~\\', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nAs a special case, cp makes a backup of SOURCE when the force and backup\\noptions are given and SOURCE and DEST are the same name for an existing,\\nregular file.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_004129a8;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x412a22;\n  local_78[1] = (byte *)0x4129ba;\n  local_78[2] = (byte *)0x4129d0;\n  local_78[3] = (byte *)0x4129da;\n  local_78[4] = (byte *)0x4129e9;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_004129a5;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_004129a5;\n        goto LAB_0040417b;\n      }\n    }\n    pbVar9 = &DAT_004129a5;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_004129a5);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_0040417b:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_004129a5);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_004129a5);\n    if (pbVar9 != &DAT_004129a5) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_00403cbf:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00403c80"
        },
        {
            "funcStartAddr": "0x4041b0",
            "funcEndAddr": "0x40461f",
            "decompiledFuncCode": "\nuint FUN_004041b0(int param_1,char **param_2,char *param_3,char param_4,int *param_5)\n\n{\n  int iVar1;\n  void *pvVar2;\n  char cVar3;\n  uint uVar4;\n  int iVar5;\n  size_t sVar6;\n  ulong uVar7;\n  void *pvVar8;\n  byte *pbVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  long lVar12;\n  char *pcVar13;\n  char ***pppcVar14;\n  undefined *puVar15;\n  byte *pbVar16;\n  long lVar17;\n  char *pcVar18;\n  byte *pbVar19;\n  int *piVar20;\n  uint uVar21;\n  undefined uVar22;\n  undefined uVar23;\n  byte bVar24;\n  char **local_f8;\n  char *local_f0;\n  char local_da;\n  undefined local_d9;\n  void *local_d8;\n  long local_d0;\n  undefined local_c8 [24];\n  uint local_b0;\n  \n  bVar24 = 0;\n  local_f0 = param_3;\n  local_da = '\\0';\n  if ((int)(uint)(param_3 == (char *)0x0) < param_1) {\n    if (param_4 == '\\0') {\n      if (param_3 != (char *)0x0) {\nLAB_00404202:\n        if (param_1 != 1) {\n          FUN_00405110(param_5);\n          FUN_00405140(param_5);\n        }\n        uVar21 = 1;\n        local_f8 = param_2 + (ulong)(param_1 - 1) + 1;\n        pppcVar14 = &local_f8;\n        do {\n          pcVar18 = *param_2;\n          local_d0 = 0;\n          if (DAT_0061b4c8 != '\\0') {\n            *(undefined8 *)((long)pppcVar14 + -8) = 0x4044a8;\n            FUN_0040abd0(pcVar18);\n          }\n          *(undefined8 *)((long)pppcVar14 + -8) = 0x4042fc;\n          sVar6 = strlen(pcVar18);\n          uVar7 = sVar6 + 0x18 & 0xfffffffffffffff0;\n          if (DAT_0061b4c9 == '\\0') {\n            lVar17 = -uVar7;\n            puVar15 = (undefined *)((long)pppcVar14 + lVar17);\n            uVar22 = 0;\n            uVar23 = (void *)((ulong)((long)pppcVar14 + lVar17 + 0xf) & 0xfffffffffffffff0) ==\n                     (void *)0x0;\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x404329;\n            pvVar8 = memcpy((void *)((ulong)((long)pppcVar14 + lVar17 + 0xf) & 0xfffffffffffffff0),\n                            pcVar18,sVar6 + 1);\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x404331;\n            pbVar9 = (byte *)FUN_0040ab40(pvVar8);\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x40433c;\n            FUN_0040abd0(pbVar9);\n            pcVar13 = local_f0;\n            lVar12 = 3;\n            pbVar16 = pbVar9;\n            pbVar19 = &DAT_00412a7d;\n            do {\n              if (lVar12 == 0) break;\n              lVar12 = lVar12 + -1;\n              uVar22 = *pbVar16 < *pbVar19;\n              uVar23 = *pbVar16 == *pbVar19;\n              pbVar16 = pbVar16 + (ulong)bVar24 * -2 + 1;\n              pbVar19 = pbVar19 + (ulong)bVar24 * -2 + 1;\n            } while ((bool)uVar23);\n            if ((!(bool)uVar22 && !(bool)uVar23) == (bool)uVar22) {\n              *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x404364;\n              pvVar8 = (void *)FUN_00410310(pcVar13);\n              puVar15 = (undefined *)((long)pppcVar14 + lVar17);\n            }\n            else {\n              *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x4044f9;\n              pvVar8 = (void *)FUN_0040af00(pcVar13,pbVar9,0);\n            }\nLAB_00404367:\n            cVar3 = local_da;\n            *(undefined8 *)(puVar15 + -8) = 0x404386;\n            uVar4 = FUN_00409280(pcVar18,pvVar8,cVar3,param_5,&local_d9,0);\n            pvVar2 = local_d8;\n            uVar21 = uVar21 & uVar4;\n            if (DAT_0061b4c9 != '\\0') {\n              lVar17 = local_d0 - (long)pvVar8;\n              *(undefined8 *)(puVar15 + -8) = 0x4043b2;\n              uVar4 = FUN_00403a50(pvVar8,lVar17,pvVar2,param_5);\n              uVar21 = uVar21 & uVar4;\n              goto LAB_004042b8;\n            }\n          }\n          else {\n            lVar17 = -uVar7;\n            puVar15 = (undefined *)((long)pppcVar14 + lVar17);\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x40424c;\n            pvVar8 = memcpy((void *)((ulong)((long)pppcVar14 + lVar17 + 0xf) & 0xfffffffffffffff0),\n                            pcVar18,sVar6 + 1);\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x404257;\n            FUN_0040abd0(pvVar8);\n            pcVar13 = local_f0;\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x40426d;\n            pvVar8 = (void *)FUN_0040af00(pcVar13,pvVar8,&local_d0);\n            pcVar13 = \"%s -> %s\\n\";\n            if (*(char *)((long)param_5 + 0x2e) == '\\0') {\n              pcVar13 = (char *)0x0;\n            }\n            lVar12 = local_d0 - (long)pvVar8;\n            *(undefined8 *)((long)pppcVar14 + lVar17 + -8) = 0x4042a6;\n            cVar3 = FUN_004034a0(pvVar8,lVar12,pcVar13,&local_d8,&local_da,param_5);\n            if (cVar3 != '\\0') goto LAB_00404367;\n            uVar21 = 0;\n            puVar15 = (undefined *)((long)pppcVar14 + lVar17);\nLAB_004042b8:\n            pvVar2 = local_d8;\n            if (DAT_0061b4c9 != '\\0') {\n              while (local_d8 = pvVar2, pvVar2 != (void *)0x0) {\n                local_d8 = *(void **)((long)pvVar2 + 0xa0);\n                *(undefined8 *)(puVar15 + -8) = 0x4044d3;\n                free(pvVar2);\n                pvVar2 = local_d8;\n              }\n            }\n          }\n          param_2 = param_2 + 1;\n          *(undefined8 *)(puVar15 + -8) = 0x4042cc;\n          free(pvVar8);\n          pppcVar14 = (char ***)puVar15;\n          if (local_f8 == param_2) {\n            return uVar21;\n          }\n        } while( true );\n      }\n      if (param_1 != 1) {\n        cVar3 = FUN_004033e0(param_2[(long)param_1 + -1],local_c8,&local_da);\n        if (cVar3 == '\\0') {\n          if (param_1 != 2) {\n            uVar10 = FUN_0040ddd0(4,param_2[(long)param_1 + -1]);\n            uVar11 = dcgettext(0,\"target %s is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n            error(1,0,uVar11,uVar10);\n          }\n        }\n        else {\n          param_1 = param_1 + -1;\n          local_f0 = param_2[param_1];\n          if (param_2[param_1] != (char *)0x0) goto LAB_00404202;\n        }\n      }\n    }\n    else {\n      if (param_3 != (char *)0x0) {\n        uVar10 = dcgettext(0,\"cannot combine --target-directory (-t) and --no-target-directory (-T)\"\n                           ,5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar10);\n      }\n      if (2 < param_1) {\n        uVar10 = FUN_0040ddd0(4,param_2[2]);\n        pcVar18 = \"extra operand %s\";\n        goto LAB_004045cb;\n      }\n      FUN_004033e0(param_2[(long)param_1 + -1],local_c8,&local_da);\n    }\n    pcVar18 = *param_2;\n    pcVar13 = param_2[1];\n    if (DAT_0061b4c9 == '\\0') {\n      if ((((*(char *)((long)param_5 + 0x16) != '\\0') && (iVar1 = *param_5, iVar1 != 0)) &&\n          (iVar5 = strcmp(pcVar18,pcVar13), iVar5 == 0)) &&\n         ((local_da == '\\0' && ((local_b0 & 0xf000) == 0x8000)))) {\n        pcVar13 = (char *)FUN_0040a6f0(pcVar13,iVar1);\n        piVar20 = &DAT_0061b480;\n        for (lVar17 = 0x12; lVar17 != 0; lVar17 = lVar17 + -1) {\n          *piVar20 = *param_5;\n          param_5 = param_5 + (ulong)bVar24 * -2 + 1;\n          piVar20 = piVar20 + (ulong)bVar24 * -2 + 1;\n        }\n        param_5 = &DAT_0061b480;\n        DAT_0061b480 = 0;\n      }\n      uVar21 = FUN_00409280(pcVar18,pcVar13,0,param_5,&local_d0,0);\n      return uVar21;\n    }\n    pcVar18 = \"with --parents, the destination must be a directory\";\n  }\n  else {\n    if (param_1 == 1) {\n      uVar10 = FUN_0040ddd0(4,*param_2);\n      pcVar18 = \"missing destination file operand after %s\";\nLAB_004045cb:\n      uVar11 = dcgettext(0,pcVar18,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar11,uVar10);\n    }\n    pcVar18 = \"missing file operand\";\n  }\n  uVar10 = dcgettext(0,pcVar18,5);\n                    /* WARNING: Subroutine does not return */\n  error(0,0,uVar10);\n}\n\n",
            "funcName": "FUN_004041b0"
        },
        {
            "funcStartAddr": "0x404640",
            "funcEndAddr": "0x40467c",
            "decompiledFuncCode": "\nulong FUN_00404640(char *param_1,uint param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined4 extraout_var;\n  \n  if ((param_2 & 0xf000) == 0xa000) {\n    return 1;\n  }\n  cVar1 = FUN_004100a0();\n  if (cVar1 != '\\0') {\n    return 1;\n  }\n  iVar2 = euidaccess(param_1,2);\n  return CONCAT44(extraout_var,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n}\n\n",
            "funcName": "FUN_00404640"
        },
        {
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x404724",
            "decompiledFuncCode": "\nundefined8 FUN_00404690(undefined4 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  \n  if ((DAT_0061b8e0 == (undefined *)0x0) &&\n     (DAT_0061b8e0 = (undefined *)calloc(DAT_0061b3b8,1), DAT_0061b8e0 == (undefined *)0x0)) {\n    DAT_0061b8e0 = &DAT_0061b4e0;\n    DAT_0061b3b8 = 0x400;\n  }\n  if (param_2 != 0) {\n    do {\n      uVar2 = param_2;\n      if (DAT_0061b3b8 <= param_2) {\n        uVar2 = DAT_0061b3b8;\n      }\n      uVar1 = FUN_0040b000(param_1,DAT_0061b8e0,uVar2);\n      if (uVar1 != uVar2) {\n        return 0;\n      }\n      param_2 = param_2 - uVar1;\n    } while (param_2 != 0);\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00404690"
        },
        {
            "funcStartAddr": "0x404740",
            "funcEndAddr": "0x404772",
            "decompiledFuncCode": "\nint FUN_00404740(int param_1,__off_t param_2,__off_t param_3)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = fallocate(param_1,3,param_2,param_3);\n  if (iVar1 < 0) {\n    piVar2 = __errno_location();\n    if ((*piVar2 == 0x26) || (*piVar2 == 0x5f)) {\n      return 0;\n    }\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00404740"
        },
        {
            "funcStartAddr": "0x404780",
            "funcEndAddr": "0x404796",
            "decompiledFuncCode": "\nvoid FUN_00404780(int param_1,char *param_2,__mode_t param_3)\n\n{\n  if (param_1 < 0) {\n    chmod(param_2,param_3);\n    return;\n  }\n  fchmod(param_1,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404780"
        },
        {
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x4047d1",
            "decompiledFuncCode": "\nvoid FUN_004047a0(void)\n\n{\n  int *piVar1;\n  undefined8 uVar2;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0x5f;\n  uVar2 = dcgettext(0,\"failed to restore the default file creation context\",5);\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar1,uVar2);\n}\n\n",
            "funcName": "FUN_004047a0"
        },
        {
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x40488c",
            "decompiledFuncCode": "\nvoid FUN_004047e0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  uVar2 = FUN_0040dcf0(1,4,param_2);\n  uVar3 = FUN_0040dcf0(0,4,param_1);\n  __printf_chk(1,\"%s -> %s\",uVar3,uVar2);\n  if (param_3 != 0) {\n    uVar2 = FUN_0040ddd0(4,param_3);\n    uVar3 = dcgettext(0,\" (backup: %s)\",5);\n    __printf_chk(1,uVar3,uVar2);\n  }\n  pcVar1 = stdout->_IO_write_ptr;\n  if (pcVar1 < stdout->_IO_write_end) {\n    stdout->_IO_write_ptr = pcVar1 + 1;\n    *pcVar1 = '\\n';\n    return;\n  }\n  __overflow(stdout,10);\n  return;\n}\n\n",
            "funcName": "FUN_004047e0"
        },
        {
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x4049b2",
            "decompiledFuncCode": "\nvoid FUN_00404890(long param_1,undefined8 param_2,uint *param_3)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  char cVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined local_34;\n  undefined local_33 [9];\n  undefined local_2a;\n  \n  cVar3 = FUN_00404640(param_2,*param_3);\n  if (cVar3 == '\\0') {\n    FUN_0040ad70(*param_3,&local_34);\n    uVar1 = *param_3;\n    local_2a = 0;\n    uVar4 = FUN_0040ddd0(4,param_2);\n    uVar2 = DAT_0061b920;\n    if ((*(char *)(param_1 + 0x18) == '\\0') && ((*(uint *)(param_1 + 0x14) & 0xffff00) == 0)) {\n      uVar5 = dcgettext(0,\"%s: unwritable %s (mode %04lo, %s); try anyway? \",5);\n    }\n    else {\n      uVar5 = dcgettext(0,\"%s: replace %s, overriding mode %04lo (%s)? \",5);\n    }\n    __fprintf_chk(stderr,1,uVar5,uVar2,uVar4,uVar1 & 0xfff,local_33);\n    FUN_00410370();\n    return;\n  }\n  uVar4 = FUN_0040ddd0(4,param_2);\n  uVar2 = DAT_0061b920;\n  uVar5 = dcgettext(0,\"%s: overwrite %s? \",5);\n  __fprintf_chk(stderr,1,uVar5,uVar2,uVar4);\n  FUN_00410370();\n  return;\n}\n\n",
            "funcName": "FUN_00404890"
        },
        {
            "funcStartAddr": "0x4049c0",
            "funcEndAddr": "0x404aab",
            "decompiledFuncCode": "\nulong FUN_004049c0(ulong param_1,undefined8 param_2,undefined param_3,byte param_4,char param_5)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  \n  iVar1 = FUN_00409900(0xffffff9c,param_1,0xffffff9c,param_2,(ulong)(param_5 != '\\0') << 10,param_3)\n  ;\n  if (iVar1 < 0) {\n    uVar2 = FUN_0040dcf0(1,4,param_1);\n    uVar3 = FUN_0040dcf0(0,4,param_2);\n    uVar4 = dcgettext(0,\"cannot create hard link %s to %s\",5);\n    piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar5,uVar4,uVar3,uVar2);\n  }\n  param_4 = 0 < iVar1 & param_4;\n  if (param_4 == 0) {\n    return 1;\n  }\n  uVar2 = FUN_0040ddd0(4,param_2);\n  uVar3 = dcgettext(0,\"removed %s\\n\",5);\n  __printf_chk(1,uVar3,uVar2);\n  return param_1 & 0xffffff00 | (ulong)param_4;\n}\n\n",
            "funcName": "FUN_004049c0"
        },
        {
            "funcStartAddr": "0x404ad0",
            "funcEndAddr": "0x404b76",
            "decompiledFuncCode": "\nundefined8 FUN_00404ad0(int param_1,undefined8 param_2,char param_3,long param_4)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  char *pcVar6;\n  \n  _Var2 = lseek(param_1,param_4,1);\n  if (_Var2 < 0) {\n    uVar3 = FUN_0040ddd0(4,param_2);\n    pcVar6 = \"cannot lseek %s\";\nLAB_00404b5a:\n    uVar4 = dcgettext(0,pcVar6,5);\n    piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar5,uVar4,uVar3);\n  }\n  if (param_3 != '\\0') {\n    iVar1 = FUN_00404740(param_1,_Var2 - param_4,param_4);\n    if (iVar1 < 0) {\n      uVar3 = FUN_0040ddd0(4,param_2);\n      pcVar6 = \"error deallocating %s\";\n      goto LAB_00404b5a;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00404ad0"
        },
        {
            "funcStartAddr": "0x404b90",
            "funcEndAddr": "0x404f7c",
            "decompiledFuncCode": "\nulong FUN_00404b90(int param_1,undefined4 param_2,char *param_3,ulong param_4,ulong param_5,\n                  undefined param_6,undefined8 param_7,undefined8 param_8,ulong param_9,\n                  long *param_10,undefined *param_11)\n\n{\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  int iVar4;\n  uint uVar5;\n  ulong uVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  size_t __n;\n  ulong uVar12;\n  bool bVar13;\n  char *__s2;\n  char *pcVar14;\n  ulong uVar15;\n  char *__s1;\n  bool bVar16;\n  ulong uVar17;\n  byte local_8a;\n  ulong local_80;\n  \n  *param_11 = 0;\n  local_80 = param_9;\n  *param_10 = 0;\n  if (param_9 != 0) {\n    uVar11 = param_5;\n    if (param_5 == 0) {\n      uVar11 = param_4;\n    }\n    uVar17 = 0;\n    bVar13 = false;\n    do {\n      while( true ) {\n        uVar6 = local_80;\n        if (param_4 <= local_80) {\n          uVar6 = param_4;\n        }\n        uVar6 = read(param_1,param_3,uVar6);\n        if (-1 < (long)uVar6) break;\n        piVar7 = __errno_location();\n        if (*piVar7 != 4) {\n          uVar8 = FUN_0040ddd0(4,param_7);\n          uVar9 = dcgettext(0,\"error reading %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,*piVar7,uVar9,uVar8);\n        }\n      }\n      if (uVar6 == 0) break;\n      *param_10 = *param_10 + uVar6;\n      uVar12 = uVar11;\n      pcVar14 = param_3;\n      uVar15 = uVar6;\n      __s1 = param_3;\n      bVar16 = bVar13;\nLAB_00404ce0:\n      do {\n        if (uVar15 < uVar12) {\n          uVar12 = uVar15;\n        }\n        bVar13 = uVar12 != 0 && param_5 != 0;\n        __n = uVar12;\n        __s2 = __s1;\n        if (uVar12 != 0 && param_5 != 0) {\n          do {\n            if (*__s2 != '\\0') {\n              bVar1 = bVar16;\n              bVar3 = false;\n              bVar2 = bVar13;\n              goto LAB_00404d3d;\n            }\n            __s2 = __s2 + 1;\n            __n = __n - 1;\n            if (__n == 0) {\n              local_8a = uVar17 != 0 & (bVar16 ^ 1U);\n              goto LAB_00404e40;\n            }\n          } while ((__n & 0xf) != 0);\n          iVar4 = memcmp(__s1,__s2,__n);\n          bVar1 = (bool)(iVar4 == 0 ^ bVar16);\n          bVar3 = iVar4 == 0;\n          bVar2 = iVar4 != 0;\nLAB_00404d3d:\n          bVar13 = bVar3;\n          local_8a = uVar17 != 0 & bVar1;\n          if ((uVar12 == uVar15) && (bVar2)) {\n            if (local_8a == 0) {\n              bVar13 = false;\n              goto LAB_00404de0;\n            }\n            bVar1 = true;\n            bVar13 = false;\n          }\n          else {\nLAB_00404e40:\n            if (local_8a == 0) goto LAB_00404e49;\n            bVar1 = false;\n          }\njoined_r0x00404df6:\n          if (bVar16 == false) {\n            uVar10 = FUN_0040b000(param_2,pcVar14,uVar17);\n            if (uVar17 != uVar10) {\n              uVar8 = FUN_0040ddd0(4,param_8);\n              uVar9 = dcgettext(0,\"error writing %s\",5);\n              piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n              error(0,*piVar7,uVar9,uVar8);\n            }\n          }\n          else {\n            uVar5 = FUN_00404ad0(param_2,param_8,param_6,uVar17);\n            if ((char)uVar5 == '\\0') {\n              return (ulong)uVar5;\n            }\n          }\n          pcVar14 = __s1;\n          uVar17 = uVar12;\n          if (bVar1) {\n            if (uVar12 == 0) {\n              uVar17 = 0;\n              break;\n            }\n            if (local_8a != 0) {\n              uVar12 = 0;\n              bVar16 = bVar13;\n              goto LAB_00404ce0;\n            }\n            uVar15 = uVar15 - uVar12;\n            uVar17 = 0;\n          }\n          else {\n            uVar15 = uVar15 - uVar12;\n          }\n        }\n        else {\n          bVar13 = bVar16;\n          if (((uVar12 == uVar15 & (bVar16 ^ 1U)) != 0) || (uVar12 == 0)) {\nLAB_00404de0:\n            uVar17 = uVar17 + uVar12;\n            bVar1 = true;\n            local_8a = 0;\n            goto joined_r0x00404df6;\n          }\nLAB_00404e49:\n          if (0x7fffffffffffffff - uVar12 < uVar17) {\n            uVar8 = FUN_0040ddd0(4,param_7);\n            uVar9 = dcgettext(0,\"overflow reading %s\",5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar9,uVar8);\n          }\n          uVar17 = uVar17 + uVar12;\n          uVar15 = uVar15 - uVar12;\n        }\n        __s1 = __s1 + uVar12;\n        bVar16 = bVar13;\n      } while (uVar15 != 0);\n      local_80 = local_80 - uVar6;\n      *param_11 = bVar13;\n    } while (local_80 != 0);\n    if (bVar13 != false) {\n      uVar11 = FUN_00404ad0(param_2,param_8,param_6,uVar17);\n      return uVar11;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00404b90"
        },
        {
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x405073",
            "decompiledFuncCode": "\nuint FUN_00404fc0(undefined8 param_1,undefined8 param_2,undefined8 param_3,uint param_4,long param_5\n                 )\n\n{\n  int *piVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  byte bVar4;\n  \n  if (*(char *)(param_5 + 0x25) == '\\0') {\n    bVar4 = (byte)param_4 & *(byte *)(param_5 + 0x21);\n    if (bVar4 == 0) {\n      return 1;\n    }\n    piVar1 = __errno_location();\n    *piVar1 = 0x5f;\n    return param_4 & 0xffffff00 | (uint)bVar4;\n  }\n  piVar1 = __errno_location();\n  if ((*(char *)(param_5 + 0x23) != '\\0') && (bVar4 = *(byte *)(param_5 + 0x26), bVar4 == 0)) {\n    *piVar1 = 0x5f;\n    return bVar4 ^ 1;\n  }\n  *piVar1 = 0x5f;\n  uVar2 = FUN_0040ddd0(4,param_1);\n  uVar3 = dcgettext(0,\"failed to get security context of %s\",5);\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar1,uVar3,uVar2);\n}\n\n",
            "funcName": "FUN_00404fc0"
        },
        {
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x4050f7",
            "decompiledFuncCode": "\nundefined8 FUN_00405090(undefined8 param_1,undefined8 param_2,undefined8 param_3,long param_4)\n\n{\n  int *piVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  piVar1 = __errno_location();\n  if ((*(char *)(param_4 + 0x23) != '\\0') && (*(char *)(param_4 + 0x26) == '\\0')) {\n    *piVar1 = 0x5f;\n    return 0;\n  }\n  *piVar1 = 0x5f;\n  uVar2 = FUN_0040dcf0(0,4,param_1);\n  uVar3 = dcgettext(0,\"failed to set the security context of %s\",5);\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar1,uVar3,uVar2);\n}\n\n",
            "funcName": "FUN_00405090"
        },
        {
            "funcStartAddr": "0x405110",
            "funcEndAddr": "0x405136",
            "decompiledFuncCode": "\nvoid FUN_00405110(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = FUN_0040b910(0x3d,0,FUN_0040c2d0,FUN_0040c310,FUN_0040c380);\n  *(undefined8 *)(param_1 + 0x38) = uVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405110"
        },
        {
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x405166",
            "decompiledFuncCode": "\nvoid FUN_00405140(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = FUN_0040b910(0x3d,0,FUN_0040c300,FUN_0040c310,FUN_0040c380);\n  *(undefined8 *)(param_1 + 0x40) = uVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405140"
        },
        {
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x4051a1",
            "decompiledFuncCode": "\nvoid FUN_00405170(undefined (*param_1) [16])\n\n{\n  __uid_t _Var1;\n  \n  *(undefined8 *)param_1[4] = 0;\n  *param_1 = (undefined  [16])0x0;\n  param_1[1] = (undefined  [16])0x0;\n  param_1[2] = (undefined  [16])0x0;\n  param_1[3] = (undefined  [16])0x0;\n  _Var1 = geteuid();\n  param_1[1][0xb] = _Var1 == 0;\n  param_1[1][10] = _Var1 == 0;\n  return;\n}\n\n",
            "funcName": "FUN_00405170"
        },
        {
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x4051d4",
            "decompiledFuncCode": "\nulong FUN_004051b0(long param_1)\n\n{\n  bool bVar1;\n  int *piVar2;\n  ulong uVar3;\n  \n  piVar2 = __errno_location();\n  bVar1 = *piVar2 == 1 || *piVar2 == 0x16;\n  uVar3 = (ulong)piVar2 & 0xffffffffffffff00 | (ulong)bVar1;\n  if (bVar1) {\n    uVar3 = (ulong)(*(byte *)(param_1 + 0x1a) ^ 1);\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004051b0"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40539f",
            "decompiledFuncCode": "\nint FUN_004051e0(long param_1,char *param_2,int param_3,long param_4,char param_5,long param_6)\n\n{\n  __uid_t __owner;\n  __gid_t __group;\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  __owner = *(__uid_t *)(param_4 + 0x1c);\n  __group = *(__gid_t *)(param_4 + 0x20);\n  if (param_5 == '\\0') {\n    if ((*(ulong *)(param_1 + 0x18) & 0xff0000000000ff) == 0) {\n      if (*(char *)(param_1 + 0x2b) == '\\0') goto LAB_00405250;\n      uVar7 = *(uint *)(param_6 + 0x18);\n      uVar6 = *(uint *)(param_1 + 0x10);\n    }\n    else {\n      uVar7 = *(uint *)(param_6 + 0x18);\n      uVar6 = *(uint *)(param_4 + 0x18);\n    }\n    if ((((ushort)(~(ushort)uVar6 | 0xe00) & uVar7 & 0xfff) != 0) &&\n       (iVar2 = FUN_0040c480(param_2,param_3,uVar6 & uVar7 & 0x1c0), iVar2 != 0)) {\n      piVar3 = __errno_location();\n      if (((*piVar3 == 1) || (*piVar3 == 0x16)) && (*(char *)(param_1 + 0x1b) == '\\0')) {\n        return -(uint)*(byte *)(param_1 + 0x24);\n      }\n      uVar4 = FUN_0040ddd0(4,param_2);\n      uVar5 = dcgettext(0,\"clearing permissions for %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar3,uVar5,uVar4);\n    }\n  }\nLAB_00405250:\n  if (param_3 == -1) {\n    iVar2 = lchown(param_2,__owner,__group);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    piVar3 = __errno_location();\n    iVar2 = *piVar3;\n    if ((iVar2 == 1) || (iVar2 == 0x16)) {\n      lchown(param_2,0xffffffff,__group);\n      *piVar3 = iVar2;\n    }\n  }\n  else {\n    iVar2 = fchown(param_3,__owner,__group);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    piVar3 = __errno_location();\n    iVar2 = *piVar3;\n    if ((iVar2 == 1) || (iVar2 == 0x16)) {\n      fchown(param_3,0xffffffff,__group);\n      *piVar3 = iVar2;\n    }\n  }\n  cVar1 = FUN_004051b0(param_1);\n  if (cVar1 == '\\0') {\n    uVar4 = FUN_0040ddd0(4,param_2);\n    uVar5 = dcgettext(0,\"failed to preserve ownership for %s\",5);\n    piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar3,uVar5,uVar4);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x4053fa",
            "decompiledFuncCode": "\n__mode_t FUN_004053d0(void)\n\n{\n  __mode_t __mask;\n  \n  if (DAT_0061b3b0 != 0xffffffff) {\n    return DAT_0061b3b0;\n  }\n  __mask = umask(0);\n  DAT_0061b3b0 = __mask;\n  umask(__mask);\n  return __mask;\n}\n\n",
            "funcName": "FUN_004053d0"
        },
        {
            "funcStartAddr": "0x405400",
            "funcEndAddr": "0x40903b",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint FUN_00405400(byte **param_1,byte **param_2,byte param_3,stat *param_4,byte **param_5,\n                 byte **param_6,uint param_7,byte *param_8,byte *param_9,undefined *param_10)\n\n{\n  stat **ppsVar1;\n  stat *psVar2;\n  byte **ppbVar3;\n  __gid_t __group;\n  char cVar4;\n  byte bVar5;\n  byte bVar6;\n  byte bVar7;\n  byte bVar8;\n  int iVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  int iVar13;\n  __uid_t _Var14;\n  int *piVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined8 uVar18;\n  byte *__filename;\n  size_t sVar19;\n  void *pvVar20;\n  void *__ptr;\n  stat *psVar21;\n  uint *puVar22;\n  byte **ppbVar23;\n  byte *pbVar24;\n  __off_t _Var25;\n  char *pcVar26;\n  char cVar27;\n  long lVar28;\n  ulong uVar29;\n  ulong uVar30;\n  stat *psVar31;\n  ulong uVar32;\n  undefined8 extraout_RDX;\n  ulong extraout_RDX_00;\n  stat *psVar33;\n  undefined *puVar34;\n  undefined *puVar35;\n  undefined *puVar36;\n  undefined *puVar37;\n  undefined *puVar38;\n  undefined *puVar39;\n  undefined *puVar40;\n  undefined *puVar41;\n  char *pcVar42;\n  stat *psVar43;\n  byte *pbVar44;\n  ulong uVar45;\n  stat *psVar46;\n  uint unaff_R15D;\n  undefined uVar47;\n  bool bVar48;\n  undefined uVar49;\n  undefined *local_380;\n  undefined auStack_378 [8];\n  stat *local_370;\n  byte **local_368;\n  uint local_360;\n  uint local_35c;\n  long local_358;\n  uint local_350;\n  uint local_34c;\n  byte **local_348;\n  byte **local_340;\n  byte **local_338;\n  uint local_330;\n  char local_32b;\n  byte local_32a;\n  byte local_329;\n  stat *local_328;\n  byte **local_320;\n  stat *local_318;\n  stat *local_310;\n  stat *local_308;\n  undefined8 local_300;\n  stat *local_2f8;\n  undefined8 local_2f0;\n  undefined8 local_2e8;\n  stat *local_2e0;\n  undefined8 local_2d8;\n  uint local_2d0;\n  uint local_2cc;\n  undefined8 local_2c8;\n  byte **local_2c0;\n  byte local_2b1;\n  char local_2b0;\n  undefined7 uStack_2af;\n  undefined local_2a8 [32];\n  char local_288;\n  char local_287;\n  void *local_280;\n  stat local_278;\n  stat local_1e8;\n  uint local_158;\n  undefined4 uStack_154;\n  undefined4 uStack_150;\n  undefined4 uStack_14c;\n  undefined4 local_148;\n  undefined4 uStack_144;\n  __mode_t _Stack_140;\n  __uid_t _Stack_13c;\n  __gid_t local_138;\n  int iStack_134;\n  undefined4 uStack_130;\n  undefined4 uStack_12c;\n  undefined4 local_128;\n  undefined4 uStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 local_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 local_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 local_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined local_c8 [28];\n  __uid_t _Stack_ac;\n  byte *local_a8;\n  byte *pbStack_a0;\n  byte *local_98;\n  byte **ppbStack_90;\n  byte *local_88;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 local_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined4 local_58;\n  undefined4 uStack_54;\n  undefined4 uStack_50;\n  undefined4 uStack_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  \n  bVar8 = 0;\n  puVar41 = auStack_378;\n  puVar38 = auStack_378;\n  puVar40 = auStack_378;\n  puVar34 = auStack_378;\n  puVar39 = auStack_378;\n  puVar37 = auStack_378;\n  puVar35 = auStack_378;\n  local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)(param_10 != (undefined *)0x0))\n  ;\n  uVar30 = (ulong)param_7;\n  if ((*(char *)(param_6 + 3) != '\\0') && (param_10 != (undefined *)0x0)) {\n    *param_10 = 0;\n  }\n  iVar9 = *(int *)((long)param_6 + 4);\n  *param_9 = 0;\n  local_2e0 = &local_278;\n  local_300 = param_4;\n  local_2f0 = param_5;\n  local_2c0 = param_2;\n  if (iVar9 == 2) {\n    local_380 = (undefined *)0x405c95;\n    iVar9 = __lxstat(1,(char *)param_1,local_2e0);\n    bVar48 = iVar9 != 0;\n    uVar10 = unaff_R15D & 0xffffff00 | (uint)bVar48;\n  }\n  else {\n    local_380 = (undefined *)0x40548a;\n    iVar9 = __xstat(1,(char *)param_1,local_2e0);\n    bVar48 = iVar9 != 0;\n    uVar10 = unaff_R15D & 0xffffff00 | (uint)bVar48;\n  }\n  puVar36 = auStack_378;\n  if (bVar48) goto LAB_00405ca7;\n  local_2d0 = local_278.st_mode;\n  local_2cc = local_278.st_mode & 0xf000;\n  bVar5 = (byte)param_7;\n  if ((local_278.st_mode & 0xf000) == 0x4000) {\n    if (*(char *)((long)param_6 + 0x2a) != '\\0') {\n      if (bVar5 != 0) goto LAB_0040610f;\n      goto LAB_004054e2;\n    }\n    local_380 = (undefined *)0x40672a;\n    uVar30 = FUN_0040ddd0(4,param_1);\n    uVar16 = 5;\n    if (*(char *)((long)param_6 + 0x19) != '\\0') {\n      pcVar42 = \"omitting directory %s\";\nLAB_00406742:\n      local_380 = (undefined *)0x406749;\n      uVar16 = dcgettext(0,pcVar42,5);\n      goto LAB_00406749;\n    }\n  }\n  else {\n    if (bVar5 != 0) {\n      if (*(int *)param_6 == 0) {\n        local_380 = (undefined *)0x406107;\n        bVar7 = FUN_0040ad30(param_6[8],param_1,local_2e0);\n        if (bVar7 != 0) {\n          local_2c0 = (byte **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)bVar7);\n          local_380 = (undefined *)0x4070f3;\n          uVar16 = FUN_0040ddd0(4,param_1);\n          local_380 = (undefined *)0x407107;\n          uVar17 = dcgettext(0,\"warning: source file %s specified more than once\",5);\n                    /* WARNING: Subroutine does not return */\n          local_380 = &UNK_00407118;\n          error(0,0,uVar17,uVar16);\n        }\nLAB_0040610f:\n        local_380 = (undefined *)0x406122;\n        FUN_0040aca0(param_6[8],param_1,local_2e0);\n      }\n      else {\n        local_380 = (undefined *)0x4054e2;\n        FUN_0040aca0(param_6[8],param_1,local_2e0);\n      }\n    }\nLAB_004054e2:\n    pcVar42 = (char *)local_2e8;\n    local_2e8 = (byte **)CONCAT44(local_2e8._4_4_,1);\n    if (*(int *)((long)param_6 + 4) != 4) {\n      local_2e8 = (byte **)((ulong)pcVar42 & 0xffffffff00000000 |\n                           (ulong)(*(int *)((long)param_6 + 4) == 3 & param_7));\n    }\n    if (param_3 == 0) {\n      if ((((local_2cc == 0x8000) ||\n           (((*(char *)((long)param_6 + 0x14) != '\\0' && (local_2cc != 0x4000)) &&\n            (local_2cc != 0xa000)))) &&\n          (((*(char *)(param_6 + 3) == '\\0' && (*(char *)((long)param_6 + 0x2c) == '\\0')) &&\n           (*(char *)((long)param_6 + 0x17) == '\\0')))) &&\n         ((*(int *)param_6 == 0 && (*(char *)((long)param_6 + 0x15) == '\\0')))) {\n        local_2f8 = &local_1e8;\n        local_380 = (undefined *)0x405598;\n        iVar9 = __xstat(1,(char *)local_2c0,local_2f8);\n        local_308._0_1_ = 1;\n        bVar48 = iVar9 != 0;\n        local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)bVar48);\n      }\n      else {\n        local_2f8 = &local_1e8;\n        local_380 = (undefined *)0x405fd2;\n        iVar9 = __lxstat(1,(char *)local_2c0,local_2f8);\n        bVar48 = iVar9 != 0;\n        local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)bVar48);\n        local_308._0_1_ = param_3;\n      }\n      if (bVar48) {\n        local_380 = (undefined *)0x405ff0;\n        piVar15 = __errno_location();\n        if (*piVar15 != 2) {\n          local_380 = (undefined *)0x406014;\n          local_2c8 = piVar15;\n          uVar16 = FUN_0040ddd0(4,local_2c0);\n          local_380 = (undefined *)0x406028;\n          uVar17 = dcgettext(0,\"cannot stat %s\",5);\n                    /* WARNING: Subroutine does not return */\n          local_380 = &UNK_00406041;\n          error(0,*local_2c8,uVar17,uVar16);\n        }\n        goto LAB_00405840;\n      }\n      if ((local_278.st_ino != local_1e8.st_ino) || (local_278.st_dev != local_1e8.st_dev)) {\n        if (*(int *)((long)param_6 + 4) != 2) goto LAB_004055d3;\n        cVar4 = '\\0';\n        uVar12 = 0;\nLAB_004068a5:\n        psVar21 = local_2e0;\n        psVar46 = local_2f8;\n        if (((local_278.st_mode & 0xf000) == 0xa000) && ((local_1e8.st_mode & 0xf000) == 0xa000)) {\n          local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000 | (ulong)uVar12);\n          local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n          local_380 = (undefined *)0x407672;\n          cVar4 = FUN_0040e2f0(param_1,local_2c0);\n          if (cVar4 == '\\0') {\n            if ((*(int *)param_6 == 0) && ((uint)local_310 != 0)) {\n              bVar7 = 1;\n              bVar6 = *(byte *)(param_6 + 3) ^ 1;\n              goto LAB_004076ab;\n            }\n            goto LAB_004055d3;\n          }\n        }\n        else {\nLAB_004068c9:\n          if (*(int *)param_6 == 0) {\n            cVar27 = *(char *)(param_6 + 3);\n            if ((cVar27 == '\\0') && (*(char *)((long)param_6 + 0x15) == '\\0')) {\n              if ((psVar21->st_mode & 0xf000) != 0xa000) {\nLAB_00406f37:\n                if ((psVar46->st_mode & 0xf000) != 0xa000) {\nLAB_004072b7:\n                  if ((psVar21->st_ino != psVar46->st_ino) || (psVar21->st_dev != psVar46->st_dev))\n                  goto LAB_004055d3;\n                  if (*(char *)((long)param_6 + 0x17) != '\\0') goto LAB_004070d0;\n                }\nLAB_00406f4b:\n                cVar27 = *(char *)(param_6 + 3);\n                goto LAB_00406f50;\n              }\n            }\n            else {\n              if ((psVar46->st_mode & 0xf000) == 0xa000) goto LAB_004055d3;\n              if ((cVar4 != '\\0') && (1 < psVar46->st_nlink)) {\n                local_318 = (stat *)((ulong)local_318 & 0xffffffffffffff00 | (ulong)(byte)local_308)\n                ;\n                local_380 = (undefined *)0x407d95;\n                local_310 = psVar46;\n                local_308 = psVar21;\n                bVar7 = FUN_0040e2f0(param_1,local_2c0);\n                local_308._0_1_ = (byte)local_318;\n                if (bVar7 != 0) {\n                  psVar21 = local_308;\n                  psVar46 = local_310;\n                  if ((local_308->st_mode & 0xf000) != 0xa000) goto LAB_00406f37;\n                  goto LAB_00406f4b;\n                }\n                bVar6 = *(byte *)(param_6 + 3) ^ 1;\n                goto LAB_004076ab;\n              }\n              if ((psVar21->st_mode & 0xf000) != 0xa000) goto LAB_004072b7;\nLAB_00406f50:\n              if (((cVar27 != '\\0') && ((local_278.st_mode & 0xf000) == 0xa000)) &&\n                 (1 < psVar46->st_nlink)) {\n                local_318 = (stat *)((ulong)local_318 & 0xffffffffffffff00 | (ulong)(byte)local_308)\n                ;\n                local_380 = (undefined *)0x407e7c;\n                local_310 = psVar46;\n                local_308 = psVar21;\n                pcVar42 = canonicalize_file_name((char *)param_1);\n                psVar21 = local_308;\n                psVar46 = local_310;\n                local_308._0_1_ = (byte)local_318;\n                if (pcVar42 != (char *)0x0) {\n                  local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 |\n                                      (ulong)local_318 & 0xff);\n                  local_380 = (undefined *)0x407eb8;\n                  local_2d8 = (stat *)pcVar42;\n                  bVar6 = FUN_0040e2f0(pcVar42,local_2c0);\n                  bVar6 = bVar6 ^ 1;\n                  local_380 = (undefined *)0x407ecd;\n                  free(local_2d8);\n                  bVar7 = 0;\n                  goto LAB_004076ab;\n                }\n              }\n            }\n            if ((*(char *)((long)param_6 + 0x2c) == '\\0') &&\n               (((*(uint *)((long)param_6 + 0x14) & 0xff00ff00) == 0 ||\n                ((psVar46->st_mode & 0xf000) != 0xa000)))) {\n              if (*(int *)((long)param_6 + 4) == 2) {\n                if ((psVar21->st_mode & 0xf000) == 0xa000) {\n                  local_310 = (stat *)((ulong)local_310 & 0xffffffffffffff00 |\n                                      (ulong)(byte)local_308);\n                  local_380 = (undefined *)0x408749;\n                  local_308 = psVar46;\n                  iVar9 = __xstat(1,(char *)param_1,(stat *)local_c8);\n                  psVar46 = local_308;\n                  local_308._0_1_ = (byte)local_310;\n                  if (iVar9 != 0) goto LAB_004055d3;\n                }\n                else {\n                  local_c8._0_8_ = (byte *)psVar21->st_dev;\n                  local_c8._8_8_ = (byte *)psVar21->st_ino;\n                  local_c8._16_8_ = (byte *)psVar21->st_nlink;\n                  stack0xffffffffffffff50 = *(byte **)&psVar21->st_mode;\n                  local_a8 = *(byte **)&psVar21->st_gid;\n                  pbStack_a0 = (byte *)psVar21->st_rdev;\n                  local_98 = (byte *)psVar21->st_size;\n                  ppbStack_90 = (byte **)psVar21->st_blksize;\n                  local_88 = (byte *)psVar21->st_blocks;\n                  uStack_80 = *(undefined4 *)&(psVar21->st_atim).tv_sec;\n                  uStack_7c = *(undefined4 *)((long)&(psVar21->st_atim).tv_sec + 4);\n                  local_78 = *(undefined4 *)&(psVar21->st_atim).tv_nsec;\n                  uStack_74 = *(undefined4 *)((long)&(psVar21->st_atim).tv_nsec + 4);\n                  uStack_70 = *(undefined4 *)&(psVar21->st_mtim).tv_sec;\n                  uStack_6c = *(undefined4 *)((long)&(psVar21->st_mtim).tv_sec + 4);\n                  local_68 = *(undefined4 *)&(psVar21->st_mtim).tv_nsec;\n                  uStack_64 = *(undefined4 *)((long)&(psVar21->st_mtim).tv_nsec + 4);\n                  uStack_60 = *(undefined4 *)&(psVar21->st_ctim).tv_sec;\n                  uStack_5c = *(undefined4 *)((long)&(psVar21->st_ctim).tv_sec + 4);\n                  local_58 = *(undefined4 *)&(psVar21->st_ctim).tv_nsec;\n                  uStack_54 = *(undefined4 *)((long)&(psVar21->st_ctim).tv_nsec + 4);\n                  uStack_50 = *(undefined4 *)psVar21->__unused;\n                  uStack_4c = *(undefined4 *)((long)psVar21->__unused + 4);\n                  local_48 = *(undefined4 *)(psVar21->__unused + 1);\n                  uStack_44 = *(undefined4 *)((long)psVar21->__unused + 0xc);\n                  uStack_40 = *(undefined4 *)(psVar21->__unused + 2);\n                  uStack_3c = *(undefined4 *)((long)psVar21->__unused + 0x14);\n                }\n                if ((psVar46->st_mode & 0xf000) == 0xa000) {\n                  local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 |\n                                      (ulong)(byte)local_308);\n                  local_380 = (undefined *)0x40870f;\n                  iVar9 = __xstat(1,(char *)local_2c0,(stat *)&local_158);\n                  if (iVar9 != 0) goto LAB_004055d3;\n                }\n                else {\n                  local_158 = *(uint *)&psVar46->st_dev;\n                  uStack_154 = *(undefined4 *)((long)&psVar46->st_dev + 4);\n                  uStack_150 = *(undefined4 *)&psVar46->st_ino;\n                  uStack_14c = *(undefined4 *)((long)&psVar46->st_ino + 4);\n                  local_148 = *(undefined4 *)&psVar46->st_nlink;\n                  uStack_144 = *(undefined4 *)((long)&psVar46->st_nlink + 4);\n                  _Stack_140 = psVar46->st_mode;\n                  _Stack_13c = psVar46->st_uid;\n                  local_138 = psVar46->st_gid;\n                  iStack_134 = psVar46->__pad0;\n                  uStack_130 = *(undefined4 *)&psVar46->st_rdev;\n                  uStack_12c = *(undefined4 *)((long)&psVar46->st_rdev + 4);\n                  local_128 = *(undefined4 *)&psVar46->st_size;\n                  uStack_124 = *(undefined4 *)((long)&psVar46->st_size + 4);\n                  uStack_120 = *(undefined4 *)&psVar46->st_blksize;\n                  uStack_11c = *(undefined4 *)((long)&psVar46->st_blksize + 4);\n                  local_118 = *(undefined4 *)&psVar46->st_blocks;\n                  uStack_114 = *(undefined4 *)((long)&psVar46->st_blocks + 4);\n                  uStack_110 = *(undefined4 *)&(psVar46->st_atim).tv_sec;\n                  uStack_10c = *(undefined4 *)((long)&(psVar46->st_atim).tv_sec + 4);\n                  local_108 = *(undefined4 *)&(psVar46->st_atim).tv_nsec;\n                  uStack_104 = *(undefined4 *)((long)&(psVar46->st_atim).tv_nsec + 4);\n                  uStack_100 = *(undefined4 *)&(psVar46->st_mtim).tv_sec;\n                  uStack_fc = *(undefined4 *)((long)&(psVar46->st_mtim).tv_sec + 4);\n                  local_f8 = *(undefined4 *)&(psVar46->st_mtim).tv_nsec;\n                  uStack_f4 = *(undefined4 *)((long)&(psVar46->st_mtim).tv_nsec + 4);\n                  uStack_f0 = *(undefined4 *)&(psVar46->st_ctim).tv_sec;\n                  uStack_ec = *(undefined4 *)((long)&(psVar46->st_ctim).tv_sec + 4);\n                  local_e8 = *(undefined4 *)&(psVar46->st_ctim).tv_nsec;\n                  uStack_e4 = *(undefined4 *)((long)&(psVar46->st_ctim).tv_nsec + 4);\n                  uStack_e0 = *(undefined4 *)psVar46->__unused;\n                  uStack_dc = *(undefined4 *)((long)psVar46->__unused + 4);\n                  local_d8 = *(undefined4 *)(psVar46->__unused + 1);\n                  uStack_d4 = *(undefined4 *)((long)psVar46->__unused + 0xc);\n                  uStack_d0 = *(undefined4 *)(psVar46->__unused + 2);\n                  uStack_cc = *(undefined4 *)((long)psVar46->__unused + 0x14);\n                }\n                if ((local_c8._8_8_ != (byte *)CONCAT44(uStack_14c,uStack_150)) ||\n                   (local_c8._0_8_ != (byte *)CONCAT44(uStack_154,local_158))) goto LAB_004055d3;\n                if (*(char *)((long)param_6 + 0x17) != '\\0') goto LAB_004070d0;\n              }\n              goto LAB_00406920;\n            }\n            bVar6 = psVar46->st_dev == psVar21->st_dev;\n            bVar7 = 0;\n          }\n          else {\n            if (cVar4 == '\\0') {\n              if ((((*(char *)(param_6 + 3) == '\\0') && (*(int *)((long)param_6 + 4) != 2)) &&\n                  ((psVar21->st_mode & 0xf000) == 0xa000)) &&\n                 ((psVar46->st_mode & 0xf000) != 0xa000)) goto LAB_00406920;\n              goto LAB_004055d3;\n            }\n            local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n            local_380 = (undefined *)0x407b8b;\n            bVar6 = FUN_0040e2f0(param_1,local_2c0);\n            bVar6 = bVar6 ^ 1;\n            bVar7 = 0;\n            local_308._0_1_ = (byte)local_2d8;\n          }\nLAB_004076ab:\n          if (bVar6 != 0) {\n            local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)bVar7);\n            goto LAB_004055d3;\n          }\n        }\nLAB_00406920:\n        local_380 = (undefined *)0x406936;\n        uVar16 = FUN_0040dcf0(1,4,local_2c0);\n        local_380 = (undefined *)0x406948;\n        uVar17 = FUN_0040dcf0(0,4,param_1);\n        pcVar42 = \"%s and %s are the same file\";\n        puVar35 = auStack_378;\nLAB_00405818:\n        *(undefined8 *)(puVar35 + -8) = 0x40581f;\n        uVar18 = dcgettext(0,pcVar42,5);\nLAB_00405828:\n                    /* WARNING: Subroutine does not return */\n        *(undefined8 *)(puVar35 + -8) = 0x405833;\n        error(0,0,uVar18,uVar17,uVar16);\n      }\n      cVar4 = *(char *)((long)param_6 + 0x17);\n      if (cVar4 == '\\0') {\n        if (*(int *)((long)param_6 + 4) == 2) {\n          cVar4 = '\\x01';\n          uVar12 = 1;\n          goto LAB_004068a5;\n        }\n        local_318 = (stat *)&local_158;\n        local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n        local_380 = (undefined *)0x406ace;\n        iVar9 = __lxstat(1,(char *)local_2c0,local_318);\n        if (iVar9 == 0) {\n          local_328 = (stat *)local_c8;\n          local_380 = (undefined *)0x406afc;\n          iVar9 = __lxstat(1,(char *)param_1,local_328);\n          if (iVar9 == 0) {\n            if (local_c8._8_8_ == (byte *)CONCAT44(uStack_14c,uStack_150)) {\n              cVar4 = local_c8._0_8_ == (byte *)CONCAT44(uStack_154,local_158);\n            }\n            psVar21 = local_328;\n            psVar46 = local_318;\n            if ((((local_c8._24_4_ & 0xf000) != 0xa000) || ((_Stack_140 & 0xf000) != 0xa000)) ||\n               (*(char *)((long)param_6 + 0x15) == '\\0')) goto LAB_004068c9;\n          }\n        }\n      }\n      else {\nLAB_004070d0:\n        local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n      }\nLAB_004055d3:\n      if (local_2cc == 0x4000) {\n        if (*(char *)(param_6 + 3) != '\\0') {\n          iVar9 = *(int *)(param_6 + 1);\nLAB_00406b8f:\n          if (iVar9 == 2) goto LAB_00406c10;\n          if (iVar9 == 3) {\nLAB_00406bd6:\n            local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n            local_380 = (undefined *)0x406bf7;\n            cVar4 = FUN_00404890(param_6,local_2c0,&local_2f8->st_mode);\n            if (cVar4 == '\\0') {\nLAB_00406c10:\n              if (param_10 == (undefined *)0x0) {\n                return 1;\n              }\n              *param_10 = 1;\n              return 1;\n            }\n          }\n          else if ((iVar9 == 4) && (*(char *)((long)param_6 + 0x2f) != '\\0')) {\n            local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n            local_380 = (undefined *)0x406bc6;\n            cVar4 = FUN_00404640(local_2c0,local_1e8.st_mode);\n            if (cVar4 == '\\0') goto LAB_00406bd6;\n          }\n        }\nLAB_0040560f:\n        if ((byte)local_2d8 != '\\0') {\n          return 1;\n        }\n        local_2f8._0_1_ = (byte)local_308 ^ 1;\n        if ((local_1e8.st_mode & 0xf000) != 0x4000) {\n          if (local_2cc == 0x4000) {\n            if ((*(char *)(param_6 + 3) == '\\0') || (iVar9 = *(int *)param_6, iVar9 == 0)) {\n              local_380 = (undefined *)0x407bc3;\n              uVar16 = FUN_0040dcf0(1,4,param_1);\n              local_380 = (undefined *)0x407bd9;\n              uVar17 = FUN_0040dcf0(0,4,local_2c0);\n              pcVar42 = \"cannot overwrite non-directory %s with directory %s\";\n              puVar35 = auStack_378;\n              goto LAB_00405818;\n            }\n            if (bVar5 != 0) goto LAB_00405654;\n            goto LAB_00407398;\n          }\n          iVar9 = *(int *)param_6;\n          if (bVar5 == 0) goto LAB_004056b4;\nLAB_00405654:\n          if (iVar9 != 3) {\n            local_308 = (stat *)(((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308) ^\n                                1);\n            local_380 = (undefined *)0x40567b;\n            cVar4 = FUN_0040ad30(param_6[7],local_2c0,local_2f8);\n            if (cVar4 != '\\0') {\n              local_380 = (undefined *)0x407fb5;\n              uVar16 = FUN_0040dcf0(1,4,param_1);\n              local_380 = (undefined *)0x407fcb;\n              uVar17 = FUN_0040dcf0(0,4,local_2c0);\n              pcVar42 = \"will not overwrite just-created %s with %s\";\n              puVar35 = auStack_378;\n              goto LAB_00405818;\n            }\n            local_2f8._0_1_ = (byte)local_308;\n            if ((local_2cc != 0x4000) && ((local_1e8.st_mode & 0xf000) == 0x4000))\n            goto LAB_00407380;\n            goto LAB_004056b0;\n          }\n          if (*(char *)(param_6 + 3) != '\\0') goto LAB_00407398;\nLAB_00407918:\n          local_2f8 = (stat *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n          local_380 = (undefined *)0x407926;\n          psVar21 = (stat *)FUN_0040ab40(param_1);\n          if (*(char *)&psVar21->st_dev == '.') {\n            bVar7 = 0;\nLAB_00407d43:\n            cVar4 = *(char *)((long)psVar21->__unused +\n                             ((ulong)(*(char *)((long)&psVar21->st_dev + 1) == '.') - 0x77));\n            if ((cVar4 == '\\0') || (cVar4 == '/')) goto LAB_004056ca;\n            if (bVar7 != 0) goto LAB_004073d1;\n          }\n          if ((local_1e8.st_mode & 0xf000) == 0x4000) {\nLAB_0040794f:\n            local_308 = (stat *)0x0;\n            puVar35 = auStack_378;\n            goto LAB_00405854;\n          }\nLAB_004073d1:\n          if (iVar9 != 3) {\n            local_2f8 = (stat *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n            local_380 = (undefined *)0x4073f0;\n            local_310 = psVar21;\n            local_2d8 = (stat *)strlen((char *)psVar21);\n            local_380 = (undefined *)0x407403;\n            local_308 = (stat *)FUN_0040ab40(local_2c0);\n            local_380 = (undefined *)0x407412;\n            sVar19 = strlen((char *)local_308);\n            local_318 = DAT_0061b900;\n            local_380 = (undefined *)0x40742b;\n            local_320 = (byte **)strlen((char *)DAT_0061b900);\n            if (local_2d8 == (stat *)(sVar19 + (long)local_320)) {\n              local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)local_2f8 & 0xff);\n              local_2f8 = local_310;\n              local_380 = (undefined *)0x407473;\n              iVar9 = memcmp(local_310,local_308,sVar19);\n              local_2f8._0_1_ = (byte)local_2d8;\n              if (iVar9 == 0) {\n                local_380 = (undefined *)0x407499;\n                iVar9 = strcmp((char *)((long)local_2f8->__unused + (sVar19 - 0x78)),\n                               (char *)local_318);\n                local_2f8._0_1_ = (byte)local_2d8;\n                if (iVar9 == 0) {\n                  local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 |\n                                      (ulong)local_2d8 & 0xff);\n                  local_380 = (undefined *)0x4074ba;\n                  local_2f8 = (stat *)strlen((char *)local_2c0);\n                  local_380 = (undefined *)0x4074d2;\n                  pcVar42 = (char *)FUN_004100e0((undefined *)\n                                                 ((long)local_320 +\n                                                 (long)((long)local_2f8->__unused + -0x77)));\n                  local_2d8 = DAT_0061b900;\n                  local_380 = (undefined *)0x4074f9;\n                  pcVar26 = (char *)mempcpy(pcVar42,local_2c0,(size_t)local_2f8);\n                  local_380 = (undefined *)0x407508;\n                  strcpy(pcVar26,(char *)local_2d8);\n                  local_380 = (undefined *)0x40751f;\n                  uVar12 = __xstat(1,pcVar42,(stat *)local_c8);\n                  local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffff00000000 | (ulong)uVar12);\n                  local_380 = (undefined *)0x40752d;\n                  free(pcVar42);\n                  local_2f8._0_1_ = (byte)local_308;\n                  if ((((int)local_2d8 == 0) && ((byte *)local_278.st_ino == local_c8._8_8_)) &&\n                     ((byte *)local_278.st_dev == local_c8._0_8_)) {\n                    if (*(char *)(param_6 + 3) == '\\0') {\n                      local_380 = (undefined *)0x408c4a;\n                      uVar18 = dcgettext(0,\"backing up %s might destroy source;  %s not copied\",5);\n                    }\n                    else {\n                      local_380 = (undefined *)0x408c00;\n                      uVar18 = dcgettext(0,\"backing up %s might destroy source;  %s not moved\",5);\n                    }\n                    local_380 = (undefined *)0x408c15;\n                    uVar16 = FUN_0040dcf0(1,4,param_1);\n                    local_380 = (undefined *)0x408c2b;\n                    uVar17 = FUN_0040dcf0(0,4,local_2c0);\n                    goto LAB_00405828;\n                  }\n                }\n              }\n            }\n          }\n          local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n          local_380 = (undefined *)0x40756e;\n          psVar21 = (stat *)FUN_0040a6b0(local_2c0,*(undefined4 *)param_6);\n          local_2f8 = (stat *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)local_2d8 & 0xff);\n          local_308 = psVar21;\n          if (psVar21 == (stat *)0x0) {\n            local_380 = (undefined *)0x407c3b;\n            piVar15 = __errno_location();\n            local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n            puVar35 = auStack_378;\n            if (*piVar15 != 2) {\n              local_380 = (undefined *)0x407c66;\n              uVar16 = FUN_0040ddd0(4,local_2c0);\n              pcVar42 = \"cannot backup %s\";\nLAB_00407c73:\n              local_380 = (undefined *)0x407c7d;\n              uVar17 = dcgettext(0,pcVar42,5);\n                    /* WARNING: Subroutine does not return */\n              local_380 = &UNK_00407c90;\n              error(0,*piVar15,uVar17,uVar16);\n            }\n          }\n          else {\n            local_380 = (undefined *)0x407596;\n            sVar19 = strlen((char *)psVar21);\n            lVar28 = -(sVar19 + 0x18 & 0xfffffffffffffff0);\n            *(undefined8 *)(auStack_378 + lVar28 + -8) = 0x4075b6;\n            psVar46 = (stat *)memcpy((void *)((long)&local_370 + lVar28),psVar21,sVar19 + 1);\n            psVar21 = local_308;\n            *(undefined8 *)(auStack_378 + lVar28 + -8) = 0x4075c5;\n            free(psVar21);\n            local_308 = psVar46;\n            local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n            puVar35 = auStack_378 + lVar28;\n          }\n          goto LAB_00405854;\n        }\n        if (local_2cc != 0x4000) {\nLAB_00407380:\n          if ((*(char *)(param_6 + 3) == '\\0') || (iVar9 = *(int *)param_6, iVar9 == 0)) {\n            local_380 = (undefined *)0x407ca6;\n            uVar30 = FUN_0040ddd0(4,local_2c0);\n            pcVar42 = \"cannot overwrite directory %s with non-directory\";\n            goto LAB_00406742;\n          }\nLAB_00407398:\n          if ((local_278.st_mode & 0xf000) == 0x4000) {\nLAB_00407ad8:\n            if ((local_1e8.st_mode & 0xf000) == 0x4000) goto LAB_00407975;\n            if (iVar9 == 0) {\n              local_380 = (undefined *)0x407b04;\n              uVar16 = FUN_0040dea0(0,3,local_2c0);\n              local_380 = (undefined *)0x407b16;\n              uVar17 = FUN_0040dea0(0,3,param_1);\n              pcVar42 = \"cannot move directory onto non-directory: %s -> %s\";\n              puVar35 = auStack_378;\n              goto LAB_00405818;\n            }\n          }\nLAB_004073b0:\n          local_2f8 = (stat *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n          local_380 = (undefined *)0x4073be;\n          psVar21 = (stat *)FUN_0040ab40(param_1);\n          if (*(char *)&psVar21->st_dev == '.') {\n            bVar7 = 1;\n            goto LAB_00407d43;\n          }\n          goto LAB_004073d1;\n        }\nLAB_004056b0:\n        iVar9 = *(int *)param_6;\nLAB_004056b4:\n        bVar7 = *(byte *)(param_6 + 3);\n        if (bVar7 != 0) {\n          if ((local_278.st_mode & 0xf000) == 0x4000) goto LAB_00407ad8;\nLAB_00407975:\n          if (iVar9 != 0) goto LAB_004073b0;\n          goto LAB_0040794f;\n        }\n        if (iVar9 != 0) goto LAB_00407918;\nLAB_004056ca:\n        local_308 = (stat *)0x0;\n        puVar35 = auStack_378;\n        if (((local_1e8.st_mode & 0xf000) == 0x4000 | bVar7) != 0) goto LAB_00405854;\n        uVar32 = (ulong)local_2d8 & 0xffffffffffffff00;\n        local_2d8 = (stat *)(uVar32 | *(byte *)((long)param_6 + 0x15));\n        if (((*(byte *)((long)param_6 + 0x15) == 0) &&\n            ((*(char *)((long)param_6 + 0x22) == '\\0' || (local_1e8.st_nlink < 2)))) &&\n           ((local_308 = (stat *)0x0, puVar35 = auStack_378, *(int *)((long)param_6 + 4) != 2 ||\n            (puVar35 = auStack_378, (local_278.st_mode & 0xf000) == 0x8000)))) goto LAB_00405854;\n        local_308 = (stat *)0x0;\n        local_2d8 = (stat *)(uVar32 | (byte)local_2f8);\n        local_380 = (undefined *)0x40572c;\n        iVar9 = unlink((char *)local_2c0);\n        local_2f8._0_1_ = (byte)local_2d8;\n        if (iVar9 != 0) {\n          local_380 = (undefined *)0x40573c;\n          piVar15 = __errno_location();\n          local_2f8._0_1_ = (byte)local_2d8;\n          if (*piVar15 != 2) {\n            local_380 = (undefined *)0x4085a0;\n            uVar16 = FUN_0040ddd0(4,local_2c0);\n            pcVar42 = \"cannot remove %s\";\n            goto LAB_00407c73;\n          }\n        }\n        uVar32 = (ulong)local_2d8 & 0xffffffffffffff00;\n        local_2d8 = (stat *)(uVar32 | *(byte *)((long)param_6 + 0x2e));\n        if (*(byte *)((long)param_6 + 0x2e) != 0) {\n          local_2f8 = (stat *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n          local_380 = (undefined *)0x408028;\n          uVar16 = FUN_0040ddd0(4,local_2c0);\n          local_380 = (undefined *)0x40803c;\n          uVar17 = dcgettext(0,\"removed %s\\n\",5);\n          local_380 = (undefined *)0x40804e;\n          __printf_chk(1,uVar17,uVar16);\n          local_308 = (stat *)0x0;\n          puVar35 = auStack_378;\n          goto LAB_00405854;\n        }\n        if (bVar5 != 0) {\n          local_2d8 = (stat *)(uVar32 | bVar5);\n          local_308 = (stat *)0x0;\n          puVar37 = auStack_378;\n          if (param_6[7] != (byte *)0x0) goto LAB_00405790;\n          goto LAB_00405d20;\n        }\n        bVar7 = local_2cc == 0x4000 & *(byte *)((long)param_6 + 0x2a);\n        local_2d8 = (stat *)(uVar32 | bVar7);\n        if (bVar7 == 0) {\n          local_2d8._1_7_ = (undefined7)(uVar32 >> 8);\n          local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n          local_308 = (stat *)0x0;\n          goto LAB_00405898;\n        }\n        local_308 = (stat *)0x0;\nLAB_00406780:\n        pbVar44 = (byte *)local_278.st_ino;\n        pbVar24 = (byte *)local_278.st_dev;\n        *(undefined8 *)(puVar39 + -8) = 0x406788;\n        local_2f8 = (stat *)FUN_00409440(pbVar44,pbVar24);\n        puVar40 = puVar39;\n        goto LAB_00405d67;\n      }\n      if (*(char *)((long)param_6 + 0x2d) == '\\0') {\nLAB_004055ee:\n        iVar9 = *(int *)(param_6 + 1);\n        if (*(char *)(param_6 + 3) != '\\0') goto LAB_00406b8f;\n        if (iVar9 == 2) {\n          return 1;\n        }\n        if (iVar9 == 3) {\n          local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n          local_380 = (undefined *)0x407a4a;\n          cVar4 = FUN_00404890(param_6,local_2c0,&local_2f8->st_mode);\n          if (cVar4 == '\\0') {\n            return 1;\n          }\n        }\n        goto LAB_0040560f;\n      }\n      bVar48 = false;\n      if ((*(char *)((long)param_6 + 0x1f) != '\\0') &&\n         (bVar48 = true, *(char *)(param_6 + 3) != '\\0')) {\n        bVar48 = local_1e8.st_dev != local_278.st_dev;\n      }\n      local_308 = (stat *)((ulong)local_308 & 0xffffffffffffff00 | (ulong)(byte)local_308);\n      local_380 = (undefined *)0x406809;\n      iVar9 = FUN_0040eb60(local_2c0,local_2f8,local_2e0,bVar48);\n      if (iVar9 < 0) goto LAB_004055ee;\n      if (param_10 != (undefined *)0x0) {\n        *param_10 = 1;\n      }\n      local_380 = (undefined *)0x406841;\n      lVar28 = FUN_00409480(local_2c0,local_278.st_ino,local_278.st_dev);\n      if (lVar28 == 0) {\n        return 1;\n      }\n      local_380 = (undefined *)0x40686a;\n      cVar4 = FUN_004049c0(lVar28,local_2c0,1,*(undefined *)((long)param_6 + 0x2e),\n                           (ulong)local_2e8 & 0xffffffff);\n      if (cVar4 != '\\0') {\n        return 1;\n      }\n      if (*(char *)((long)param_6 + 0x25) == '\\0') {\n        return uVar10;\n      }\n    }\n    else {\nLAB_00405840:\n      local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n      local_2f8._0_1_ = 0;\n      local_308 = (stat *)0x0;\n      puVar35 = auStack_378;\nLAB_00405854:\n      if ((bVar5 == 0) || (puVar34 = puVar35, param_6[7] == (byte *)0x0)) {\nLAB_0040585c:\n        puVar37 = puVar35;\n        if (*(char *)((long)param_6 + 0x2e) == '\\0') {\nLAB_00405d20:\n          if ((*(char *)((long)param_6 + 0x2a) == '\\0') || (puVar39 = puVar37, local_2cc != 0x4000))\n          {\nLAB_00405898:\n            puVar40 = puVar37;\n            if (*(char *)(param_6 + 3) == '\\0') goto LAB_004058a3;\n            goto LAB_00405ef7;\n          }\nLAB_00405d3b:\n          pbVar24 = (byte *)local_278.st_ino;\n          ppbVar23 = local_2c0;\n          if (bVar5 == 0) goto LAB_00406780;\n          *(undefined8 *)(puVar39 + -8) = 0x405d60;\n          local_2f8 = (stat *)FUN_00409480(ppbVar23,pbVar24);\n          puVar40 = puVar39;\nLAB_00405d67:\n          if (local_2f8 != (stat *)0x0) {\nLAB_00405d75:\n            psVar21 = local_2f8;\n            *(undefined8 *)(puVar40 + -8) = 0x405d84;\n            cVar4 = FUN_0040e2f0(param_1,psVar21);\n            ppbVar23 = local_2c0;\n            psVar21 = local_2f8;\n            if (cVar4 != '\\0') {\n              *(undefined8 *)(puVar40 + -8) = 0x407146;\n              uVar16 = FUN_0040dcf0(1,4,DAT_0061b8e8);\n              *(undefined8 *)(puVar40 + -8) = 0x40715c;\n              uVar17 = FUN_0040dcf0(0,4,DAT_0061b8f0);\n              *(undefined8 *)(puVar40 + -8) = 0x407170;\n              uVar18 = dcgettext(0,\"cannot copy a directory, %s, into itself, %s\",5);\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)(puVar40 + -8) = &UNK_00407184;\n              error(0,0,uVar18,uVar17,uVar16);\n            }\n            *(undefined8 *)(puVar40 + -8) = 0x405d9f;\n            cVar4 = FUN_0040e2f0(ppbVar23,psVar21);\n            psVar21 = local_2f8;\n            if (cVar4 != '\\0') {\n              *(undefined8 *)(puVar40 + -8) = 0x407991;\n              uVar16 = FUN_0040ddd0(4,DAT_0061b8f0);\n              *(undefined8 *)(puVar40 + -8) = 0x4079a5;\n              uVar17 = dcgettext(0,\"warning: source directory %s specified more than once\",5);\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)(puVar40 + -8) = &UNK_004079b6;\n              error(0,0,uVar17,uVar16);\n            }\n            if ((*(int *)((long)param_6 + 4) != 4) &&\n               ((*(int *)((long)param_6 + 4) != 3 || (bVar5 == 0)))) {\n              *(undefined8 *)(puVar40 + -8) = 0x405dd7;\n              uVar16 = FUN_0040dcf0(1,4,psVar21);\n              ppbVar23 = local_2c0;\n              *(undefined8 *)(puVar40 + -8) = 0x405ded;\n              uVar17 = FUN_0040dcf0(0,4,ppbVar23);\n              *(undefined8 *)(puVar40 + -8) = 0x405e01;\n              uVar18 = dcgettext(0,\"will not create hard link %s to directory %s\",5);\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar40 + -8) = 0x405e15;\n              error(0,0,uVar18,uVar17,uVar16);\n            }\n          }\nLAB_00405ec6:\n          if (*(char *)(param_6 + 3) == '\\0') {\n            local_2c8 = (int *)((ulong)local_2c8 & 0xffffffff00000000 | (ulong)local_2d8 & 0xff);\n            goto LAB_004058c6;\n          }\n        }\n        else {\n          puVar34 = puVar35;\n          if (*(char *)(param_6 + 3) == '\\0') {\nLAB_00405872:\n            ppbVar23 = local_2c0;\n            psVar21 = local_308;\n            puVar34 = puVar37;\n            if (local_2cc == 0x4000) {\nLAB_00406260:\n              puVar40 = puVar34;\n              puVar39 = puVar34;\n              if (*(char *)((long)param_6 + 0x2a) == '\\0') goto LAB_004058a3;\n              goto LAB_00405d3b;\n            }\n            *(undefined8 *)(puVar37 + -8) = 0x405898;\n            FUN_004047e0(param_1,ppbVar23,psVar21);\n            goto LAB_00405898;\n          }\nLAB_00405ee0:\n          puVar40 = puVar34;\n          if ((local_2cc == 0x4000) && (puVar39 = puVar34, *(char *)((long)param_6 + 0x2a) != '\\0'))\n          goto LAB_00405d3b;\nLAB_00405ef7:\n          pbVar44 = (byte *)local_278.st_ino;\n          pbVar24 = (byte *)local_278.st_dev;\n          if (local_278.st_nlink == 1) {\n            *(undefined8 *)(puVar40 + -8) = 0x4067ab;\n            local_2f8 = (stat *)FUN_00409440(pbVar44,pbVar24);\nLAB_0040609c:\n            ppbVar23 = local_2c0;\n            psVar21 = local_2f8;\n            if (local_2f8 != (stat *)0x0) {\n              if (local_2cc == 0x4000) goto LAB_00405d75;\n              uVar47 = *(undefined *)((long)param_6 + 0x2e);\n              uVar32 = (ulong)local_2e8 & 0xffffffff;\n              *(undefined8 *)(puVar40 + -8) = 0x4060de;\n              cVar4 = FUN_004049c0(psVar21,ppbVar23,1,uVar47,uVar32);\n              if (cVar4 != '\\0') {\n                return 1;\n              }\n              if (*(char *)((long)param_6 + 0x25) == '\\0') goto LAB_00405e23;\n              goto LAB_0040687d;\n            }\n            goto LAB_00405ec6;\n          }\n          if (*(char *)((long)param_6 + 0x22) != '\\0') goto LAB_00405eb0;\n          local_2f8 = (stat *)0x0;\n        }\n        ppbVar23 = local_2c0;\n        *(undefined8 *)(puVar40 + -8) = 0x405f26;\n        iVar9 = rename((char *)param_1,(char *)ppbVar23);\n        if (iVar9 == 0) {\n          if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n            *(undefined8 *)(puVar40 + -8) = 0x407319;\n            uVar16 = dcgettext(0,\"renamed \",5);\n            *(undefined8 *)(puVar40 + -8) = 0x407328;\n            __printf_chk(1,uVar16);\n            ppbVar23 = local_2c0;\n            psVar21 = local_308;\n            *(undefined8 *)(puVar40 + -8) = 0x40733e;\n            FUN_004047e0(param_1,ppbVar23,psVar21);\n          }\n          ppbVar23 = local_2c0;\n          if (*(char *)((long)param_6 + 0x21) != '\\0') {\n            *(undefined8 *)(puVar40 + -8) = 0x4072fe;\n            FUN_00405090(ppbVar23,0,1,param_6);\n          }\n          ppbVar23 = local_2c0;\n          psVar21 = local_2e0;\n          if (param_10 != (undefined *)0x0) {\n            *param_10 = 1;\n          }\n          if (bVar5 == 0) {\n            return 1;\n          }\n          pbVar24 = param_6[7];\n          *(undefined8 *)(puVar40 + -8) = 0x406a6e;\n          FUN_0040aca0(pbVar24,ppbVar23,psVar21);\n          return param_7;\n        }\n        *(undefined8 *)(puVar40 + -8) = 0x405f33;\n        piVar15 = __errno_location();\n        ppbVar23 = local_2c0;\n        if (*piVar15 == 0x16) {\n          *(undefined8 *)(puVar40 + -8) = 0x407724;\n          uVar16 = FUN_0040dcf0(1,4,DAT_0061b8e8);\n          *(undefined8 *)(puVar40 + -8) = 0x40773a;\n          uVar17 = FUN_0040dcf0(0,4,DAT_0061b8f0);\n          *(undefined8 *)(puVar40 + -8) = 0x40774e;\n          uVar18 = dcgettext(0,\"cannot move %s to a subdirectory of itself, %s\",5);\n                    /* WARNING: Subroutine does not return */\n          *(undefined **)(puVar40 + -8) = &UNK_00407762;\n          error(0,0,uVar18,uVar17,uVar16);\n        }\n        if (*piVar15 != 0x12) {\n          *(undefined8 *)(puVar40 + -8) = 0x406c8e;\n          uVar16 = FUN_0040dcf0(1,4,ppbVar23);\n          *(undefined8 *)(puVar40 + -8) = 0x406ca0;\n          uVar17 = FUN_0040dcf0(0,4,param_1);\n          pcVar42 = \"cannot move %s to %s\";\n          goto LAB_004069ed;\n        }\n        if (local_2cc == 0x4000) {\n          *(undefined8 *)(puVar40 + -8) = 0x4069a5;\n          iVar9 = rmdir((char *)ppbVar23);\n          if ((iVar9 != 0) && (*piVar15 != 2)) goto LAB_004069b8;\n        }\n        else {\n          *(undefined8 *)(puVar40 + -8) = 0x405f66;\n          iVar9 = unlink((char *)ppbVar23);\n          if ((iVar9 != 0) && (*piVar15 != 2)) {\nLAB_004069b8:\n            ppbVar23 = local_2c0;\n            *(undefined8 *)(puVar40 + -8) = 0x4069ce;\n            uVar16 = FUN_0040dcf0(1,4,ppbVar23);\n            *(undefined8 *)(puVar40 + -8) = 0x4069e0;\n            uVar17 = FUN_0040dcf0(0,4,param_1);\n            pcVar42 = \"inter-device move failed: %s to %s; unable to remove target\";\nLAB_004069ed:\n            *(undefined8 *)(puVar40 + -8) = 0x4069f4;\n            uVar18 = dcgettext(0,pcVar42,5);\n            iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar40 + -8) = &UNK_00406a0a;\n            error(0,iVar9,uVar18,uVar17,uVar16);\n          }\n          bVar5 = local_2cc != 0x4000 & *(byte *)((long)param_6 + 0x2e);\n          local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 | (ulong)bVar5);\n          if (bVar5 != 0) {\n            *(undefined8 *)(puVar40 + -8) = 0x4076d1;\n            uVar16 = dcgettext(0,\"copied \",5);\n            *(undefined8 *)(puVar40 + -8) = 0x4076e0;\n            __printf_chk(1,uVar16);\n            ppbVar23 = local_2c0;\n            psVar21 = local_308;\n            *(undefined8 *)(puVar40 + -8) = 0x4076f6;\n            FUN_004047e0(param_1,ppbVar23,psVar21);\n            local_2c8 = (int *)CONCAT44(local_2c8._4_4_,1);\n            goto LAB_004058c6;\n          }\n        }\n        local_2c8 = (int *)CONCAT44(local_2c8._4_4_,1);\n        local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n      }\n      else {\nLAB_00405790:\n        ppbVar23 = local_2c0;\n        puVar37 = puVar34;\n        if (*(char *)(param_6 + 3) != '\\0') {\n          if (*(char *)((long)param_6 + 0x2e) != '\\0') goto LAB_00405ee0;\n          goto LAB_00405d20;\n        }\n        if (*(int *)param_6 == 0) {\n          psVar21 = &local_1e8;\n          puVar35 = puVar34;\n          if ((byte)local_2f8 == 0) {\n            psVar21 = (stat *)local_c8;\n            *(undefined8 *)(puVar34 + -8) = 0x4071c6;\n            iVar9 = __lxstat(1,(char *)ppbVar23,psVar21);\n            if (iVar9 != 0) goto LAB_0040585c;\n          }\n          ppbVar23 = local_2c0;\n          if ((psVar21->st_mode & 0xf000) == 0xa000) {\n            pbVar24 = param_6[7];\n            *(undefined8 *)(puVar34 + -8) = 0x4057d9;\n            cVar4 = FUN_0040ad30(pbVar24,ppbVar23);\n            ppbVar23 = local_2c0;\n            if (cVar4 != '\\0') {\n              *(undefined8 *)(puVar34 + -8) = 0x4057f3;\n              uVar16 = FUN_0040dcf0(1,4,ppbVar23);\n              *(undefined8 *)(puVar34 + -8) = 0x405805;\n              uVar17 = FUN_0040dcf0(0,4,param_1);\n              pcVar42 = \"will not copy %s through just-created symlink %s\";\n              goto LAB_00405818;\n            }\n          }\n          goto LAB_0040585c;\n        }\n        if (*(char *)((long)param_6 + 0x2e) != '\\0') goto LAB_00405872;\n        puVar40 = puVar34;\n        if (local_2cc == 0x4000) goto LAB_00406260;\nLAB_004058a3:\n        if (*(char *)((long)param_6 + 0x22) != '\\0') {\nLAB_00405eb0:\n          pbVar44 = (byte *)local_278.st_ino;\n          pbVar24 = (byte *)local_278.st_dev;\n          ppbVar23 = local_2c0;\n          if (*(char *)((long)param_6 + 0x17) == '\\0') {\n            if ((1 < local_278.st_nlink) ||\n               (((bVar5 != 0 && (*(int *)((long)param_6 + 4) == 3)) ||\n                (local_2f8 = (stat *)0x0, *(int *)((long)param_6 + 4) == 4)))) {\n              *(undefined8 *)(puVar40 + -8) = 0x406095;\n              local_2f8 = (stat *)FUN_00409480(ppbVar23,pbVar44,pbVar24);\n              goto LAB_0040609c;\n            }\n          }\n          else {\n            local_2f8 = (stat *)0x0;\n          }\n          goto LAB_00405ec6;\n        }\n        local_2f8 = (stat *)0x0;\n        local_2c8 = (int *)((ulong)local_2c8 & 0xffffffff00000000 | (ulong)local_2d8 & 0xff);\n      }\nLAB_004058c6:\n      ppbVar23 = local_2c0;\n      uVar11 = local_2d0;\n      uVar12 = local_2d0;\n      if (*(char *)((long)param_6 + 0x2b) != '\\0') {\n        uVar12 = *(uint *)(param_6 + 2);\n      }\n      if (*(char *)((long)param_6 + 0x1d) != '\\0') {\n        *(undefined8 *)(puVar40 + -8) = 0x40619e;\n        cVar4 = FUN_00404fc0(param_1,ppbVar23,uVar11);\n        if (cVar4 == '\\0') {\n          return uVar10;\n        }\n        local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000 |\n                            (ulong)uVar12 & 0xffffffff0000003f);\n        ppbVar23 = local_2f0;\n        if (local_2cc == 0x4000) goto joined_r0x004061df;\nLAB_00405931:\n        ppbVar23 = local_2c0;\n        local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 |\n                             (ulong)*(byte *)((long)param_6 + 0x2c));\n        puVar36 = puVar40;\n        if (*(byte *)((long)param_6 + 0x2c) == 0) {\n          local_329 = *(byte *)((long)param_6 + 0x17);\n          if (*(byte *)((long)param_6 + 0x17) == 0) {\n            puVar35 = puVar40;\n            if ((local_2cc != 0x8000) &&\n               ((local_2cc != 0xa000 & *(byte *)((long)param_6 + 0x14)) == 0)) {\n              local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00);\n              if (local_2cc == 0x1000) {\n                local_c8._0_8_ = (byte *)0x0;\n                uVar12 = ~(uint)local_310 & local_2d0;\n                *(undefined8 *)(puVar40 + -8) = 0x407aa8;\n                iVar9 = __xmknod(0,(char *)ppbVar23,uVar12,(__dev_t *)local_c8);\n                ppbVar23 = local_2c0;\n                if (iVar9 != 0) {\n                  *(undefined8 *)(puVar40 + -8) = 0x407ef1;\n                  iVar9 = mkfifo((char *)ppbVar23,uVar12 & 0xffffefff);\n                  ppbVar23 = local_2c0;\n                  if (iVar9 != 0) {\n                    *(undefined8 *)(puVar40 + -8) = 0x407f12;\n                    uVar16 = FUN_0040ddd0(4,ppbVar23);\n                    pcVar42 = \"cannot create fifo %s\";\n                    goto LAB_00406360;\n                  }\n                }\n                local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 | (ulong)(byte)local_2c8\n                                     );\n                local_329 = (byte)local_2c8;\n                local_2e8 = (byte **)CONCAT71(local_2e8._1_7_,1);\n              }\n              else {\n                bVar48 = (local_2d0 & 0xb000) == 0x2000;\n                local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 |\n                                     (ulong)(bVar48 || local_2cc == 0xc000));\n                if (bVar48 || local_2cc == 0xc000) {\n                  local_c8._0_8_ = (byte *)local_278.st_rdev;\n                  uVar12 = ~(uint)local_310 & local_2d0;\n                  *(undefined8 *)(puVar40 + -8) = 0x40631e;\n                  iVar9 = __xmknod(0,(char *)ppbVar23,uVar12,(__dev_t *)local_c8);\n                  ppbVar23 = local_2c0;\n                  local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 |\n                                       (ulong)local_2c8 & 0xff);\n                  local_329 = (byte)local_2c8;\n                  if (iVar9 != 0) {\n                    *(undefined8 *)(puVar40 + -8) = 0x40634d;\n                    uVar16 = FUN_0040ddd0(4,ppbVar23);\n                    pcVar42 = \"cannot create special file %s\";\nLAB_00406360:\n                    *(undefined8 *)(puVar35 + -8) = 0x406367;\n                    uVar17 = dcgettext(0,pcVar42,5);\n                    *(undefined8 *)(puVar35 + -8) = 0x40636f;\n                    piVar15 = __errno_location();\n                    iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                    *(undefined8 *)(puVar35 + -8) = 0x406380;\n                    error(0,iVar9,uVar17,uVar16);\n                  }\n                }\n                else {\n                  if (local_2cc != 0xa000) {\n                    *(undefined8 *)(puVar40 + -8) = 0x407b35;\n                    uVar16 = FUN_0040ddd0(4,param_1);\n                    pcVar42 = \"%s has unknown file type\";\n                    goto LAB_00406222;\n                  }\n                  *(undefined8 *)(puVar40 + -8) = 0x4077ea;\n                  pcVar42 = (char *)FUN_00409c30(param_1,local_278.st_size);\n                  ppbVar23 = local_2c0;\n                  if (pcVar42 == (char *)0x0) {\n                    *(undefined8 *)(puVar40 + -8) = 0x40857d;\n                    uVar16 = FUN_0040ddd0(4,param_1);\n                    pcVar42 = \"cannot read symbolic link %s\";\n                    goto LAB_00406360;\n                  }\n                  *(undefined8 *)(puVar40 + -8) = 0x40780f;\n                  iVar9 = FUN_00409a40(pcVar42,0xffffff9c,ppbVar23);\n                  if (iVar9 < 0) {\n                    *(undefined8 *)(puVar40 + -8) = 0x407f29;\n                    puVar22 = (uint *)__errno_location();\n                    ppbVar23 = local_2c0;\n                    local_2c8 = (int *)((ulong)local_2c8 & 0xffffffff00000000 | (ulong)*puVar22);\n                    if (*puVar22 != 0) {\n                      if (((*(char *)((long)param_6 + 0x2d) != '\\x01') || ((byte)local_2d8 != '\\0'))\n                         || ((local_1e8.st_mode & 0xf000) != 0xa000)) {\nLAB_00407f4d:\n                        *(undefined8 *)(puVar40 + -8) = 0x407f55;\n                        free(pcVar42);\n                        ppbVar23 = local_2c0;\n                        *(undefined8 *)(puVar40 + -8) = 0x407f66;\n                        uVar16 = FUN_0040ddd0(4,ppbVar23);\n                        *(undefined8 *)(puVar40 + -8) = 0x407f7a;\n                        uVar17 = dcgettext(0,\"cannot create symbolic link %s\",5);\n                        uVar30 = (ulong)local_2c8 & 0xffffffff;\n                    /* WARNING: Subroutine does not return */\n                        *(undefined **)(puVar40 + -8) = &UNK_00407f8f;\n                        error(0,uVar30,uVar17,uVar16);\n                      }\n                      uVar32 = 0xffffffffffffffff;\n                      pcVar26 = pcVar42;\n                      do {\n                        if (uVar32 == 0) break;\n                        uVar32 = uVar32 - 1;\n                        cVar4 = *pcVar26;\n                        pcVar26 = pcVar26 + (ulong)bVar8 * -2 + 1;\n                      } while (cVar4 != '\\0');\n                      if (local_1e8.st_size != ~uVar32 - 1) goto LAB_00407f4d;\n                      *(undefined8 *)(puVar40 + -8) = 0x408e8e;\n                      pcVar26 = (char *)FUN_00409c30(ppbVar23);\n                      if (pcVar26 == (char *)0x0) goto LAB_00407f4d;\n                      local_2e8 = (byte **)pcVar26;\n                      *(undefined8 *)(puVar40 + -8) = 0x408ea9;\n                      iVar9 = strcmp(pcVar26,pcVar42);\n                      pcVar26 = (char *)local_2e8;\n                      if (iVar9 != 0) {\n                        *(undefined8 *)(puVar40 + -8) = 0x409215;\n                        free(pcVar26);\n                        goto LAB_00407f4d;\n                      }\n                      *(undefined8 *)(puVar40 + -8) = 0x408ec0;\n                      free(pcVar26);\n                    }\n                  }\n                  *(undefined8 *)(puVar40 + -8) = 0x40781f;\n                  free(pcVar42);\n                  __group = local_278.st_gid;\n                  _Var14 = local_278.st_uid;\n                  ppbVar23 = local_2c0;\n                  local_329 = *(byte *)((long)param_6 + 0x25);\n                  if (*(byte *)((long)param_6 + 0x25) != 0) goto LAB_0040687d;\n                  local_2c8._0_1_ = *(byte *)((long)param_6 + 0x1d);\n                  if ((byte)local_2c8 == 0) {\n                    local_329 = (byte)local_2c8;\n                    local_2f0 = (byte **)CONCAT71(local_2f0._1_7_,1);\n                    local_2e8 = (byte **)CONCAT71(local_2e8._1_7_,1);\n                  }\n                  else {\n                    local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00 |\n                                       (ulong)(byte)local_2c8);\n                    *(undefined8 *)(puVar40 + -8) = 0x40843f;\n                    iVar9 = lchown((char *)ppbVar23,_Var14,__group);\n                    if (iVar9 == 0) {\n                      local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 |\n                                           (ulong)local_2c8 & 0xff);\n                      local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 |\n                                           (ulong)local_2c8 & 0xff);\n                      local_2c8._0_1_ = 0;\n                    }\n                    else {\n                      *(undefined8 *)(puVar40 + -8) = 0x408457;\n                      bVar8 = FUN_004051b0(param_6);\n                      local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 | (ulong)bVar8);\n                      if (bVar8 == 0) {\n                        *(undefined8 *)(puVar40 + -8) = 0x408df7;\n                        uVar16 = dcgettext(0,\"failed to preserve ownership for %s\",5);\n                        *(undefined8 *)(puVar40 + -8) = 0x408dff;\n                        piVar15 = __errno_location();\n                        ppbVar23 = local_2c0;\n                        iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                        *(undefined **)(puVar40 + -8) = &UNK_00408e14;\n                        error(0,iVar9,uVar16,ppbVar23);\n                      }\n                      local_2c8._0_1_ = 0;\n                      local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 | (ulong)bVar8);\n                    }\n                  }\n                }\n              }\n              goto LAB_004059b5;\n            }\n            iVar9 = *(int *)((long)param_6 + 4);\n            local_320 = (byte **)((ulong)local_320 & 0xffffffff00000000 | (ulong)local_278.st_mode);\n            local_318 = (stat *)((ulong)local_318 & 0xffffffffffffff00 |\n                                (ulong)*(byte *)((long)param_6 + 0x23));\n            *(undefined8 *)(puVar40 + -8) = 0x406ce7;\n            uVar11 = FUN_0040ac50(param_1,(ulong)(iVar9 == 2) << 0x11);\n            local_2c8 = (int *)((ulong)local_2c8 & 0xffffffff00000000 | (ulong)uVar11);\n            if ((int)uVar11 < 0) {\n              *(undefined8 *)(puVar40 + -8) = 0x407a03;\n              uVar16 = FUN_0040ddd0(4,param_1);\n              pcVar42 = \"cannot open %s for reading\";\n              goto LAB_00406360;\n            }\n            *(undefined8 *)(puVar40 + -8) = 0x406d0c;\n            iVar9 = __fxstat(1,uVar11,(stat *)&local_158);\n            ppbVar23 = local_2c0;\n            if (iVar9 != 0) {\n              *(undefined8 *)(puVar40 + -8) = 0x407cdc;\n              local_2e8 = (byte **)FUN_0040ddd0(4,param_1);\n              *(undefined8 *)(puVar40 + -8) = 0x407cf4;\n              uVar16 = dcgettext(0,\"cannot fstat %s\",5);\n              *(undefined8 *)(puVar40 + -8) = 0x407cfc;\n              piVar15 = __errno_location();\n              iVar9 = *piVar15;\n              pcVar42 = (char *)local_2e8;\n              goto LAB_00406ea0;\n            }\n            if (((byte *)local_278.st_ino != (byte *)CONCAT44(uStack_14c,uStack_150)) ||\n               ((byte *)local_278.st_dev != (byte *)CONCAT44(uStack_154,local_158))) {\n              *(undefined8 *)(puVar40 + -8) = 0x40788c;\n              pcVar42 = (char *)FUN_0040ddd0(4,param_1);\n              *(undefined8 *)(puVar40 + -8) = 0x4078a0;\n              uVar16 = dcgettext(0,\"skipping file %s, as it was replaced while being copied\",5);\n              iVar9 = 0;\n              goto LAB_00406ea0;\n            }\n            local_35c = uVar12 & 0x1ff;\n            if ((byte)local_2d8 != '\\0') {\nLAB_00407e43:\n              local_350 = (uint)local_310;\nLAB_00406df0:\n              ppbVar23 = local_2c0;\n              uVar12 = ~local_350 & local_35c;\n              local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffff00000000 | (ulong)uVar12);\n              *(undefined8 *)(puVar40 + -8) = 0x406e1e;\n              uVar12 = FUN_0040ac50(ppbVar23,0xc1,uVar12);\n              local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffff00000000 | (ulong)uVar12);\n              *(undefined8 *)(puVar40 + -8) = 0x406e29;\n              local_300 = (stat *)__errno_location();\n              ppbVar23 = local_2c0;\n              iVar9 = *(int *)&local_300->st_dev;\n              bVar5 = iVar9 == 0x11 & (byte)((ulong)local_2f0 >> 0x18) >> 7;\n              local_328 = (stat *)((ulong)local_328 & 0xffffffffffffff00 | (ulong)bVar5);\n              if (bVar5 == 0) {\nLAB_004084f8:\n                bVar5 = iVar9 == 0x15 & (byte)((ulong)local_2f0 >> 0x18) >> 7;\n                uVar32 = (ulong)local_2d8 & 0xffffffffffffff00;\n                local_2d8 = (stat *)(uVar32 | bVar5);\n                if (bVar5 == 0) {\n                  local_2d8._1_7_ = (undefined7)(uVar32 >> 8);\n                  local_2d8 = (stat *)CONCAT71(local_2d8._1_7_,1);\n                  if (-1 < (int)local_2f0) {\nLAB_0040807d:\n                    local_328 = (stat *)local_c8;\n                    *(undefined8 *)(puVar40 + -8) = 0x40809e;\n                    uVar12 = __fxstat(1,(int)local_2f0,(stat *)local_c8);\n                    ppbVar23 = local_2c0;\n                    local_300 = (stat *)((ulong)local_300 & 0xffffffff00000000 | (ulong)uVar12);\n                    if (uVar12 != 0) {\n                      *(undefined8 *)(puVar40 + -8) = 0x408776;\n                      local_2e8 = (byte **)FUN_0040ddd0(4,ppbVar23);\n                      *(undefined8 *)(puVar40 + -8) = 0x40878e;\n                      uVar17 = dcgettext(0,\"cannot fstat %s\",5);\n                      *(undefined8 *)(puVar40 + -8) = 0x408796;\n                      piVar15 = __errno_location();\n                      uVar16 = local_2e8;\n                      iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                      *(undefined **)(puVar40 + -8) = &UNK_004087ab;\n                      error(0,iVar9,uVar17,uVar16);\n                    }\n                    if ((byte)local_318 == '\\0') {\nLAB_00408560:\n                      local_2e8 = (byte **)0x0;\n                      goto LAB_004082ef;\n                    }\n                    if (*(int *)((long)param_6 + 0x34) != 0) {\n                      uVar32 = (ulong)local_2c8 & 0xffffffff;\n                      *(undefined8 *)(puVar40 + -8) = 0x408d58;\n                      iVar9 = ioctl((int)local_2f0,0x40049409,uVar32);\n                      if (iVar9 == 0) goto LAB_00408560;\n                      if (*(int *)((long)param_6 + 0x34) == 2) {\n                        *(undefined8 *)(puVar40 + -8) = 0x408d7d;\n                        local_300 = (stat *)FUN_0040dcf0(1,4,param_1);\n                        ppbVar23 = local_2c0;\n                        *(undefined8 *)(puVar40 + -8) = 0x408d97;\n                        uVar18 = FUN_0040dcf0(0,4,ppbVar23);\n                        *(undefined8 *)(puVar40 + -8) = 0x408dab;\n                        local_2e8 = (byte **)dcgettext(0,\"failed to clone %s from %s\",5);\n                        *(undefined8 *)(puVar40 + -8) = 0x408db7;\n                        piVar15 = __errno_location();\n                        uVar17 = local_2e8;\n                        uVar16 = local_300;\n                        iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                        *(undefined **)(puVar40 + -8) = &UNK_00408dd3;\n                        error(0,iVar9,uVar17,uVar18,uVar16);\n                      }\n                    }\n                    *(undefined8 *)(puVar40 + -8) = 0x4080c9;\n                    iVar9 = getpagesize();\n                    uVar32 = (ulong)iVar9;\n                    local_348 = ppbStack_90;\n                    local_338 = ppbStack_90;\n                    if ((byte **)0x1ffffffffffe0000 < ppbStack_90 + -0x4000) {\n                      local_338 = (byte **)0x20000;\n                      local_348 = (byte **)0x200;\n                      if ((long)ppbStack_90 - 1U < 0x2000000000000000) {\n                        local_348 = ppbStack_90;\n                      }\n                    }\n                    *(undefined8 *)(puVar40 + -8) = 0x40813e;\n                    posix_fadvise((int)local_2c8,0,0,2);\n                    ppbVar23 = local_338;\n                    if ((_Stack_140 & 0xf000) == 0x8000) {\n                      local_300 = (stat *)((ulong)local_300 & 0xffffffff00000000 |\n                                          (ulong)(CONCAT44(uStack_114,local_118) <\n                                                 CONCAT44(uStack_124,local_128) / 0x200));\n                    }\n                    local_2e8 = (byte **)(uVar32 - 1);\n                    if ((local_c8._24_4_ & 0xf000) == 0x8000) {\n                      if (*(int *)((long)param_6 + 0xc) != 3) {\n                        if ((*(int *)((long)param_6 + 0xc) == 2) && (((ulong)local_300 & 1) != 0)) {\n                          lVar28 = (long)local_338 + uVar32;\n                          *(undefined8 *)(puVar40 + -8) = 0x408d03;\n                          local_2e8 = (byte **)FUN_004100e0(lVar28);\n                          uVar30 = (uVar32 - 1) + (long)local_2e8;\n                          local_358 = uVar30 - uVar30 % uVar32;\n                          goto LAB_00408d24;\n                        }\n                        goto LAB_0040819b;\n                      }\n                      lVar28 = (long)local_338 + uVar32;\n                      *(undefined8 *)(puVar40 + -8) = 0x408f0d;\n                      local_2e8 = (byte **)FUN_004100e0(lVar28);\n                      uVar29 = (uVar32 - 1) + (long)local_2e8;\n                      uVar32 = uVar29 % uVar32;\n                      local_358 = uVar29 - uVar32;\n                      if ((int)local_300 != 0) {\nLAB_00408d24:\n                        local_330 = *(uint *)((long)param_6 + 0xc);\n                        local_32b = (byte)local_318;\n                        goto LAB_00408839;\n                      }\n                      bVar48 = *(int *)((long)param_6 + 0xc) == 3;\n                      local_300 = (stat *)local_2a8;\nLAB_00408297:\n                      *(ulong *)(puVar40 + -8) = uVar32;\n                      ppbVar3 = local_338;\n                      ppbVar23 = local_348;\n                      lVar28 = local_358;\n                      *(char **)(puVar40 + -0x10) = &local_2b0;\n                      *(stat **)(puVar40 + -0x18) = local_300;\n                      uVar32 = (ulong)local_2f0 & 0xffffffff;\n                      uVar29 = (ulong)local_2c8 & 0xffffffff;\n                      *(undefined8 *)(puVar40 + -0x20) = 0xffffffffffffffff;\n                      *(byte ***)(puVar40 + -0x28) = local_2c0;\n                      *(byte ***)(puVar40 + -0x30) = param_1;\n                      *(undefined8 *)(puVar40 + -0x38) = 0x4082d6;\n                      cVar4 = FUN_00404b90(uVar29,uVar32,lVar28,ppbVar3,ppbVar23,bVar48);\n                      pbVar24 = local_2a8._0_8_;\n                      if (cVar4 != '\\0') {\n                        if (local_2b0 != '\\0') {\n                          *(undefined8 *)(puVar40 + -8) = 0x408f6c;\n                          iVar9 = ftruncate((int)local_2f0,(__off_t)pbVar24);\n                          if (iVar9 < 0) goto LAB_00408f74;\n                        }\n                        goto LAB_004082ef;\n                      }\nLAB_0040869e:\n                      local_300._0_1_ = 0;\n                    }\n                    else {\nLAB_0040819b:\n                      lVar28 = CONCAT44(uStack_11c,uStack_120);\n                      local_340 = (byte **)((ulong)local_340 & 0xffffffff00000000 |\n                                           (ulong)_Stack_140 & 0xffffffff0000f000);\n                      local_2e8 = (byte **)(0x7fffffffffffffff - uVar32);\n                      if (0x1ffffffffffe0000 < lVar28 - 0x20000U) {\n                        lVar28 = 0x20000;\n                      }\n                      *(undefined8 *)(puVar40 + -8) = 0x4081e9;\n                      ppbVar23 = (byte **)FUN_0040a780(lVar28,ppbVar23,\n                                                       (byte **)(0x7fffffffffffffff - uVar32));\n                      if (((int)local_340 == 0x8000) &&\n                         ((byte **)CONCAT44(uStack_124,local_128) < local_338)) {\n                        local_338 = (byte **)((long)(byte **)CONCAT44(uStack_124,local_128) + 1);\n                      }\n                      uVar29 = (long)ppbVar23 + -1 + (long)local_338;\n                      local_338 = (byte **)(uVar29 - uVar29 % (ulong)ppbVar23);\n                      if ((local_338 == (byte **)0x0) || (local_2e8 < local_338)) {\n                        local_338 = ppbVar23;\n                      }\n                      lVar28 = uVar32 + (long)local_338;\n                      *(undefined8 *)(puVar40 + -8) = 0x408244;\n                      local_2e8 = (byte **)FUN_004100e0(lVar28);\n                      uVar29 = (uVar32 - 1) + (long)local_2e8;\n                      uVar32 = uVar29 % uVar32;\n                      local_358 = uVar29 - uVar32;\n                      if ((int)local_300 == 0) {\n                        bVar48 = *(int *)((long)param_6 + 0xc) == 3;\n                        local_348 = (byte **)0x0;\n                        local_300 = (stat *)local_2a8;\n                        goto LAB_00408297;\n                      }\n                      local_32b = '\\0';\n                      local_330 = 1;\nLAB_00408839:\n                      uVar30 = (ulong)local_2c8 & 0xffffffff;\n                      psVar21 = (stat *)0x0;\n                      local_300 = (stat *)local_2a8;\n                      local_370 = (stat *)CONCAT44(uStack_124,local_128);\n                      *(undefined8 *)(puVar40 + -8) = 0x408866;\n                      FUN_00409550(uVar30,(stat *)local_2a8);\n                      psVar2 = local_370;\n                      psVar46 = (stat *)0x0;\n                      local_360 = param_7;\n                      local_368 = param_6;\n                      local_32a = (byte)uVar10;\n                      uVar30 = (ulong)local_318 & 0xff;\n                      local_340 = param_1;\n                      local_318 = (stat *)0x0;\n                      do {\n                        psVar31 = local_300;\n                        *(undefined8 *)(puVar40 + -8) = 0x4088ab;\n                        cVar4 = FUN_00409580(psVar31);\n                        psVar31 = local_318;\n                        ppbVar23 = local_340;\n                        if (cVar4 == '\\0') {\n                          local_318 = (stat *)((ulong)local_318 & 0xffffffffffffff00 | uVar30 & 0xff\n                                              );\n                          uVar10 = (uint)local_32a;\n                          uVar30 = (ulong)local_360;\n                          if (local_287 != '\\0') goto LAB_00408aca;\n                          if (local_288 == '\\0') {\n                            *(undefined8 *)(puVar40 + -8) = 0x4091d8;\n                            local_300 = (stat *)FUN_0040dea0(0,3,ppbVar23);\n                            pcVar42 = \"%s: failed to get extents info\";\n                            goto LAB_00408b71;\n                          }\n                          bVar48 = *(int *)((long)local_368 + 0xc) == 3;\n                          ppbVar23 = (byte **)0x0;\n                          if (local_32b != '\\0') {\n                            ppbVar23 = local_348;\n                          }\n                          local_348 = ppbVar23;\n                          uVar32 = extraout_RDX_00;\n                          param_6 = local_368;\n                          param_1 = local_340;\n                          goto LAB_00408297;\n                        }\n                        if (local_2a8._24_8_ != (byte *)0x0) {\n                          pbVar24 = (byte *)0x0;\n                          psVar33 = psVar46;\n                          psVar43 = psVar21;\n                          do {\n                            ppsVar1 = (stat **)((long)local_280 + (long)pbVar24 * 0x18);\n                            psVar21 = *ppsVar1;\n                            psVar46 = ppsVar1[1];\n                            if ((long)psVar2 <\n                                (long)(((stat *)(((stat *)(psVar46->__unused + -0xf))->__unused +\n                                                -0xf))->__unused + 0xfffffffffffffff1) +\n                                (long)((stat *)(((stat *)(((stat *)(psVar21->__unused + -0xf))->\n                                                          __unused + -0xf))->__unused + -0xf))->\n                                      __unused + 0xffffffffffffff88U) {\n                              if ((long)psVar2 < (long)psVar21) {\n                                psVar21 = psVar2;\n                              }\n                              psVar46 = (stat *)((long)psVar2 - (long)psVar21);\n                            }\n                            uVar30 = 0;\n                            psVar31 = (stat *)((long)psVar21 + (-(long)psVar33 - (long)psVar43));\n                            if (psVar31 != (stat *)0x0) {\n                              local_318 = psVar31;\n                              *(undefined8 *)(puVar40 + -8) = 0x4089d8;\n                              _Var25 = lseek((int)local_2c8,(__off_t)psVar21,0);\n                              ppbVar3 = local_2c0;\n                              psVar31 = local_318;\n                              ppbVar23 = local_340;\n                              if (_Var25 < 0) {\n                                *(undefined8 *)(puVar40 + -8) = 0x409000;\n                                local_300 = (stat *)FUN_0040ddd0(4,ppbVar23);\n                                pcVar42 = \"cannot lseek %s\";\nLAB_00409011:\n                                *(undefined8 *)(puVar40 + -8) = 0x409018;\n                                uVar17 = dcgettext(0,pcVar42,5);\n                                *(undefined8 *)(puVar40 + -8) = 0x409020;\n                                piVar15 = __errno_location();\n                                uVar16 = local_300;\n                                iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                                *(undefined **)(puVar40 + -8) = &UNK_00409035;\n                                error(0,iVar9,uVar17,uVar16);\n                              }\n                              if (local_330 == 1) {\n                                uVar32 = (ulong)local_2f0 & 0xffffffff;\n                                *(undefined8 *)(puVar40 + -8) = 0x408a53;\n                                cVar4 = FUN_00404690(uVar32,psVar31);\n                                ppbVar23 = local_2c0;\n                                if (cVar4 == '\\0') {\n                                  *(undefined8 *)(puVar40 + -8) = 0x4091b3;\n                                  local_300 = (stat *)FUN_0040dea0(0,3,ppbVar23);\n                                  pcVar42 = \"%s: write failed\";\n                                  goto LAB_00409011;\n                                }\n                                ppbVar23 = (byte **)0x0;\n                                goto LAB_004088f5;\n                              }\n                              bVar48 = local_330 == 3;\n                              uVar30 = (ulong)local_2f0 & 0xffffffff;\n                              *(undefined8 *)(puVar40 + -8) = 0x408a0d;\n                              uVar10 = FUN_00404ad0(uVar30,ppbVar3,bVar48);\n                              uVar30 = (ulong)uVar10;\n                              if ((char)uVar10 != '\\0') goto LAB_004088e0;\nLAB_00408a18:\n                              pvVar20 = local_280;\n                              param_1 = local_340;\n                              param_6 = local_368;\n                              uVar10 = (uint)local_32a;\n                              uVar30 = (ulong)local_360;\n                              *(undefined8 *)(puVar40 + -8) = 0x408a40;\n                              free(pvVar20);\n                              goto LAB_0040869e;\n                            }\nLAB_004088e0:\n                            ppbVar23 = (byte **)0x0;\n                            if (local_330 == 3) {\n                              ppbVar23 = local_348;\n                            }\nLAB_004088f5:\n                            ppbVar3 = local_338;\n                            lVar28 = local_358;\n                            *(byte **)(puVar40 + -0x10) = &local_2b1;\n                            uVar32 = (ulong)local_2f0 & 0xffffffff;\n                            *(char **)(puVar40 + -0x18) = &local_2b0;\n                            uVar29 = (ulong)local_2c8 & 0xffffffff;\n                            *(stat **)(puVar40 + -0x20) = psVar46;\n                            *(byte ***)(puVar40 + -0x28) = local_2c0;\n                            *(byte ***)(puVar40 + -0x30) = local_340;\n                            *(undefined8 *)(puVar40 + -0x38) = 0x40893c;\n                            cVar4 = FUN_00404b90(uVar29,uVar32,lVar28,ppbVar3,ppbVar23,1);\n                            if (cVar4 == '\\0') goto LAB_00408a18;\n                            psVar31 = (stat *)((long)psVar21->__unused +\n                                              CONCAT71(uStack_2af,local_2b0) + -0x78);\n                            if (CONCAT71(uStack_2af,local_2b0) != 0) {\n                              uVar30 = (ulong)local_2b1;\n                            }\n                            if (psVar2 == psVar31) {\n                              local_287 = '\\x01';\n                              break;\n                            }\n                            pbVar24 = (byte *)(ulong)((int)pbVar24 + 1);\n                            psVar33 = psVar46;\n                            psVar43 = psVar21;\n                          } while (pbVar24 < local_2a8._24_8_);\n                        }\n                        pvVar20 = local_280;\n                        local_318 = psVar31;\n                        *(undefined8 *)(puVar40 + -8) = 0x408a7d;\n                        free(pvVar20);\n                        psVar31 = local_318;\n                        local_280 = (void *)0x0;\n                        local_2a8._24_8_ = (byte *)0x0;\n                      } while (local_287 == '\\0');\n                      local_318 = (stat *)((ulong)local_318 & 0xffffffffffffff00 | uVar30 & 0xff);\n                      uVar10 = (uint)local_32a;\n                      uVar30 = (ulong)local_360;\nLAB_00408aca:\n                      param_1 = local_340;\n                      param_6 = local_368;\n                      psVar21 = local_370;\n                      if (((long)psVar31 < (long)local_370) || ((byte)local_318 != '\\0')) {\n                        if (local_330 == 1) {\n                          uVar32 = (ulong)local_2f0 & 0xffffffff;\n                          lVar28 = (long)local_370 - (long)psVar31;\n                          *(undefined8 *)(puVar40 + -8) = 0x409203;\n                          cVar4 = FUN_00404690(uVar32,lVar28);\n                          if (cVar4 == '\\0') goto LAB_00408f74;\n                          goto LAB_004082ef;\n                        }\n                        local_300 = psVar31;\n                        *(undefined8 *)(puVar40 + -8) = 0x408b0a;\n                        iVar9 = ftruncate((int)local_2f0,(__off_t)psVar21);\n                        psVar46 = local_300;\n                        if (iVar9 == 0) {\n                          if ((local_330 == 3) && ((long)psVar31 < (long)psVar21)) {\n                            uVar32 = (ulong)local_2f0 & 0xffffffff;\n                            lVar28 = (long)local_370 - (long)local_300;\n                            *(undefined8 *)(puVar40 + -8) = 0x408b47;\n                            iVar9 = FUN_00404740(uVar32,psVar46,lVar28);\n                            ppbVar23 = local_2c0;\n                            if (iVar9 < 0) {\n                              *(undefined8 *)(puVar40 + -8) = 0x408b60;\n                              local_300 = (stat *)FUN_0040ddd0(4,ppbVar23);\n                              pcVar42 = \"error deallocating %s\";\n                              goto LAB_00408b71;\n                            }\n                          }\n                          goto LAB_004082ef;\n                        }\nLAB_00408f74:\n                        ppbVar23 = local_2c0;\n                        *(undefined8 *)(puVar40 + -8) = 0x408f85;\n                        local_300 = (stat *)FUN_0040ddd0(4,ppbVar23);\n                        pcVar42 = \"failed to extend %s\";\nLAB_00408b71:\n                        *(undefined8 *)(puVar40 + -8) = 0x408b78;\n                        uVar17 = dcgettext(0,pcVar42,5);\n                        *(undefined8 *)(puVar40 + -8) = 0x408b80;\n                        piVar15 = __errno_location();\n                        uVar16 = local_300;\n                        iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                        *(undefined **)(puVar40 + -8) = &UNK_00408b95;\n                        error(0,iVar9,uVar17,uVar16);\n                      }\nLAB_004082ef:\n                      ppbVar23 = local_2c0;\n                      if (*(char *)((long)param_6 + 0x1f) != '\\0') {\n                        uVar32 = (ulong)local_2f0 & 0xffffffff;\n                        local_2a8._0_8_ = (byte *)local_278.st_atim.tv_sec;\n                        local_2a8._8_8_ = (byte *)local_278.st_atim.tv_nsec;\n                        local_2a8._16_8_ = (byte *)local_278.st_mtim.tv_sec;\n                        local_2a8._24_8_ = (byte *)local_278.st_mtim.tv_nsec;\n                        *(undefined8 *)(puVar40 + -8) = 0x408645;\n                        iVar9 = FUN_0040f460(uVar32,ppbVar23,local_2a8);\n                        ppbVar23 = local_2c0;\n                        if (iVar9 != 0) {\n                          *(undefined8 *)(puVar40 + -8) = 0x40865e;\n                          local_300 = (stat *)FUN_0040ddd0(4,ppbVar23);\n                          *(undefined8 *)(puVar40 + -8) = 0x408676;\n                          uVar17 = dcgettext(0,\"preserving times for %s\",5);\n                          *(undefined8 *)(puVar40 + -8) = 0x40867e;\n                          piVar15 = __errno_location();\n                          uVar16 = local_300;\n                          iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                          *(undefined **)(puVar40 + -8) = &UNK_00408693;\n                          error(0,iVar9,uVar17,uVar16);\n                        }\n                      }\n                      ppbVar23 = local_2c0;\n                      psVar46 = local_2e0;\n                      psVar21 = local_328;\n                      if ((*(char *)((long)param_6 + 0x1d) != '\\0') &&\n                         ((local_278.st_uid != _Stack_ac || (local_278.st_gid != (__gid_t)local_a8))\n                         )) {\n                        uVar29 = (ulong)local_2d8 & 0xff;\n                        uVar32 = (ulong)local_2f0 & 0xffffffff;\n                        *(undefined8 *)(puVar40 + -8) = 0x408348;\n                        iVar9 = FUN_004051e0(param_6,ppbVar23,uVar32,psVar46,uVar29,psVar21);\n                        if (iVar9 == -1) goto LAB_0040869e;\n                        if (iVar9 == 0) {\n                          local_320 = (byte **)((ulong)local_320 & 0xfffffffffffff1ff);\n                        }\n                      }\n                      if ((*(char *)((long)param_6 + 0x27) != '\\0') &&\n                         (((ulong)stack0xffffffffffffff50 & 0x80) == 0)) {\n                        *(undefined8 *)(puVar40 + -8) = 0x408c54;\n                        _Var14 = geteuid();\n                        ppbVar23 = local_2c0;\n                        if (_Var14 != 0) {\n                          uVar32 = (ulong)local_2f0 & 0xffffffff;\n                          *(undefined8 *)(puVar40 + -8) = 0x408c73;\n                          iVar9 = FUN_00404780(uVar32,ppbVar23,0x180);\n                          ppbVar23 = local_2c0;\n                          if (iVar9 == 0) {\n                            uVar32 = (ulong)local_2f0 & 0xffffffff;\n                            uVar12 = ~local_350 & local_35c;\n                            *(undefined8 *)(puVar40 + -8) = 0x408c9b;\n                            FUN_00404780(uVar32,ppbVar23,uVar12);\n                          }\n                        }\n                      }\n                      ppbVar23 = local_2c0;\n                      if (((ulong)param_6[3] & 0xff0000000000ff) == 0) {\n                        if (*(char *)((long)param_6 + 0x2b) == '\\0') {\n                          if (*(char *)(param_6 + 4) == '\\0') {\n                            local_300._0_1_ = 1;\n                            if (local_350 != 0) {\n                              local_300 = (stat *)CONCAT71(local_300._1_7_,1);\n                              *(undefined8 *)(puVar40 + -8) = 0x409082;\n                              uVar11 = FUN_004053d0();\n                              ppbVar23 = local_2c0;\n                              uVar12 = local_35c;\n                              if ((local_350 & ~uVar11) != 0) {\n                                uVar32 = (ulong)local_2f0 & 0xffffffff;\n                                *(undefined8 *)(puVar40 + -8) = 0x4090b0;\n                                iVar9 = FUN_00404780(uVar32,ppbVar23,uVar12);\n                                ppbVar23 = local_2c0;\n                                if (iVar9 != 0) {\n                                  *(undefined8 *)(puVar40 + -8) = 0x4090d1;\n                                  local_300 = (stat *)FUN_0040ddd0(4,ppbVar23);\n                                  *(undefined8 *)(puVar40 + -8) = 0x4090e9;\n                                  uVar17 = dcgettext(0,\"preserving permissions for %s\",5);\n                                  *(undefined8 *)(puVar40 + -8) = 0x4090f1;\n                                  piVar15 = __errno_location();\n                                  uVar16 = local_300;\n                                  iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                                  *(undefined **)(puVar40 + -8) = &UNK_00409106;\n                                  error(0,iVar9,uVar17,uVar16);\n                                }\n                              }\n                            }\n                            goto LAB_004083b0;\n                          }\n                          *(undefined8 *)(puVar40 + -8) = 0x409110;\n                          uVar12 = FUN_004053d0();\n                          uVar12 = ~uVar12 & 0x1b6;\n                        }\n                        else {\n                          uVar12 = *(uint *)(param_6 + 2);\n                        }\n                        ppbVar23 = local_2c0;\n                        uVar32 = (ulong)local_2f0 & 0xffffffff;\n                        *(undefined8 *)(puVar40 + -8) = 0x408bc9;\n                        iVar9 = FUN_00409bd0(ppbVar23,uVar32,uVar12);\n                        local_300._0_1_ = iVar9 == 0;\n                      }\n                      else {\n                        uVar45 = (ulong)local_320 & 0xffffffff;\n                        uVar32 = (ulong)local_2f0 & 0xffffffff;\n                        uVar29 = (ulong)local_2c8 & 0xffffffff;\n                        *(undefined8 *)(puVar40 + -8) = 0x4087e0;\n                        iVar9 = FUN_00409b40(param_1,uVar29,ppbVar23,uVar32,uVar45);\n                        local_300._0_1_ = 1;\n                        if (iVar9 != 0) {\n                          local_300._0_1_ = *(byte *)((long)param_6 + 0x24) ^ 1;\n                        }\n                      }\n                    }\nLAB_004083b0:\n                    local_300 = (stat *)((ulong)local_300 & 0xffffffffffffff00 |\n                                        (ulong)(byte)local_300);\n                    *(undefined8 *)(puVar40 + -8) = 0x4083c2;\n                    iVar9 = close((int)local_2f0);\n                    ppbVar23 = local_2c0;\n                    bVar5 = (byte)local_300;\n                    if (iVar9 < 0) {\n                      *(undefined8 *)(puVar40 + -8) = 0x4083e3;\n                      local_2f0 = (byte **)FUN_0040ddd0(4,ppbVar23);\n                      *(undefined8 *)(puVar40 + -8) = 0x4083fb;\n                      uVar17 = dcgettext(0,\"failed to close %s\",5);\n                      *(undefined8 *)(puVar40 + -8) = 0x408403;\n                      piVar15 = __errno_location();\n                      uVar16 = local_2f0;\n                      iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                      *(undefined **)(puVar40 + -8) = &UNK_00408418;\n                      error(0,iVar9,uVar17,uVar16);\n                    }\n                    goto LAB_00406eb7;\n                  }\n                }\n                else {\n                  iVar9 = 0x15;\n                  if (*(byte *)local_2c0 != 0) {\n                    uVar30 = 0xffffffffffffffff;\n                    ppbVar23 = local_2c0;\n                    do {\n                      if (uVar30 == 0) break;\n                      uVar30 = uVar30 - 1;\n                      bVar5 = *(byte *)ppbVar23;\n                      ppbVar23 = (byte **)((long)ppbVar23 + (ulong)bVar8 * -2 + 1);\n                    } while (bVar5 != 0);\n                    iVar9 = (*(byte *)((long)local_2c0 + (~uVar30 - 2)) != 0x2f) + 0x14;\n                  }\n                }\n              }\n              else {\n                iVar9 = 0x11;\n                local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 |\n                                    (ulong)*(byte *)(param_6 + 3));\n                if (*(byte *)(param_6 + 3) == 0) {\n                  *(undefined8 *)(puVar40 + -8) = 0x4084ab;\n                  iVar13 = __lxstat(1,(char *)ppbVar23,(stat *)local_c8);\n                  ppbVar23 = local_2c0;\n                  if ((iVar13 == 0) && ((local_c8._24_4_ & 0xf000) == 0xa000)) {\n                    if (*(char *)(param_6 + 6) == '\\0') {\n                      local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00);\n                      *(undefined8 *)(puVar40 + -8) = 0x409232;\n                      uVar16 = FUN_0040ddd0(4,ppbVar23);\n                      *(undefined8 *)(puVar40 + -8) = 0x409246;\n                      uVar17 = dcgettext(0,\"not writing through dangling symlink %s\",5);\n                    /* WARNING: Subroutine does not return */\n                      *(undefined **)(puVar40 + -8) = &UNK_00409257;\n                      error(0,0,uVar17,uVar16);\n                    }\n                    uVar32 = (ulong)local_2e8 & 0xffffffff;\n                    *(undefined8 *)(puVar40 + -8) = 0x4084e8;\n                    uVar12 = FUN_0040ac50(ppbVar23,0x41,uVar32);\n                    local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffff00000000 | (ulong)uVar12);\n                    iVar9 = *(int *)&local_300->st_dev;\n                  }\n                  goto LAB_004084f8;\n                }\n              }\nLAB_00406e6a:\n              ppbVar23 = local_2c0;\n              *(undefined8 *)(puVar40 + -8) = 0x406e7b;\n              local_2e8 = (byte **)FUN_0040ddd0(4,ppbVar23);\n              *(undefined8 *)(puVar40 + -8) = 0x406e93;\n              uVar16 = dcgettext(0,\"cannot create regular file %s\",5);\n              pcVar42 = (char *)local_2e8;\nLAB_00406ea0:\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)(puVar40 + -8) = &UNK_00406ea9;\n              error(0,iVar9,uVar16,pcVar42);\n            }\n            cVar4 = *(char *)((long)param_6 + 0x23);\n            *(undefined8 *)(puVar40 + -8) = 0x406d7b;\n            uVar12 = FUN_0040ac50(ppbVar23,(-(uint)(cVar4 == '\\0') & 0xfffffe00) + 0x201);\n            local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffff00000000 | (ulong)uVar12);\n            if (((ulong)param_6[4] & 0xff000000ff00) != 0) {\n              if ((int)uVar12 < 0) goto LAB_00406d9f;\n              uVar47 = *(undefined *)((long)param_6 + 0x25);\n              *(undefined8 *)(puVar40 + -8) = 0x4086b8;\n              local_300._0_1_ = FUN_00405090(ppbVar23,uVar47,0,param_6);\n              if ((byte)local_300 != 0) {\nLAB_00408073:\n                local_350 = 0;\n                goto LAB_0040807d;\n              }\n              pcVar42 = (char *)((ulong)local_2d8 & 0xffffffffffffff00);\n              local_2d8 = (stat *)((ulong)pcVar42 | (ulong)*(byte *)((long)param_6 + 0x26));\n              if (*(byte *)((long)param_6 + 0x26) == 0) goto LAB_00408073;\n              local_2d8 = (stat *)pcVar42;\n              local_2e8 = (byte **)0x0;\n              goto LAB_004083b0;\n            }\n            if (-1 < (int)uVar12) goto LAB_00408073;\nLAB_00406d9f:\n            *(undefined8 *)(puVar40 + -8) = 0x406da4;\n            piVar15 = __errno_location();\n            ppbVar23 = local_2c0;\n            if (*(char *)((long)param_6 + 0x16) == '\\0') {\n              iVar9 = *piVar15;\n              if ((iVar9 == 2) && (*(char *)(param_6 + 3) == '\\0')) {\n                local_350 = 0;\n                goto LAB_00406df0;\n              }\n              local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00);\n              goto LAB_00406e6a;\n            }\n            *(undefined8 *)(puVar40 + -8) = 0x406dbe;\n            iVar9 = unlink((char *)ppbVar23);\n            ppbVar23 = local_2c0;\n            if (iVar9 != 0) {\n              *(undefined8 *)(puVar40 + -8) = 0x40904b;\n              local_2e8 = (byte **)FUN_0040ddd0(4,ppbVar23);\n              *(undefined8 *)(puVar40 + -8) = 0x409063;\n              uVar16 = dcgettext(0,\"cannot remove %s\",5);\n              iVar9 = *piVar15;\n              pcVar42 = (char *)local_2e8;\n              goto LAB_00406ea0;\n            }\n            if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n              *(undefined8 *)(puVar40 + -8) = 0x408fac;\n              uVar16 = FUN_0040ddd0(4,ppbVar23);\n              *(undefined8 *)(puVar40 + -8) = 0x408fc0;\n              uVar17 = dcgettext(0,\"removed %s\\n\",5);\n              *(undefined8 *)(puVar40 + -8) = 0x408fd2;\n              __printf_chk(1,uVar17,uVar16);\n            }\n            ppbVar23 = local_2c0;\n            uVar12 = local_35c;\n            local_2d8 = (stat *)((ulong)local_2d8 & 0xffffffffffffff00 |\n                                (ulong)*(byte *)((long)param_6 + 0x21));\n            local_350 = (uint)local_310;\n            if (*(byte *)((long)param_6 + 0x21) == 0) goto LAB_00406df0;\n            *(undefined8 *)(puVar40 + -8) = 0x408ee2;\n            bVar5 = FUN_00404fc0(param_1,ppbVar23,uVar12,1,param_6);\n            if (bVar5 != 0) goto LAB_00407e43;\n            local_2e8 = (byte **)0x0;\nLAB_00406eb7:\n            local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00 | (ulong)bVar5);\n            *(undefined8 *)(puVar40 + -8) = 0x406ec9;\n            iVar9 = close((int)local_2c8);\n            pvVar20 = local_2e8;\n            if (iVar9 < 0) {\n              *(undefined8 *)(puVar40 + -8) = 0x407bf8;\n              uVar16 = FUN_0040ddd0(4,param_1);\n              *(undefined8 *)(puVar40 + -8) = 0x407c0c;\n              uVar17 = dcgettext(0,\"failed to close %s\",5);\n              *(undefined8 *)(puVar40 + -8) = 0x407c14;\n              piVar15 = __errno_location();\n              iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)(puVar40 + -8) = &UNK_00407c25;\n              error(0,iVar9,uVar17,uVar16);\n            }\n            local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)local_2f0 & 0xff);\n            *(undefined8 *)(puVar40 + -8) = 0x406eec;\n            free(pvVar20);\n            local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00);\n            local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 | (ulong)local_2c8 & 0xff);\n            bVar8 = (byte)local_2c8;\n          }\n          else {\n            uVar47 = *(undefined *)((long)param_6 + 0x16);\n            *(undefined8 *)(puVar40 + -8) = 0x40697d;\n            bVar8 = FUN_004049c0(param_1,ppbVar23,uVar47,0);\n            local_2c8._0_1_ = 0;\n            local_329 = 0;\n            local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 | (ulong)bVar8);\n          }\n          puVar35 = puVar40;\n          if (bVar8 == 0) goto LAB_00406380;\n        }\n        else {\n          uVar47 = *(byte *)param_1 < 0x2f;\n          uVar49 = *(byte *)param_1 == 0x2f;\n          if (!(bool)uVar49) {\n            *(undefined8 *)(puVar40 + -8) = 0x405956;\n            __filename = (byte *)FUN_0040aa60(ppbVar23);\n            lVar28 = 2;\n            pbVar24 = &DAT_00412a7e;\n            pbVar44 = __filename;\n            do {\n              if (lVar28 == 0) break;\n              lVar28 = lVar28 + -1;\n              uVar47 = *pbVar24 < *pbVar44;\n              uVar49 = *pbVar24 == *pbVar44;\n              pbVar24 = pbVar24 + (ulong)bVar8 * -2 + 1;\n              pbVar44 = pbVar44 + (ulong)bVar8 * -2 + 1;\n            } while ((bool)uVar49);\n            if ((!(bool)uVar47 && !(bool)uVar49) != (bool)uVar47) {\n              *(undefined8 *)(puVar40 + -8) = 0x407216;\n              iVar9 = __xstat(1,\".\",(stat *)&local_158);\n              if (iVar9 == 0) {\n                *(undefined8 *)(puVar40 + -8) = 0x407232;\n                iVar9 = __xstat(1,(char *)__filename,(stat *)local_c8);\n                if ((iVar9 == 0) &&\n                   (((byte *)CONCAT44(uStack_14c,uStack_150) != local_c8._8_8_ ||\n                    ((byte *)CONCAT44(uStack_154,local_158) != local_c8._0_8_)))) {\n                  *(undefined8 *)(puVar40 + -8) = 0x407256;\n                  free(__filename);\n                  ppbVar23 = local_2c0;\n                  *(undefined8 *)(puVar40 + -8) = 0x407269;\n                  uVar16 = FUN_0040dea0(0,3,ppbVar23);\n                  pcVar42 = \"%s: can make relative symbolic links only in current directory\";\nLAB_00406222:\n                  *(undefined8 *)(puVar40 + -8) = 0x406229;\n                  uVar17 = dcgettext(0,pcVar42,5);\n                    /* WARNING: Subroutine does not return */\n                  *(undefined **)(puVar40 + -8) = &UNK_0040623a;\n                  error(0,0,uVar17,uVar16);\n                }\n              }\n            }\n            *(undefined8 *)(puVar40 + -8) = 0x40597d;\n            free(__filename);\n          }\n          ppbVar23 = local_2c0;\n          uVar47 = *(undefined *)((long)param_6 + 0x16);\n          *(undefined8 *)(puVar40 + -8) = 0x405996;\n          iVar9 = FUN_00409a40(param_1,0xffffff9c,ppbVar23,uVar47);\n          if (iVar9 < 0) {\n            *(undefined8 *)(puVar40 + -8) = 0x407780;\n            uVar16 = FUN_0040dcf0(1,4,param_1);\n            ppbVar23 = local_2c0;\n            *(undefined8 *)(puVar40 + -8) = 0x407796;\n            uVar17 = FUN_0040dcf0(0,4,ppbVar23);\n            *(undefined8 *)(puVar40 + -8) = 0x4077aa;\n            uVar18 = dcgettext(0,\"cannot create symbolic link %s to %s\",5);\n            *(undefined8 *)(puVar40 + -8) = 0x4077b2;\n            piVar15 = __errno_location();\n            iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar40 + -8) = &UNK_004077c6;\n            error(0,iVar9,uVar18,uVar17,uVar16);\n          }\n          local_329 = 0;\n          local_2c8._0_1_ = 0;\n          local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 | (ulong)local_2f0 & 0xff);\n        }\nLAB_004059b5:\n        ppbVar23 = local_2c0;\n        bVar48 = local_2cc != 0x4000;\n        if (((((byte)local_2d8 == '\\0') && (*(char *)((long)param_6 + 0x14) != '\\x01')) && (bVar48))\n           && (((ulong)param_6[4] & 0xff000000ff00) != 0)) {\n          uVar47 = *(undefined *)((long)param_6 + 0x25);\n          local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)(byte)local_2c8);\n          *(undefined8 *)(puVar36 + -8) = 0x405a05;\n          cVar4 = FUN_00405090(ppbVar23,uVar47,0,param_6);\n          if ((cVar4 == '\\0') && (puVar35 = puVar36, *(char *)((long)param_6 + 0x26) != '\\0'))\n          goto LAB_00406380;\n        }\n        ppbVar23 = local_2c0;\n        if (((char)uVar30 != '\\0') && (param_6[7] != (byte *)0x0)) {\n          local_2c8 = (int *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)(byte)local_2c8);\n          *(undefined8 *)(puVar36 + -8) = 0x405a4a;\n          iVar9 = __lxstat(1,(char *)ppbVar23,(stat *)local_c8);\n          ppbVar23 = local_2c0;\n          if (iVar9 == 0) {\n            pbVar24 = param_6[7];\n            *(undefined8 *)(puVar36 + -8) = 0x405a6d;\n            FUN_0040aca0(pbVar24,ppbVar23,local_c8);\n          }\n        }\n        ppbVar23 = local_2c0;\n        if (((*(char *)((long)param_6 + 0x17) != '\\0') && (bVar48)) || ((byte)local_2c8 != 0))\n        goto LAB_00406170;\n        if (*(char *)((long)param_6 + 0x1f) == '\\0') {\nLAB_00405b50:\n          if ((char)local_2f0 != '\\0') goto LAB_00406170;\n        }\n        else {\n          local_c8._0_8_ = (byte *)local_278.st_atim.tv_sec;\n          local_c8._8_8_ = (byte *)local_278.st_atim.tv_nsec;\n          local_c8._16_8_ = (byte *)local_278.st_mtim.tv_sec;\n          stack0xffffffffffffff50 = (byte *)local_278.st_mtim.tv_nsec;\n          if ((char)local_2f0 != '\\0') {\n            *(undefined8 *)(puVar36 + -8) = 0x405af4;\n            iVar9 = FUN_0040f8b0();\n            if (iVar9 != 0) {\n              *(undefined8 *)(puVar36 + -8) = 0x405afd;\n              piVar15 = __errno_location();\n              if (*piVar15 != 0x26) goto LAB_00405b02;\n            }\n            goto LAB_00405b50;\n          }\n          *(undefined8 *)(puVar36 + -8) = 0x407195;\n          iVar9 = FUN_0040f8a0(ppbVar23,local_c8);\n          if (iVar9 != 0) {\nLAB_00405b02:\n            ppbVar23 = local_2c0;\n            *(undefined8 *)(puVar36 + -8) = 0x405b13;\n            uVar16 = FUN_0040ddd0(4,ppbVar23);\n            *(undefined8 *)(puVar36 + -8) = 0x405b27;\n            uVar17 = dcgettext(0,\"preserving times for %s\",5);\n            *(undefined8 *)(puVar36 + -8) = 0x405b2f;\n            piVar15 = __errno_location();\n            iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar36 + -8) = &UNK_00405b40;\n            error(0,iVar9,uVar17,uVar16);\n          }\n        }\n        ppbVar23 = local_2c0;\n        psVar21 = local_2e0;\n        if ((*(char *)((long)param_6 + 0x1d) != '\\0') &&\n           ((((byte)local_2d8 != '\\0' || (local_278.st_uid != local_1e8.st_uid)) ||\n            (local_278.st_gid != local_1e8.st_gid)))) {\n          uVar30 = (ulong)local_2d8 & 0xff;\n          *(undefined8 *)(puVar36 + -8) = 0x405ba9;\n          iVar9 = FUN_004051e0(param_6,ppbVar23,0xffffffff,psVar21,uVar30,&local_1e8);\n          if (iVar9 == -1) {\n            return 0;\n          }\n          uVar12 = local_2d0 & 0xfffff1ff;\n          if (iVar9 != 0) {\n            uVar12 = local_2d0;\n          }\n          local_2d0 = uVar12;\n        }\n        ppbVar23 = local_2c0;\n        uVar12 = local_2d0;\n        if (((ulong)param_6[3] & 0xff0000000000ff) != 0) {\n          *(undefined8 *)(puVar36 + -8) = 0x40762d;\n          iVar9 = FUN_00409b40(param_1,0xffffffff,ppbVar23,0xffffffff,uVar12);\n          if (iVar9 != 0) {\n            if (*(char *)((long)param_6 + 0x24) != '\\0') {\n              return uVar10;\n            }\n            return (uint)(byte)local_2e8;\n          }\n          goto LAB_00406170;\n        }\n        if (*(char *)((long)param_6 + 0x2b) != '\\0') {\n          uVar12 = *(uint *)(param_6 + 2);\nLAB_004078b1:\n          ppbVar23 = local_2c0;\n          *(undefined8 *)(puVar36 + -8) = 0x4078c2;\n          iVar9 = FUN_00409bd0(ppbVar23,0xffffffff,uVar12);\n          if (iVar9 != 0) {\n            return uVar10;\n          }\n          return (uint)(byte)local_2e8;\n        }\n        if (*(char *)(param_6 + 4) != '\\0') {\n          *(undefined8 *)(puVar36 + -8) = 0x407a1a;\n          uVar12 = FUN_004053d0();\n          uVar12 = ~uVar12 & 0x1ff;\n          goto LAB_004078b1;\n        }\n        if ((uint)local_310 == 0) {\nLAB_00405c00:\n          if (local_329 == 0) goto LAB_00406170;\n        }\n        else {\n          *(undefined8 *)(puVar36 + -8) = 0x40612c;\n          uVar10 = FUN_004053d0();\n          ppbVar23 = local_2c0;\n          local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000 |\n                              (ulong)((uint)local_310 & ~uVar10));\n          if (((uint)local_310 & ~uVar10) == 0) goto LAB_00405c00;\n          if (local_329 != 1) {\n            if ((byte)local_2d8 != '\\0') {\n              *(undefined8 *)(puVar36 + -8) = 0x4085ca;\n              iVar9 = __lxstat(1,(char *)ppbVar23,&local_1e8);\n              param_1 = local_2c0;\n              if (iVar9 != 0) {\nLAB_00405ca7:\n                *(undefined8 *)(puVar36 + -8) = 0x405cb4;\n                uVar16 = FUN_0040ddd0(4,param_1);\n                *(undefined8 *)(puVar36 + -8) = 0x405cc8;\n                uVar17 = dcgettext(0,\"cannot stat %s\",5);\n                *(undefined8 *)(puVar36 + -8) = 0x405cd0;\n                piVar15 = __errno_location();\n                iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n                *(undefined8 *)(puVar36 + -8) = 0x405ce1;\n                error(0,iVar9,uVar17,uVar16);\n              }\n            }\n            local_34c = local_1e8.st_mode;\n            if (((uint)local_310 & ~local_1e8.st_mode) == 0) goto LAB_00406170;\n          }\n        }\n        ppbVar23 = local_2c0;\n        local_310._0_4_ = local_34c | (uint)local_310;\n        *(undefined8 *)(puVar36 + -8) = 0x405c25;\n        iVar9 = chmod((char *)ppbVar23,(uint)local_310);\n        ppbVar23 = local_2c0;\n        if (iVar9 != 0) {\n          *(undefined8 *)(puVar36 + -8) = 0x405c3e;\n          uVar16 = FUN_0040ddd0(4,ppbVar23);\n          *(undefined8 *)(puVar36 + -8) = 0x405c52;\n          uVar17 = dcgettext(0,\"preserving permissions for %s\",5);\n          *(undefined8 *)(puVar36 + -8) = 0x405c5a;\n          piVar15 = __errno_location();\n          iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n          *(undefined8 *)(puVar36 + -8) = 0x405c6b;\n          error(0,iVar9,uVar17,uVar16);\n        }\nLAB_00406170:\n        return (uint)(byte)local_2e8;\n      }\n      if (local_2cc != 0x4000) {\n        *(undefined8 *)(puVar40 + -8) = 0x40591f;\n        cVar4 = FUN_00404fc0(param_1,ppbVar23,uVar11);\n        local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000);\n        if (cVar4 == '\\0') {\n          return uVar10;\n        }\n        goto LAB_00405931;\n      }\n      uVar32 = (ulong)local_2c8 & 0xffffffff;\n      *(undefined8 *)(puVar40 + -8) = 0x4066fe;\n      cVar4 = FUN_00404fc0(param_1,ppbVar23,uVar11,uVar32);\n      if (cVar4 == '\\0') {\n        return uVar10;\n      }\n      local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000 |\n                          (ulong)uVar12 & 0xffffffff00000012);\n      ppbVar23 = local_2f0;\njoined_r0x004061df:\n      for (; uVar16 = local_2c0, ppbVar23 != (byte **)0x0; ppbVar23 = (byte **)*ppbVar23) {\n        if ((ppbVar23[1] == (byte *)local_278.st_ino) && (ppbVar23[2] == (byte *)local_278.st_dev))\n        {\n          *(undefined8 *)(puVar40 + -8) = 0x406215;\n          uVar16 = FUN_0040ddd0(4,param_1);\n          pcVar42 = \"cannot copy cyclic symbolic link %s\";\n          goto LAB_00406222;\n        }\n      }\n      puVar35 = puVar40 + -0x20;\n      puVar36 = puVar40 + -0x20;\n      local_320 = (byte **)((ulong)(puVar40 + -0x11) & 0xfffffffffffffff0);\n      *local_320 = (byte *)local_2f0;\n      local_320[1] = (byte *)local_278.st_ino;\n      local_320[2] = (byte *)local_278.st_dev;\n      if (((byte)local_2d8 != '\\0') || ((local_1e8.st_mode & 0xf000) != 0x4000)) {\n        *(undefined8 *)(puVar40 + -0x28) = 0x406414;\n        iVar9 = mkdir((char *)uVar16,~(uint)local_310 & uVar12 & 0xfff);\n        ppbVar23 = local_2c0;\n        if (iVar9 != 0) {\n          *(undefined8 *)(puVar40 + -0x28) = 0x407359;\n          uVar16 = FUN_0040ddd0(4,ppbVar23);\n          pcVar42 = \"cannot create directory %s\";\n          goto LAB_00406360;\n        }\n        *(undefined8 *)(puVar40 + -0x28) = 0x406434;\n        iVar9 = __lxstat(1,(char *)ppbVar23,&local_1e8);\n        uVar12 = local_1e8.st_mode;\n        ppbVar23 = local_2c0;\n        if (iVar9 != 0) {\n          *(undefined8 *)(puVar40 + -0x28) = 0x4079e4;\n          uVar16 = FUN_0040ddd0(4,ppbVar23);\n          pcVar42 = \"cannot stat %s\";\n          puVar35 = puVar40 + -0x20;\n          goto LAB_00406360;\n        }\n        local_329 = 0;\n        if ((local_1e8.st_mode & 0x1c0) != 0x1c0) {\n          uVar11 = local_1e8.st_mode | 0x1c0;\n          *(undefined8 *)(puVar40 + -0x28) = 0x40646e;\n          iVar9 = chmod((char *)ppbVar23,uVar11);\n          ppbVar23 = local_2c0;\n          local_34c = uVar12;\n          local_329 = 1;\n          if (iVar9 != 0) {\n            *(undefined8 *)(puVar40 + -0x28) = 0x407e31;\n            uVar16 = FUN_0040ddd0(4,ppbVar23);\n            pcVar42 = \"setting permissions for %s\";\n            puVar35 = puVar40 + -0x20;\n            goto LAB_00406360;\n          }\n        }\n        ppbVar23 = local_2c0;\n        if (*param_8 == 0) {\n          *(undefined8 *)(puVar40 + -0x28) = 0x407901;\n          FUN_00409480(ppbVar23,local_1e8.st_ino,local_1e8.st_dev);\n          *param_8 = 1;\n        }\n        ppbVar23 = local_2c0;\n        if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n          if (*(char *)(param_6 + 3) == '\\0') {\n            *(undefined8 *)(puVar40 + -0x28) = 0x407a70;\n            FUN_004047e0(param_1,ppbVar23,0);\n          }\n          else {\n            *(undefined8 *)(puVar40 + -0x28) = 0x4064b4;\n            uVar16 = FUN_0040ddd0(4,ppbVar23);\n            *(undefined8 *)(puVar40 + -0x28) = 0x4064c8;\n            uVar17 = dcgettext(0,\"created directory %s\\n\",5);\n            *(undefined8 *)(puVar40 + -0x28) = 0x4064da;\n            __printf_chk(1,uVar17,uVar16);\n          }\n        }\nLAB_004064e0:\n        bVar8 = local_300 != (stat *)0x0 & *(byte *)((long)param_6 + 0x1c);\n        local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 | (ulong)bVar8);\n        if (bVar8 == 0) {\nLAB_004064ff:\n          local_c8._0_8_ = *param_6;\n          local_c8._8_8_ = param_6[1];\n          local_c8._16_8_ = param_6[2];\n          stack0xffffffffffffff50 = param_6[3];\n          local_a8 = param_6[4];\n          pbStack_a0 = param_6[5];\n          local_98 = param_6[6];\n          ppbStack_90 = (byte **)param_6[7];\n          local_88 = param_6[8];\n          *(undefined8 *)(puVar40 + -0x28) = 0x406548;\n          ppbVar23 = (byte **)FUN_0040e7f0(param_1,2);\n          local_338 = ppbVar23;\n          if (ppbVar23 == (byte **)0x0) {\n            *(undefined8 *)(puVar40 + -0x28) = 0x407ddf;\n            local_2c8 = (int *)FUN_0040ddd0(4,param_1);\n            *(undefined8 *)(puVar40 + -0x28) = 0x407df7;\n            uVar17 = dcgettext(0,\"cannot access %s\",5);\n            *(undefined8 *)(puVar40 + -0x28) = 0x407dff;\n            piVar15 = __errno_location();\n            uVar16 = local_2c8;\n            iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar40 + -0x28) = &UNK_00407e14;\n            error(0,iVar9,uVar17,uVar16);\n          }\n          if (*(int *)((long)param_6 + 4) == 3) {\n            local_c8._0_8_ = (byte *)CONCAT44(2,local_c8._0_4_);\n          }\n          if (*(char *)ppbVar23 == '\\0') {\n            bVar8 = 0;\n            local_2e8 = (byte **)CONCAT71(local_2e8._1_7_,1);\n          }\n          else {\n            local_340 = (byte **)((ulong)local_340 & 0xffffffffffffff00 | (ulong)(byte)uVar10);\n            local_318 = (stat *)&local_158;\n            bVar8 = 0;\n            local_328 = (stat *)local_c8;\n            local_348 = param_6;\n            local_2e8 = (byte **)CONCAT71(local_2e8._1_7_,1);\n            local_300 = (stat *)local_2a8;\n            local_2f0 = param_1;\n            local_330 = param_7;\n            do {\n              ppbVar3 = local_2f0;\n              *(undefined8 *)(puVar40 + -0x28) = 0x406610;\n              pvVar20 = (void *)FUN_0040af00(ppbVar3,ppbVar23,0);\n              ppbVar3 = local_2c0;\n              *(undefined8 *)(puVar40 + -0x28) = 0x406624;\n              __ptr = (void *)FUN_0040af00(ppbVar3,ppbVar23,0);\n              psVar46 = local_2e0;\n              ppbVar3 = local_320;\n              psVar21 = local_328;\n              uVar30 = (ulong)local_2c8 & 0xffffffff;\n              bVar5 = *param_8;\n              *(undefined8 *)(puVar40 + -0x28) = 0;\n              *(stat **)(puVar40 + -0x30) = local_300;\n              *(stat **)(puVar40 + -0x38) = local_318;\n              *(undefined8 *)(puVar40 + -0x40) = 0;\n              local_158 = local_158 & 0xffffff00 | (uint)bVar5;\n              *(undefined8 *)(puVar40 + -0x48) = 0x40666a;\n              bVar5 = FUN_00405400(pvVar20,__ptr,uVar30,psVar46,ppbVar3,psVar21);\n              local_2e8 = (byte **)((ulong)local_2e8 & 0xffffffffffffff00 |\n                                   (ulong)((byte)local_2e8 & bVar5));\n              *param_9 = *param_9 | local_2a8[0];\n              *(undefined8 *)(puVar40 + -0x28) = 0x406687;\n              free(__ptr);\n              *(undefined8 *)(puVar40 + -0x28) = 0x40668f;\n              free(pvVar20);\n              if (local_2a8[0] != '\\0') break;\n              bVar8 = bVar8 | (byte)local_158;\n              *(undefined8 *)(puVar40 + -0x28) = 0x4065ef;\n              sVar19 = strlen((char *)ppbVar23);\n              ppbVar23 = (byte **)((long)ppbVar23 + sVar19 + 1);\n            } while (*(char *)ppbVar23 != '\\0');\n            uVar10 = (uint)(byte)local_340;\n            uVar30 = (ulong)local_330;\n            param_6 = local_348;\n            param_1 = local_2f0;\n          }\n          ppbVar23 = local_338;\n          *(undefined8 *)(puVar40 + -0x28) = 0x4066c7;\n          free(ppbVar23);\n          *param_8 = bVar8;\n          local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00);\n          local_2c8._0_1_ = 0;\n          puVar36 = puVar40 + -0x20;\n        }\n        else {\n          local_2f0 = (byte **)((ulong)local_2f0 & 0xffffffffffffff00);\n          local_2c8._0_1_ = 0;\n          if ((byte *)local_300->st_dev == (byte *)local_278.st_dev) goto LAB_004064ff;\n        }\n        goto LAB_004059b5;\n      }\n      if (((ulong)param_6[4] & 0xff000000ff00) == 0) {\nLAB_004075f4:\n        local_329 = 0;\n        local_310 = (stat *)((ulong)local_310 & 0xffffffff00000000);\n        goto LAB_004064e0;\n      }\n      uVar47 = *(undefined *)((long)param_6 + 0x25);\n      *(undefined8 *)(puVar40 + -0x28) = 0x407b5d;\n      cVar4 = FUN_00405090(uVar16,uVar47,0);\n      if ((cVar4 != '\\0') || (puVar35 = puVar40 + -0x20, *(char *)((long)param_6 + 0x26) == '\\0'))\n      goto LAB_004075f4;\nLAB_00406380:\n      puVar40 = puVar35;\n      if (*(char *)((long)param_6 + 0x25) == '\\0') {\n        if (local_2f8 == (stat *)0x0) {\n          *(undefined8 *)(puVar40 + -8) = 0x4063ac;\n          FUN_004093f0(local_278.st_ino,local_278.st_dev);\n        }\nLAB_00405e23:\n        ppbVar23 = local_2c0;\n        psVar21 = local_308;\n        if (local_308 != (stat *)0x0) {\n          *(undefined8 *)(puVar40 + -8) = 0x405e3f;\n          iVar9 = rename((char *)psVar21,(char *)ppbVar23);\n          ppbVar23 = local_2c0;\n          if (iVar9 != 0) {\n            *(undefined8 *)(puVar40 + -8) = 0x406c41;\n            uVar16 = FUN_0040ddd0(4,ppbVar23);\n            *(undefined8 *)(puVar40 + -8) = 0x406c55;\n            uVar17 = dcgettext(0,\"cannot un-backup %s\",5);\n            *(undefined8 *)(puVar40 + -8) = 0x406c5d;\n            piVar15 = __errno_location();\n            iVar9 = *piVar15;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar40 + -8) = &UNK_00406c6e;\n            error(0,iVar9,uVar17,uVar16);\n          }\n          if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n            *(undefined8 *)(puVar40 + -8) = 0x405e68;\n            uVar16 = FUN_0040dcf0(1,4,ppbVar23);\n            psVar21 = local_308;\n            *(undefined8 *)(puVar40 + -8) = 0x405e7e;\n            uVar17 = FUN_0040dcf0(0,4,psVar21);\n            *(undefined8 *)(puVar40 + -8) = 0x405e92;\n            uVar18 = dcgettext(0,\"%s -> %s (unbackup)\\n\",5);\n            *(undefined8 *)(puVar40 + -8) = 0x405ea7;\n            __printf_chk(1,uVar18,uVar17,uVar16);\n          }\n        }\n        return uVar10;\n      }\n    }\nLAB_0040687d:\n    *(undefined8 *)(puVar40 + -8) = 0x406882;\n    FUN_004047a0();\n    uVar16 = extraout_RDX;\n    puVar41 = puVar40;\n  }\n  *(undefined8 *)(puVar41 + -8) = 0x406894;\n  uVar16 = dcgettext(0,\"-r not specified; omitting directory %s\",uVar16);\n  puVar38 = puVar41;\nLAB_00406749:\n                    /* WARNING: Subroutine does not return */\n  *(undefined **)(puVar38 + -8) = &UNK_0040675d;\n  error(0,0,uVar16,uVar30);\n}\n\n",
            "funcName": "FUN_00405400"
        },
        {
            "funcStartAddr": "0x409280",
            "funcEndAddr": "0x409396",
            "decompiledFuncCode": "\nvoid FUN_00409280(undefined8 param_1,undefined8 param_2,undefined param_3,uint *param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  undefined local_9 [9];\n  \n  if (param_4 == (uint *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"co != NULL\",\"src/copy.c\",0xb60,\"valid_options\");\n  }\n  if (3 < *param_4) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"VALID_BACKUP_TYPE (co->backup_type)\",\"src/copy.c\",0xb61,\"valid_options\");\n  }\n  if (2 < param_4[3] - 1) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"VALID_SPARSE_MODE (co->sparse_mode)\",\"src/copy.c\",0xb62,\"valid_options\");\n  }\n  if (param_4[0xd] < 3) {\n    if ((*(char *)((long)param_4 + 0x17) != '\\0') && (*(char *)(param_4 + 0xb) != '\\0')) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"!(co->hard_link && co->symbolic_link)\",\"src/copy.c\",0xb64,\"valid_options\");\n    }\n    if ((param_4[3] != 2) && (param_4[0xd] == 2)) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\",\n                    \"src/copy.c\",0xb67,\"valid_options\");\n    }\n    local_9[0] = 0;\n    DAT_0061b8e8 = param_2;\n    DAT_0061b8f0 = param_1;\n    FUN_00405400(param_1,param_2,param_3,0,0,param_4,1,local_9,param_5,param_6);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"VALID_REFLINK_MODE (co->reflink_mode)\",\"src/copy.c\",0xb63,\"valid_options\");\n}\n\n",
            "funcName": "FUN_00409280"
        },
        {
            "funcStartAddr": "0x4093a0",
            "funcEndAddr": "0x4093ac",
            "decompiledFuncCode": "\nulong FUN_004093a0(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_004093a0"
        },
        {
            "funcStartAddr": "0x4093b0",
            "funcEndAddr": "0x4093c7",
            "decompiledFuncCode": "\nulong FUN_004093b0(long *param_1,long *param_2)\n\n{\n  if (*param_1 != *param_2) {\n    return 0;\n  }\n  return param_2[1] & 0xffffffffffffff00U | (ulong)(param_1[1] == param_2[1]);\n}\n\n",
            "funcName": "FUN_004093b0"
        },
        {
            "funcStartAddr": "0x4093d0",
            "funcEndAddr": "0x4093e6",
            "decompiledFuncCode": "\nvoid FUN_004093d0(void *param_1)\n\n{\n  free(*(void **)((long)param_1 + 0x10));\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004093d0"
        },
        {
            "funcStartAddr": "0x4093f0",
            "funcEndAddr": "0x409435",
            "decompiledFuncCode": "\nvoid FUN_004093f0(undefined8 param_1,undefined8 param_2)\n\n{\n  void *__ptr;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  local_18 = 0;\n  local_28 = param_1;\n  local_20 = param_2;\n  __ptr = (void *)FUN_0040c0f0(DAT_0061b8f8,&local_28);\n  if (__ptr != (void *)0x0) {\n    free(*(void **)((long)__ptr + 0x10));\n    free(__ptr);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004093f0"
        },
        {
            "funcStartAddr": "0x409440",
            "funcEndAddr": "0x409471",
            "decompiledFuncCode": "\nundefined8 FUN_00409440(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  local_28 = param_1;\n  local_20 = param_2;\n  lVar1 = FUN_0040b6a0(DAT_0061b8f8,&local_28);\n  if (lVar1 != 0) {\n    return *(undefined8 *)(lVar1 + 0x10);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00409440"
        },
        {
            "funcStartAddr": "0x409480",
            "funcEndAddr": "0x4094f6",
            "decompiledFuncCode": "\nundefined8 FUN_00409480(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *__ptr;\n  undefined8 uVar1;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  __ptr = (undefined8 *)FUN_004100e0(0x18);\n  uVar1 = FUN_00410310(param_1);\n  uVar3 = DAT_0061b8f8;\n  *__ptr = param_2;\n  __ptr[2] = uVar1;\n  __ptr[1] = param_3;\n  puVar2 = (undefined8 *)FUN_0040c0b0(uVar3,__ptr);\n  if (puVar2 != (undefined8 *)0x0) {\n    uVar3 = 0;\n    if (__ptr != puVar2) {\n      free((void *)__ptr[2]);\n      free(__ptr);\n      uVar3 = puVar2[2];\n    }\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_00409480"
        },
        {
            "funcStartAddr": "0x409500",
            "funcEndAddr": "0x409536",
            "decompiledFuncCode": "\nvoid FUN_00409500(void)\n\n{\n  DAT_0061b8f8 = FUN_0040b910(0x67,0,FUN_004093a0,FUN_004093b0,FUN_004093d0);\n  if (DAT_0061b8f8 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_00409500"
        },
        {
            "funcStartAddr": "0x409540",
            "funcEndAddr": "0x40954c",
            "decompiledFuncCode": "\nvoid FUN_00409540(void)\n\n{\n  FUN_0040bb50(DAT_0061b8f8);\n  return;\n}\n\n",
            "funcName": "FUN_00409540"
        },
        {
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409578",
            "decompiledFuncCode": "\nvoid FUN_00409550(undefined4 param_1,undefined4 *param_2)\n\n{\n  *param_2 = param_1;\n  *(undefined8 *)(param_2 + 10) = 0;\n  *(undefined8 *)(param_2 + 2) = 0;\n  *(undefined8 *)(param_2 + 6) = 0;\n  *(undefined2 *)(param_2 + 8) = 0;\n  param_2[4] = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00409550"
        },
        {
            "funcStartAddr": "0x409580",
            "funcEndAddr": "0x409833",
            "decompiledFuncCode": "\nbool FUN_00409580(int *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong *puVar5;\n  ulong uVar6;\n  ulong *puVar7;\n  ulong uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  byte bVar12;\n  ulong local_1038;\n  ulong local_1030;\n  int local_1028;\n  uint local_1024;\n  undefined4 local_1020;\n  ulong local_1018 [509];\n  \n  bVar12 = 0;\n  uVar11 = 0;\n  puVar7 = *(ulong **)(param_1 + 10);\n  local_1038 = *(ulong *)(param_1 + 2);\n  do {\n    puVar5 = &local_1038;\n    for (lVar3 = 0x200; lVar3 != 0; lVar3 = lVar3 + -1) {\n      *puVar5 = 0;\n      puVar5 = puVar5 + (ulong)bVar12 * -2 + 1;\n    }\n    local_1028 = param_1[4];\n    local_1030 = ~local_1038;\n    local_1020 = 0x48;\n    iVar1 = ioctl(*param_1,0xc020660b,&local_1038);\n    if (iVar1 < 0) {\nLAB_004097a0:\n      if (*(long *)(param_1 + 2) == 0) {\n        *(undefined *)(param_1 + 8) = 1;\n        return false;\n      }\n      return false;\n    }\n    if (local_1024 == 0) {\n      *(undefined *)((long)param_1 + 0x21) = 1;\n      return *(long *)(param_1 + 2) != 0;\n    }\n    if (~(ulong)local_1024 < *(ulong *)(param_1 + 6)) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\",\"src/extent-scan.c\",\n                    0x7e,\"extent_scan_read\");\n    }\n    lVar3 = *(long *)(param_1 + 10);\n    uVar4 = *(ulong *)(param_1 + 6) + (ulong)local_1024;\n    *(ulong *)(param_1 + 6) = uVar4;\n    if ((SUB168(ZEXT816(0x18) * ZEXT816(uVar4),0) < 0) ||\n       (SUB168(ZEXT816(0x18) * ZEXT816(uVar4) >> 0x40,0) != 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00410330();\n    }\n    lVar2 = FUN_00410140(lVar3,uVar4 * 0x18);\n    *(long *)(param_1 + 10) = lVar2;\n    puVar7 = (ulong *)((long)puVar7 + (lVar2 - lVar3));\n    if (local_1024 != 0) {\n      if (0x7fffffffffffffff - local_1018[2] < local_1018[0]) {\nLAB_004096f6:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\",\n                      \"src/extent-scan.c\",0x8d,\"extent_scan_read\");\n      }\n      uVar9 = 0;\n      uVar4 = local_1018[2];\n      puVar5 = local_1018;\n      uVar6 = local_1018[0];\n      do {\n        if (uVar11 == 0) {\n          uVar8 = *(ulong *)(param_1 + 2);\n          if (uVar6 < uVar8) goto LAB_004096b2;\n          uVar10 = *(uint *)(puVar5 + 5);\nLAB_0040971e:\n          uVar8 = (ulong)uVar11;\n          uVar9 = uVar9 + 1;\n          uVar11 = uVar11 + 1;\n          puVar7 = (ulong *)(*(long *)(param_1 + 10) + uVar8 * 0x18);\n          *puVar7 = uVar6;\n          puVar7[1] = uVar4;\n          *(uint *)(puVar7 + 2) = uVar10;\n        }\n        else {\n          uVar10 = *(uint *)(puVar5 + 5);\n          uVar8 = *puVar7 + puVar7[1];\n          if ((*(uint *)(puVar7 + 2) == (uVar10 & 0xfffffffe)) && (uVar6 == uVar8)) {\n            *(uint *)(puVar7 + 2) = uVar10;\n            uVar9 = uVar9 + 1;\n            puVar7[1] = uVar4 + puVar7[1];\n          }\n          else {\n            if (uVar8 <= uVar6) goto LAB_0040971e;\nLAB_004096b2:\n            if (uVar8 - uVar6 < uVar4) goto LAB_004097a0;\n            *puVar5 = uVar8;\n            puVar5[2] = (uVar6 + uVar4) - uVar8;\n          }\n        }\n        if (local_1024 <= uVar9) break;\n        puVar5 = local_1018 + (ulong)uVar9 * 7;\n        uVar4 = local_1018[(ulong)uVar9 * 7 + 2];\n        uVar6 = *puVar5;\n        if (0x7fffffffffffffff - uVar4 < uVar6) goto LAB_004096f6;\n      } while( true );\n    }\n    if ((*(byte *)(puVar7 + 2) & 1) != 0) {\n      *(undefined *)((long)param_1 + 0x21) = 1;\nLAB_00409806:\n      *(ulong *)(param_1 + 6) = (ulong)uVar11;\n      return true;\n    }\n    if (0x48 < uVar11) {\n      if (*(char *)((long)param_1 + 0x21) == '\\0') {\n        uVar4 = (ulong)(uVar11 - 1);\n        *(ulong *)(param_1 + 6) = uVar4;\n        *(long *)(param_1 + 2) =\n             *(long *)(*(long *)(param_1 + 10) + -0x10 + uVar4 * 0x18) +\n             *(long *)(*(long *)(param_1 + 10) + -0x18 + uVar4 * 0x18);\n        return true;\n      }\n      goto LAB_00409806;\n    }\n    *(ulong *)(param_1 + 6) = (ulong)uVar11;\n    if (*(char *)((long)param_1 + 0x21) != '\\0') {\n      return true;\n    }\n    local_1038 = puVar7[1] + *puVar7;\n    *(ulong *)(param_1 + 2) = local_1038;\n    if (uVar11 == 0x48) {\n      return true;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409580"
        },
        {
            "funcStartAddr": "0x409850",
            "funcEndAddr": "0x409868",
            "decompiledFuncCode": "\nvoid FUN_00409850(char *param_1,int *param_2)\n\n{\n  linkat(*param_2,*(char **)(param_2 + 2),param_2[4],param_1,param_2[5]);\n  return;\n}\n\n",
            "funcName": "FUN_00409850"
        },
        {
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x4098cd",
            "decompiledFuncCode": "\nvoid * FUN_00409870(void *param_1,void *param_2)\n\n{\n  ulong __size;\n  long lVar1;\n  undefined8 *puVar2;\n  \n  lVar1 = FUN_0040ab40();\n  __size = (lVar1 - (long)param_1) + 9;\n  if ((0x100 < __size) && (param_2 = malloc(__size), param_2 == (void *)0x0)) {\n    return (void *)0x0;\n  }\n  puVar2 = (undefined8 *)mempcpy(param_2,param_1,lVar1 - (long)param_1);\n  *puVar2 = DAT_00415a38;\n  *(undefined *)(puVar2 + 1) = DAT_00415a40;\n  return param_2;\n}\n\n",
            "funcName": "FUN_00409870"
        },
        {
            "funcStartAddr": "0x4098e0",
            "funcEndAddr": "0x4098f1",
            "decompiledFuncCode": "\nvoid FUN_004098e0(char *param_1,char **param_2)\n\n{\n  symlinkat(*param_2,*(int *)(param_2 + 1),param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004098e0"
        },
        {
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409a2b",
            "decompiledFuncCode": "\nint FUN_00409900(int param_1,char *param_2,int param_3,char *param_4,int param_5,char param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *__old;\n  int local_158 [2];\n  char *local_150;\n  int local_148;\n  int local_144;\n  char local_138 [264];\n  \n  iVar1 = linkat(param_1,param_2,param_3,param_4,param_5);\n  if ((param_6 == '\\x01') && (iVar1 != 0)) {\n    piVar3 = __errno_location();\n    if (*piVar3 == 0x11) {\n      __old = (char *)FUN_00409870(param_4,local_138);\n      if (__old == (char *)0x0) {\n        iVar1 = -1;\n      }\n      else {\n        local_158[0] = param_1;\n        local_150 = param_2;\n        local_148 = param_3;\n        local_144 = param_5;\n        iVar1 = FUN_0040e910(__old,0,local_158,FUN_00409850,6);\n        if (iVar1 == 0) {\n          iVar2 = renameat(param_3,__old,param_3,param_4);\n          if (iVar2 != 0) {\n            iVar2 = *piVar3;\n          }\n          unlinkat(param_3,__old,0);\n        }\n        else {\n          iVar2 = *piVar3;\n        }\n        if (__old != local_138) {\n          free(__old);\n        }\n        iVar1 = 1;\n        if (iVar2 != 0) {\n          *piVar3 = iVar2;\n          iVar1 = -1;\n        }\n      }\n    }\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00409900"
        },
        {
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409b34",
            "decompiledFuncCode": "\nint FUN_00409a40(char *param_1,int param_2,char *param_3,char param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *__old;\n  char *local_148;\n  int local_140;\n  char local_138 [264];\n  \n  iVar1 = symlinkat(param_1,param_2,param_3);\n  if (param_4 != '\\x01') {\n    return iVar1;\n  }\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x11) {\n    return iVar1;\n  }\n  __old = (char *)FUN_00409870(param_3,local_138);\n  if (__old != (char *)0x0) {\n    local_148 = param_1;\n    local_140 = param_2;\n    iVar1 = FUN_0040e910(__old,0,&local_148,FUN_004098e0,6);\n    if (iVar1 == 0) {\n      iVar1 = renameat(param_2,__old,param_2,param_3);\n      if (iVar1 == 0) {\n        if (__old == local_138) {\n          return 1;\n        }\n        free(__old);\n        return 1;\n      }\n      iVar1 = *piVar2;\n      unlinkat(param_2,__old,0);\n    }\n    else {\n      iVar1 = *piVar2;\n    }\n    if (__old != local_138) {\n      free(__old);\n    }\n    if (iVar1 == 0) {\n      return 1;\n    }\n    *piVar2 = iVar1;\n    return -1;\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_00409a40"
        },
        {
            "funcStartAddr": "0x409b40",
            "funcEndAddr": "0x409bba",
            "decompiledFuncCode": "\nint FUN_00409b40(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = FUN_0040c440();\n  if (iVar1 == -2) {\n    uVar2 = FUN_0040e020(param_1);\n    piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,&DAT_00415a9d,uVar2);\n  }\n  if (iVar1 == -1) {\n    uVar2 = FUN_0040e020(param_3);\n    uVar3 = dcgettext(0,\"preserving permissions for %s\",5);\n    piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,uVar3,uVar2);\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00409b40"
        },
        {
            "funcStartAddr": "0x409bd0",
            "funcEndAddr": "0x409c1e",
            "decompiledFuncCode": "\nundefined4 FUN_00409bd0(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = FUN_0040c480();\n  if (iVar1 == 0) {\n    return 0;\n  }\n  uVar2 = FUN_0040e020(param_1);\n  uVar3 = dcgettext(0,\"setting permissions for %s\",5);\n  piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar4,uVar3,uVar2);\n}\n\n",
            "funcName": "FUN_00409bd0"
        },
        {
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409d0b",
            "decompiledFuncCode": "\nchar * FUN_00409c30(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409c30"
        },
        {
            "funcStartAddr": "0x409d20",
            "funcEndAddr": "0x409d2a",
            "decompiledFuncCode": "\nvoid FUN_00409d20(void)\n\n{\n  FUN_00403c80(1);\n  return;\n}\n\n",
            "funcName": "FUN_00409d20"
        },
        {
            "funcStartAddr": "0x409d30",
            "funcEndAddr": "0x409e33",
            "decompiledFuncCode": "\nlong FUN_00409d30(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_00409dc7:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_00409dc7;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_00409d30"
        },
        {
            "funcStartAddr": "0x409e50",
            "funcEndAddr": "0x409ebc",
            "decompiledFuncCode": "\nvoid FUN_00409e50(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_0040e000(1,param_1);\n  uVar3 = FUN_0040dcf0(0,8,param_2);\n                    /* WARNING: Subroutine does not return */\n  error(0,0,uVar1,uVar3,uVar2);\n}\n\n",
            "funcName": "FUN_00409e50"
        },
        {
            "funcStartAddr": "0x409ed0",
            "funcEndAddr": "0x409fdf",
            "decompiledFuncCode": "\nvoid FUN_00409ed0(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_0040e020(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_00409fa0;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_0040e020(lVar5);\n    __fprintf_chk(stderr,1,&DAT_00415a9b,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_00409fa0:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_00409ed0"
        },
        {
            "funcStartAddr": "0x409ff0",
            "funcEndAddr": "0x40a05d",
            "decompiledFuncCode": "\nlong FUN_00409ff0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00409d30(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00409e50(param_1,param_2,lVar1);\n    FUN_00409ed0(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00409ff0"
        },
        {
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a0ac",
            "decompiledFuncCode": "\nlong FUN_0040a060(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_0040a060"
        },
        {
            "funcStartAddr": "0x40a0b0",
            "funcEndAddr": "0x40a166",
            "decompiledFuncCode": "\nvoid FUN_0040a0b0(char *param_1,long param_2)\n\n{\n  undefined2 uVar1;\n  undefined2 *puVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  puVar2 = (undefined2 *)FUN_0040ab40();\n  uVar3 = FUN_0040aba0(puVar2);\n  if (0xe < uVar3) {\n    uVar1 = *puVar2;\n    *puVar2 = 0x2e;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar5 = pathconf(param_1,3);\n    if ((-1 < (long)uVar5) || (uVar6 = 0xff, *piVar4 == 0)) {\n      uVar6 = uVar5;\n    }\n    *puVar2 = uVar1;\n    if (uVar6 < uVar3) {\n      param_1 = param_1 + param_2;\n      if ((ulong)((long)param_1 - (long)puVar2) < uVar6) {\n        uVar6 = ((long)param_1 - (long)puVar2) + 1;\n      }\n      else {\n        param_1 = (char *)((long)puVar2 + (uVar6 - 1));\n      }\n      *param_1 = '~';\n      *(undefined *)((long)puVar2 + uVar6) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040a0b0"
        },
        {
            "funcStartAddr": "0x40a180",
            "funcEndAddr": "0x40a1c6",
            "decompiledFuncCode": "\nvoid FUN_0040a180(char *param_1)\n\n{\n  char *pcVar1;\n  \n  if ((((param_1 != (char *)0x0) ||\n       (param_1 = getenv(\"SIMPLE_BACKUP_SUFFIX\"), param_1 != (char *)0x0)) && (*param_1 != '\\0')) &&\n     (pcVar1 = (char *)FUN_0040ab40(param_1), pcVar1 == param_1)) {\n    DAT_0061b900 = param_1;\n    return;\n  }\n  DAT_0061b900 = &DAT_00415aa0;\n  return;\n}\n\n",
            "funcName": "FUN_0040a180"
        },
        {
            "funcStartAddr": "0x40a1e0",
            "funcEndAddr": "0x40a67e",
            "decompiledFuncCode": "\nvoid * FUN_0040a1e0(void *param_1,int param_2,char param_3)\n\n{\n  undefined4 *puVar1;\n  ulong uVar2;\n  char cVar3;\n  undefined2 uVar4;\n  int iVar5;\n  char *pcVar6;\n  size_t sVar7;\n  long lVar8;\n  ulong __n;\n  void *pvVar9;\n  long lVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__dest;\n  undefined2 *puVar13;\n  int *piVar14;\n  DIR *__dirp;\n  ulong uVar15;\n  byte bVar16;\n  long lVar17;\n  byte bVar18;\n  ulong local_78;\n  size_t local_70;\n  int local_58;\n  \n  pcVar6 = (char *)FUN_0040ab40();\n  sVar7 = strlen(pcVar6);\n  lVar17 = (long)pcVar6 - (long)param_1;\n  lVar8 = sVar7 + lVar17;\n  if (DAT_0061b900 == (char *)0x0) {\n    FUN_0040a180();\n  }\n  sVar7 = strlen(DAT_0061b900);\n  __n = sVar7 + 1;\n  uVar15 = 9;\n  if (8 < __n) {\n    uVar15 = __n;\n  }\n  sVar7 = uVar15 + lVar8 + 1U;\n  pvVar9 = malloc(sVar7);\n  if (pvVar9 != (void *)0x0) {\n    __dirp = (DIR *)0x0;\n    __dest = pvVar9;\n    local_58 = param_2;\n    do {\n      memcpy(__dest,param_1,lVar8 + 1U);\n      if (local_58 == 1) {\n        memcpy((void *)((long)__dest + lVar8),DAT_0061b900,__n);\n      }\n      else {\n        puVar13 = (undefined2 *)((long)__dest + lVar17);\n        lVar10 = FUN_0040aba0(puVar13);\n        if (__dirp == (DIR *)0x0) {\n          uVar4 = *puVar13;\n          *puVar13 = 0x2e;\n          __dirp = (DIR *)FUN_0040a9c0(__dest);\n          puVar1 = (undefined4 *)((long)puVar13 + lVar10);\n          if (__dirp != (DIR *)0x0) {\n            *puVar13 = uVar4;\n            *puVar1 = 0x7e317e2e;\n            *(undefined *)(puVar1 + 1) = 0;\n            goto LAB_0040a2b1;\n          }\n          piVar14 = __errno_location();\n          iVar5 = *piVar14;\n          *puVar13 = uVar4;\n          bVar18 = (iVar5 == 0xc) + 2;\n          *puVar1 = 0x7e317e2e;\n          *(undefined *)(puVar1 + 1) = 0;\n        }\n        else {\n          rewinddir(__dirp);\nLAB_0040a2b1:\n          bVar16 = 2;\n          local_78 = 1;\n          local_70 = sVar7;\nLAB_0040a2d8:\n          pdVar11 = readdir(__dirp);\n          pvVar9 = __dest;\n          bVar18 = bVar16;\n          if (pdVar11 != (dirent *)0x0) {\n            while( true ) {\n              pcVar6 = pdVar11->d_name;\n              sVar12 = strlen(pcVar6);\n              __dest = pvVar9;\n              if (sVar12 < lVar10 + 4U) break;\n              iVar5 = memcmp((void *)((long)pvVar9 + lVar17),pcVar6,lVar10 + 2U);\n              if (iVar5 != 0) break;\n              pcVar6 = pcVar6 + lVar10 + 2U;\n              if (8 < (byte)(*pcVar6 - 0x31U)) break;\n              bVar18 = *pcVar6 == '9';\n              uVar15 = 1;\n              cVar3 = pcVar6[1];\n              while ((int)cVar3 - 0x30U < 10) {\n                uVar15 = uVar15 + 1;\n                bVar18 = cVar3 == '9' & bVar18;\n                cVar3 = pcVar6[uVar15];\n              }\n              if (((cVar3 != '~') || (pcVar6[uVar15 + 1] != '\\0')) ||\n                 ((uVar15 <= local_78 &&\n                  ((local_78 != uVar15 ||\n                   (iVar5 = memcmp((void *)((long)pvVar9 + lVar8 + 2),pcVar6,local_78), 0 < iVar5)))\n                  ))) break;\n              local_78 = bVar18 + uVar15;\n              uVar2 = lVar8 + 4 + local_78;\n              if (local_70 < uVar2) {\n                local_70 = uVar2;\n                if ((-1 < (long)(uVar2 * 2)) && (-1 < (long)uVar2)) {\n                  local_70 = uVar2 * 2;\n                }\n                __dest = realloc(pvVar9,local_70);\n                if (__dest == (void *)0x0) goto LAB_0040a608;\n              }\n              puVar13 = (undefined2 *)(lVar8 + (long)__dest);\n              *puVar13 = 0x7e2e;\n              *(undefined *)(puVar13 + 1) = 0x30;\n              pvVar9 = memcpy((void *)((long)puVar13 + (ulong)bVar18 + 2),pcVar6,uVar15 + 2);\n              pcVar6 = (char *)((long)pvVar9 + (uVar15 - 1));\n              cVar3 = *(char *)((long)pvVar9 + (uVar15 - 1));\n              while (cVar3 == '9') {\n                *pcVar6 = '0';\n                pcVar6 = pcVar6 + -1;\n                cVar3 = *pcVar6;\n              }\n              *pcVar6 = cVar3 + '\\x01';\n              pdVar11 = readdir(__dirp);\n              pvVar9 = __dest;\n              bVar16 = bVar18;\n              if (pdVar11 == (dirent *)0x0) goto LAB_0040a4b0;\n            }\n            goto LAB_0040a2d8;\n          }\n        }\nLAB_0040a4b0:\n        if (bVar18 == 2) {\n          if (local_58 == 2) {\n            memcpy((void *)((long)__dest + lVar8),DAT_0061b900,__n);\n            local_58 = 1;\n          }\n        }\n        else {\n          pvVar9 = __dest;\n          if (bVar18 == 3) {\nLAB_0040a608:\n            free(pvVar9);\n            piVar14 = __errno_location();\n            *piVar14 = 0xc;\n            return (void *)0x0;\n          }\n          if (bVar18 != 1) goto LAB_0040a4cb;\n        }\n        FUN_0040a0b0(__dest,lVar8);\n      }\nLAB_0040a4cb:\n      if (param_3 == '\\0') goto LAB_0040a678;\n      if (__dirp == (DIR *)0x0) {\nLAB_0040a550:\n        iVar5 = -100;\n        lVar17 = 0;\n        pvVar9 = __dest;\n      }\n      else {\n        iVar5 = dirfd(__dirp);\n        pvVar9 = (void *)((long)__dest + lVar17);\n        if (iVar5 < 0) goto LAB_0040a550;\n      }\n      iVar5 = FUN_0040e040(0xffffff9c,param_1,iVar5,pvVar9,local_58 != 1);\n      if (iVar5 == 0) {\nLAB_0040a678:\n        if (__dirp == (DIR *)0x0) {\n          return __dest;\n        }\n        closedir(__dirp);\n        return __dest;\n      }\n      piVar14 = __errno_location();\n      iVar5 = *piVar14;\n    } while (iVar5 == 0x11);\n    if (__dirp != (DIR *)0x0) {\n      closedir(__dirp);\n    }\n    pvVar9 = (void *)0x0;\n    free(__dest);\n    *piVar14 = iVar5;\n  }\n  return pvVar9;\n}\n\n",
            "funcName": "FUN_0040a1e0"
        },
        {
            "funcStartAddr": "0x40a6b0",
            "funcEndAddr": "0x40a6ba",
            "decompiledFuncCode": "\nvoid FUN_0040a6b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040a1e0(param_1,param_2,1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a6b0"
        },
        {
            "funcStartAddr": "0x40a6c0",
            "funcEndAddr": "0x40a6ec",
            "decompiledFuncCode": "\nundefined4 FUN_0040a6c0(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00409ff0(param_1,param_2,&PTR_DAT_00415b20,&DAT_00415b00,4,PTR_FUN_0061b3c8);\n  return *(undefined4 *)(&DAT_00415b00 + lVar1 * 4);\n}\n\n",
            "funcName": "FUN_0040a6c0"
        },
        {
            "funcStartAddr": "0x40a6f0",
            "funcEndAddr": "0x40a70a",
            "decompiledFuncCode": "\nvoid FUN_0040a6f0(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040a1e0(param_1,param_2,0);\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_0040a6f0"
        },
        {
            "funcStartAddr": "0x40a710",
            "funcEndAddr": "0x40a722",
            "decompiledFuncCode": "\nundefined8 FUN_0040a710(undefined8 param_1,char *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_2 != (char *)0x0) && (*param_2 != '\\0')) {\n    uVar1 = FUN_0040a6c0();\n    return uVar1;\n  }\n  return 2;\n}\n\n",
            "funcName": "FUN_0040a710"
        },
        {
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a76d",
            "decompiledFuncCode": "\nundefined8 FUN_0040a730(char *param_1,char *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n    param_2 = getenv(\"VERSION_CONTROL\");\n    if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n      return 2;\n    }\n    param_1 = \"$VERSION_CONTROL\";\n  }\n  uVar1 = FUN_0040a6c0(param_1,param_2);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_0040a730"
        },
        {
            "funcStartAddr": "0x40a780",
            "funcEndAddr": "0x40a7e5",
            "decompiledFuncCode": "\nulong FUN_0040a780(ulong param_1,ulong param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  if (param_1 == 0) {\n    param_1 = 0x2000;\n    if (param_2 != 0) {\n      param_1 = param_2;\n    }\n  }\n  else {\n    uVar3 = param_1;\n    uVar1 = param_2;\n    if (param_2 != 0) {\n      do {\n        uVar2 = uVar1;\n        uVar1 = uVar3 % uVar2;\n        uVar3 = uVar2;\n      } while (uVar1 != 0);\n      uVar3 = param_2 * (param_1 / uVar2);\n      if ((uVar3 < param_3 || uVar3 - param_3 == 0) && (uVar3 / param_2 == param_1 / uVar2)) {\n        return uVar3;\n      }\n    }\n  }\n  if (param_1 <= param_3) {\n    param_3 = param_1;\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040a780"
        },
        {
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a7f8",
            "decompiledFuncCode": "\nvoid FUN_0040a7f0(undefined8 param_1)\n\n{\n  DAT_0061b908 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040a7f0"
        },
        {
            "funcStartAddr": "0x40a800",
            "funcEndAddr": "0x40a8df",
            "decompiledFuncCode": "\nvoid FUN_0040a800(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = FUN_00410560(stdin);\n  if (lVar2 == 0) {\n    iVar1 = FUN_004114a0(uVar3);\n    if (iVar1 == 0) {\n      FUN_0040a920();\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_00410590(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00410520(stdin);\n      if (iVar1 != 0) {\n        FUN_004114a0(stdin);\n        goto LAB_0040a858;\n      }\n    }\n    iVar1 = FUN_004114a0(stdin);\n    if (iVar1 == 0) {\n      FUN_0040a920();\n      return;\n    }\n  }\nLAB_0040a858:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = DAT_0061b908;\n  piVar4 = __errno_location();\n  if (lVar2 != 0) {\n    uVar5 = FUN_0040de70(lVar2);\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar4,&DAT_00415a9d,uVar3);\n}\n\n",
            "funcName": "FUN_0040a800"
        },
        {
            "funcStartAddr": "0x40a900",
            "funcEndAddr": "0x40a908",
            "decompiledFuncCode": "\nvoid FUN_0040a900(undefined8 param_1)\n\n{\n  DAT_0061b918 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040a900"
        },
        {
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40a918",
            "decompiledFuncCode": "\nvoid FUN_0040a910(undefined param_1)\n\n{\n  DAT_0061b910 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040a910"
        },
        {
            "funcStartAddr": "0x40a920",
            "funcEndAddr": "0x40a9bc",
            "decompiledFuncCode": "\nvoid FUN_0040a920(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004114a0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0061b910 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0061b918 != 0) {\n        uVar4 = FUN_0040de70();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,&DAT_00415a9d,uVar3);\n    }\n  }\n  iVar1 = FUN_004114a0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0061b3d0);\n}\n\n",
            "funcName": "FUN_0040a920"
        },
        {
            "funcStartAddr": "0x40a9c0",
            "funcEndAddr": "0x40aa50",
            "decompiledFuncCode": "\nDIR * FUN_0040a9c0(char *param_1)\n\n{\n  uint uVar1;\n  int __fd;\n  DIR *__dirp;\n  int *piVar2;\n  DIR *pDVar3;\n  int iVar4;\n  \n  __dirp = opendir(param_1);\n  if (__dirp != (DIR *)0x0) {\n    uVar1 = dirfd(__dirp);\n    if (uVar1 < 3) {\n      __fd = FUN_004103e0(uVar1,0x406,3);\n      piVar2 = __errno_location();\n      if (__fd < 0) {\n        iVar4 = *piVar2;\n        pDVar3 = (DIR *)0x0;\n      }\n      else {\n        pDVar3 = fdopendir(__fd);\n        iVar4 = *piVar2;\n        if (pDVar3 == (DIR *)0x0) {\n          close(__fd);\n        }\n      }\n      closedir(__dirp);\n      *piVar2 = iVar4;\n      return pDVar3;\n    }\n  }\n  return __dirp;\n}\n\n",
            "funcName": "FUN_0040a9c0"
        },
        {
            "funcStartAddr": "0x40aa60",
            "funcEndAddr": "0x40aa78",
            "decompiledFuncCode": "\nvoid FUN_0040aa60(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040aae0();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_0040aa60"
        },
        {
            "funcStartAddr": "0x40aa80",
            "funcEndAddr": "0x40aad8",
            "decompiledFuncCode": "\nulong FUN_0040aa80(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_0040ab40();\n  uVar3 = lVar2 - (long)param_1;\n  if (((cVar1 == '/') < uVar3) && (*(char *)(lVar2 + -1) == '/')) {\n    do {\n      uVar4 = uVar3 - 1;\n      if ((cVar1 == '/') == uVar4) {\n        return uVar4;\n      }\n      lVar2 = uVar3 - 2;\n      uVar3 = uVar4;\n    } while (param_1[lVar2] == '/');\n    return uVar4;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040aa80"
        },
        {
            "funcStartAddr": "0x40aae0",
            "funcEndAddr": "0x40ab3a",
            "decompiledFuncCode": "\nundefined * FUN_0040aae0(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_0040aa80();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_0040aae0"
        },
        {
            "funcStartAddr": "0x40ab40",
            "funcEndAddr": "0x40ab92",
            "decompiledFuncCode": "\nchar * FUN_0040ab40(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040ab40"
        },
        {
            "funcStartAddr": "0x40aba0",
            "funcEndAddr": "0x40abc7",
            "decompiledFuncCode": "\nvoid FUN_0040aba0(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040aba0"
        },
        {
            "funcStartAddr": "0x40abd0",
            "funcEndAddr": "0x40ac03",
            "decompiledFuncCode": "\nbool FUN_0040abd0(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  pcVar3 = (char *)FUN_0040ab40();\n  if (*pcVar3 == '\\0') {\n    pcVar3 = param_1;\n  }\n  lVar2 = FUN_0040aba0(pcVar3);\n  cVar1 = pcVar3[lVar2];\n  pcVar3[lVar2] = '\\0';\n  return cVar1 != '\\0';\n}\n\n",
            "funcName": "FUN_0040abd0"
        },
        {
            "funcStartAddr": "0x40ac10",
            "funcEndAddr": "0x40ac15",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0061b1c8)();\n  return iVar1;\n}\n\n",
            "funcName": "thunk_40ac10"
        },
        {
            "funcStartAddr": "0x40ac20",
            "funcEndAddr": "0x40ac3c",
            "decompiledFuncCode": "\nvoid FUN_0040ac20(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040ac20"
        },
        {
            "funcStartAddr": "0x40ac50",
            "funcEndAddr": "0x40ac96",
            "decompiledFuncCode": "\nvoid FUN_0040ac50(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040eaf0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040ac50"
        },
        {
            "funcStartAddr": "0x40aca0",
            "funcEndAddr": "0x40ad18",
            "decompiledFuncCode": "\nvoid FUN_0040aca0(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_004100e0(0x18);\n  uVar2 = FUN_00410310(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_0040c0b0(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_0040c380(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_0040aca0"
        },
        {
            "funcStartAddr": "0x40ad30",
            "funcEndAddr": "0x40ad64",
            "decompiledFuncCode": "\nulong FUN_0040ad30(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_0040b6a0(param_1,&local_28);\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040ad30"
        },
        {
            "funcStartAddr": "0x40ad70",
            "funcEndAddr": "0x40aed6",
            "decompiledFuncCode": "\nvoid FUN_0040ad70(uint param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  char cVar3;\n  uint uVar4;\n  \n  uVar2 = 0x2d;\n  uVar4 = param_1 & 0xf000;\n  if ((((uVar4 != 0x8000) && (uVar2 = 100, uVar4 != 0x4000)) && (uVar2 = 0x62, uVar4 != 0x6000)) &&\n     (((uVar2 = 99, uVar4 != 0x2000 && (uVar2 = 0x6c, uVar4 != 0xa000)) &&\n      ((uVar2 = 0x70, uVar4 != 0x1000 && (uVar2 = 0x73, uVar4 != 0xc000)))))) {\n    uVar2 = 0x3f;\n  }\n  *param_2 = uVar2;\n  param_2[1] = (-((param_1 & 0x100) == 0) & 0xbbU) + 0x72;\n  param_2[2] = (-((param_1 & 0x80) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 0x40) == 0);\n  if ((param_1 & 0x800) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[3] = cVar3;\n  param_2[4] = (-((param_1 & 0x20) == 0) & 0xbbU) + 0x72;\n  param_2[5] = (-((param_1 & 0x10) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 8) == 0);\n  if ((param_1 & 0x400) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[6] = cVar3;\n  param_2[7] = (-((param_1 & 4) == 0) & 0xbbU) + 0x72;\n  param_2[8] = (-((param_1 & 2) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 1) == 0);\n  if ((param_1 & 0x200) != 0) {\n    param_2[9] = (bVar1 & 0xe0) + 0x74;\n    *(undefined2 *)(param_2 + 10) = 0x20;\n    return;\n  }\n  param_2[9] = (bVar1 & 0xb5) + 0x78;\n  *(undefined2 *)(param_2 + 10) = 0x20;\n  return;\n}\n\n",
            "funcName": "FUN_0040ad70"
        },
        {
            "funcStartAddr": "0x40aef0",
            "funcEndAddr": "0x40aef8",
            "decompiledFuncCode": "\nvoid FUN_0040aef0(long param_1)\n\n{\n  FUN_0040ad70(*(undefined4 *)(param_1 + 0x18));\n  return;\n}\n\n",
            "funcName": "FUN_0040aef0"
        },
        {
            "funcStartAddr": "0x40af00",
            "funcEndAddr": "0x40af18",
            "decompiledFuncCode": "\nvoid FUN_0040af00(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040af20();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_0040af00"
        },
        {
            "funcStartAddr": "0x40af20",
            "funcEndAddr": "0x40aff4",
            "decompiledFuncCode": "\nvoid * FUN_0040af20(void *param_1,char *param_2,long *param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  size_t __n;\n  void *__dest;\n  undefined *puVar5;\n  size_t __n_00;\n  \n  lVar3 = FUN_0040ab40();\n  uVar4 = FUN_0040aba0(lVar3);\n  __n_00 = (lVar3 - (long)param_1) + uVar4;\n  if (uVar4 != 0) {\n    uVar4 = (ulong)(*(char *)(lVar3 + -1 + uVar4) != '/');\n  }\n  cVar1 = *param_2;\n  cVar2 = cVar1;\n  while (cVar2 == '/') {\n    param_2 = param_2 + 1;\n    cVar2 = *param_2;\n  }\n  __n = strlen(param_2);\n  __dest = malloc(uVar4 + 1 + __n_00 + __n);\n  if (__dest != (void *)0x0) {\n    puVar5 = (undefined *)mempcpy(__dest,param_1,__n_00);\n    *puVar5 = 0x2f;\n    if (param_3 != (long *)0x0) {\n      *param_3 = (long)(puVar5 + uVar4) - (ulong)(cVar1 == '/');\n    }\n    puVar5 = (undefined *)mempcpy(puVar5 + uVar4,param_2,__n);\n    *puVar5 = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_0040af20"
        },
        {
            "funcStartAddr": "0x40b000",
            "funcEndAddr": "0x40b06d",
            "decompiledFuncCode": "\nlong FUN_0040b000(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_0040e290(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040b000"
        },
        {
            "funcStartAddr": "0x40b080",
            "funcEndAddr": "0x40b111",
            "decompiledFuncCode": "\nulong FUN_0040b080(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_0040b100:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_0040b100;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040b080"
        },
        {
            "funcStartAddr": "0x40b120",
            "funcEndAddr": "0x40b130",
            "decompiledFuncCode": "\nulong FUN_0040b120(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_0040b120"
        },
        {
            "funcStartAddr": "0x40b130",
            "funcEndAddr": "0x40b137",
            "decompiledFuncCode": "\nbool FUN_0040b130(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_0040b130"
        },
        {
            "funcStartAddr": "0x40b140",
            "funcEndAddr": "0x40b161",
            "decompiledFuncCode": "\nlong FUN_0040b140(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040b140"
        },
        {
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b275",
            "decompiledFuncCode": "\nlong FUN_0040b170(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_0040b140();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040b1fc:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040b1fc;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_0040b170"
        },
        {
            "funcStartAddr": "0x40b290",
            "funcEndAddr": "0x40b30a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040b290(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_00415c00) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_00415c14 < fVar1) && (fVar1 < DAT_00415c18)) && (_DAT_00415c1c < pfVar2[3])) &&\n     (_DAT_00415c20 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_00415c14;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_00415c24)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_00415c00;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b290"
        },
        {
            "funcStartAddr": "0x40b310",
            "funcEndAddr": "0x40b44a",
            "decompiledFuncCode": "\nundefined8 FUN_0040b310(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0040b338:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_0040b140(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0040b3af;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0040b3af:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0040b338;\n    plVar3 = (long *)FUN_0040b140(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040b310"
        },
        {
            "funcStartAddr": "0x40b460",
            "funcEndAddr": "0x40b465",
            "decompiledFuncCode": "\nundefined8 FUN_0040b460(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_0040b460"
        },
        {
            "funcStartAddr": "0x40b470",
            "funcEndAddr": "0x40b475",
            "decompiledFuncCode": "\nundefined8 FUN_0040b470(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_0040b470"
        },
        {
            "funcStartAddr": "0x40b480",
            "funcEndAddr": "0x40b485",
            "decompiledFuncCode": "\nundefined8 FUN_0040b480(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_0040b480"
        },
        {
            "funcStartAddr": "0x40b490",
            "funcEndAddr": "0x40b4df",
            "decompiledFuncCode": "\nvoid FUN_0040b490(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040b490"
        },
        {
            "funcStartAddr": "0x40b4e0",
            "funcEndAddr": "0x40b542",
            "decompiledFuncCode": "\nbool FUN_0040b4e0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0040b4f8:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0040b4f8;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040b4e0"
        },
        {
            "funcStartAddr": "0x40b550",
            "funcEndAddr": "0x40b68c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040b550(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040b5bd;\n    }\n  }\nLAB_0040b5bd:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_00415c38) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_0040b550"
        },
        {
            "funcStartAddr": "0x40b6a0",
            "funcEndAddr": "0x40b6eb",
            "decompiledFuncCode": "\nlong FUN_0040b6a0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_0040b140();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040b6a0"
        },
        {
            "funcStartAddr": "0x40b700",
            "funcEndAddr": "0x40b73a",
            "decompiledFuncCode": "\nlong FUN_0040b700(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00402a5a();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00402a5a();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040b700"
        },
        {
            "funcStartAddr": "0x40b750",
            "funcEndAddr": "0x40b7a9",
            "decompiledFuncCode": "\nlong FUN_0040b750(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_0040b140();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040b750"
        },
        {
            "funcStartAddr": "0x40b7c0",
            "funcEndAddr": "0x40b820",
            "decompiledFuncCode": "\nulong FUN_0040b7c0(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040b7c0"
        },
        {
            "funcStartAddr": "0x40b830",
            "funcEndAddr": "0x40b89b",
            "decompiledFuncCode": "\nlong FUN_0040b830(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040b830"
        },
        {
            "funcStartAddr": "0x40b8b0",
            "funcEndAddr": "0x40b8e1",
            "decompiledFuncCode": "\nulong FUN_0040b8b0(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040b8b0"
        },
        {
            "funcStartAddr": "0x40b8f0",
            "funcEndAddr": "0x40b910",
            "decompiledFuncCode": "\nvoid FUN_0040b8f0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_0040b8f0"
        },
        {
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40ba90",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_0040b910(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_0040b120;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_0040b130;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_00415c00;\n    cVar1 = FUN_0040b290(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040b9f0;\n    fVar4 = DAT_00415c28;\n    if ((long)param_1 < 0) goto LAB_0040ba73;\nLAB_0040ba2e:\n    fVar3 = (float)param_1;\nLAB_0040ba37:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_00415c2c <= fVar3) goto LAB_0040b9f0;\n    if (fVar3 < _DAT_00415c30) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_00415c30) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_0040b290(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040b9f0;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040ba2e;\nLAB_0040ba73:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_0040ba37;\n    }\n  }\n  __nmemb = (void *)FUN_0040b080(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_0040b9f0:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_0040b910"
        },
        {
            "funcStartAddr": "0x40baa0",
            "funcEndAddr": "0x40bb45",
            "decompiledFuncCode": "\nvoid FUN_0040baa0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0040bb33;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0040bb33:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_0040baa0"
        },
        {
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bc20",
            "decompiledFuncCode": "\nvoid FUN_0040bb50(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040bbec;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040bbaf;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040bbaf:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040bbec:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040bb50"
        },
        {
            "funcStartAddr": "0x40bc30",
            "funcEndAddr": "0x40be1b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0040bc30(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_00415c2c <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_00415c30) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_00415c30) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_0040b080(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_0040b310(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_0040b310(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_0040b310(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040bc30"
        },
        {
            "funcStartAddr": "0x40be30",
            "funcEndAddr": "0x40c081",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040be30(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_0040b170(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040bf2a;\nLAB_0040be9b:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_0040beb2;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040be9b;\nLAB_0040bf2a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_0040beb2;\n  }\n  FUN_0040b290(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_00415c2c <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_00415c30 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_00415c30) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_0040bc30(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_0040b170(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_00402a64();\n      return uVar5;\n    }\n  }\nLAB_0040beb2:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_0040be30"
        },
        {
            "funcStartAddr": "0x40c0b0",
            "funcEndAddr": "0x40c0e4",
            "decompiledFuncCode": "\nundefined8 FUN_0040c0b0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_0040be30(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c0b0"
        },
        {
            "funcStartAddr": "0x40c0f0",
            "funcEndAddr": "0x40c2af",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0040c0f0(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_0040b170(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_0040b290(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_00415c30 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_00415c30) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_0040bc30(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_0040c0f0"
        },
        {
            "funcStartAddr": "0x40c2d0",
            "funcEndAddr": "0x40c2f7",
            "decompiledFuncCode": "\nulong FUN_0040c2d0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_004115a0(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n",
            "funcName": "FUN_0040c2d0"
        },
        {
            "funcStartAddr": "0x40c300",
            "funcEndAddr": "0x40c30d",
            "decompiledFuncCode": "\nulong FUN_0040c300(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_0040c300"
        },
        {
            "funcStartAddr": "0x40c310",
            "funcEndAddr": "0x40c332",
            "decompiledFuncCode": "\nundefined8 FUN_0040c310(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_0040e2f0(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c310"
        },
        {
            "funcStartAddr": "0x40c340",
            "funcEndAddr": "0x40c370",
            "decompiledFuncCode": "\nulong FUN_0040c340(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c340"
        },
        {
            "funcStartAddr": "0x40c380",
            "funcEndAddr": "0x40c395",
            "decompiledFuncCode": "\nvoid FUN_0040c380(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040c380"
        },
        {
            "funcStartAddr": "0x40c3a0",
            "funcEndAddr": "0x40c439",
            "decompiledFuncCode": "\nvoid FUN_0040c3a0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00415c80;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0061b920 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040c3a0"
        },
        {
            "funcStartAddr": "0x40c440",
            "funcEndAddr": "0x40c479",
            "decompiledFuncCode": "\nundefined8\nFUN_0040c440(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined4 param_4,\n            undefined4 param_5)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined local_1c [12];\n  \n  iVar1 = FUN_00411440(param_1,param_2,param_5,local_1c);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00411470(local_1c,param_3,param_4);\n  }\n  else {\n    uVar2 = 0xfffffffe;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040c440"
        },
        {
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c49c",
            "decompiledFuncCode": "\nvoid FUN_0040c480(undefined8 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  FUN_00411470(local_c,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040c480"
        },
        {
            "funcStartAddr": "0x40c4a0",
            "funcEndAddr": "0x40c57f",
            "decompiledFuncCode": "\nchar * FUN_0040c4a0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004115e0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_0040c578:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00415c91;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00415c86;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_0040c578;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00415c8d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00415c8a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_0040c4a0"
        },
        {
            "funcStartAddr": "0x40c5a0",
            "funcEndAddr": "0x40d6d3",
            "decompiledFuncCode": "\nulong FUN_0040c5a0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_0040d1f1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_0040ce26;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_0040d1f1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_0040c4a0(&DAT_00415c95,param_5);\n      param_9 = (char *)FUN_0040c4a0(&DAT_00416f57);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_0040c638:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_0040c648:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_0040cdc8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_0040cd40:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_0040cd52_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040cbbe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_0040ca55;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_0040cd52_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_0040cd52_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_0040cd52_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_0040ca55;\n      case 0xc:\nswitchD_0040cd52_caseD_c:\n        bVar17 = 0x66;\nLAB_0040ca55:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_0040c9a8;\n        }\nLAB_0040ca60:\n        bVar23 = false;\n        goto LAB_0040c81b;\n      case 0xd:\n        bVar20 = false;\nswitchD_0040c738_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_0040c970;\n      case 0x20:\n        bVar25 = false;\nLAB_0040cd9a:\n        uVar19 = 0x20;\n        goto LAB_0040cd62;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_0040c738_caseD_21:\n        bVar25 = false;\n        goto LAB_0040c97b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040cd7a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_0040c788;\n        }\n        bVar23 = false;\n        goto LAB_0040c79f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_0040cd62:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_0040c7a1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040cbbe_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040cbbe_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_0040c738_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040cbbe_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x0040c997;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_0040cd40;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_0040c738_caseD_0;\n      default:\n        goto switchD_0040cbbe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_0040ca60;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_0040cd52_caseD_9;\n      case 10:\n        goto switchD_0040cd52_caseD_a;\n      case 0xb:\n        goto switchD_0040cd52_caseD_b;\n      case 0xc:\n        goto switchD_0040cd52_caseD_c;\n      case 0xd:\n        goto switchD_0040c738_caseD_d;\n      case 0x20:\n        goto LAB_0040cd9a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_0040c738_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040cd7a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_0040cd62;\n      case 0x27:\n        goto switchD_0040cbbe_caseD_27;\n      case 0x3f:\n        goto switchD_0040cbbe_caseD_3f;\n      case 0x5c:\n        goto switchD_0040c738_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040cbbe_caseD_7b;\n      }\n      goto LAB_0040c7e2;\n    }\n    goto LAB_0040c9ba;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_0040cd52_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_0040c738_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_0040c898;\n          }\nLAB_0040cada:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040cada;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_0040c898;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_0040cb19:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_0040c898;\n        goto LAB_0040c7a1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040c9ac;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_0040c788;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_0040c648;\n  default:\nswitchD_0040cbbe_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_004113c0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040d4ca;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_0040d607;\n          goto LAB_0040d5f7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040c9ac;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040d4ca;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_0040cb94;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_0040cbd2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_0040cbd2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_0040cbd2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040cbea:\n      param_5 = 2;\n      goto LAB_0040c9ac;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_0040c776;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_0040c776:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040cbea;\n    goto LAB_0040c788;\n  case 0x23:\n  case 0x7e:\nLAB_0040c76d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_0040c776;\n    goto LAB_0040c97b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040cbbe_caseD_25;\n  case 0x27:\nswitchD_0040cbbe_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_0040c788;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_0040c898;\n    }\n    goto LAB_0040c9ac;\n  case 0x3f:\nswitchD_0040cbbe_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_0040c898;\n      }\n      goto LAB_0040c9ac;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_0040c788;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_0040cb19;\n      }\n      goto LAB_0040c9ba;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_0040c788;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_0040c738_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_0040c8b4;\n    }\n    if (local_5c) goto LAB_0040c9ac;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_0040c8b4;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040cbbe_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040c76d;\n    goto LAB_0040c97b;\n  }\nLAB_0040c970:\n  if (!bVar6) {\nLAB_0040c97b:\n    bVar23 = false;\n    goto LAB_0040c788;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x0040c997;\nLAB_0040cdc8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040c9ac:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040c9ba:\n    uVar9 = FUN_0040c5a0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0040d69d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_0040c5a0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0040d69d;\nLAB_0040ce26:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_0040c638;\n  while (__s1[uVar21] != 0) {\nLAB_0040d5f7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_0040d607:\n  bVar23 = false;\nLAB_0040d4ca:\n  if (1 < uVar21) {\nLAB_0040d08e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040c9ac;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040c82d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_0040c8b4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_0040cb94:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040d08e;\n  }\nswitchD_0040cbbe_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_0040c788:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_0040c79f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_0040c7a1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_0040c898;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_0040c898:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_0040c8b4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040c82d;\n    }\n  }\njoined_r0x0040c997:\n  if (local_5c) {\nLAB_0040c9a8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040c9ac;\n  }\nLAB_0040c7e2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040c81b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040c82d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_0040c648;\n}\n\n",
            "funcName": "FUN_0040c5a0"
        },
        {
            "funcStartAddr": "0x40d7d0",
            "funcEndAddr": "0x40d96b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_0040d7d0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0061b418;\n  if (DAT_0061b430 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00410330();\n    }\n    if (PTR_DAT_0061b418 == &DAT_0061b420) {\n      puVar8 = (undefined4 *)FUN_00410140(0);\n      uVar6 = PTR_DAT_0061b428._4_4_;\n      uVar5 = PTR_DAT_0061b428._0_4_;\n      uVar3 = _UNK_0061b424;\n      PTR_DAT_0061b418 = (undefined *)puVar8;\n      *puVar8 = _DAT_0061b420;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00410140(PTR_DAT_0061b418);\n      PTR_DAT_0061b418 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0061b430 * 4,0,(long)((param_1 + 1) - DAT_0061b430) << 4);\n    DAT_0061b430 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_0040c5a0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0061b940) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_004100e0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_0040c5a0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_0040d7d0"
        },
        {
            "funcStartAddr": "0x40d970",
            "funcEndAddr": "0x40d9a4",
            "decompiledFuncCode": "\nvoid FUN_0040d970(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061ba40;\n  }\n  FUN_004102e0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_0040d970"
        },
        {
            "funcStartAddr": "0x40d9b0",
            "funcEndAddr": "0x40d9bf",
            "decompiledFuncCode": "\nundefined4 FUN_0040d9b0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061ba40;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_0040d9b0"
        },
        {
            "funcStartAddr": "0x40d9c0",
            "funcEndAddr": "0x40d9cf",
            "decompiledFuncCode": "\nvoid FUN_0040d9c0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061ba40;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040d9c0"
        },
        {
            "funcStartAddr": "0x40d9d0",
            "funcEndAddr": "0x40da03",
            "decompiledFuncCode": "\nuint FUN_0040d9d0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061ba40;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_0040d9d0"
        },
        {
            "funcStartAddr": "0x40da10",
            "funcEndAddr": "0x40da23",
            "decompiledFuncCode": "\nundefined4 FUN_0040da10(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0061ba40;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_0040da10"
        },
        {
            "funcStartAddr": "0x40da30",
            "funcEndAddr": "0x40da5b",
            "decompiledFuncCode": "\nvoid FUN_0040da30(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0061ba40;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040da30"
        },
        {
            "funcStartAddr": "0x40da60",
            "funcEndAddr": "0x40dad2",
            "decompiledFuncCode": "\nvoid FUN_0040da60(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0061ba40;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_0040c5a0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_0040da60"
        },
        {
            "funcStartAddr": "0x40dae0",
            "funcEndAddr": "0x40dbc1",
            "decompiledFuncCode": "\nundefined8 FUN_0040dae0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0061ba40;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_0040c5a0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_004100e0(lVar3 + 1);\n  FUN_0040c5a0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_0040dae0"
        },
        {
            "funcStartAddr": "0x40dbd0",
            "funcEndAddr": "0x40dbda",
            "decompiledFuncCode": "\nvoid FUN_0040dbd0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0040dae0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_0040dbd0"
        },
        {
            "funcStartAddr": "0x40dbe0",
            "funcEndAddr": "0x40dc75",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040dbe0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0061b418;\n  if (1 < DAT_0061b430) {\n    ppvVar2 = (void **)(PTR_DAT_0061b418 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0061b418 + (ulong)(DAT_0061b430 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0061b940) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0061b420 = 0x100;\n    PTR_DAT_0061b428 = &DAT_0061b940;\n  }\n  if (__ptr_00 != &DAT_0061b420) {\n    free(__ptr_00);\n    PTR_DAT_0061b418 = &DAT_0061b420;\n  }\n  DAT_0061b430 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_0040dbe0"
        },
        {
            "funcStartAddr": "0x40dc80",
            "funcEndAddr": "0x40dc91",
            "decompiledFuncCode": "\nvoid FUN_0040dc80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040d7d0(param_1,param_2,0xffffffffffffffff,&DAT_0061ba40);\n  return;\n}\n\n",
            "funcName": "FUN_0040dc80"
        },
        {
            "funcStartAddr": "0x40dca0",
            "funcEndAddr": "0x40dcaa",
            "decompiledFuncCode": "\nvoid FUN_0040dca0(void)\n\n{\n  FUN_0040d7d0();\n  return;\n}\n\n",
            "funcName": "FUN_0040dca0"
        },
        {
            "funcStartAddr": "0x40dcb0",
            "funcEndAddr": "0x40dcc6",
            "decompiledFuncCode": "\nvoid FUN_0040dcb0(undefined8 param_1)\n\n{\n  FUN_0040d7d0(0,param_1,0xffffffffffffffff,&DAT_0061ba40);\n  return;\n}\n\n",
            "funcName": "FUN_0040dcb0"
        },
        {
            "funcStartAddr": "0x40dcd0",
            "funcEndAddr": "0x40dce2",
            "decompiledFuncCode": "\nvoid FUN_0040dcd0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040d7d0(0,param_1,param_2,&DAT_0061ba40);\n  return;\n}\n\n",
            "funcName": "FUN_0040dcd0"
        },
        {
            "funcStartAddr": "0x40dcf0",
            "funcEndAddr": "0x40dd58",
            "decompiledFuncCode": "\nvoid FUN_0040dcf0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_0040d7d0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040dcf0"
        },
        {
            "funcStartAddr": "0x40dd60",
            "funcEndAddr": "0x40ddc4",
            "decompiledFuncCode": "\nvoid FUN_0040dd60(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_0040d7d0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040dd60"
        },
        {
            "funcStartAddr": "0x40ddd0",
            "funcEndAddr": "0x40dddc",
            "decompiledFuncCode": "\nvoid FUN_0040ddd0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_0040dcf0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040ddd0"
        },
        {
            "funcStartAddr": "0x40dde0",
            "funcEndAddr": "0x40ddef",
            "decompiledFuncCode": "\nvoid FUN_0040dde0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0040dd60(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_0040dde0"
        },
        {
            "funcStartAddr": "0x40ddf0",
            "funcEndAddr": "0x40de60",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040ddf0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0061ba70;\n  local_48 = _DAT_0061ba40;\n  uStack_40 = uRam000000000061ba48;\n  local_38 = _DAT_0061ba50;\n  uStack_30 = uRam000000000061ba58;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0061ba60;\n  uStack_20 = uRam000000000061ba68;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_0040d7d0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_0040ddf0"
        },
        {
            "funcStartAddr": "0x40de60",
            "funcEndAddr": "0x40de6d",
            "decompiledFuncCode": "\nvoid FUN_0040de60(undefined8 param_1,char param_2)\n\n{\n  FUN_0040ddf0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040de60"
        },
        {
            "funcStartAddr": "0x40de70",
            "funcEndAddr": "0x40de81",
            "decompiledFuncCode": "\nvoid FUN_0040de70(undefined8 param_1)\n\n{\n  FUN_0040ddf0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_0040de70"
        },
        {
            "funcStartAddr": "0x40de90",
            "funcEndAddr": "0x40de9a",
            "decompiledFuncCode": "\nvoid FUN_0040de90(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040ddf0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_0040de90"
        },
        {
            "funcStartAddr": "0x40dea0",
            "funcEndAddr": "0x40df0e",
            "decompiledFuncCode": "\nvoid FUN_0040dea0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_0040d7d0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040dea0"
        },
        {
            "funcStartAddr": "0x40df10",
            "funcEndAddr": "0x40df7c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040df10(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000061ba48;\n  local_38 = _DAT_0061ba50;\n  uStack_30 = uRam000000000061ba58;\n  local_28 = _DAT_0061ba60;\n  lStack_20 = uRam000000000061ba68;\n  local_18 = DAT_0061ba70;\n  local_48 = CONCAT44((int)((ulong)_DAT_0061ba40 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_0040d7d0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040df10"
        },
        {
            "funcStartAddr": "0x40df80",
            "funcEndAddr": "0x40df89",
            "decompiledFuncCode": "\nvoid FUN_0040df80(void)\n\n{\n  FUN_0040df10();\n  return;\n}\n\n",
            "funcName": "FUN_0040df80"
        },
        {
            "funcStartAddr": "0x40df90",
            "funcEndAddr": "0x40dfa7",
            "decompiledFuncCode": "\nvoid FUN_0040df90(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0040df10(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_0040df90"
        },
        {
            "funcStartAddr": "0x40dfb0",
            "funcEndAddr": "0x40dfc3",
            "decompiledFuncCode": "\nvoid FUN_0040dfb0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_0040df10(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_0040dfb0"
        },
        {
            "funcStartAddr": "0x40dfd0",
            "funcEndAddr": "0x40dfda",
            "decompiledFuncCode": "\nvoid FUN_0040dfd0(void)\n\n{\n  FUN_0040d7d0();\n  return;\n}\n\n",
            "funcName": "FUN_0040dfd0"
        },
        {
            "funcStartAddr": "0x40dfe0",
            "funcEndAddr": "0x40dff2",
            "decompiledFuncCode": "\nvoid FUN_0040dfe0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040d7d0(0,param_1,param_2,&DAT_0061b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_0040dfe0"
        },
        {
            "funcStartAddr": "0x40e000",
            "funcEndAddr": "0x40e011",
            "decompiledFuncCode": "\nvoid FUN_0040e000(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040d7d0(param_1,param_2,0xffffffffffffffff,&DAT_0061b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_0040e000"
        },
        {
            "funcStartAddr": "0x40e020",
            "funcEndAddr": "0x40e036",
            "decompiledFuncCode": "\nvoid FUN_0040e020(undefined8 param_1)\n\n{\n  FUN_0040d7d0(0,param_1,0xffffffffffffffff,&DAT_0061b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_0040e020"
        },
        {
            "funcStartAddr": "0x40e040",
            "funcEndAddr": "0x40e278",
            "decompiledFuncCode": "\nulong FUN_0040e040(uint param_1,char *param_2,uint param_3,char *param_4,uint param_5)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  ulong uVar4;\n  int *piVar5;\n  size_t sVar6;\n  size_t sVar7;\n  stat local_158;\n  stat local_c8;\n  \n  uVar4 = syscall(0x13c,(ulong)param_1,param_2,(ulong)param_3,param_4,(ulong)param_5);\n  if (-1 < (int)uVar4) {\n    return uVar4 & 0xffffffff;\n  }\n  piVar5 = __errno_location();\n  bVar1 = (*piVar5 - 0x16U & 0xffffffef) != 0 && *piVar5 != 0x5f;\n  if (bVar1) {\n    return uVar4 & 0xffffffff;\n  }\n  if (param_5 != 0) {\n    if ((param_5 & 0xfffffffe) != 0) {\n      *piVar5 = 0x5f;\n      return 0xffffffff;\n    }\n    iVar2 = __fxstatat(1,param_3,param_4,&local_c8,0x100);\n    if ((iVar2 == 0) || (*piVar5 == 0x4b)) {\n      *piVar5 = 0x11;\n      return 0xffffffff;\n    }\n    if (*piVar5 != 2) {\n      return 0xffffffff;\n    }\n    bVar1 = true;\n  }\n  sVar6 = strlen(param_2);\n  sVar7 = strlen(param_4);\n  if (((sVar6 != 0) && (sVar7 != 0)) && ((param_2[sVar6 - 1] == '/' || (param_4[sVar7 - 1] == '/')))\n     ) {\n    iVar2 = __fxstatat(1,param_1,param_2,&local_158,0x100);\n    if (iVar2 != 0) {\n      return 0xffffffff;\n    }\n    if (bVar1) {\n      if ((local_158.st_mode & 0xf000) != 0x4000) {\n        *piVar5 = 2;\n        return 0xffffffff;\n      }\n    }\n    else {\n      iVar2 = __fxstatat(1,param_3,param_4,&local_c8,0x100);\n      if (iVar2 == 0) {\n        if ((local_c8.st_mode & 0xf000) != 0x4000) {\n          *piVar5 = 0x14;\n          return 0xffffffff;\n        }\n        if ((local_158.st_mode & 0xf000) != 0x4000) {\n          *piVar5 = 0x15;\n          return 0xffffffff;\n        }\n      }\n      else if ((*piVar5 != 2) || ((local_158.st_mode & 0xf000) != 0x4000)) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 = renameat(param_1,param_2,param_3,param_4);\n  return (ulong)uVar3;\n}\n\n",
            "funcName": "FUN_0040e040"
        },
        {
            "funcStartAddr": "0x40e290",
            "funcEndAddr": "0x40e2ed",
            "decompiledFuncCode": "\nssize_t FUN_0040e290(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7fffe001) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_0040e290"
        },
        {
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e408",
            "decompiledFuncCode": "\nbool FUN_0040e2f0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *__filename;\n  char *__filename_00;\n  int *piVar3;\n  bool bVar4;\n  stat local_158;\n  stat local_c8;\n  \n  bVar4 = false;\n  __s1 = (void *)FUN_0040ab40();\n  __s2 = (void *)FUN_0040ab40(param_2);\n  __n = FUN_0040aba0(__s1);\n  sVar2 = FUN_0040aba0(__s2);\n  if ((__n == sVar2) && (iVar1 = memcmp(__s1,__s2,__n), iVar1 == 0)) {\n    __filename = (char *)FUN_0040aa60(param_1);\n    __filename_00 = (char *)FUN_0040aa60(param_2);\n    iVar1 = __xstat(1,__filename,&local_158);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar3,&DAT_00415a9d,__filename);\n    }\n    iVar1 = __xstat(1,__filename_00,&local_c8);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar3,&DAT_00415a9d,__filename_00);\n    }\n    bVar4 = local_158.st_ino == local_c8.st_ino && local_158.st_dev == local_c8.st_dev;\n    free(__filename);\n    free(__filename_00);\n  }\n  return bVar4;\n}\n\n",
            "funcName": "FUN_0040e2f0"
        },
        {
            "funcStartAddr": "0x40e420",
            "funcEndAddr": "0x40e436",
            "decompiledFuncCode": "\nulong FUN_0040e420(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(param_2 + 8);\n  bVar3 = uVar1 <= *(ulong *)(param_1 + 8);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(param_1 + 8) != uVar1);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040e420"
        },
        {
            "funcStartAddr": "0x40e440",
            "funcEndAddr": "0x40e44b",
            "decompiledFuncCode": "\nvoid FUN_0040e440(char **param_1,char **param_2)\n\n{\n  strcmp(*param_1,*param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040e440"
        },
        {
            "funcStartAddr": "0x40e450",
            "funcEndAddr": "0x40e7b7",
            "decompiledFuncCode": "\nundefined * FUN_0040e450(DIR *param_1,uint param_2)\n\n{\n  ulong __n;\n  int iVar1;\n  __compar_fn_t __compar;\n  char cVar2;\n  int *piVar3;\n  dirent *pdVar4;\n  size_t sVar5;\n  char *pcVar6;\n  undefined *puVar7;\n  char *pcVar8;\n  undefined *__ptr;\n  char **__ptr_00;\n  char **ppcVar9;\n  char **ppcVar10;\n  ulong uVar11;\n  long lVar12;\n  ulong __nmemb;\n  ulong uVar13;\n  ulong local_68;\n  ulong local_60;\n  ulong local_58;\n  \n  __compar = *(__compar_fn_t *)(&DAT_004169e0 + (ulong)param_2 * 8);\n  if (param_1 == (DIR *)0x0) {\n    puVar7 = (undefined *)0x0;\n  }\n  else {\n    __ptr_00 = (char **)0x0;\n    piVar3 = __errno_location();\n    __ptr = (undefined *)0x0;\n    local_58 = 0;\n    local_68 = 0;\n    __nmemb = 0;\n    uVar13 = 0;\nLAB_0040e4ac:\n    while( true ) {\n      *piVar3 = 0;\n      pdVar4 = readdir(param_1);\n      if (pdVar4 == (dirent *)0x0) break;\n      pcVar6 = pdVar4->d_name;\n      cVar2 = pdVar4->d_name[0];\n      if (cVar2 != '.') goto LAB_0040e4a8;\n      if (pdVar4->d_name[1] == '.') {\n        cVar2 = pdVar4->d_name[2];\n        goto LAB_0040e4a8;\n      }\n      if (pdVar4->d_name[1] != '\\0') goto LAB_0040e4e5;\n    }\n    iVar1 = *piVar3;\n    if (iVar1 == 0) {\n      if (__compar == (__compar_fn_t)0x0) {\n        if (local_68 == uVar13) {\n          __ptr = (undefined *)FUN_00410140(__ptr,local_68 + 1);\n          puVar7 = __ptr + local_68;\n        }\n        else {\n          puVar7 = __ptr + uVar13;\n        }\n      }\n      else {\n        if (__nmemb == 0) {\n          puVar7 = (undefined *)FUN_004100e0(uVar13 + 1);\n          __ptr = puVar7;\n        }\n        else {\n          pcVar6 = (char *)0x0;\n          qsort(__ptr_00,__nmemb,0x10,__compar);\n          __ptr = (undefined *)FUN_004100e0(uVar13 + 1);\n          ppcVar9 = __ptr_00;\n          do {\n            ppcVar10 = ppcVar9 + 2;\n            pcVar8 = stpcpy(__ptr + (long)pcVar6,*ppcVar9);\n            pcVar6 = pcVar8 + (long)(pcVar6 + (1 - (long)(__ptr + (long)pcVar6)));\n            free(*ppcVar9);\n            ppcVar9 = ppcVar10;\n          } while (ppcVar10 != __ptr_00 + __nmemb * 2);\n          puVar7 = __ptr + (long)pcVar6;\n        }\n        free(__ptr_00);\n      }\n      *puVar7 = 0;\n      puVar7 = __ptr;\n    }\n    else {\n      free(__ptr_00);\n      puVar7 = (undefined *)0x0;\n      free(__ptr);\n      *piVar3 = iVar1;\n    }\n  }\n  return puVar7;\nLAB_0040e4a8:\n  if (cVar2 == '\\0') goto LAB_0040e4ac;\nLAB_0040e4e5:\n  sVar5 = strlen(pcVar6);\n  __n = sVar5 + 1;\n  if (__compar != (__compar_fn_t)0x0) {\n    local_60 = __nmemb + 1;\n    if (__nmemb == local_58) {\n      if (__ptr_00 == (char **)0x0) {\n        if (__nmemb == 0) {\n          local_58 = 8;\n          lVar12 = 0x80;\n          local_60 = 1;\n        }\n        else {\n          lVar12 = __nmemb << 4;\n          if ((lVar12 < 0) || (__nmemb >> 0x3c != 0)) goto LAB_0040e788;\n        }\n      }\n      else {\n        if (0x555555555555554 < __nmemb) goto LAB_0040e788;\n        local_58 = (__nmemb >> 1) + local_60;\n        lVar12 = local_58 * 0x10;\n      }\n      __ptr_00 = (char **)FUN_00410140(__ptr_00,lVar12);\n    }\n    pcVar6 = (char *)FUN_00410310(pcVar6);\n    __ptr_00[__nmemb * 2] = pcVar6;\n    (__ptr_00 + __nmemb * 2)[1] = (char *)pdVar4->d_ino;\n    __nmemb = local_60;\n    uVar13 = uVar13 + __n;\n    goto LAB_0040e4ac;\n  }\n  uVar11 = uVar13 + __n;\n  if (local_68 - uVar13 <= __n) {\n    if (CARRY8(uVar13,__n) != false) {\nLAB_0040e788:\n                    /* WARNING: Subroutine does not return */\n      FUN_00410330();\n    }\n    if (__ptr == (undefined *)0x0) {\n      if (uVar11 == 0) {\n        local_68 = 0x80;\n      }\n      else {\n        local_68 = uVar11;\n        if ((long)uVar11 < 0) goto LAB_0040e788;\n      }\n    }\n    else {\n      if (0x5555555555555553 < uVar11) goto LAB_0040e788;\n      local_68 = uVar11 + 1 + (uVar11 >> 1);\n    }\n    __ptr = (undefined *)FUN_00410140(__ptr,local_68);\n  }\n  memcpy(__ptr + uVar13,pcVar6,__n);\n  uVar13 = uVar11;\n  goto LAB_0040e4ac;\n}\n\n",
            "funcName": "FUN_0040e450"
        },
        {
            "funcStartAddr": "0x40e7f0",
            "funcEndAddr": "0x40e84e",
            "decompiledFuncCode": "\nvoid * FUN_0040e7f0(undefined8 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  DIR *__dirp;\n  void *__ptr;\n  int *piVar2;\n  \n  __dirp = (DIR *)FUN_0040a9c0();\n  if (__dirp == (DIR *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)FUN_0040e450(__dirp,param_2);\n  iVar1 = closedir(__dirp);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  free(__ptr);\n  *piVar2 = iVar1;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040e7f0"
        },
        {
            "funcStartAddr": "0x40e860",
            "funcEndAddr": "0x40e8b1",
            "decompiledFuncCode": "\nint FUN_0040e860(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  stat sStack_98;\n  \n  iVar1 = __lxstat(1,param_1,&sStack_98);\n  piVar2 = __errno_location();\n  if ((iVar1 != 0) && (*piVar2 != 0x4b)) {\n    return -(uint)(*piVar2 != 2);\n  }\n  *piVar2 = 0x11;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040e860"
        },
        {
            "funcStartAddr": "0x40e8c0",
            "funcEndAddr": "0x40e8ca",
            "decompiledFuncCode": "\nvoid FUN_0040e8c0(char *param_1)\n\n{\n  mkdir(param_1,0x1c0);\n  return;\n}\n\n",
            "funcName": "FUN_0040e8c0"
        },
        {
            "funcStartAddr": "0x40e8d0",
            "funcEndAddr": "0x40e8e6",
            "decompiledFuncCode": "\nvoid FUN_0040e8d0(char *param_1,uint *param_2)\n\n{\n  open(param_1,*param_2 & 0xffffff3c | 0xc2,0x180);\n  return;\n}\n\n",
            "funcName": "FUN_0040e8d0"
        },
        {
            "funcStartAddr": "0x40e8f0",
            "funcEndAddr": "0x40e90d",
            "decompiledFuncCode": "\nvoid FUN_0040e8f0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\",\"lib/tempname.c\",0x147,\"gen_tempname_len\");\n}\n\n",
            "funcName": "FUN_0040e8f0"
        },
        {
            "funcStartAddr": "0x40e910",
            "funcEndAddr": "0x40ea6d",
            "decompiledFuncCode": "\nint FUN_0040e910(char *param_1,int param_2,undefined8 param_3,code *param_4,ulong param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  char *pcVar9;\n  char *pcVar10;\n  \n  piVar2 = __errno_location();\n  iVar7 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)param_2 + param_5 <= sVar3) {\n    lVar4 = sVar3 - ((long)param_2 + param_5);\n    sVar3 = strspn(param_1 + lVar4,\"X\");\n    if (param_5 <= sVar3) {\n      lVar5 = FUN_00411b80(0,param_5);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      iVar8 = 0x3a2f8;\n      while( true ) {\n        pcVar9 = param_1 + lVar4;\n        if (param_5 != 0) {\n          do {\n            pcVar10 = pcVar9 + 1;\n            lVar6 = FUN_00411bc0(lVar5,0x3d);\n            *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar9 = pcVar10;\n          } while (pcVar10 != param_1 + lVar4 + param_5);\n        }\n        iVar1 = (*param_4)(param_1,param_3);\n        if (-1 < iVar1) break;\n        if (*piVar2 != 0x11) {\n          iVar1 = -1;\n          iVar7 = *piVar2;\n          goto LAB_0040ea25;\n        }\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) {\n          FUN_00411ce0(lVar5);\n          *piVar2 = 0x11;\n          return -1;\n        }\n      }\n      *piVar2 = iVar7;\nLAB_0040ea25:\n      FUN_00411ce0(lVar5);\n      *piVar2 = iVar7;\n      return iVar1;\n    }\n  }\n  *piVar2 = 0x16;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040e910"
        },
        {
            "funcStartAddr": "0x40ea70",
            "funcEndAddr": "0x40eaa0",
            "decompiledFuncCode": "\nulong FUN_0040ea70(char *param_1,undefined8 param_2,undefined4 param_3,code *param_4)\n\n{\n  char *__s;\n  uint uVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  ulong uVar7;\n  int iVar8;\n  undefined8 extraout_RDX;\n  int iVar9;\n  char *pcVar10;\n  char *pcVar11;\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_0040e910(param_1,param_2,local_c,(&PTR_FUN_00416a40)[(ulong)param_4 & 0xffffffff]);\n    return uVar7;\n  }\n  FUN_0040e8f0();\n  iVar9 = (int)param_2;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_0040e910();\n    return uVar7;\n  }\n  FUN_0040e8f0();\n  piVar2 = __errno_location();\n  iVar8 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)iVar9 + 6U <= sVar3) {\n    lVar4 = sVar3 - ((long)iVar9 + 6U);\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_00411b80(0,6);\n      if (lVar5 == 0) {\n        uVar1 = 0xffffffff;\n      }\n      else {\n        iVar9 = 0x3a2f8;\n        pcVar10 = __s;\n        do {\n          do {\n            pcVar11 = pcVar10 + 1;\n            lVar6 = FUN_00411bc0(lVar5,0x3d);\n            *pcVar10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar10 = pcVar11;\n          } while (pcVar11 != param_1 + lVar4 + 6);\n          uVar1 = (*param_4)(param_1,extraout_RDX);\n          if (-1 < (int)uVar1) {\n            *piVar2 = iVar8;\nLAB_0040ea25:\n            FUN_00411ce0(lVar5);\n            *piVar2 = iVar8;\n            goto LAB_0040ea40;\n          }\n          if (*piVar2 != 0x11) {\n            uVar1 = 0xffffffff;\n            iVar8 = *piVar2;\n            goto LAB_0040ea25;\n          }\n          iVar9 = iVar9 + -1;\n          pcVar10 = __s;\n        } while (iVar9 != 0);\n        FUN_00411ce0(lVar5);\n        *piVar2 = 0x11;\n        uVar1 = 0xffffffff;\n      }\n      goto LAB_0040ea40;\n    }\n  }\n  *piVar2 = 0x16;\n  uVar1 = 0xffffffff;\nLAB_0040ea40:\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040ea70"
        },
        {
            "funcStartAddr": "0x40eaa0",
            "funcEndAddr": "0x40eae0",
            "decompiledFuncCode": "\nulong FUN_0040eaa0(char *param_1,undefined8 param_2,undefined4 param_3,code *param_4)\n\n{\n  char *__s;\n  uint uVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  ulong uVar7;\n  int iVar8;\n  undefined8 extraout_RDX;\n  int iVar9;\n  char *pcVar10;\n  char *pcVar11;\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_0040e910(param_1,param_2,local_c,(&PTR_FUN_00416a40)[(ulong)param_4 & 0xffffffff],6)\n    ;\n    return uVar7;\n  }\n  FUN_0040e8f0();\n  piVar2 = __errno_location();\n  iVar8 = *piVar2;\n  sVar3 = strlen(param_1);\n  uVar7 = (long)(int)param_2 + 6;\n  if (uVar7 <= sVar3) {\n    lVar4 = sVar3 - uVar7;\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_00411b80(0,6);\n      if (lVar5 == 0) {\n        uVar1 = 0xffffffff;\n      }\n      else {\n        iVar9 = 0x3a2f8;\n        pcVar10 = __s;\n        do {\n          do {\n            pcVar11 = pcVar10 + 1;\n            lVar6 = FUN_00411bc0(lVar5,0x3d);\n            *pcVar10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar10 = pcVar11;\n          } while (pcVar11 != param_1 + lVar4 + 6);\n          uVar1 = (*param_4)(param_1,extraout_RDX);\n          if (-1 < (int)uVar1) {\n            *piVar2 = iVar8;\nLAB_0040ea25:\n            FUN_00411ce0(lVar5);\n            *piVar2 = iVar8;\n            goto LAB_0040ea40;\n          }\n          if (*piVar2 != 0x11) {\n            uVar1 = 0xffffffff;\n            iVar8 = *piVar2;\n            goto LAB_0040ea25;\n          }\n          iVar9 = iVar9 + -1;\n          pcVar10 = __s;\n        } while (iVar9 != 0);\n        FUN_00411ce0(lVar5);\n        *piVar2 = 0x11;\n        uVar1 = 0xffffffff;\n      }\n      goto LAB_0040ea40;\n    }\n  }\n  *piVar2 = 0x16;\n  uVar1 = 0xffffffff;\nLAB_0040ea40:\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040eaa0"
        },
        {
            "funcStartAddr": "0x40eae0",
            "funcEndAddr": "0x40eaeb",
            "decompiledFuncCode": "\nint FUN_0040eae0(char *param_1,int param_2,undefined8 param_3,code *param_4)\n\n{\n  char *__s;\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  char *pcVar9;\n  char *pcVar10;\n  \n  piVar2 = __errno_location();\n  iVar7 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)param_2 + 6U <= sVar3) {\n    lVar4 = sVar3 - ((long)param_2 + 6U);\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_00411b80(0,6);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      iVar8 = 0x3a2f8;\n      pcVar9 = __s;\n      while( true ) {\n        do {\n          pcVar10 = pcVar9 + 1;\n          lVar6 = FUN_00411bc0(lVar5,0x3d);\n          *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n          pcVar9 = pcVar10;\n        } while (pcVar10 != param_1 + lVar4 + 6);\n        iVar1 = (*param_4)(param_1,param_3);\n        if (-1 < iVar1) break;\n        if (*piVar2 != 0x11) {\n          iVar1 = -1;\n          iVar7 = *piVar2;\n          goto LAB_0040ea25;\n        }\n        iVar8 = iVar8 + -1;\n        pcVar9 = __s;\n        if (iVar8 == 0) {\n          FUN_00411ce0(lVar5);\n          *piVar2 = 0x11;\n          return -1;\n        }\n      }\n      *piVar2 = iVar7;\nLAB_0040ea25:\n      FUN_00411ce0(lVar5);\n      *piVar2 = iVar7;\n      return iVar1;\n    }\n  }\n  *piVar2 = 0x16;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040eae0"
        },
        {
            "funcStartAddr": "0x40eaf0",
            "funcEndAddr": "0x40eb3c",
            "decompiledFuncCode": "\nuint FUN_0040eaf0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00412750();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040eaf0"
        },
        {
            "funcStartAddr": "0x40eb40",
            "funcEndAddr": "0x40eb4c",
            "decompiledFuncCode": "\nulong FUN_0040eb40(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_0040eb40"
        },
        {
            "funcStartAddr": "0x40eb50",
            "funcEndAddr": "0x40eb5a",
            "decompiledFuncCode": "\nulong FUN_0040eb50(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_0040eb50"
        },
        {
            "funcStartAddr": "0x40eb60",
            "funcEndAddr": "0x40f29f",
            "decompiledFuncCode": "\nuint FUN_0040eb60(char *param_1,undefined8 *param_2,long param_3,uint param_4,undefined8 param_5,\n                 undefined8 param_6)\n\n{\n  ulong uVar1;\n  long lVar2;\n  bool bVar3;\n  int iVar4;\n  undefined8 *puVar5;\n  ulong uVar6;\n  int iVar7;\n  ulong uVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  uint uVar12;\n  ulong uVar13;\n  int iVar14;\n  int iVar15;\n  int iVar16;\n  char cVar17;\n  ulong in_stack_fffffffffffffeb8;\n  ulong in_stack_fffffffffffffec0;\n  ulong uVar18;\n  ulong *puVar19;\n  undefined8 local_f8;\n  undefined4 local_f0;\n  undefined local_ec;\n  ulong local_e8;\n  long local_e0;\n  ulong local_d8;\n  ulong local_d0;\n  stat local_c8;\n  \n  uVar1 = param_2[0xb];\n  uVar8 = *(ulong *)(param_3 + 0x58);\n  iVar15 = (int)*(undefined8 *)(param_3 + 0x60);\n  param_4 = param_4 & 1;\n  iVar14 = (int)param_2[0xc];\n  if (param_4 == 0) goto LAB_0040ec50;\n  uVar6 = in_stack_fffffffffffffeb8 & 0xffffffffffffff00 | (ulong)(uVar1 == uVar8);\n  bVar3 = iVar14 == iVar15 && uVar1 == uVar8;\n  uVar18 = in_stack_fffffffffffffec0 & 0xffffffffffffff00 | (ulong)bVar3;\n  if (bVar3) {\n    return 0;\n  }\n  if ((long)uVar1 < (long)(uVar8 - 1)) {\n    return 0xffffffff;\n  }\n  if ((long)uVar8 < (long)(uVar1 - 1)) {\n    return param_4;\n  }\n  if (DAT_0061ba80 == 0) {\n    DAT_0061ba80 = FUN_0040b910(0x10,0,FUN_0040eb40,FUN_0040eb50,free,param_6,uVar6,uVar18);\n    cVar17 = (char)uVar6;\n    if (DAT_0061ba80 != 0) goto LAB_0040ebe1;\nLAB_0040ece4:\n    puVar5 = &local_f8;\n    local_f0 = 2000000000;\n    local_ec = 0;\n    iVar4 = 2000000000;\n  }\n  else {\nLAB_0040ebe1:\n    lVar2 = DAT_0061ba80;\n    cVar17 = (char)uVar6;\n    puVar5 = DAT_0061ba78;\n    if (DAT_0061ba78 == (undefined8 *)0x0) {\n      puVar5 = (undefined8 *)malloc(0x10);\n      DAT_0061ba78 = puVar5;\n      if (puVar5 != (undefined8 *)0x0) {\n        *(undefined4 *)(puVar5 + 1) = 2000000000;\n        *(undefined *)((long)puVar5 + 0xc) = 0;\n        goto LAB_0040ebf1;\n      }\nLAB_0040f190:\n      local_f8 = *param_2;\n      puVar5 = (undefined8 *)FUN_0040b6a0(DAT_0061ba80,&local_f8);\n      if (puVar5 == (undefined8 *)0x0) goto LAB_0040ece4;\n    }\n    else {\nLAB_0040ebf1:\n      *puVar5 = *param_2;\n      puVar5 = (undefined8 *)FUN_0040c0b0(lVar2);\n      if (puVar5 == (undefined8 *)0x0) {\n        if (DAT_0061ba80 == 0) goto LAB_0040ece4;\n        goto LAB_0040f190;\n      }\n      if (DAT_0061ba78 == puVar5) {\n        DAT_0061ba78 = (undefined8 *)0x0;\n      }\n    }\n    iVar4 = *(int *)(puVar5 + 1);\n    if (*(char *)((long)puVar5 + 0xc) != '\\0') {\n      uVar8 = uVar8 & (long)(int)~(uint)(iVar4 == 2000000000);\n      iVar15 = iVar15 - iVar15 % iVar4;\n      goto LAB_0040ec50;\n    }\n  }\n  iVar10 = (int)param_2[10];\n  iVar7 = iVar10 / 10;\n  iVar9 = (int)param_2[0xe] / 10;\n  iVar11 = iVar14 / 10;\n  if (((int)param_2[0xe] % 10 | iVar10 % 10 | iVar14 % 10) == 0) {\n    local_e8 = param_2[9];\n    uVar6 = uVar8;\n    if (iVar4 < 0xb) {\n      *(undefined4 *)(puVar5 + 1) = 10;\n      uVar13 = 10;\n    }\n    else {\n      uVar13 = 10;\n      if ((iVar7 % 10 | iVar9 % 10 | iVar11 % 10) == 0) {\n        iVar16 = 8;\n        do {\n          uVar12 = (int)uVar13 * 10;\n          uVar13 = (ulong)uVar12;\n          iVar7 = iVar7 / 10;\n          iVar9 = iVar9 / 10;\n          iVar11 = iVar11 / 10;\n          if ((iVar4 <= (int)uVar12) || ((iVar7 % 10 | iVar9 % 10 | iVar11 % 10) != 0)) {\n            uVar18 = (ulong)(uVar12 == 2000000000);\n            *(uint *)(puVar5 + 1) = uVar12;\n            uVar6 = (long)(int)~(uint)(uVar12 == 2000000000) & uVar8;\n            goto LAB_0040eef5;\n          }\n          iVar16 = iVar16 + -1;\n        } while (iVar16 != 0);\n        if (((local_e8 | uVar1 | param_2[0xd]) & 1) == 0) {\n          *(undefined4 *)(puVar5 + 1) = 2000000000;\n          uVar13 = 2000000000;\n          uVar18 = 1;\n          uVar6 = uVar8 & 0xfffffffffffffffe;\n        }\n        else {\n          *(undefined4 *)(puVar5 + 1) = 1000000000;\n          uVar13 = 1000000000;\n        }\n      }\n      else {\n        *(undefined4 *)(puVar5 + 1) = 10;\n      }\n    }\nLAB_0040eef5:\n    if ((long)uVar8 < (long)uVar1) {\n      return param_4;\n    }\n    if ((iVar15 <= iVar14) && (cVar17 != '\\0')) {\n      return param_4;\n    }\n    if ((long)uVar1 < (long)uVar6) {\n      return 0xffffffff;\n    }\n    uVar12 = (uint)uVar13;\n    if ((uVar1 == uVar6) && (iVar14 < iVar15 - iVar15 % (int)uVar12)) {\n      return 0xffffffff;\n    }\n    local_e0 = (long)iVar10;\n    local_d8 = uVar18 & 0xff | uVar1;\n    local_d0 = (ulong)((int)(uVar13 / 9) + iVar14);\n    puVar19 = &local_e8;\n    if ((*(uint *)(param_2 + 3) & 0xf000) == 0xa000) {\n      iVar4 = FUN_0040f8b0(param_1,puVar19);\n    }\n    else {\n      iVar4 = FUN_0040f8a0();\n    }\n    if (iVar4 != 0) {\n      return 0xfffffffe;\n    }\n    if ((*(uint *)(param_2 + 3) & 0xf000) == 0xa000) {\n      iVar4 = __lxstat(1,param_1,&local_c8);\n    }\n    else {\n      iVar4 = __xstat(1,param_1,&local_c8);\n    }\n    local_d0 = (ulong)iVar14;\n    if ((local_d0 ^ local_c8.st_mtim.tv_nsec | local_c8.st_mtim.tv_sec ^ uVar1 | (long)iVar4) != 0)\n    {\n      local_d8 = uVar1;\n      if ((*(uint *)(param_2 + 3) & 0xf000) == 0xa000) {\n        FUN_0040f8b0(param_1,puVar19);\n      }\n      else {\n        FUN_0040f8a0();\n      }\n      if (iVar4 != 0) {\n        return 0xfffffffe;\n      }\n    }\n    iVar4 = (int)local_c8.st_mtim.tv_nsec + ((uint)local_c8.st_mtim.tv_sec & 1) * 1000000000;\n    if (iVar4 == (iVar4 / 10) * 10) {\n      if (uVar12 == 10) {\n        param_4 = 10;\n        goto LAB_0040f2c0;\n      }\n      iVar10 = 9;\n      param_4 = 10;\n      do {\n        iVar4 = iVar4 / 10;\n        if (iVar4 != (iVar4 / 10) * 10) break;\n        iVar10 = iVar10 + -1;\n        if (iVar10 == 0) {\n          uVar6 = 0xfffffffffffffffe;\n          param_4 = 2000000000;\n          goto LAB_0040f118;\n        }\n        param_4 = param_4 * 10;\n      } while (param_4 != uVar12);\n      uVar6 = (ulong)(int)~(uint)(param_4 == 2000000000);\n    }\n    else {\nLAB_0040f2c0:\n      uVar6 = 0xffffffffffffffff;\n    }\nLAB_0040f118:\n    uVar8 = uVar8 & uVar6;\n    iVar15 = iVar15 - iVar15 % (int)param_4;\n  }\n  *(uint *)(puVar5 + 1) = param_4;\n  *(undefined *)((long)puVar5 + 0xc) = 1;\nLAB_0040ec50:\n  if ((long)uVar8 <= (long)uVar1) {\n    if (uVar8 != uVar1) {\n      return 1;\n    }\n    if (iVar15 <= iVar14) {\n      return (uint)(iVar15 < iVar14);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_0040eb60"
        },
        {
            "funcStartAddr": "0x40f2d0",
            "funcEndAddr": "0x40f389",
            "decompiledFuncCode": "\nundefined8 FUN_0040f2d0(long param_1,long *param_2)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  long lVar3;\n  \n  puVar1 = (undefined8 *)*param_2;\n  lVar3 = puVar1[3];\n  if (puVar1[1] == 0x3ffffffe) {\n    if (lVar3 == 0x3ffffffe) {\n      return 1;\n    }\n    uVar2 = *(undefined8 *)(param_1 + 0x50);\n    *puVar1 = *(undefined8 *)(param_1 + 0x48);\n    puVar1[1] = uVar2;\n  }\n  else {\n    if (puVar1[1] == 0x3fffffff) {\n      if (lVar3 == 0x3fffffff) {\n        *param_2 = 0;\n        return 0;\n      }\n      FUN_00411500(puVar1);\n      lVar3 = puVar1[3];\n    }\n    if (lVar3 == 0x3ffffffe) {\n      uVar2 = *(undefined8 *)(param_1 + 0x60);\n      puVar1[2] = *(undefined8 *)(param_1 + 0x58);\n      puVar1[3] = uVar2;\n      return 0;\n    }\n  }\n  if (lVar3 != 0x3fffffff) {\n    return 0;\n  }\n  FUN_00411500(puVar1 + 2);\n  return 0;\n}\n\n",
            "funcName": "FUN_0040f2d0"
        },
        {
            "funcStartAddr": "0x40f3a0",
            "funcEndAddr": "0x40f43f",
            "decompiledFuncCode": "\nint FUN_0040f3a0(undefined8 *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  int *piVar4;\n  char cVar5;\n  uint uVar6;\n  \n  uVar1 = param_1[1];\n  if ((uVar1 - 0x3ffffffe < 2) || (uVar1 < 1000000000)) {\n    uVar2 = param_1[3];\n    if ((uVar2 - 0x3ffffffe < 2) || (uVar2 < 1000000000)) {\n      bVar3 = uVar1 - 0x3ffffffe < 2;\n      if (bVar3) {\n        *param_1 = 0;\n      }\n      cVar5 = bVar3 && uVar1 == 0x3ffffffe;\n      uVar6 = (uint)bVar3;\n      if (uVar2 - 0x3ffffffe < 2) {\n        param_1[2] = 0;\n        uVar6 = 1;\n        cVar5 = cVar5 + (uVar2 == 0x3ffffffe);\n      }\n      return (cVar5 == '\\x01') + uVar6;\n    }\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0x16;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040f3a0"
        },
        {
            "funcStartAddr": "0x40f450",
            "funcEndAddr": "0x40f45a",
            "decompiledFuncCode": "\nvoid FUN_0040f450(int param_1,char *param_2,timespec *param_3)\n\n{\n  utimensat(param_1,param_2,param_3,0x100);\n  return;\n}\n\n",
            "funcName": "FUN_0040f450"
        },
        {
            "funcStartAddr": "0x40f460",
            "funcEndAddr": "0x40f868",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nint FUN_0040f460(int param_1,char *param_2,__time_t *param_3)\n\n{\n  bool bVar1;\n  bool bVar2;\n  long lVar3;\n  __time_t _Var4;\n  char cVar5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  utimbuf *__file_times;\n  timeval *__tvp;\n  bool bVar9;\n  timespec *local_120;\n  timespec local_118;\n  __time_t local_108;\n  __time_t _Stack_100;\n  timeval local_f8;\n  __time_t local_e8;\n  long lStack_e0;\n  utimbuf local_d8;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  __suseconds_t _Stack_c0;\n  stat local_b8;\n  \n  if (param_3 == (__time_t *)0x0) {\n    local_120 = (timespec *)0x0;\n    iVar6 = 0;\n  }\n  else {\n    local_118.tv_sec = *param_3;\n    local_118.tv_nsec = param_3[1];\n    local_108 = param_3[2];\n    _Stack_100 = param_3[3];\n    local_120 = &local_118;\n    iVar6 = FUN_0040f3a0();\n    if (iVar6 < 0) {\n      return -1;\n    }\n  }\n  if ((param_1 < 0) && (param_2 == (char *)0x0)) {\n    piVar8 = __errno_location();\n    *piVar8 = 9;\n    return -1;\n  }\n  if (-1 < DAT_0061ba8c) {\n    if (iVar6 == 2) {\n      if (param_1 < 0) {\n        iVar6 = __xstat(1,param_2,&local_b8);\n      }\n      else {\n        iVar6 = __fxstat(1,param_1,&local_b8);\n      }\n      _Var4 = local_b8.st_mtim.tv_sec;\n      lVar3 = local_b8.st_atim.tv_nsec;\n      if (iVar6 != 0) {\n        return -1;\n      }\n      if (local_120->tv_nsec == 0x3ffffffe) {\n        iVar6 = 3;\n        local_120->tv_sec = local_b8.st_atim.tv_sec;\n        local_120->tv_nsec = lVar3;\n      }\n      else {\n        iVar6 = 3;\n        if (local_120[1].tv_nsec == 0x3ffffffe) {\n          local_120[1].tv_nsec = local_b8.st_mtim.tv_nsec;\n          local_120[1].tv_sec = _Var4;\n        }\n      }\n    }\n    if (param_1 < 0) {\n      iVar7 = utimensat(-100,param_2,local_120,0);\n    }\n    else {\n      iVar7 = futimens(param_1,local_120);\n    }\n    if (iVar7 < 1) {\n      if ((iVar7 == 0) || (piVar8 = __errno_location(), *piVar8 != 0x26)) {\n        DAT_0061ba8c = 1;\n        return iVar7;\n      }\n    }\n    else {\n      piVar8 = __errno_location();\n      *piVar8 = 0x26;\n    }\n  }\n  DAT_0061ba8c = 0xffffffff;\n  DAT_0061ba88 = 0xffffffff;\n  if (iVar6 == 0) {\nLAB_0040f560:\n    if (local_120 == (timespec *)0x0) goto LAB_0040f630;\n    local_f8.tv_sec = local_120->tv_sec;\n    __tvp = &local_f8;\n    local_e8 = local_120[1].tv_sec;\n    local_f8.tv_usec = local_120->tv_nsec / 1000;\n    lStack_e0 = local_120[1].tv_nsec / 1000;\n  }\n  else {\n    if (iVar6 != 3) {\n      if (param_1 < 0) {\n        iVar6 = __xstat(1,param_2,&local_b8);\n      }\n      else {\n        iVar6 = __fxstat(1,param_1,&local_b8);\n      }\n      if (iVar6 != 0) {\n        return -1;\n      }\n    }\n    if (local_120 != (timespec *)0x0) {\n      cVar5 = FUN_0040f2d0(&local_b8,&local_120);\n      if (cVar5 != '\\0') {\n        return 0;\n      }\n      goto LAB_0040f560;\n    }\nLAB_0040f630:\n    __tvp = (timeval *)0x0;\n  }\n  if (param_1 < 0) {\n    iVar6 = futimesat(-100,param_2,__tvp);\n    return iVar6;\n  }\n  iVar6 = futimesat(param_1,(char *)0x0,__tvp);\n  if (iVar6 != 0) {\n    if (param_2 != (char *)0x0) {\n      __file_times = (utimbuf *)0x0;\n      if (local_120 != (timespec *)0x0) {\n        local_d8.actime = local_120->tv_sec;\n        local_d8.modtime = local_120[1].tv_sec;\n        __file_times = &local_d8;\n      }\n      iVar6 = utime(param_2,__file_times);\n      return iVar6;\n    }\n    return -1;\n  }\n  if (__tvp == (timeval *)0x0) {\n    return 0;\n  }\n  bVar1 = __tvp->tv_usec < 500000;\n  bVar2 = __tvp[1].tv_usec < 500000;\n  if ((bVar1) && (bVar2)) {\n    return 0;\n  }\n  iVar6 = __fxstat(1,param_1,&local_b8);\n  if (iVar6 != 0) {\n    return 0;\n  }\n  local_d8.actime = __tvp->tv_sec;\n  local_d8.modtime = __tvp->tv_usec;\n  local_c8 = *(undefined4 *)&__tvp[1].tv_sec;\n  uStack_c4 = *(undefined4 *)((long)&__tvp[1].tv_sec + 4);\n  _Stack_c0 = __tvp[1].tv_usec;\n  bVar9 = local_b8.st_mtim.tv_sec - __tvp[1].tv_sec != 1;\n  if (((local_b8.st_atim.tv_sec - __tvp->tv_sec != 1) || (bVar1)) || (local_b8.st_atim.tv_nsec != 0)\n     ) {\n    if (bVar2 || bVar9) {\n      return 0;\n    }\n    if (local_b8.st_mtim.tv_nsec != 0) {\n      return 0;\n    }\n  }\n  else {\n    local_d8.modtime = 0;\n    if ((bVar2 || bVar9) || (local_b8.st_mtim.tv_nsec != 0)) goto LAB_0040f7e7;\n  }\n  _Stack_c0 = 0;\nLAB_0040f7e7:\n  futimesat(param_1,(char *)0x0,(timeval *)&local_d8);\n  return 0;\n}\n\n",
            "funcName": "FUN_0040f460"
        },
        {
            "funcStartAddr": "0x40f8a0",
            "funcEndAddr": "0x40f8b0",
            "decompiledFuncCode": "\nvoid FUN_0040f8a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0040f460(0xffffffff,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040f8a0"
        },
        {
            "funcStartAddr": "0x40f8b0",
            "funcEndAddr": "0x40fad0",
            "decompiledFuncCode": "\nint FUN_0040f8b0(char *param_1,__time_t *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  timespec *__times;\n  timespec *local_d0;\n  timespec local_c8;\n  __time_t local_b8;\n  __time_t _Stack_b0;\n  stat local_a8;\n  \n  if (param_2 == (__time_t *)0x0) {\n    iVar2 = 0;\n    local_d0 = (timespec *)0x0;\n    __times = (timespec *)0x0;\n    if (-1 < DAT_0061ba88) goto LAB_0040f90b;\n  }\n  else {\n    local_c8.tv_sec = *param_2;\n    local_c8.tv_nsec = param_2[1];\n    local_b8 = param_2[2];\n    _Stack_b0 = param_2[3];\n    local_d0 = &local_c8;\n    iVar2 = FUN_0040f3a0();\n    if (iVar2 < 0) {\n      return -1;\n    }\n    if (-1 < DAT_0061ba88) {\n      __times = local_d0;\n      if (iVar2 == 2) {\n        iVar2 = __lxstat(1,param_1,&local_a8);\n        __times = local_d0;\n        if (iVar2 != 0) {\n          return -1;\n        }\n        if (local_d0->tv_nsec == 0x3ffffffe) {\n          iVar2 = 3;\n          local_d0->tv_sec = local_a8.st_atim.tv_sec;\n          __times->tv_nsec = local_a8.st_atim.tv_nsec;\n        }\n        else {\n          iVar2 = 3;\n          if (local_d0[1].tv_nsec == 0x3ffffffe) {\n            local_d0[1].tv_nsec = local_a8.st_mtim.tv_nsec;\n            __times[1].tv_sec = local_a8.st_mtim.tv_sec;\n          }\n        }\n      }\nLAB_0040f90b:\n      iVar3 = utimensat(-100,param_1,__times,0x100);\n      if (iVar3 < 1) {\n        if ((iVar3 == 0) || (piVar4 = __errno_location(), *piVar4 != 0x26)) {\n          DAT_0061ba8c = 1;\n          DAT_0061ba88 = 1;\n          return iVar3;\n        }\n      }\n      else {\n        piVar4 = __errno_location();\n        *piVar4 = 0x26;\n      }\n    }\n    DAT_0061ba88 = 0xffffffff;\n    if (iVar2 != 0) {\n      if ((iVar2 != 3) && (iVar2 = __lxstat(1,param_1,&local_a8), iVar2 != 0)) {\n        return -1;\n      }\n      if ((local_d0 != (timespec *)0x0) &&\n         (cVar1 = FUN_0040f2d0(&local_a8,&local_d0), cVar1 != '\\0')) {\n        return 0;\n      }\n      goto LAB_0040f96a;\n    }\n  }\n  DAT_0061ba88 = 0xffffffff;\n  iVar2 = __lxstat(1,param_1,&local_a8);\n  if (iVar2 != 0) {\n    return -1;\n  }\nLAB_0040f96a:\n  if ((local_a8.st_mode & 0xf000) == 0xa000) {\n    piVar4 = __errno_location();\n    *piVar4 = 0x26;\n    return -1;\n  }\n  iVar2 = FUN_0040f460(0xffffffff,param_1,local_d0);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_0040f8b0"
        },
        {
            "funcStartAddr": "0x40fb00",
            "funcEndAddr": "0x40fea4",
            "decompiledFuncCode": "\nundefined8\nFUN_0040fb00(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00416ad2,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040fd7c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040fd7c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0040fe19;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0040fe19:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040fbfa;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040fbfa:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_0040fb00"
        },
        {
            "funcStartAddr": "0x40fee0",
            "funcEndAddr": "0x40ff00",
            "decompiledFuncCode": "\nvoid FUN_0040fee0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_0040fb00();\n  return;\n}\n\n",
            "funcName": "FUN_0040fee0"
        },
        {
            "funcStartAddr": "0x40ff00",
            "funcEndAddr": "0x40ff59",
            "decompiledFuncCode": "\nvoid FUN_0040ff00(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_0040fb00();\n  return;\n}\n\n",
            "funcName": "FUN_0040ff00"
        },
        {
            "funcStartAddr": "0x40ff60",
            "funcEndAddr": "0x410018",
            "decompiledFuncCode": "\nvoid FUN_0040ff60(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_0040fb00();\n  return;\n}\n\n",
            "funcName": "FUN_0040ff60"
        },
        {
            "funcStartAddr": "0x410020",
            "funcEndAddr": "0x410094",
            "decompiledFuncCode": "\nvoid FUN_00410020(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00410020"
        },
        {
            "funcStartAddr": "0x4100a0",
            "funcEndAddr": "0x4100d1",
            "decompiledFuncCode": "\nulong FUN_004100a0(void)\n\n{\n  __uid_t _Var1;\n  undefined4 extraout_var;\n  \n  if (DAT_0061ba91 != '\\0') {\n    return (ulong)DAT_0061ba90;\n  }\n  _Var1 = geteuid();\n  DAT_0061ba91 = 1;\n  DAT_0061ba90 = _Var1 == 0;\n  return CONCAT44(extraout_var,_Var1) & 0xffffffffffffff00 | (ulong)(_Var1 == 0);\n}\n\n",
            "funcName": "FUN_004100a0"
        },
        {
            "funcStartAddr": "0x4100e0",
            "funcEndAddr": "0x4100fa",
            "decompiledFuncCode": "\nvoid FUN_004100e0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00410330();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004100e0"
        },
        {
            "funcStartAddr": "0x410100",
            "funcEndAddr": "0x410121",
            "decompiledFuncCode": "\nvoid FUN_00410100(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_004100e0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_00410100"
        },
        {
            "funcStartAddr": "0x410130",
            "funcEndAddr": "0x410132",
            "decompiledFuncCode": "\nvoid thunk_FUN_004100e0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00410330();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_410130"
        },
        {
            "funcStartAddr": "0x410140",
            "funcEndAddr": "0x410170",
            "decompiledFuncCode": "\nvoid * FUN_00410140(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00410330();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00410140"
        },
        {
            "funcStartAddr": "0x410180",
            "funcEndAddr": "0x4101a1",
            "decompiledFuncCode": "\nvoid FUN_00410180(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00410140();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_00410180"
        },
        {
            "funcStartAddr": "0x4101b0",
            "funcEndAddr": "0x410228",
            "decompiledFuncCode": "\nvoid FUN_004101b0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0041020b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0041020b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00410330(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00410140(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004101b0"
        },
        {
            "funcStartAddr": "0x410240",
            "funcEndAddr": "0x41028a",
            "decompiledFuncCode": "\nvoid FUN_00410240(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00410140(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0041028a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0041028a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00410330();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00410140(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00410240"
        },
        {
            "funcStartAddr": "0x410290",
            "funcEndAddr": "0x4102a7",
            "decompiledFuncCode": "\nvoid FUN_00410290(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_004100e0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00410290"
        },
        {
            "funcStartAddr": "0x4102b0",
            "funcEndAddr": "0x4102de",
            "decompiledFuncCode": "\nvoid FUN_004102b0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00410330();\n}\n\n",
            "funcName": "FUN_004102b0"
        },
        {
            "funcStartAddr": "0x4102e0",
            "funcEndAddr": "0x410308",
            "decompiledFuncCode": "\nvoid FUN_004102e0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_004100e0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004102e0"
        },
        {
            "funcStartAddr": "0x410310",
            "funcEndAddr": "0x410323",
            "decompiledFuncCode": "\nvoid FUN_00410310(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_004100e0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00410310"
        },
        {
            "funcStartAddr": "0x410330",
            "funcEndAddr": "0x41035c",
            "decompiledFuncCode": "\nvoid FUN_00410330(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_0061b3d0,0,&DAT_00415a9d,uVar1);\n}\n\n",
            "funcName": "FUN_00410330"
        },
        {
            "funcStartAddr": "0x410370",
            "funcEndAddr": "0x4103d8",
            "decompiledFuncCode": "\nbool FUN_00410370(void)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  bool bVar3;\n  char *local_18;\n  size_t local_10;\n  \n  bVar3 = false;\n  local_18 = (char *)0x0;\n  local_10 = 0;\n  _Var2 = __getdelim(&local_18,&local_10,10,stdin);\n  if (0 < _Var2) {\n    if (local_18[_Var2 + -1] == '\\n') {\n      local_18[_Var2 + -1] = '\\0';\n    }\n    iVar1 = rpmatch(local_18);\n    bVar3 = 0 < iVar1;\n  }\n  free(local_18);\n  return bVar3;\n}\n\n",
            "funcName": "FUN_00410370"
        },
        {
            "funcStartAddr": "0x4103e0",
            "funcEndAddr": "0x41050c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_004103e0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0061ba94 < 0) {\n    iVar1 = FUN_004103e0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0061ba94 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0061ba94 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_004103e0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0061ba94 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_004103e0"
        },
        {
            "funcStartAddr": "0x410520",
            "funcEndAddr": "0x41055b",
            "decompiledFuncCode": "\nvoid FUN_00410520(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00410590(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00410520"
        },
        {
            "funcStartAddr": "0x410560",
            "funcEndAddr": "0x410588",
            "decompiledFuncCode": "\nlong FUN_00410560(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00410560"
        },
        {
            "funcStartAddr": "0x410590",
            "funcEndAddr": "0x4105e6",
            "decompiledFuncCode": "\nulong FUN_00410590(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00410590"
        },
        {
            "funcStartAddr": "0x4105f0",
            "funcEndAddr": "0x4106c5",
            "decompiledFuncCode": "\nvoid FUN_004105f0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0041066c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0041066c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0041066c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004105f0"
        },
        {
            "funcStartAddr": "0x4106d0",
            "funcEndAddr": "0x410cce",
            "decompiledFuncCode": "\nint FUN_004106d0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004108f0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00410830;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00410830;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00410830:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00416f51,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004108f0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004106d0"
        },
        {
            "funcStartAddr": "0x410cf0",
            "funcEndAddr": "0x411257",
            "decompiledFuncCode": "\nuint FUN_00410cf0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00410d3a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00410e3d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00410e3d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00410e48:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00410db8;\nLAB_00410e5c:\n    if (*pbVar8 == 0) goto LAB_00410db8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00410d3a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00410e48;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00410e5c;\nLAB_00410db8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004105f0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00410f26:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00416f59;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004105f0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00410f26;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00416f59;\n        goto LAB_00411085;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00411030;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004106d0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00416f5a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00411030:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00416f78;\nLAB_00411085:\n  uVar3 = FUN_004106d0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00410cf0"
        },
        {
            "funcStartAddr": "0x4112c0",
            "funcEndAddr": "0x411316",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004112c0(void)\n\n{\n  DAT_0061baa0 = DAT_0061b43c;\n  _DAT_0061baa4 = DAT_0061b438;\n  FUN_00410cf0();\n  DAT_0061b43c = DAT_0061baa0;\n  DAT_0061bae0 = DAT_0061bab0;\n  _DAT_0061b434 = DAT_0061baa8;\n  return;\n}\n\n",
            "funcName": "FUN_004112c0"
        },
        {
            "funcStartAddr": "0x411320",
            "funcEndAddr": "0x411338",
            "decompiledFuncCode": "\nvoid FUN_00411320(void)\n\n{\n  FUN_004112c0();\n  return;\n}\n\n",
            "funcName": "FUN_00411320"
        },
        {
            "funcStartAddr": "0x411340",
            "funcEndAddr": "0x411353",
            "decompiledFuncCode": "\nvoid FUN_00411340(void)\n\n{\n  FUN_004112c0();\n  return;\n}\n\n",
            "funcName": "FUN_00411340"
        },
        {
            "funcStartAddr": "0x411360",
            "funcEndAddr": "0x411375",
            "decompiledFuncCode": "\nvoid FUN_00411360(void)\n\n{\n  FUN_00410cf0();\n  return;\n}\n\n",
            "funcName": "FUN_00411360"
        },
        {
            "funcStartAddr": "0x411380",
            "funcEndAddr": "0x411396",
            "decompiledFuncCode": "\nvoid FUN_00411380(void)\n\n{\n  FUN_004112c0();\n  return;\n}\n\n",
            "funcName": "FUN_00411380"
        },
        {
            "funcStartAddr": "0x4113a0",
            "funcEndAddr": "0x4113b8",
            "decompiledFuncCode": "\nvoid FUN_004113a0(void)\n\n{\n  FUN_00410cf0();\n  return;\n}\n\n",
            "funcName": "FUN_004113a0"
        },
        {
            "funcStartAddr": "0x4113c0",
            "funcEndAddr": "0x41142f",
            "decompiledFuncCode": "\nsize_t FUN_004113c0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x416f77;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_004113e4;\n  }\n  param_1 = &local_1c;\nLAB_004113e4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00411540(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_004113c0"
        },
        {
            "funcStartAddr": "0x411440",
            "funcEndAddr": "0x411445",
            "decompiledFuncCode": "\nundefined8\nFUN_00411440(undefined8 param_1,undefined8 param_2,undefined4 param_3,undefined4 *param_4)\n\n{\n  *param_4 = param_3;\n  return 0;\n}\n\n",
            "funcName": "FUN_00411440"
        },
        {
            "funcStartAddr": "0x411450",
            "funcEndAddr": "0x411465",
            "decompiledFuncCode": "\nvoid FUN_00411450(char *param_1,int param_2,__mode_t param_3)\n\n{\n  if (param_2 != -1) {\n    fchmod(param_2,param_3);\n    return;\n  }\n  chmod(param_1,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00411450"
        },
        {
            "funcStartAddr": "0x411470",
            "funcEndAddr": "0x411492",
            "decompiledFuncCode": "\nint FUN_00411470(undefined4 *param_1,undefined8 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00411450(param_2,param_3,*param_1);\n  return -(uint)(iVar1 != 0);\n}\n\n",
            "funcName": "FUN_00411470"
        },
        {
            "funcStartAddr": "0x4114a0",
            "funcEndAddr": "0x4114fc",
            "decompiledFuncCode": "\nulong FUN_004114a0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00412760(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004114a0"
        },
        {
            "funcStartAddr": "0x411500",
            "funcEndAddr": "0x41153a",
            "decompiledFuncCode": "\nvoid FUN_00411500(timespec *param_1)\n\n{\n  int iVar1;\n  timeval local_18;\n  \n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_18.tv_sec;\n    param_1->tv_nsec = local_18.tv_usec * 1000;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00411500"
        },
        {
            "funcStartAddr": "0x411540",
            "funcEndAddr": "0x411596",
            "decompiledFuncCode": "\nbool FUN_00411540(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00416f7c;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00411540"
        },
        {
            "funcStartAddr": "0x4115a0",
            "funcEndAddr": "0x4115d2",
            "decompiledFuncCode": "\nulong FUN_004115a0(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_004115a0"
        },
        {
            "funcStartAddr": "0x4115e0",
            "funcEndAddr": "0x411b34",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004115e0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0061bad8 != (char *)0x0) goto LAB_0041161a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00411705:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00411726;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00411705;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00411726:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_004117c0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0041194c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_004117c0;\n              if (uVar4 == 0x23) goto LAB_004119b1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0041195f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00412760(__stream);\n                goto LAB_00411764;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0041194c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0041195f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0041175e;\n    }\n  }\n  DAT_0061bad8 = \"\";\nLAB_0041161a:\n  cVar1 = *DAT_0061bad8;\n  pcVar7 = DAT_0061bad8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00411674:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00411674;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_004119b1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0041195f;\n  goto LAB_004117c0;\nLAB_0041195f:\n  FUN_00412760(__stream);\n  if (local_d0 == 0) {\nLAB_0041175e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00411764:\n  free(__file);\n  DAT_0061bad8 = pcVar7;\n  goto LAB_0041161a;\n}\n\n",
            "funcName": "FUN_004115e0"
        },
        {
            "funcStartAddr": "0x411b50",
            "funcEndAddr": "0x411b73",
            "decompiledFuncCode": "\nvoid FUN_00411b50(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_004100e0(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00411b50"
        },
        {
            "funcStartAddr": "0x411b80",
            "funcEndAddr": "0x411baf",
            "decompiledFuncCode": "\nlong * FUN_00411b80(void)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  lVar1 = FUN_00411da0();\n  plVar2 = (long *)0x0;\n  if (lVar1 != 0) {\n    plVar2 = (long *)FUN_004100e0(0x18);\n    *plVar2 = lVar1;\n    plVar2[2] = 0;\n    plVar2[1] = 0;\n  }\n  return plVar2;\n}\n\n",
            "funcName": "FUN_00411b80"
        },
        {
            "funcStartAddr": "0x411bb0",
            "funcEndAddr": "0x411bb4",
            "decompiledFuncCode": "\nundefined8 FUN_00411bb0(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00411bb0"
        },
        {
            "funcStartAddr": "0x411bc0",
            "funcEndAddr": "0x411cab",
            "decompiledFuncCode": "\nulong FUN_00411bc0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  long lVar7;\n  ulong uVar8;\n  ulong uVar9;\n  byte local_40 [16];\n  \n  uVar1 = param_2 + 1;\n  uVar3 = *param_1;\n  uVar9 = param_1[1];\n  uVar8 = param_1[2];\n  while( true ) {\n    uVar4 = uVar9;\n    if (uVar8 < param_2) {\n      lVar7 = 0;\n      uVar4 = uVar8;\n      do {\n        lVar7 = lVar7 + 1;\n        uVar4 = uVar4 * 0x100 + 0xff;\n      } while (uVar4 < param_2);\n      FUN_004120b0(uVar3,local_40,lVar7);\n      pbVar5 = local_40;\n      do {\n        bVar2 = *pbVar5;\n        pbVar5 = pbVar5 + 1;\n        uVar8 = uVar8 * 0x100 + 0xff;\n        uVar9 = uVar9 * 0x100 + (ulong)bVar2;\n        uVar4 = uVar9;\n      } while (uVar8 < param_2);\n    }\n    if (uVar8 == param_2) break;\n    uVar6 = (uVar8 - param_2) % uVar1;\n    uVar9 = uVar4 % uVar1;\n    if (uVar4 <= uVar8 - uVar6) {\n      param_1[1] = uVar4 / uVar1;\n      param_1[2] = (uVar8 - param_2) / uVar1;\n      return uVar9;\n    }\n    uVar8 = uVar6 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00411bc0"
        },
        {
            "funcStartAddr": "0x411cc0",
            "funcEndAddr": "0x411cde",
            "decompiledFuncCode": "\nvoid FUN_00411cc0(void *param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00411cc0"
        },
        {
            "funcStartAddr": "0x411ce0",
            "funcEndAddr": "0x411d31",
            "decompiledFuncCode": "\nundefined4 FUN_00411ce0(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = FUN_00412210(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00411ce0"
        },
        {
            "funcStartAddr": "0x411d40",
            "funcEndAddr": "0x411d98",
            "decompiledFuncCode": "\nvoid FUN_00411d40(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_0040e020();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n                    /* WARNING: Subroutine does not return */\n    error(DAT_0061b3d0,*piVar2,uVar3,uVar1);\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00411d40"
        },
        {
            "funcStartAddr": "0x411da0",
            "funcEndAddr": "0x41207c",
            "decompiledFuncCode": "\nFILE ** FUN_00411da0(FILE *param_1,ulong param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  FILE *pFVar2;\n  FILE **ppFVar3;\n  FILE **ppFVar4;\n  size_t __n;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  timeval *ptVar8;\n  undefined *puVar9;\n  ulong uVar10;\n  byte bVar11;\n  __uid_t local_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  \n  bVar11 = 0;\n  if (param_2 == 0) {\n    ppFVar3 = (FILE **)FUN_004100e0(0x1038);\n    *ppFVar3 = (FILE *)0x0;\n    ppFVar3[1] = (FILE *)FUN_00411d40;\n    ppFVar3[2] = (FILE *)0x0;\n    return ppFVar3;\n  }\n  if (param_1 != (FILE *)0x0) {\n    pFVar2 = (FILE *)FUN_004127e0(param_1,&DAT_0041703c);\n    if (pFVar2 != (FILE *)0x0) {\n      ppFVar3 = (FILE **)FUN_004100e0(0x1038);\n      *ppFVar3 = pFVar2;\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      ppFVar3[1] = (FILE *)FUN_00411d40;\n      ppFVar3[2] = param_1;\n      setvbuf(pFVar2,(char *)(ppFVar3 + 3),0,__n);\n      return ppFVar3;\n    }\n    return (FILE **)0x0;\n  }\n  ppFVar4 = (FILE **)FUN_004100e0(0x1038);\n  *ppFVar4 = (FILE *)0x0;\n  ppFVar3 = ppFVar4 + 4;\n  ppFVar4[1] = (FILE *)FUN_00411d40;\n  ppFVar4[2] = (FILE *)0x0;\n  ppFVar4[3] = (FILE *)0x0;\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    uVar5 = 0x14;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    *(__uid_t *)(ppFVar4 + 4) = local_48;\n    *(undefined4 *)((long)ppFVar4 + 0x24) = uStack_44;\n    *(undefined4 *)(ppFVar4 + 5) = uStack_40;\n    *(undefined4 *)((long)ppFVar4 + 0x2c) = uStack_3c;\n    local_48 = getpid();\n    *(__uid_t *)(ppFVar4 + 6) = local_48;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    pFVar2 = (FILE *)__read_chk(__fd,ppFVar3,param_2,0x1018);\n    close(__fd);\n    if (0x7ff < (long)pFVar2) goto LAB_00411ea8;\n    if ((long)pFVar2 < 0) {\n      pFVar2 = param_1;\n    }\n    uVar5 = 0x800 - (long)pFVar2;\n    if (0x10 < uVar5) {\n      uVar5 = 0x10;\n    }\n    lVar7 = (long)&pFVar2->_flags + uVar5;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + (long)pFVar2);\n    for (uVar5 = uVar5 & 0xffffffff; uVar5 != 0; uVar5 = uVar5 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < lVar7) goto LAB_00411ea8;\n    uVar10 = 0x800 - lVar7;\n    if (4 < uVar10) {\n      uVar10 = 4;\n    }\n    local_48 = getpid();\n    uVar5 = uVar10 + lVar7;\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + lVar7);\n    for (uVar10 = uVar10 & 0xffffffff; uVar10 != 0; uVar10 = uVar10 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < uVar5) goto LAB_00411ea8;\n  }\n  uVar10 = 0x800 - uVar5;\n  if (4 < uVar10) {\n    uVar10 = 4;\n  }\n  local_48 = getppid();\n  if ((uint)uVar10 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)ppFVar3 + uVar6 + uVar5) = *(undefined *)((long)&local_48 + uVar6);\n    } while (uVar1 < (uint)uVar10);\n  }\n  uVar10 = uVar10 + uVar5;\n  if (uVar10 < 0x800) {\n    uVar5 = 0x800 - uVar10;\n    if (4 < uVar5) {\n      uVar5 = 4;\n    }\n    local_48 = getuid();\n    if ((uint)uVar5 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n      } while (uVar1 < (uint)uVar5);\n    }\n    uVar10 = uVar10 + uVar5;\n    if (uVar10 < 0x800) {\n      local_48 = getgid();\n      uVar5 = 0x800 - uVar10;\n      if (4 < uVar5) {\n        uVar5 = 4;\n      }\n      if ((uint)uVar5 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n        } while (uVar1 < (uint)uVar5);\n      }\n    }\n  }\nLAB_00411ea8:\n  FUN_00412510(ppFVar3);\n  return ppFVar4;\n}\n\n",
            "funcName": "FUN_00411da0"
        },
        {
            "funcStartAddr": "0x412090",
            "funcEndAddr": "0x412095",
            "decompiledFuncCode": "\nvoid FUN_00412090(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00412090"
        },
        {
            "funcStartAddr": "0x4120a0",
            "funcEndAddr": "0x4120a5",
            "decompiledFuncCode": "\nvoid FUN_004120a0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004120a0"
        },
        {
            "funcStartAddr": "0x4120b0",
            "funcEndAddr": "0x4121f2",
            "decompiledFuncCode": "\nvoid FUN_004120b0(FILE **param_1,void *param_2,FILE *param_3)\n\n{\n  FILE **ppFVar1;\n  int *piVar2;\n  size_t sVar3;\n  int iVar4;\n  void *__dest;\n  FILE **__src;\n  FILE *pFVar5;\n  \n  pFVar5 = *param_1;\n  if (pFVar5 != (FILE *)0x0) {\n    piVar2 = __errno_location();\n    while( true ) {\n      sVar3 = fread_unlocked(param_2,1,(size_t)param_3,pFVar5);\n      iVar4 = *piVar2;\n      param_2 = (void *)((long)param_2 + sVar3);\n      param_3 = (FILE *)((long)param_3 - sVar3);\n      if (param_3 == (FILE *)0x0) break;\n      pFVar5 = param_1[2];\n      if ((*(byte *)&(*param_1)->_flags & 0x20) == 0) {\n        iVar4 = 0;\n      }\n      *piVar2 = iVar4;\n      (*(code *)param_1[1])(pFVar5);\n      pFVar5 = *param_1;\n    }\n    return;\n  }\n  pFVar5 = param_1[3];\n  __src = param_1 + 0x107;\n  ppFVar1 = param_1 + 4;\n  __dest = param_2;\n  if (param_3 <= pFVar5) {\n    __src = (FILE **)((long)__src + (0x800 - (long)pFVar5));\n    goto LAB_004121c5;\n  }\n  do {\n    param_2 = (void *)((long)__dest + (long)pFVar5);\n    param_3 = (FILE *)((long)param_3 - (long)pFVar5);\n    memcpy(__dest,(void *)((0x800 - (long)pFVar5) + (long)__src),(size_t)pFVar5);\n    if (((ulong)param_2 & 7) == 0) goto LAB_004121ab;\n    pFVar5 = (FILE *)0x800;\n    FUN_00412260(ppFVar1,__src);\n    __dest = param_2;\n  } while ((FILE *)0x800 < param_3);\n  goto LAB_004121bf;\nLAB_004121ab:\n  while ((FILE *)0x7ff < param_3) {\n    FUN_00412260(ppFVar1,param_2);\n    param_3 = (FILE *)&param_3[-10]._fileno;\n    param_2 = (void *)((long)param_2 + 0x800);\n    if (param_3 == (FILE *)0x0) {\n      param_1[3] = (FILE *)0x0;\n      return;\n    }\n  }\n  FUN_00412260(ppFVar1,__src);\nLAB_004121bf:\n  pFVar5 = (FILE *)0x800;\nLAB_004121c5:\n  memcpy(param_2,__src,(size_t)param_3);\n  param_1[3] = (FILE *)((long)pFVar5 - (long)param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004120b0"
        },
        {
            "funcStartAddr": "0x412210",
            "funcEndAddr": "0x412251",
            "decompiledFuncCode": "\nundefined8 FUN_00412210(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = FUN_00412760(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00412210"
        },
        {
            "funcStartAddr": "0x412260",
            "funcEndAddr": "0x412505",
            "decompiledFuncCode": "\nvoid FUN_00412260(long *param_1,long *param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long lVar6;\n  \n  lVar6 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar6 + 1;\n  lVar6 = param_1[0x101] + lVar6 + 1;\n  plVar1 = param_1;\n  plVar5 = param_2;\n  do {\n    lVar4 = *plVar1;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar1[0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar1 = lVar6;\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8)) + lVar4;\n    *plVar5 = lVar4;\n    lVar6 = plVar1[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar1[0x81];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar1[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[1] = lVar6;\n    lVar4 = plVar1[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar1[0x82];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar1[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar5[2] = lVar4;\n    lVar6 = plVar1[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar1[0x83];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2 = plVar1 + 4;\n    plVar1[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[3] = lVar6;\n    plVar1 = plVar2;\n    plVar5 = plVar5 + 4;\n  } while (plVar2 != param_1 + 0x80);\n  plVar1 = param_2 + 0x80;\n  do {\n    lVar4 = *plVar2;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar2[-0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar2 = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    *plVar1 = lVar4;\n    lVar6 = plVar2[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar2[-0x7f];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[1] = lVar6;\n    lVar4 = plVar2[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar2[-0x7e];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar2[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar1[2] = lVar4;\n    lVar6 = plVar2[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar2[-0x7d];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar5 = plVar2 + 4;\n    plVar2[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[3] = lVar6;\n    plVar2 = plVar5;\n    plVar1 = plVar1 + 4;\n  } while (plVar5 != param_1 + 0x100);\n  param_1[0x100] = uVar3;\n  param_1[0x101] = lVar6;\n  return;\n}\n\n",
            "funcName": "FUN_00412260"
        },
        {
            "funcStartAddr": "0x412510",
            "funcEndAddr": "0x412744",
            "decompiledFuncCode": "\nvoid FUN_00412510(ulong *param_1)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong *puVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  long lVar9;\n  ulong uVar10;\n  ulong uVar11;\n  long lVar12;\n  ulong uVar13;\n  ulong uVar14;\n  \n  uVar3 = 0x98f5704f6c44c0ab;\n  uVar7 = 0x82f053db8355e0ce;\n  uVar13 = 0xb29b2e824a595524;\n  uVar14 = 0xae985bf2cbfc89ed;\n  uVar11 = 0x8c0ea5053d4712a0;\n  uVar10 = 0xb9f8b322c73ac862;\n  uVar8 = 0x647c4677a2884b7c;\n  uVar5 = 0x48fe4a0fa5a09315;\n  puVar1 = param_1;\n  do {\n    lVar9 = uVar8 + (*puVar1 - (uVar7 + puVar1[4]));\n    uVar6 = uVar5 + puVar1[5] ^ uVar3 + puVar1[7] >> 9;\n    uVar10 = uVar10 + (puVar1[1] - uVar6);\n    uVar5 = uVar14 + puVar1[6] ^ lVar9 * 0x200;\n    lVar12 = uVar11 + (puVar1[2] - uVar5);\n    uVar3 = uVar3 + puVar1[7] + lVar9 ^ uVar10 >> 0x17;\n    uVar13 = uVar13 + (puVar1[3] - uVar3);\n    uVar8 = lVar9 + uVar10 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar1[4]) - uVar8;\n    *puVar1 = uVar8;\n    uVar10 = uVar10 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar1[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar5 - uVar11;\n    puVar1[2] = uVar11;\n    puVar2 = puVar1 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar1[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar1[5] = uVar5;\n    puVar1[4] = uVar7;\n    puVar1[6] = uVar14;\n    puVar1[7] = uVar3;\n    puVar1 = puVar2;\n    puVar4 = param_1;\n  } while (param_1 + 0x100 != puVar2);\n  do {\n    lVar9 = (uVar8 + *puVar4) - (uVar7 + puVar4[4]);\n    uVar6 = uVar5 + puVar4[5] ^ uVar3 + puVar4[7] >> 9;\n    uVar5 = (uVar10 + puVar4[1]) - uVar6;\n    uVar14 = uVar14 + puVar4[6] ^ lVar9 * 0x200;\n    lVar12 = (uVar11 + puVar4[2]) - uVar14;\n    uVar3 = uVar3 + puVar4[7] + lVar9 ^ uVar5 >> 0x17;\n    uVar13 = (uVar13 + puVar4[3]) - uVar3;\n    uVar8 = lVar9 + uVar5 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar4[4]) - uVar8;\n    *puVar4 = uVar8;\n    uVar10 = uVar5 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar4[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar14 - uVar11;\n    puVar4[2] = uVar11;\n    puVar1 = puVar4 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar4[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar4[5] = uVar5;\n    puVar4[4] = uVar7;\n    puVar4[6] = uVar14;\n    puVar4[7] = uVar3;\n    puVar4 = puVar1;\n  } while (param_1 + 0x100 != puVar1);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00412510"
        },
        {
            "funcStartAddr": "0x412750",
            "funcEndAddr": "0x41275e",
            "decompiledFuncCode": "\nvoid FUN_00412750(undefined8 param_1)\n\n{\n  FUN_004103e0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00412750"
        },
        {
            "funcStartAddr": "0x412760",
            "funcEndAddr": "0x4127d8",
            "decompiledFuncCode": "\nint FUN_00412760(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_004127c7;\n    }\n    iVar1 = FUN_00410520(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_004127c7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00412760"
        },
        {
            "funcStartAddr": "0x4127e0",
            "funcEndAddr": "0x412869",
            "decompiledFuncCode": "\nFILE * FUN_004127e0(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00412750(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_00412760(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_00412760(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_004127e0"
        },
        {
            "funcStartAddr": "0x412880",
            "funcEndAddr": "0x4128dd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004128b3) */\n/* WARNING: Removing unreachable block (ram,0x004128b8) */\n\nvoid FUN_00412880(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00412880"
        },
        {
            "funcStartAddr": "0x4128e0",
            "funcEndAddr": "0x4128e1",
            "decompiledFuncCode": "\nvoid FUN_004128e0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004128e0"
        },
        {
            "funcStartAddr": "0x4128f0",
            "funcEndAddr": "0x412908",
            "decompiledFuncCode": "\nvoid FUN_004128f0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0061b3a8);\n  return;\n}\n\n",
            "funcName": "FUN_004128f0"
        },
        {
            "funcStartAddr": "0x412908",
            "funcEndAddr": "0x412928",
            "decompiledFuncCode": "\nundefined8 FUN_00412908(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0061ae30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00412908"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cp.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}