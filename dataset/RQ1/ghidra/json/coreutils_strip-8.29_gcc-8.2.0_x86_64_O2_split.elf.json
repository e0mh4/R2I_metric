{
    "funcCount": 112,
    "funcInfo": [
        {
            "funcStartAddr": "0x401e85",
            "funcEndAddr": "0x401e8a",
            "decompiledFuncCode": "\nvoid FUN_00401e85(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e85"
        },
        {
            "funcStartAddr": "0x401e8a",
            "funcEndAddr": "0x401e8f",
            "decompiledFuncCode": "\nvoid FUN_00401e8a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e8a"
        },
        {
            "funcStartAddr": "0x401e8f",
            "funcEndAddr": "0x401e94",
            "decompiledFuncCode": "\nvoid FUN_00401e8f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e8f"
        },
        {
            "funcStartAddr": "0x401e94",
            "funcEndAddr": "0x401e99",
            "decompiledFuncCode": "\nvoid FUN_00401e94(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e94"
        },
        {
            "funcStartAddr": "0x401ea0",
            "funcEndAddr": "0x403b1b",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_00401ea0(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte bVar3;\n  byte bVar4;\n  bool bVar5;\n  int iVar6;\n  uint uVar7;\n  byte *pbVar8;\n  size_t sVar9;\n  ushort **ppuVar10;\n  byte *pbVar11;\n  __off_t _Var12;\n  void *pvVar13;\n  long lVar14;\n  size_t sVar15;\n  long lVar16;\n  __sighandler_t p_Var17;\n  undefined8 uVar18;\n  undefined8 uVar19;\n  int *piVar20;\n  ulong uVar21;\n  undefined8 *puVar22;\n  __sighandler_t p_Var23;\n  char *pcVar24;\n  __sighandler_t p_Var25;\n  ulong in_R10;\n  __sighandler_t in_R11;\n  uint uVar26;\n  uint uVar27;\n  __sighandler_t p_Var28;\n  int iVar29;\n  __sighandler_t p_Var30;\n  __sighandler_t p_Var31;\n  byte *pbVar32;\n  ulong uVar33;\n  bool bVar34;\n  bool bVar35;\n  bool bVar36;\n  __sighandler_t local_140;\n  __sighandler_t local_138;\n  __sighandler_t local_130;\n  __sighandler_t local_128;\n  __sighandler_t local_120;\n  undefined8 *local_108;\n  __sighandler_t local_100;\n  __sighandler_t local_f8;\n  __sighandler_t local_e8;\n  byte local_d9;\n  sigaction local_d8;\n  \n  bVar3 = 0;\n  p_Var30 = (__sighandler_t)0x0;\n  p_Var28 = (__sighandler_t)0x1;\n  iVar6 = getpagesize();\n  local_138 = (__sighandler_t)(long)iVar6;\n  FUN_004053a0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00409900(FUN_004050e0);\n  DAT_0060e5f0 = \"-\";\n  DAT_0060e620 = \"x\";\n  local_140 = (__sighandler_t)0x0;\n  local_100 = (__sighandler_t)0x0;\n  local_120 = (__sighandler_t)0x0;\n  uVar27 = 0;\n  iVar6 = DAT_0060e290;\n  pbVar32 = DAT_0060e5f8;\n  p_Var17 = local_140;\nLAB_00401f40:\n  local_140 = p_Var17;\n  DAT_0060e5f8 = pbVar32;\n  DAT_0060e290 = iVar6;\n  uVar26 = DAT_0060e31c;\n  if (DAT_0060e31c == 0) {\n    uVar26 = 1;\n  }\n  p_Var31 = (__sighandler_t)(ulong)uVar26;\n  uVar7 = FUN_00408cd0(param_1,param_2,\"0123456789C:a:b:del:n:t:ux\",&PTR_s_bytes_0040aaa0,0);\n  pbVar11 = DAT_0060e908;\n  iVar29 = (int)p_Var30;\n  if (uVar7 == 0xffffffff) {\n    if ((local_100 != (__sighandler_t)0x0) && (DAT_0060e760 != (byte *)0x0)) {\n      pcVar24 = \"--filter does not process a chunk extracted to stdout\";\n      goto LAB_00403780;\n    }\n    if (iVar29 == 0) {\n      local_140 = (__sighandler_t)0x3e8;\n      p_Var30 = (__sighandler_t)0x3;\n    }\n    else if (local_140 == (__sighandler_t)0x0) {\n      uVar18 = FUN_00406fc0(&DAT_00409bea);\n      uVar19 = dcgettext(0,\"invalid number of lines\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,\"%s: %s\",uVar19,uVar18);\n    }\n    if (DAT_0060e290 < 0) {\n      DAT_0060e290 = 10;\n    }\n    uVar27 = (int)p_Var30 - 5;\n    p_Var28 = local_140;\n    if (DAT_0060e600 == (byte *)0x0) {\n      if (uVar27 < 3) goto LAB_0040277e;\n    }\n    else {\n      DAT_0060e2a0 = 0;\n      if (uVar27 < 3) {\n        iVar6 = FUN_00407a20(DAT_0060e600,0,10,&local_d8,\"\");\n        if (((iVar6 == 0) &&\n            (local_d8.__sigaction_handler.sa_handler <= (__sighandler_t)~(ulong)local_140)) &&\n           (local_d8.__sigaction_handler.sa_handler < local_140)) {\n          p_Var28 = local_d8.__sigaction_handler.sa_handler + (long)local_140;\n        }\nLAB_0040277e:\n        uVar21 = 0xffffffffffffffff;\n        pcVar24 = PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298;\n        goto code_r0x0040278d;\n      }\n    }\n    uVar21 = 0;\n    if (DAT_0060e608 != 0) goto LAB_004027f4;\n    goto LAB_0040253e;\n  }\n  iVar6 = DAT_0060e290;\n  pbVar32 = DAT_0060e5f8;\n  p_Var17 = local_140;\n  if (uVar7 == 0x65) {\n    DAT_0060e541 = '\\x01';\n    goto LAB_00401f40;\n  }\n  if ((int)uVar7 < 0x66) {\n    if ((int)uVar7 < 0x3a) {\n      if ((int)uVar7 < 0x30) {\n        if (uVar7 == 0xffffff7d) {\n          FUN_00407550(stdout,\"split\",\"GNU coreutils\",PTR_DAT_0060e2a8,\"Torbjorn Granlund\",\n                       \"Richard M. Stallman\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\n        if (uVar7 != 0xffffff7e) goto LAB_00403795;\n        FUN_00404cf0(0);\n      }\n      iVar6 = DAT_0060e290;\n      pbVar32 = DAT_0060e5f8;\n      if (iVar29 == 0) {\nLAB_00402301:\n        p_Var30 = (__sighandler_t)0x4;\n        uVar27 = uVar26;\n        p_Var17 = (__sighandler_t)(long)(int)(uVar7 - 0x30);\n      }\n      else {\n        if (iVar29 != 4) goto LAB_0040384f;\n        if ((uVar27 != 0) && (uVar27 != uVar26)) goto LAB_00402301;\n        if (((__sighandler_t)0x1999999999999999 < local_140) ||\n           (p_Var17 = (__sighandler_t)((long)local_140 * 10 + (long)(int)(uVar7 - 0x30)),\n           uVar27 = uVar26, p_Var17 < local_140)) {\n          uVar18 = FUN_00405350(local_140,&local_d8);\n          uVar19 = dcgettext(0,\"line count option -%s%c... is too large\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar19,uVar18,uVar7);\n        }\n      }\n      goto LAB_00401f40;\n    }\n    if (uVar7 == 0x61) {\n      uVar18 = dcgettext(0,\"invalid suffix length\",5);\n      DAT_0060e608 = FUN_004079f0(DAT_0060e908,0,0x1fffffffffffffff,\"\",uVar18,0);\n      iVar6 = DAT_0060e290;\n      pbVar32 = DAT_0060e5f8;\n      goto LAB_00401f40;\n    }\n    if ((int)uVar7 < 0x62) {\n      if (uVar7 == 0x43) {\n        if (iVar29 != 0) goto LAB_0040384f;\n        p_Var30 = (__sighandler_t)0x2;\n        uVar18 = dcgettext(0,\"invalid number of bytes\",5);\n        p_Var17 = (__sighandler_t)\n                  FUN_004079f0(DAT_0060e908,1,0x7fffffffffffffff,\"bEGKkMmPTYZ0\",uVar18,0);\n        iVar6 = DAT_0060e290;\n        pbVar32 = DAT_0060e5f8;\n        goto LAB_00401f40;\n      }\n    }\n    else {\n      if (uVar7 == 0x62) {\n        if (iVar29 != 0) {\nLAB_0040384f:\n          pcVar24 = \"cannot split in more than one way\";\n          goto LAB_00403780;\n        }\n        p_Var30 = (__sighandler_t)0x1;\n        uVar18 = dcgettext(0,\"invalid number of bytes\",5);\n        p_Var17 = (__sighandler_t)\n                  FUN_004079f0(DAT_0060e908,1,0x7fffffffffffffff,\"bEGKkMmPTYZ0\",uVar18,0);\n        iVar6 = DAT_0060e290;\n        pbVar32 = DAT_0060e5f8;\n        goto LAB_00401f40;\n      }\n      if (uVar7 == 100) {\n        pcVar24 = \"0123456789\";\n        goto LAB_0040219e;\n      }\n    }\n  }\n  else {\n    if (uVar7 == 0x78) {\n      pcVar24 = \"0123456789abcdef\";\nLAB_0040219e:\n      local_130 = (__sighandler_t)((ulong)local_130 & 0xffffffff00000000 | (ulong)uVar7);\n      PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298 = pcVar24;\n      if (DAT_0060e908 != (byte *)0x0) {\n        uVar21 = 0xffffffffffffffff;\n        pbVar32 = DAT_0060e908;\n        do {\n          if (uVar21 == 0) break;\n          uVar21 = uVar21 - 1;\n          bVar4 = *pbVar32;\n          pbVar32 = pbVar32 + (ulong)bVar3 * -2 + 1;\n        } while (bVar4 != 0);\n        sVar9 = strspn((char *)DAT_0060e908,pcVar24);\n        if (~uVar21 - 1 != sVar9) {\n          uVar18 = FUN_00406fc0(pbVar11);\n          pcVar24 = \"%s: invalid start value for hexadecimal suffix\";\n          if (uVar7 != 100) goto LAB_00403883;\n          uVar19 = dcgettext(0,\"%s: invalid start value for numerical suffix\",5);\n          goto LAB_0040388a;\n        }\n        iVar6 = DAT_0060e290;\n        pbVar32 = DAT_0060e5f8;\n        DAT_0060e600 = pbVar11;\n        if (*pbVar11 == 0x30) {\n          bVar4 = pbVar11[1];\n          pbVar11 = pbVar11 + 1;\n          while ((bVar4 != 0 && (DAT_0060e600 = pbVar11, DAT_0060e908 = pbVar11, *pbVar11 == 0x30)))\n          {\n            bVar4 = pbVar11[1];\n            pbVar11 = pbVar11 + 1;\n          }\n        }\n      }\n      goto LAB_00401f40;\n    }\n    if ((int)uVar7 < 0x79) {\n      if (uVar7 == 0x6e) {\n        if (iVar29 != 0) goto LAB_0040384f;\n        ppuVar10 = __ctype_b_loc();\n        pbVar32 = DAT_0060e908;\n        do {\n          DAT_0060e908 = pbVar32;\n          pbVar11 = DAT_0060e908;\n          bVar34 = false;\n          bVar35 = (*(byte *)((long)*ppuVar10 + (ulong)*DAT_0060e908 * 2 + 1) & 0x20) == 0;\n          pbVar32 = DAT_0060e908 + 1;\n        } while (!bVar35);\n        lVar14 = 2;\n        pbVar32 = DAT_0060e908;\n        pbVar8 = &DAT_00409b9e;\n        do {\n          if (lVar14 == 0) break;\n          lVar14 = lVar14 + -1;\n          bVar34 = *pbVar32 < *pbVar8;\n          bVar35 = *pbVar32 == *pbVar8;\n          pbVar32 = pbVar32 + (ulong)bVar3 * -2 + 1;\n          pbVar8 = pbVar8 + (ulong)bVar3 * -2 + 1;\n        } while (bVar35);\n        if ((!bVar34 && !bVar35) == bVar34) {\n          DAT_0060e908 = DAT_0060e908 + 2;\n          p_Var30 = (__sighandler_t)0x7;\n        }\n        else {\n          p_Var30 = (__sighandler_t)0x5;\n          iVar6 = strncmp((char *)DAT_0060e908,\"l/\",2);\n          if (iVar6 == 0) {\n            DAT_0060e908 = pbVar11 + 2;\n            p_Var30 = (__sighandler_t)0x6;\n          }\n        }\n        pbVar11 = (byte *)strchr((char *)DAT_0060e908,0x2f);\n        if (pbVar11 == (byte *)0x0) {\n          uVar18 = dcgettext(0,\"invalid number of chunks\",5);\n          p_Var17 = (__sighandler_t)FUN_004079f0(DAT_0060e908,1,0xffffffffffffffff,\"\",uVar18,0);\n          iVar6 = DAT_0060e290;\n          pbVar32 = DAT_0060e5f8;\n        }\n        else {\n          uVar18 = dcgettext(0,\"invalid number of chunks\",5);\n          p_Var17 = (__sighandler_t)FUN_004079f0(pbVar11 + 1,1,0xffffffffffffffff,\"\",uVar18,0);\n          iVar6 = DAT_0060e290;\n          pbVar32 = DAT_0060e5f8;\n          if (pbVar11 != DAT_0060e908) {\n            *pbVar11 = 0;\n            uVar18 = dcgettext(0,\"invalid chunk number\",5);\n            local_100 = (__sighandler_t)FUN_004079f0(DAT_0060e908,1,p_Var17,\"\",uVar18,0);\n            iVar6 = DAT_0060e290;\n            pbVar32 = DAT_0060e5f8;\n          }\n        }\n        goto LAB_00401f40;\n      }\n      if ((int)uVar7 < 0x6f) {\n        if (uVar7 != 0x6c) goto LAB_00403795;\n        if (iVar29 != 0) goto LAB_0040384f;\n        p_Var30 = (__sighandler_t)0x3;\n        uVar18 = dcgettext(0,\"invalid number of lines\",5);\n        p_Var17 = (__sighandler_t)FUN_004079f0(DAT_0060e908,1,0xffffffffffffffff,\"\",uVar18,0);\n        iVar6 = DAT_0060e290;\n        pbVar32 = DAT_0060e5f8;\n        goto LAB_00401f40;\n      }\n      if (uVar7 == 0x74) {\n        iVar6 = (int)(char)*DAT_0060e908;\n        if (*DAT_0060e908 == 0) {\n          uVar18 = dcgettext(0,\"empty record separator\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar18);\n        }\n        if (DAT_0060e908[1] != 0) {\n          iVar6 = strcmp((char *)DAT_0060e908,\"\\\\0\");\n          if (iVar6 != 0) {\n            uVar18 = FUN_00406fc0(pbVar11);\n            uVar19 = dcgettext(0,\"multi-character separator %s\",5);\n                    /* WARNING: Subroutine does not return */\n            error(1,0,uVar19,uVar18);\n          }\n          iVar6 = 0;\n        }\n        pbVar32 = DAT_0060e5f8;\n        if ((-1 < DAT_0060e290) && (DAT_0060e290 != iVar6)) {\n          uVar18 = dcgettext(0,\"multiple separator characters specified\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar18);\n        }\n        goto LAB_00401f40;\n      }\n      if (uVar7 == 0x75) {\n        DAT_0060e540 = '\\x01';\n        goto LAB_00401f40;\n      }\n    }\n    else {\n      if (uVar7 == 0x81) {\n        DAT_0060e760 = DAT_0060e908;\n        goto LAB_00401f40;\n      }\n      if ((int)uVar7 < 0x82) {\n        if (uVar7 == 0x80) {\n          DAT_0060e542 = 1;\n          goto LAB_00401f40;\n        }\n      }\n      else {\n        if (uVar7 == 0x82) {\n          uVar18 = dcgettext(0,\"invalid IO block size\",5);\n          local_120 = (__sighandler_t)\n                      FUN_004079f0(DAT_0060e908,1,~(ulong)local_138,\"bEGKkMmPTYZ0\",uVar18,0);\n          iVar6 = DAT_0060e290;\n          pbVar32 = DAT_0060e5f8;\n          goto LAB_00401f40;\n        }\n        if (uVar7 == 0x83) {\n          pbVar32 = DAT_0060e908;\n          pbVar8 = (byte *)FUN_00405180(DAT_0060e908);\n          iVar6 = DAT_0060e290;\n          if (pbVar11 != pbVar8) {\n            uVar18 = FUN_00406fc0(pbVar11);\n            pcVar24 = \"invalid suffix %s, contains directory separator\";\n            goto LAB_00403883;\n          }\n          goto LAB_00401f40;\n        }\n      }\n    }\n  }\nLAB_00403795:\n  p_Var17 = (__sighandler_t)FUN_00404cf0();\nLAB_0040379f:\n  local_128._0_1_ = (byte)param_2;\nLAB_00402bee:\n  if ((long)local_138 <= (long)local_130) goto LAB_004037b0;\n  if ((p_Var17 == (__sighandler_t)0xffffffffffffffff) &&\n     (p_Var17 = (__sighandler_t)FUN_00406fe0(0,local_f8,local_120),\n     p_Var17 == (__sighandler_t)0xffffffffffffffff)) {\n    uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n    piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar20,\"%s\",uVar18);\n  }\n  if (p_Var17 == (__sighandler_t)0x0) goto LAB_004037b0;\n  local_d9 = 0;\n  local_e8 = p_Var17;\n  if (local_138 + -(long)local_130 <= p_Var17) {\n    local_e8 = local_138 + -(long)local_130;\n  }\n  p_Var25 = local_f8 + (long)local_e8;\n  p_Var23 = local_f8;\n  while( true ) {\n    param_2 = (undefined8 *)(ulong)(byte)local_128;\n    p_Var17 = (__sighandler_t)0xffffffffffffffff;\n    if (p_Var25 == p_Var23) break;\n    p_Var17 = p_Var30 + -(long)local_130;\n    if ((long)p_Var17 < 0) {\n      p_Var17 = (__sighandler_t)0x0;\n    }\n    if (local_e8 < p_Var17) {\n      p_Var17 = local_e8;\n    }\n    lVar14 = FUN_00408dd0(p_Var23 + (long)p_Var17,DAT_0060e290,(long)local_e8 - (long)p_Var17);\n    local_128._0_1_ = lVar14 != 0;\n    p_Var17 = p_Var25;\n    if ((bool)(byte)local_128) {\n      p_Var17 = (__sighandler_t)(lVar14 + 1);\n    }\n    lVar14 = (long)p_Var17 - (long)p_Var23;\n    if (p_Var28 == p_Var31) {\n      lVar16 = FUN_004052d0(1,p_Var23,lVar14);\n      if (lVar14 != lVar16) {\n        uVar18 = dcgettext(0,\"write error\",5);\n        piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar20,\"%s\",uVar18);\n      }\n    }\n    else if (p_Var31 == (__sighandler_t)0x0) {\n      FUN_004049a0(param_2,p_Var23,lVar14);\n    }\n    local_130 = local_130 + lVar14;\n    bVar34 = (bool)(byte)local_128;\n    while ((((long)p_Var30 < (long)local_130 || (bVar3 = local_d9, bVar34 != false)) &&\n           (bVar3 = (bVar34 ^ 1U) & p_Var25 == p_Var17, bVar3 == 0))) {\n      p_Var28 = p_Var28 + 1;\n      if (p_Var31 != (__sighandler_t)0x0 && p_Var31 < p_Var28) goto LAB_00402fc5;\n      p_Var30 = p_Var30 + in_R10;\n      if (p_Var28 == local_140) {\n        p_Var30 = in_R11;\n      }\n      if ((long)p_Var30 < (long)local_130) {\n        if (p_Var31 == (__sighandler_t)0x0) {\n          FUN_004049a0(1,0,0);\n        }\n      }\n      else {\n        bVar34 = false;\n      }\n    }\n    local_d9 = bVar3;\n    local_e8 = local_e8 + -lVar14;\n    p_Var23 = p_Var17;\n  }\n  goto LAB_0040379f;\nLAB_004037b0:\n  p_Var28 = p_Var28 + (local_d9 != 0);\n  if (local_100 == (__sighandler_t)0x0) {\n    for (; p_Var28 <= local_140; p_Var28 = p_Var28 + 1) {\n      FUN_004049a0(1,0,0);\n    }\n  }\n  goto LAB_00402fc5;\n  while( true ) {\n    uVar21 = uVar21 - 1;\n    cVar1 = *pcVar24;\n    pcVar24 = pcVar24 + (ulong)bVar3 * -2 + 1;\n    if (cVar1 == '\\0') break;\ncode_r0x0040278d:\n    if (uVar21 == 0) break;\n  }\n  p_Var17 = (__sighandler_t)(~uVar21 - 1);\n  uVar21 = (ulong)p_Var28 % (ulong)p_Var17;\n  lVar14 = 0;\n  for (; p_Var17 <= p_Var28; p_Var28 = (__sighandler_t)((ulong)p_Var28 / (ulong)p_Var17)) {\n    lVar14 = lVar14 + 1;\n  }\n  DAT_0060e2a0 = 0;\n  uVar21 = (ulong)(uVar21 != 0) + lVar14;\n  if (DAT_0060e608 == 0) {\nLAB_0040253e:\n    DAT_0060e608 = 2;\n    if (1 < uVar21) {\n      DAT_0060e608 = uVar21;\n    }\n  }\n  else {\n    if (DAT_0060e608 < uVar21) {\n      uVar18 = dcgettext(0,\"the suffix length needs to be at least %lu\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar18,uVar21);\n    }\nLAB_004027f4:\n    DAT_0060e2a0 = 0;\n  }\n  uVar26 = DAT_0060e31c;\n  if ((int)DAT_0060e31c < param_1) {\n    lVar14 = (long)(int)DAT_0060e31c;\n    DAT_0060e5f0 = (char *)param_2[lVar14];\n    uVar26 = DAT_0060e31c + 1;\n    if ((int)(DAT_0060e31c + 1) < param_1) {\n      DAT_0060e620 = (char *)param_2[lVar14 + 1];\n      DAT_0060e31c = DAT_0060e31c + 2;\n      uVar26 = DAT_0060e31c;\n      if ((int)DAT_0060e31c < param_1) {\n        uVar18 = FUN_00406fc0(param_2[lVar14 + 2]);\n        pcVar24 = \"extra operand %s\";\nLAB_00403883:\n        uVar19 = dcgettext(0,pcVar24,5);\nLAB_0040388a:\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar19,uVar18);\n      }\n    }\n  }\n  DAT_0060e31c = uVar26;\n  pcVar2 = DAT_0060e5f0;\n  if (DAT_0060e600 != (byte *)0x0) {\n    uVar21 = 0xffffffffffffffff;\n    pcVar24 = \"numerical suffix start value is too large for the suffix length\";\n    pbVar32 = DAT_0060e600;\n    do {\n      if (uVar21 == 0) break;\n      uVar21 = uVar21 - 1;\n      bVar4 = *pbVar32;\n      pbVar32 = pbVar32 + (ulong)bVar3 * -2 + 1;\n    } while (bVar4 != 0);\n    if (DAT_0060e608 < ~uVar21 - 1) {\nLAB_00403780:\n      uVar18 = dcgettext(0,pcVar24,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar18);\n    }\n  }\n  iVar6 = strcmp(DAT_0060e5f0,\"-\");\n  if ((iVar6 != 0) && (iVar6 = FUN_00405260(0,pcVar2,0,0), iVar6 < 0)) {\n    uVar18 = FUN_00406d70(4,DAT_0060e5f0);\n    uVar19 = dcgettext(0,\"cannot open %s for reading\",5);\n    piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar20,uVar19,uVar18);\n  }\n  iVar6 = __fxstat(1,0,(stat *)&DAT_0060e560);\n  if (iVar6 != 0) {\n    uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n    piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar20,\"%s\",uVar18);\n  }\n  if ((local_120 == (__sighandler_t)0x0) &&\n     (local_120 = (__sighandler_t)0x20000, DAT_0060e598 + -0x20000 < (code *)0x1ffffffffffe0001)) {\n    local_120 = DAT_0060e598;\n  }\n  p_Var17 = (__sighandler_t)0xffffffffffffffff;\n  lVar14 = FUN_00407690();\n  p_Var28 = local_138 + lVar14 + -1;\n  uVar21 = (ulong)p_Var28 % (ulong)local_138;\n  local_138 = (__sighandler_t)0x7fffffffffffffff;\n  local_f8 = p_Var28 + -uVar21;\n  if (1 < uVar27) {\nLAB_0040268d:\n    if (DAT_0060e760 != (byte *)0x0) {\n      sigemptyset((sigset_t *)&DAT_0060e640);\n      sigaction(0xd,(sigaction *)0x0,&local_d8);\n      if (local_d8.__sigaction_handler.sa_handler != (__sighandler_t)0x1) {\n        sigaddset((sigset_t *)&DAT_0060e640,0xd);\n      }\n      sigprocmask(0,(sigset_t *)&DAT_0060e640,(sigset_t *)&DAT_0060e6c0);\n    }\n    switch((int)p_Var30) {\n    case 2:\n      bVar34 = false;\n      p_Var30 = (__sighandler_t)0x0;\n      p_Var28 = (__sighandler_t)0x0;\n      local_128 = (__sighandler_t)0x0;\n      local_130 = (__sighandler_t)0x0;\n      do {\n        uVar21 = FUN_00406fe0(0,local_f8,local_120);\n        if (uVar21 == 0xffffffffffffffff) {\n          uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n          piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar20,\"%s\",uVar18);\n        }\n        p_Var17 = local_f8;\n        if (uVar21 == 0) {\n          if (p_Var30 != (__sighandler_t)0x0) {\n            FUN_004049a0(p_Var28 == (__sighandler_t)0x0,local_130,p_Var30);\n          }\n          free(local_130);\n          break;\n        }\n        do {\n          p_Var31 = p_Var30 + (long)p_Var28;\n          uVar33 = (long)local_140 - (long)p_Var31;\n          if (uVar21 < uVar33) {\n            p_Var23 = (__sighandler_t)0x0;\n            uVar33 = 0;\n            pvVar13 = memrchr(p_Var17,DAT_0060e290,uVar21);\n            if (p_Var30 == (__sighandler_t)0x0) goto LAB_00402a8c;\nLAB_004029fc:\n            if ((pvVar13 == (void *)0x0) && (p_Var28 != (__sighandler_t)0x0)) goto LAB_00402a15;\n            FUN_004049a0(p_Var28 == (__sighandler_t)0x0,local_130,p_Var30);\n            local_128 = local_120;\n            p_Var28 = p_Var31;\n            if (p_Var30 <= local_120) goto LAB_00402a8c;\n            local_130 = (__sighandler_t)FUN_004076f0(local_130,local_120);\n            if (pvVar13 == (void *)0x0) goto LAB_00403130;\nLAB_00402a95:\n            lVar14 = (long)pvVar13 + (1 - (long)p_Var17);\n            p_Var28 = p_Var31 + lVar14;\n            uVar21 = uVar21 - lVar14;\n            p_Var25 = p_Var17 + lVar14;\n            FUN_004049a0(p_Var31 == (__sighandler_t)0x0,p_Var17,lVar14);\n            if (p_Var23 != (__sighandler_t)0x0) {\n              bVar34 = uVar33 - lVar14 != 0;\n              uVar33 = uVar33 - lVar14;\n              if (bVar34) goto LAB_00402ad0;\n              bVar34 = true;\n              p_Var30 = (__sighandler_t)0x0;\n              goto LAB_00402b2e;\n            }\n            bVar34 = uVar21 != 0;\n            uVar33 = uVar21;\n            if (bVar34) {\nLAB_00402ad0:\n              p_Var30 = (__sighandler_t)0x0;\n              p_Var17 = p_Var25;\n              goto LAB_00402ad3;\n            }\n            p_Var30 = (__sighandler_t)0x0;\n            bVar34 = true;\n          }\n          else {\n            p_Var23 = p_Var17 + (uVar33 - 1);\n            pvVar13 = memrchr(p_Var17,DAT_0060e290,uVar33);\n            if (p_Var30 != (__sighandler_t)0x0) goto LAB_004029fc;\nLAB_00402a8c:\n            p_Var31 = p_Var28;\n            if (pvVar13 != (void *)0x0) goto LAB_00402a95;\nLAB_00403130:\n            p_Var30 = (__sighandler_t)0x0;\n            p_Var28 = p_Var31;\nLAB_00402a15:\n            if (!bVar34) {\n              bVar35 = p_Var28 == (__sighandler_t)0x0;\n              if (p_Var23 != (__sighandler_t)0x0) {\n                uVar21 = uVar21 - uVar33;\n                p_Var25 = p_Var17 + uVar33;\n                FUN_004049a0(bVar35,p_Var17,uVar33);\n                p_Var28 = (__sighandler_t)0x0;\n                goto LAB_00402a46;\n              }\n              p_Var28 = p_Var28 + uVar21;\n              FUN_004049a0(bVar35,p_Var17,uVar21);\n              break;\n            }\n            if (((p_Var23 == (__sighandler_t)0x0) || (uVar33 == 0)) &&\n               ((p_Var25 = p_Var17, p_Var23 != (__sighandler_t)0x0 || (uVar33 = uVar21, uVar21 == 0)\n                ))) goto LAB_00402b2e;\nLAB_00402ad3:\n            if ((ulong)((long)local_128 - (long)p_Var30) < uVar33) {\n              if ((__sighandler_t)~(ulong)local_120 < local_128) goto LAB_004037ab;\n              local_128 = local_128 + (long)local_120;\n              local_130 = (__sighandler_t)FUN_004076f0(local_130,local_128);\n            }\n            uVar21 = uVar21 - uVar33;\n            p_Var31 = (__sighandler_t)((long)local_130 + (long)p_Var30);\n            p_Var30 = p_Var30 + uVar33;\n            memcpy(p_Var31,p_Var17,uVar33);\n            p_Var25 = p_Var17 + uVar33;\nLAB_00402b2e:\n            if (p_Var23 != (__sighandler_t)0x0) {\n              bVar34 = false;\n              p_Var28 = (__sighandler_t)0x0;\n            }\n          }\nLAB_00402a46:\n          p_Var17 = p_Var25;\n        } while (uVar21 != 0);\n      } while( true );\n    case 3:\n    case 4:\n      p_Var28 = (__sighandler_t)0x0;\n      uVar18 = 1;\n      do {\n        lVar14 = FUN_00406fe0(0,local_f8,local_120);\n        iVar6 = DAT_0060e290;\n        if (lVar14 == -1) {\n          uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n          piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar20,\"%s\",uVar18);\n        }\n        p_Var31 = local_f8 + lVar14;\n        *p_Var31 = (__sighandler_t)(char)DAT_0060e290;\n        p_Var30 = local_f8;\n        uVar19 = uVar18;\n        p_Var17 = local_f8;\n        while (p_Var30 = (__sighandler_t)FUN_00408dd0(p_Var30,iVar6,p_Var31 + (1 - (long)p_Var30)),\n              p_Var31 != p_Var30) {\n          p_Var28 = p_Var28 + 1;\n          p_Var30 = p_Var30 + 1;\n          if (local_140 <= p_Var28) {\n            p_Var28 = (__sighandler_t)0x0;\n            FUN_004049a0(uVar19,p_Var17,(long)p_Var30 - (long)p_Var17);\n            uVar19 = 1;\n            p_Var17 = p_Var30;\n            iVar6 = DAT_0060e290;\n          }\n        }\n        uVar18 = uVar19;\n        if (p_Var31 != p_Var17) {\n          uVar18 = 0;\n          FUN_004049a0(uVar19,p_Var17,(long)p_Var31 - (long)p_Var17);\n        }\n      } while (lVar14 != 0);\n      break;\n    case 5:\n      if (local_100 == (__sighandler_t)0x0) {\n        FUN_00404ab0((ulong)local_138 / (ulong)local_140,local_f8,local_120,p_Var17);\n      }\n      else {\n        if ((local_140 < local_100) || (local_138 < local_140)) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"k && n && k <= n && n <= file_size\",\"src/split.c\",0x3df,\n                        \"bytes_chunk_extract\");\n        }\n        p_Var28 = (__sighandler_t)((long)(local_100 + -1) * ((ulong)local_138 / (ulong)local_140));\n        if (local_100 != local_140) {\n          local_138 = (__sighandler_t)(((ulong)local_138 / (ulong)local_140) * (long)local_100);\n        }\n        if (p_Var28 < p_Var17) {\n          uVar21 = (long)p_Var17 - (long)p_Var28;\n          memmove(local_f8,p_Var28 + (long)local_f8,uVar21);\n        }\n        else {\n          uVar21 = 0xffffffffffffffff;\n          _Var12 = lseek(0,(__off_t)p_Var28,1);\n          if (_Var12 < 0) {\n            uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n            piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar20,\"%s\",uVar18);\n          }\n        }\n        for (; (long)p_Var28 < (long)local_138; p_Var28 = p_Var28 + uVar33) {\n          if ((uVar21 == 0xffffffffffffffff) &&\n             (uVar21 = FUN_00406fe0(0,local_f8,local_120), uVar21 == 0xffffffffffffffff)) {\n            uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n            piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar20,\"%s\",uVar18);\n          }\n          if (uVar21 == 0) break;\n          uVar33 = (long)local_138 - (long)p_Var28;\n          if (uVar21 < (ulong)((long)local_138 - (long)p_Var28)) {\n            uVar33 = uVar21;\n          }\n          uVar21 = FUN_004052d0(1,local_f8,uVar33);\n          if ((uVar33 != uVar21) &&\n             ((piVar20 = __errno_location(), DAT_0060e760 == (byte *)0x0 || (*piVar20 != 0x20)))) {\n            uVar18 = FUN_00406e40(0,3,&DAT_0040c282);\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar20,\"%s\",uVar18);\n          }\n          uVar21 = 0xffffffffffffffff;\n        }\n      }\n      break;\n    case 6:\n      if ((local_100 <= local_140) && (local_140 <= local_138)) {\n        in_R10 = (ulong)local_138 / (ulong)local_140;\n        if (local_100 < (__sighandler_t)0x2) {\n          p_Var30 = (__sighandler_t)(in_R10 - 1);\n          p_Var28 = (__sighandler_t)0x1;\n          local_130 = (__sighandler_t)0x0;\n        }\n        else {\n          p_Var28 = local_100 + -1;\n          p_Var30 = (__sighandler_t)(in_R10 * (long)p_Var28 - 1);\n          local_130 = p_Var30;\n          if (p_Var30 < p_Var17) {\n            p_Var17 = p_Var17 + -(long)p_Var30;\n            memmove(local_f8,local_f8 + (long)p_Var30,(size_t)p_Var17);\n          }\n          else {\n            lVar14 = (long)p_Var30 - (long)p_Var17;\n            p_Var17 = (__sighandler_t)0xffffffffffffffff;\n            _Var12 = lseek(0,lVar14,1);\n            if (_Var12 < 0) {\n              uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n              piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n              error(1,*piVar20,\"%s\",uVar18);\n            }\n          }\n        }\n        local_d9 = 0;\n        local_128._0_1_ = 1;\n        in_R11 = local_138 + -1;\n        p_Var31 = local_100;\n        goto LAB_00402bee;\n      }\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"n && k <= n && n <= file_size\",\"src/split.c\",0x361,\"lines_chunk_split\");\n    case 7:\n      if (local_100 == (__sighandler_t)0x0) {\n        if ((SUB168(ZEXT816(0x20) * ZEXT816(local_140),0) < 0) ||\n           (SUB168(ZEXT816(0x20) * ZEXT816(local_140) >> 0x40,0) != 0)) {\nLAB_004037ab:\n                    /* WARNING: Subroutine does not return */\n          FUN_004078e0();\n        }\n        p_Var28 = (__sighandler_t)0x0;\n        local_108 = (undefined8 *)FUN_00407690((long)local_140 << 5);\n        puVar22 = local_108;\n        do {\n          FUN_00403cc0();\n          p_Var28 = p_Var28 + 1;\n          uVar18 = FUN_004078c0();\n          *(undefined4 *)(puVar22 + 1) = 0xffffffff;\n          *puVar22 = uVar18;\n          puVar22[2] = 0;\n          *(undefined4 *)(puVar22 + 3) = 0;\n          puVar22 = puVar22 + 4;\n        } while (p_Var28 != local_140);\n      }\n      local_130 = (__sighandler_t)0x0;\n      p_Var28 = (__sighandler_t)0x1;\n      bVar3 = 0;\n      bVar34 = false;\n      bVar35 = false;\n      while( true ) {\n        lVar14 = FUN_00406fe0(0,local_f8,local_120);\n        if (lVar14 == -1) {\n          uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n          piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar20,\"%s\",uVar18);\n        }\n        if (lVar14 == 0) break;\n        p_Var17 = local_f8 + lVar14;\n        p_Var30 = local_f8;\n        bVar5 = bVar34;\n        while (bVar34 = bVar5, p_Var30 != p_Var17) {\n          sVar9 = (long)p_Var17 - (long)p_Var30;\n          lVar14 = FUN_00408dd0(p_Var30,DAT_0060e290,sVar9);\n          bVar36 = lVar14 != 0;\n          p_Var31 = p_Var17;\n          if (bVar36) {\n            sVar9 = (long)(__sighandler_t)(lVar14 + 1) - (long)p_Var30;\n            p_Var31 = (__sighandler_t)(lVar14 + 1);\n          }\n          if (local_100 == (__sighandler_t)0x0) {\n            bVar4 = FUN_00404500(local_108,local_130,local_140);\n            puVar22 = local_108 + (long)local_130 * 4;\n            bVar3 = bVar3 | bVar4;\n            piVar20 = __errno_location();\n            if (DAT_0060e540 == '\\0') {\n              sVar9 = fwrite_unlocked(p_Var30,sVar9,1,(FILE *)puVar22[2]);\n              if (sVar9 == 1) {\n                bVar5 = DAT_0060e760 != (byte *)0x0 && *piVar20 == 0x20;\nLAB_00402f31:\n                if (!bVar5) {\n                  bVar34 = true;\n                }\n              }\n              else if ((*piVar20 != 0x20) || (DAT_0060e760 == (byte *)0x0)) {\n                uVar18 = FUN_00406e40(0,3,*puVar22);\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar20,\"%s\",uVar18);\n              }\n            }\n            else {\n              sVar15 = FUN_004052d0(*(undefined4 *)(puVar22 + 1),p_Var30,sVar9);\n              if (sVar9 == sVar15) {\n                bVar5 = *piVar20 == 0x20 && DAT_0060e760 != (byte *)0x0;\n                goto LAB_00402f31;\n              }\n              if ((*piVar20 != 0x20) || (DAT_0060e760 == (byte *)0x0)) {\n                uVar18 = FUN_00406e40(0,3,*puVar22);\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar20,\"%s\",uVar18);\n              }\n            }\n            if (bVar3 != 0) {\n              iVar6 = FUN_00407e60();\n              if (iVar6 != 0) {\n                uVar18 = FUN_00406e40(0,3,*puVar22);\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar20,\"%s\",uVar18);\n              }\n              puVar22[2] = 0;\n              *(undefined4 *)(puVar22 + 1) = 0xfffffffe;\n            }\n            p_Var30 = p_Var31;\n            bVar5 = bVar34;\n            if ((bVar36) && (local_130 = local_130 + 1, local_130 == local_140)) {\n              if (!bVar34) goto LAB_004033ba;\n              local_130 = (__sighandler_t)0x0;\n              bVar5 = false;\n              bVar35 = bVar34;\n            }\n          }\n          else {\n            if (local_100 == p_Var28) {\n              if (DAT_0060e540 == '\\0') {\n                sVar9 = fwrite_unlocked(p_Var30,sVar9,1,stdout);\n                if (sVar9 != 1) {\n                  clearerr_unlocked(stdout);\n                  uVar18 = dcgettext(0,\"write error\",5);\n                  piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n                  error(1,*piVar20,\"%s\",uVar18);\n                }\n              }\n              else {\n                sVar15 = FUN_004052d0(1,p_Var30,sVar9);\n                if (sVar9 != sVar15) {\n                  uVar18 = dcgettext(0,\"write error\",5);\n                  piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n                  error(1,*piVar20,\"%s\",uVar18);\n                }\n              }\n            }\n            p_Var30 = p_Var31;\n            bVar5 = bVar34;\n            if (bVar36) {\n              p_Var23 = p_Var28 + 1;\n              bVar34 = local_140 != p_Var28;\n              p_Var28 = (__sighandler_t)0x1;\n              if (bVar34) {\n                p_Var28 = p_Var23;\n              }\n            }\n          }\n        }\n      }\n      if (local_100 == (__sighandler_t)0x0) {\n        if (bVar35) {\nLAB_004033ba:\n        }\n        else {\n          local_140._0_4_ = (int)local_130;\n        }\n        p_Var28 = (__sighandler_t)0x0;\n        puVar22 = local_108;\n        do {\n          if (((__sighandler_t)(long)(int)local_140 <= p_Var28) && (DAT_0060e541 == '\\0')) {\n            FUN_00404500(local_108,p_Var28,local_140);\n          }\n          if (-1 < *(int *)(puVar22 + 1)) {\n            FUN_004046f0(puVar22[2],*(int *)(puVar22 + 1),*(undefined4 *)(puVar22 + 3),*puVar22);\n          }\n          p_Var28 = p_Var28 + 1;\n          *(undefined4 *)(puVar22 + 1) = 0xfffffffe;\n          puVar22 = puVar22 + 4;\n        } while (p_Var28 != local_140);\n      }\n      break;\n    default:\n      FUN_00404ab0(local_140,local_f8,local_120,0xffffffffffffffff,0);\n    }\nLAB_00402fc5:\n    iVar6 = close(0);\n    if (iVar6 != 0) {\n      uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n      piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar20,\"%s\",uVar18);\n    }\n    FUN_004046f0(0,DAT_0060e294,DAT_0060e758,DAT_0060e618);\n    return 0;\n  }\n  local_138 = (__sighandler_t)0x0;\n  _Var12 = lseek(0,0,1);\n  if (_Var12 < 0) {\n    piVar20 = __errno_location();\n    if (*piVar20 == 0x1d) {\n      *piVar20 = 0;\n    }\n    goto LAB_004035fe;\n  }\n  do {\n    lVar14 = FUN_00406fe0(0,local_f8 + (long)local_138,(long)local_120 - (long)local_138);\n    if (lVar14 == 0) goto LAB_004028a2;\n    if (lVar14 == -1) goto LAB_004035fe;\n    local_138 = local_138 + lVar14;\n  } while (local_138 < local_120);\n  if (DAT_0060e590 != (__sighandler_t)0x0) {\n    p_Var28 = local_138 + _Var12;\n    if (((DAT_0060e578 & 0xd000) != 0x8000) ||\n       (p_Var17 = DAT_0060e590, (long)DAT_0060e590 < (long)p_Var28)) {\n      p_Var17 = (__sighandler_t)lseek(0,0,2);\n      if ((long)p_Var17 < 0) goto LAB_004035fe;\n      if (p_Var28 != p_Var17) {\n        _Var12 = lseek(0,(__off_t)p_Var28,0);\n        if (_Var12 < 0) goto LAB_004035fe;\n        if ((long)p_Var17 < (long)p_Var28) {\n          p_Var17 = p_Var28;\n        }\n      }\n    }\n    local_138 = local_138 + ((long)p_Var17 - (long)p_Var28);\n    if (local_138 != (__sighandler_t)0x7fffffffffffffff) {\nLAB_004028a2:\n      if ((long)local_138 < 0) goto LAB_004035fe;\n      p_Var17 = local_120;\n      if (local_138 <= local_120) {\n        p_Var17 = local_138;\n      }\n      if ((long)local_140 < 0) {\n        uVar18 = FUN_00405350(local_140,&local_d8);\n        uVar18 = FUN_00406fc0(uVar18);\n        uVar19 = dcgettext(0,\"invalid number of chunks\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0x4b,\"%s: %s\",uVar19,uVar18);\n      }\n      if (local_138 < local_140) {\n        local_138 = local_140;\n      }\n      goto LAB_0040268d;\n    }\n  }\n  piVar20 = __errno_location();\n  *piVar20 = 0x4b;\nLAB_004035fe:\n  uVar18 = FUN_00406e40(0,3,DAT_0060e5f0);\n  uVar19 = dcgettext(0,\"%s: cannot determine file size\",5);\n  piVar20 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar20,uVar19,uVar18);\n}\n\n",
            "funcName": "FUN_00401ea0"
        },
        {
            "funcStartAddr": "0x403be0",
            "funcEndAddr": "0x403c0b",
            "decompiledFuncCode": "\nvoid FUN_00403be0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060dff0)\n            (FUN_00401ea0,unaff_retaddr,&stack0x00000008,FUN_00409890,FUN_004098f0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403be0"
        },
        {
            "funcStartAddr": "0x403c0b",
            "funcEndAddr": "0x403c2a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403c18) */\n/* WARNING: Removing unreachable block (ram,0x00403c22) */\n\nvoid FUN_00403c0b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00403c0b"
        },
        {
            "funcStartAddr": "0x403c2a",
            "funcEndAddr": "0x403c61",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403c59) */\n\nvoid FUN_00403c2a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00403c2a"
        },
        {
            "funcStartAddr": "0x403c61",
            "funcEndAddr": "0x403cb8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403c96) */\n\nvoid FUN_00403c61(void)\n\n{\n  if (DAT_0060e508 != '\\0') {\n    return;\n  }\n  FUN_00403c0b();\n  DAT_0060e508 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00403c61"
        },
        {
            "funcStartAddr": "0x403cb8",
            "funcEndAddr": "0x403cbd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403c59) */\n\nvoid thunk_FUN_00403c2a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_403cb8"
        },
        {
            "funcStartAddr": "0x403cc0",
            "funcEndAddr": "0x403fa9",
            "decompiledFuncCode": "\nvoid FUN_00403cc0(void)\n\n{\n  ulong uVar1;\n  undefined *puVar2;\n  char cVar3;\n  char cVar4;\n  size_t sVar5;\n  size_t sVar6;\n  void *__dest;\n  char *pcVar7;\n  void *pvVar8;\n  long lVar9;\n  size_t sVar10;\n  undefined8 uVar11;\n  long *plVar12;\n  long lVar13;\n  long lVar14;\n  long *plVar15;\n  \n  lVar9 = (long)DAT_0060e618;\n  pcVar7 = DAT_0060e610;\n  sVar10 = DAT_0060e608;\n  plVar15 = DAT_0060e520;\n  cVar4 = DAT_0060e2a0;\n  puVar2 = PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298;\n  if (DAT_0060e618 != (void *)0x0) {\n    lVar13 = DAT_0060e608 - 1;\n    if (DAT_0060e608 != 0) {\n      plVar12 = DAT_0060e520 + (DAT_0060e608 - 1);\n      do {\n        lVar14 = *plVar12 + 1;\n        *plVar12 = lVar14;\n        if ((lVar13 == 0) && (cVar4 != '\\0')) {\n          if (puVar2[*plVar15 + 1] == '\\0') goto LAB_00403d80;\n          cVar4 = puVar2[lVar14];\n          *pcVar7 = cVar4;\n          if (cVar4 != '\\0') {\n            return;\n          }\n          *plVar12 = 0;\n          *pcVar7 = *puVar2;\n          break;\n        }\n        cVar3 = puVar2[lVar14];\n        pcVar7[lVar13] = cVar3;\n        if (cVar3 != '\\0') {\n          return;\n        }\n        *plVar12 = 0;\n        plVar12 = plVar12 + -1;\n        pcVar7[lVar13] = *puVar2;\n        lVar13 = lVar13 + -1;\n      } while (lVar13 != -1);\n    }\n    uVar11 = dcgettext(0,\"output file suffixes exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar11);\n  }\nLAB_00403d80:\n  lVar13 = DAT_0060e538;\n  if (DAT_0060e538 == 0) {\n    sVar5 = strlen(DAT_0060e620);\n    sVar6 = 0;\n    DAT_0060e530 = sVar5;\n    if (DAT_0060e5f8 != (char *)0x0) {\n      sVar6 = strlen(DAT_0060e5f8);\n    }\n    DAT_0060e538 = sVar6 + sVar10 + sVar5;\n    DAT_0060e528 = sVar6;\n    if (DAT_0060e538 + 1U < sVar5) {\nLAB_00403f6d:\n                    /* WARNING: Subroutine does not return */\n      FUN_004078e0();\n    }\n    __dest = (void *)FUN_004076f0(lVar9);\n    sVar10 = DAT_0060e530;\n    DAT_0060e618 = __dest;\n    memcpy(__dest,DAT_0060e620,DAT_0060e530);\n    pcVar7 = PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298;\n    plVar15 = DAT_0060e520;\n  }\n  else {\n    DAT_0060e608 = sVar10 + 1;\n    lVar14 = DAT_0060e538 + 2;\n    uVar1 = DAT_0060e538 + 3;\n    DAT_0060e538 = lVar14;\n    if (uVar1 < DAT_0060e530) goto LAB_00403f6d;\n    __dest = (void *)FUN_004076f0(lVar9);\n    plVar15 = DAT_0060e520;\n    pcVar7 = PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298;\n    sVar10 = DAT_0060e530 + 1;\n    puVar2 = (undefined *)((long)__dest + DAT_0060e530);\n    DAT_0060e530 = sVar10;\n    DAT_0060e618 = __dest;\n    *puVar2 = PTR_s_abcdefghijklmnopqrstuvwxyz_0060e298[*DAT_0060e520];\n  }\n  sVar5 = DAT_0060e608;\n  DAT_0060e610 = (char *)((long)__dest + sVar10);\n  pvVar8 = memset(DAT_0060e610,(int)*pcVar7,DAT_0060e608);\n  if (DAT_0060e5f8 != (char *)0x0) {\n    memcpy((void *)((long)pvVar8 + sVar5),DAT_0060e5f8,DAT_0060e528);\n  }\n  *(undefined *)((long)__dest + DAT_0060e538) = 0;\n  free(plVar15);\n  lVar9 = FUN_00407860(sVar5,8);\n  pcVar7 = DAT_0060e600;\n  DAT_0060e520 = (long *)lVar9;\n  if (DAT_0060e600 != (char *)0x0) {\n    if (lVar13 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! widen\",\"src/split.c\",0x198,\"next_file_name\");\n    }\n    sVar10 = strlen(DAT_0060e600);\n    lVar14 = DAT_0060e608 * 8;\n    memcpy((void *)((DAT_0060e608 - sVar10) + (long)DAT_0060e610),pcVar7,sVar10);\n    lVar13 = sVar10 - 1;\n    if (sVar10 != 0) {\n      do {\n        *(long *)(lVar14 + sVar10 * -8 + lVar9 + lVar13 * 8) = (long)(pcVar7[lVar13] + -0x30);\n        lVar13 = lVar13 + -1;\n      } while (lVar13 != -1);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403cc0"
        },
        {
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x4044c3",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_00403fc0(char *param_1)\n\n{\n  int iVar1;\n  __pid_t _Var2;\n  int iVar3;\n  char *__path;\n  char *__arg;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  ulong uVar7;\n  long lVar8;\n  undefined local_a8 [8];\n  __ino_t local_a0;\n  \n  if (DAT_0060e760 == 0) {\n    if (DAT_0060e542 != '\\0') {\n      uVar5 = FUN_00406d70(4,param_1);\n      uVar4 = dcgettext(0,\"creating file %s\\n\",5);\n      __fprintf_chk(stdout,1,uVar4,uVar5);\n    }\n    iVar1 = FUN_00405210(param_1,0x41,0x1b6);\n    if (-1 < iVar1) {\n      iVar3 = __fxstat(1,iVar1,(stat *)local_a8);\n      if (iVar3 != 0) {\n        uVar5 = FUN_00406d70(4,param_1);\n        uVar4 = dcgettext(0,\"failed to stat %s\",5);\n        piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar6,uVar4,uVar5);\n      }\n      if ((_DAT_0060e568 == local_a0) && (_DAT_0060e560 == CONCAT44(local_a8._4_4_,local_a8._0_4_)))\n      {\n        uVar5 = FUN_00406d70(4,param_1);\n        uVar4 = dcgettext(0,\"%s would overwrite input; aborting\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar4,uVar5);\n      }\n      iVar3 = ftruncate(iVar1,0);\n      if (iVar3 != 0) {\n        uVar5 = FUN_00406e40(0,3,param_1);\n        uVar4 = dcgettext(0,\"%s: error truncating\",5);\n        piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar6,uVar4,uVar5);\n      }\n    }\n  }\n  else {\n    __path = getenv(\"SHELL\");\n    if (__path == (char *)0x0) {\n      __path = \"/bin/sh\";\n    }\n    iVar1 = setenv(\"FILE\",param_1,1);\n    if (iVar1 != 0) {\n      uVar5 = dcgettext(0,\"failed to set FILE environment variable\",5);\n      piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar6,uVar5);\n    }\n    if (DAT_0060e542 != '\\0') {\n      uVar5 = FUN_00406e40(0,3,param_1);\n      uVar4 = dcgettext(0,\"executing with FILE=%s\\n\",5);\n      __fprintf_chk(stdout,1,uVar4,uVar5);\n    }\n    iVar1 = pipe((int *)local_a8);\n    if (iVar1 != 0) {\n      uVar5 = dcgettext(0,\"failed to create pipe\",5);\n      piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar6,uVar5);\n    }\n    _Var2 = fork();\n    if (_Var2 == 0) {\n      uVar7 = 0;\n      if (DAT_0060e740 != 0) {\n        do {\n          iVar1 = close(*(int *)(DAT_0060e750 + uVar7 * 4));\n          if (iVar1 != 0) {\n            uVar5 = dcgettext(0,\"closing prior pipe\",5);\n            piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar6,uVar5);\n          }\n          uVar7 = uVar7 + 1;\n        } while (uVar7 < DAT_0060e740);\n      }\n      iVar1 = close(local_a8._4_4_);\n      piVar6 = __errno_location();\n      if (iVar1 != 0) {\n        uVar5 = dcgettext(0,\"closing output pipe\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar6,uVar5);\n      }\n      if (local_a8._0_4_ != 0) {\n        iVar1 = dup2(local_a8._0_4_,0);\n        if (iVar1 != 0) {\n          uVar5 = dcgettext(0,\"moving input pipe\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar6,uVar5);\n        }\n        iVar1 = close(local_a8._0_4_);\n        if (iVar1 != 0) {\n          uVar5 = dcgettext(0,\"closing input pipe\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar6,uVar5);\n        }\n      }\n      sigprocmask(2,(sigset_t *)&DAT_0060e6c0,(sigset_t *)0x0);\n      lVar8 = DAT_0060e760;\n      __arg = (char *)FUN_00405180(__path);\n      execl(__path,__arg,&DAT_00409a3e,lVar8,0);\n      uVar5 = dcgettext(0,\"failed to run command: \\\"%s -c %s\\\"\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar6,uVar5,__path,lVar8);\n    }\n    if (_Var2 == -1) {\n      uVar5 = dcgettext(0,\"fork system call failed\",5);\n      piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar6,uVar5);\n    }\n    iVar1 = close(local_a8._0_4_);\n    if (iVar1 != 0) {\n      uVar5 = dcgettext(0,\"failed to close input pipe\",5);\n      piVar6 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar6,uVar5);\n    }\n    DAT_0060e758 = _Var2;\n    if (DAT_0060e740 == DAT_0060e748) {\n      if (DAT_0060e750 == 0) {\n        if (DAT_0060e748 == 0) {\n          lVar8 = 0x80;\n          DAT_0060e748 = 0x20;\n        }\n        else {\n          lVar8 = DAT_0060e748 << 2;\n          if ((lVar8 < 0) || (DAT_0060e748 >> 0x3e != 0)) goto LAB_00404358;\n        }\n      }\n      else {\n        if (0x1555555555555554 < DAT_0060e748) {\nLAB_00404358:\n                    /* WARNING: Subroutine does not return */\n          FUN_004078e0();\n        }\n        DAT_0060e748 = DAT_0060e748 + 1 + (DAT_0060e748 >> 1);\n        lVar8 = DAT_0060e748 * 4;\n      }\n      DAT_0060e750 = FUN_004076f0(DAT_0060e750,lVar8);\n    }\n    lVar8 = DAT_0060e740 * 4;\n    DAT_0060e740 = DAT_0060e740 + 1;\n    *(int *)(DAT_0060e750 + lVar8) = local_a8._4_4_;\n    iVar1 = local_a8._4_4_;\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00403fc0"
        },
        {
            "funcStartAddr": "0x404500",
            "funcEndAddr": "0x4046e5",
            "decompiledFuncCode": "\nundefined8 FUN_00404500(long param_1,long param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  FILE *pFVar5;\n  undefined8 uVar6;\n  undefined8 *puVar7;\n  undefined8 uVar8;\n  undefined8 *puVar9;\n  bool bVar10;\n  \n  puVar9 = (undefined8 *)(param_2 * 0x20 + param_1);\n  uVar6 = 0;\n  if (-1 < *(int *)(puVar9 + 1)) {\n    return 0;\n  }\n  lVar4 = param_2 + -1;\n  if (param_2 == 0) {\n    lVar4 = param_3 + -1;\n  }\n  uVar8 = *puVar9;\n  if (*(int *)(puVar9 + 1) == -1) goto LAB_004045eb;\n  do {\n    iVar2 = FUN_00405210(uVar8,0xc01);\n    while( true ) {\n      if (-1 < iVar2) {\n        *(int *)(puVar9 + 1) = iVar2;\n        pFVar5 = fdopen(iVar2,\"a\");\n        puVar9[2] = pFVar5;\n        uVar1 = DAT_0060e758;\n        if (pFVar5 != (FILE *)0x0) {\n          DAT_0060e758 = 0;\n          *(undefined4 *)(puVar9 + 3) = uVar1;\n          return uVar6;\n        }\n        uVar6 = FUN_00406e40(0,3,*puVar9);\n        piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      piVar3 = __errno_location();\n      if (1 < *piVar3 - 0x17U) {\n        uVar6 = FUN_00406e40(0,3,*puVar9);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      while (puVar7 = (undefined8 *)(lVar4 * 0x20 + param_1), *(int *)(puVar7 + 1) < 0) {\n        bVar10 = lVar4 == 0;\n        lVar4 = lVar4 + -1;\n        if (bVar10) {\n          lVar4 = param_3 + -1;\n        }\n        if (lVar4 == param_2) {\n          uVar6 = FUN_00406e40(0,3,*puVar9);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar3,\"%s\",uVar6);\n        }\n      }\n      iVar2 = FUN_00407e60(puVar7[2]);\n      if (iVar2 != 0) {\n        uVar6 = FUN_00406e40(0,3,*puVar7);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      *(undefined4 *)(puVar7 + 1) = 0xfffffffe;\n      iVar2 = *(int *)(puVar9 + 1);\n      puVar7[2] = 0;\n      uVar8 = *puVar9;\n      uVar6 = 1;\n      if (iVar2 != -1) break;\nLAB_004045eb:\n      iVar2 = FUN_00403fc0();\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404500"
        },
        {
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x40496c",
            "decompiledFuncCode": "\nvoid FUN_004046f0(long param_1,int param_2,int param_3,undefined8 param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  __pid_t _Var3;\n  int *piVar4;\n  undefined8 uVar5;\n  long lVar6;\n  undefined8 uVar7;\n  char cVar8;\n  uint uVar9;\n  uint local_4c;\n  undefined local_48 [40];\n  \n  if (param_1 == 0) {\n    if (param_2 < 0) goto LAB_004047a0;\n    iVar2 = close(param_2);\n    if (iVar2 < 0) {\n      uVar5 = FUN_00406e40(0,3,param_4);\n      piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar4,\"%s\",uVar5);\n    }\n  }\n  else {\n    iVar2 = FUN_00407e60();\n    if ((iVar2 != 0) && ((piVar4 = __errno_location(), DAT_0060e760 == 0 || (*piVar4 != 0x20)))) {\n      uVar5 = FUN_00406e40(0,3,param_4);\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar4,\"%s\",uVar5);\n    }\n    if (param_2 < 0) goto LAB_004047a0;\n  }\n  if (DAT_0060e740 != 0) {\n    piVar4 = DAT_0060e750;\n    if (param_2 != *DAT_0060e750) {\n      lVar6 = 0;\n      do {\n        piVar4 = piVar4 + 1;\n        if (DAT_0060e740 + -1 == lVar6) goto LAB_004047a0;\n        lVar6 = lVar6 + 1;\n      } while (*piVar4 != param_2);\n    }\n    DAT_0060e740 = DAT_0060e740 + -1;\n    *piVar4 = DAT_0060e750[DAT_0060e740];\n  }\nLAB_004047a0:\n  if (0 < param_3) {\n    local_4c = 0;\n    _Var3 = waitpid(param_3,(int *)&local_4c,0);\n    if ((_Var3 == -1) && (piVar4 = __errno_location(), *piVar4 != 10)) {\n      uVar5 = dcgettext(0,\"waiting for child process\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar4,uVar5);\n    }\n    uVar1 = local_4c;\n    lVar6 = DAT_0060e760;\n    uVar9 = local_4c & 0x7f;\n    if ((char)((char)uVar9 + '\\x01') < '\\x02') {\n      if (uVar9 != 0) {\n        uVar5 = dcgettext(0,\"unknown status from command (0x%X)\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar5,uVar1);\n      }\n      cVar8 = (char)(local_4c >> 8);\n      if (cVar8 != '\\0') {\n        uVar5 = FUN_00406e40(0,3,param_4);\n        uVar7 = dcgettext(0,\"with FILE=%s, exit %d from command: %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(cVar8,0,uVar7,uVar5,cVar8,lVar6);\n      }\n    }\n    else if (uVar9 != 0xd) {\n      iVar2 = FUN_00409040(uVar9,local_48);\n      if (iVar2 != 0) {\n        __sprintf_chk(local_48,1,0x13,&DAT_00409a90,uVar9);\n      }\n      lVar6 = DAT_0060e760;\n      uVar5 = FUN_00406e40(0,3,param_4);\n      uVar7 = dcgettext(0,\"with FILE=%s, signal %s from command: %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(uVar9 + 0x80,0,uVar7,uVar5,local_48,lVar6);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004046f0"
        },
        {
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x404a98",
            "decompiledFuncCode": "\nundefined8 FUN_004049a0(char param_1,ulong param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != '\\0') {\n    if (((param_2 | param_3) == 0) && (DAT_0060e541 != '\\0')) {\n      return 1;\n    }\n    FUN_004046f0(0,DAT_0060e294,DAT_0060e758,DAT_0060e618);\n    FUN_00403cc0();\n    DAT_0060e294 = FUN_00403fc0(DAT_0060e618);\n    if (DAT_0060e294 < 0) {\n      uVar3 = FUN_00406e40(0,3,DAT_0060e618);\n      piVar2 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar2,\"%s\",uVar3);\n    }\n  }\n  uVar1 = FUN_004052d0(DAT_0060e294,param_2,param_3);\n  if (uVar1 == param_3) {\n    return 1;\n  }\n  piVar2 = __errno_location();\n  if ((DAT_0060e760 != 0) && (*piVar2 == 0x20)) {\n    return 0;\n  }\n  uVar3 = FUN_00406e40(0,3,DAT_0060e618);\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar2,\"%s\",uVar3);\n}\n\n",
            "funcName": "FUN_004049a0"
        },
        {
            "funcStartAddr": "0x404ab0",
            "funcEndAddr": "0x404cce",
            "decompiledFuncCode": "\nvoid FUN_00404ab0(ulong param_1,long param_2,ulong param_3,ulong param_4,ulong param_5)\n\n{\n  __off_t _Var1;\n  undefined8 uVar2;\n  int *piVar3;\n  bool bVar4;\n  byte bVar5;\n  long lVar6;\n  ulong __offset;\n  ulong uVar7;\n  bool bVar8;\n  \n  uVar7 = 0;\n  bVar5 = 1;\n  bVar4 = true;\n  __offset = param_1;\n  if (param_4 == 0xffffffffffffffff) goto LAB_00404b84;\n  bVar8 = param_4 < param_3;\n  if (param_4 < param_1) goto LAB_00404bc6;\n  do {\n    lVar6 = param_2;\n    do {\n      bVar5 = bVar5 | bVar4;\n      if (bVar5 != 0) {\n        bVar5 = FUN_004049a0(bVar4,lVar6,__offset);\n      }\n      uVar7 = uVar7 + bVar4;\n      bVar4 = uVar7 < param_5 || param_5 == 0;\n      if ((uVar7 >= param_5 && param_5 != 0) && (bVar5 == 0)) {\n        return;\n      }\n      param_4 = param_4 - __offset;\n      lVar6 = lVar6 + __offset;\n      __offset = param_1;\n    } while (param_1 <= param_4);\n    if (param_4 != 0) goto LAB_00404c00;\n    while( true ) {\n      if (bVar8) {\n        if (param_5 <= uVar7) {\n          return;\n        }\n        do {\n          uVar7 = uVar7 + 1;\n          FUN_004049a0(1,0,0);\n        } while (param_5 != uVar7);\n        return;\n      }\nLAB_00404b84:\n      if ((bVar5 == 0) && (_Var1 = lseek(0,__offset,1), _Var1 != -1)) {\n        bVar4 = true;\n        __offset = param_1;\n      }\n      param_4 = FUN_00406fe0(0,param_2,param_3);\n      if (param_4 == 0xffffffffffffffff) {\n        uVar2 = FUN_00406e40(0,3,DAT_0060e5f0);\n        piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar2);\n      }\n      bVar8 = param_4 == 0;\n      if (__offset <= param_4) break;\nLAB_00404bc6:\n      if (param_4 != 0) {\n        lVar6 = param_2;\n        if ((bVar5 | bVar4) == 0) {\n          bVar5 = 0;\n          bVar4 = param_5 == uVar7;\n          if (bVar4) {\n            return;\n          }\n        }\n        else {\nLAB_00404c00:\n          bVar5 = FUN_004049a0(bVar4,lVar6,param_4);\n          uVar7 = uVar7 + bVar4;\n          bVar4 = (bool)(param_5 == uVar7 & (bVar5 ^ 1));\n          if (bVar4 != false) {\n            return;\n          }\n        }\n        __offset = __offset - param_4;\n      }\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404ab0"
        },
        {
            "funcStartAddr": "0x404cf0",
            "funcEndAddr": "0x4050bd",
            "decompiledFuncCode": "\nvoid FUN_00404cf0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_0060e778;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_00404d2f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE [PREFIX]]\\n\",5);\n  __printf_chk(1,uVar3,uVar5);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Output pieces of FILE to PREFIXaa, PREFIXab, ...;\\ndefault size is 1000 lines, and default PREFIX is \\'x\\'.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"  -a, --suffix-length=N   generate suffixes of length N (default %d)\\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\\n  -b, --bytes=SIZE        put SIZE bytes per output file\\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output file\\n  -d                      use numeric suffixes starting at 0, not alphabetic\\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\\n  -x                      use hex suffixes starting at 0, not alphabetic\\n      --hex-suffixes[=FROM]  same as -x, but allow setting the start value\\n  -e, --elide-empty-files  do not generate empty output files with \\'-n\\'\\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\\n  -l, --lines=NUMBER      put NUMBER lines/records per output file\\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\\n                            \\'\\\\0\\' (zero) specifies the NUL character\\n  -u, --unbuffered        immediately copy input to output with \\'-n r/...\\'\\n\"\n                    ,5);\n  __fprintf_chk(stdout,1,uVar5,2);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --verbose           print a diagnostic just before each\\n                            output file is opened\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nCHUNKS may be:\\n  N       split into N files based on size of input\\n  K/N     output Kth of N to stdout\\n  l/N     split into N files without splitting lines/records\\n  l/K/N   output Kth of N to stdout without splitting lines/records\\n  r/N     like \\'l\\' but use round robin distribution\\n  r/K/N   likewise but only output Kth of N to stdout\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00409a99;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x409b13;\n  local_78[1] = (byte *)0x409aab;\n  local_78[2] = (byte *)0x409ac1;\n  local_78[3] = (byte *)0x409acb;\n  local_78[4] = (byte *)0x409ada;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar11 = *ppbVar6;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 6;\n    pbVar10 = (byte *)\"split\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar7[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"split\";\n        goto LAB_00405093;\n      }\n    }\n    pcVar4 = \"split\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"split\");\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00405093:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,\"split\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"split\");\n    if (pcVar4 != \"split\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pcVar4,pcVar8);\nLAB_00404d2f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00404cf0"
        },
        {
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4050c8",
            "decompiledFuncCode": "\nvoid FUN_004050c0(undefined8 param_1)\n\n{\n  DAT_0060e770 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004050c0"
        },
        {
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050d8",
            "decompiledFuncCode": "\nvoid FUN_004050d0(undefined param_1)\n\n{\n  DAT_0060e768 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004050d0"
        },
        {
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40517c",
            "decompiledFuncCode": "\nvoid FUN_004050e0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00409110(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060e768 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060e770 != 0) {\n        uVar4 = FUN_00406e10();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,\"%s\",uVar3);\n    }\n  }\n  iVar1 = FUN_00409110(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060e2b0);\n}\n\n",
            "funcName": "FUN_004050e0"
        },
        {
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x4051d2",
            "decompiledFuncCode": "\nchar * FUN_00405180(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00405180"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x405207",
            "decompiledFuncCode": "\nvoid FUN_004051e0(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x405256",
            "decompiledFuncCode": "\nvoid FUN_00405210(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_004070a0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405210"
        },
        {
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052c3",
            "decompiledFuncCode": "\nint FUN_00405260(int param_1,char *param_2,int param_3,uint param_4)\n\n{\n  int iVar1;\n  int __fd;\n  int iVar2;\n  int *piVar3;\n  \n  __fd = open(param_2,param_3,(ulong)param_4);\n  if ((param_1 != __fd) && (-1 < __fd)) {\n    iVar2 = dup2(__fd,param_1);\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    close(__fd);\n    *piVar3 = iVar1;\n    return iVar2;\n  }\n  return __fd;\n}\n\n",
            "funcName": "FUN_00405260"
        },
        {
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x40533d",
            "decompiledFuncCode": "\nlong FUN_004052d0(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_00407040(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_004052d0"
        },
        {
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405394",
            "decompiledFuncCode": "\nchar * FUN_00405350(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00405350"
        },
        {
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405439",
            "decompiledFuncCode": "\nvoid FUN_004053a0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040ad08;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060e778 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004053a0"
        },
        {
            "funcStartAddr": "0x405440",
            "funcEndAddr": "0x40551f",
            "decompiledFuncCode": "\nchar * FUN_00405440(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004091d0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00405518:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040ad19;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040ad0e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00405518;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040ad15;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040ad12;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00405440"
        },
        {
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x406673",
            "decompiledFuncCode": "\nulong FUN_00405540(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00406191:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00405dc6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00406191;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00405440(&DAT_0040ad1d,param_5);\n      param_9 = (char *)FUN_00405440(&DAT_0040c26f);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_004055d8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_004055e8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00405d68;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00405ce0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00405cf2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00405b5e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004059f5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00405cf2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00405cf2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00405cf2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_004059f5;\n      case 0xc:\nswitchD_00405cf2_caseD_c:\n        bVar17 = 0x66;\nLAB_004059f5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00405948;\n        }\nLAB_00405a00:\n        bVar23 = false;\n        goto LAB_004057bb;\n      case 0xd:\n        bVar20 = false;\nswitchD_004056d8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00405910;\n      case 0x20:\n        bVar25 = false;\nLAB_00405d3a:\n        uVar19 = 0x20;\n        goto LAB_00405d02;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_004056d8_caseD_21:\n        bVar25 = false;\n        goto LAB_0040591b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00405d1a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00405728;\n        }\n        bVar23 = false;\n        goto LAB_0040573f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00405d02:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00405741;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00405b5e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00405b5e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_004056d8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00405b5e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00405937;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00405ce0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004056d8_caseD_0;\n      default:\n        goto switchD_00405b5e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00405a00;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00405cf2_caseD_9;\n      case 10:\n        goto switchD_00405cf2_caseD_a;\n      case 0xb:\n        goto switchD_00405cf2_caseD_b;\n      case 0xc:\n        goto switchD_00405cf2_caseD_c;\n      case 0xd:\n        goto switchD_004056d8_caseD_d;\n      case 0x20:\n        goto LAB_00405d3a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_004056d8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00405d1a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00405d02;\n      case 0x27:\n        goto switchD_00405b5e_caseD_27;\n      case 0x3f:\n        goto switchD_00405b5e_caseD_3f;\n      case 0x5c:\n        goto switchD_004056d8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00405b5e_caseD_7b;\n      }\n      goto LAB_00405782;\n    }\n    goto LAB_0040595a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00405cf2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_004056d8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00405838;\n          }\nLAB_00405a7a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00405a7a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00405838;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00405ab9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00405838;\n        goto LAB_00405741;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040594c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00405728;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_004055e8;\n  default:\nswitchD_00405b5e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00408d50(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040646a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_004065a7;\n          goto LAB_00406597;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040594c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040646a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00405b34;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00405b72;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00405b72;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00405b72:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00405b8a:\n      param_5 = 2;\n      goto LAB_0040594c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00405716;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00405716:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00405b8a;\n    goto LAB_00405728;\n  case 0x23:\n  case 0x7e:\nLAB_0040570d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00405716;\n    goto LAB_0040591b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00405b5e_caseD_25;\n  case 0x27:\nswitchD_00405b5e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00405728;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00405838;\n    }\n    goto LAB_0040594c;\n  case 0x3f:\nswitchD_00405b5e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00405838;\n      }\n      goto LAB_0040594c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00405728;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00405ab9;\n      }\n      goto LAB_0040595a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00405728;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_004056d8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00405854;\n    }\n    if (local_5c) goto LAB_0040594c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00405854;\n  case 0x7b:\n  case 0x7d:\nswitchD_00405b5e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040570d;\n    goto LAB_0040591b;\n  }\nLAB_00405910:\n  if (!bVar6) {\nLAB_0040591b:\n    bVar23 = false;\n    goto LAB_00405728;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00405937;\nLAB_00405d68:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040594c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040595a:\n    uVar9 = FUN_00405540(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0040663d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00405540(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0040663d;\nLAB_00405dc6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_004055d8;\n  while (__s1[uVar21] != 0) {\nLAB_00406597:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_004065a7:\n  bVar23 = false;\nLAB_0040646a:\n  if (1 < uVar21) {\nLAB_0040602e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040594c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_004057cd;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00405854;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00405b34:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040602e;\n  }\nswitchD_00405b5e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00405728:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_0040573f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00405741:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00405838;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00405838:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00405854:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_004057cd;\n    }\n  }\njoined_r0x00405937:\n  if (local_5c) {\nLAB_00405948:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040594c;\n  }\nLAB_00405782:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_004057bb:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_004057cd:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_004055e8;\n}\n\n",
            "funcName": "FUN_00405540"
        },
        {
            "funcStartAddr": "0x406770",
            "funcEndAddr": "0x40690b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00406770(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060e2f8;\n  if (DAT_0060e310 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004078e0();\n    }\n    if (PTR_DAT_0060e2f8 == &DAT_0060e300) {\n      puVar8 = (undefined4 *)FUN_004076f0(0);\n      uVar6 = PTR_DAT_0060e308._4_4_;\n      uVar5 = PTR_DAT_0060e308._0_4_;\n      uVar3 = _UNK_0060e304;\n      PTR_DAT_0060e2f8 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060e300;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_004076f0(PTR_DAT_0060e2f8);\n      PTR_DAT_0060e2f8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060e310 * 4,0,(long)((param_1 + 1) - DAT_0060e310) << 4);\n    DAT_0060e310 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00405540(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060e780) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00407690(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00405540(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00406770"
        },
        {
            "funcStartAddr": "0x406910",
            "funcEndAddr": "0x406944",
            "decompiledFuncCode": "\nvoid FUN_00406910(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060e880;\n  }\n  FUN_00407890(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00406910"
        },
        {
            "funcStartAddr": "0x406950",
            "funcEndAddr": "0x40695f",
            "decompiledFuncCode": "\nundefined4 FUN_00406950(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060e880;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00406950"
        },
        {
            "funcStartAddr": "0x406960",
            "funcEndAddr": "0x40696f",
            "decompiledFuncCode": "\nvoid FUN_00406960(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060e880;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00406960"
        },
        {
            "funcStartAddr": "0x406970",
            "funcEndAddr": "0x4069a3",
            "decompiledFuncCode": "\nuint FUN_00406970(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060e880;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00406970"
        },
        {
            "funcStartAddr": "0x4069b0",
            "funcEndAddr": "0x4069c3",
            "decompiledFuncCode": "\nundefined4 FUN_004069b0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060e880;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004069b0"
        },
        {
            "funcStartAddr": "0x4069d0",
            "funcEndAddr": "0x4069fb",
            "decompiledFuncCode": "\nvoid FUN_004069d0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060e880;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004069d0"
        },
        {
            "funcStartAddr": "0x406a00",
            "funcEndAddr": "0x406a72",
            "decompiledFuncCode": "\nvoid FUN_00406a00(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060e880;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00405540(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00406a00"
        },
        {
            "funcStartAddr": "0x406a80",
            "funcEndAddr": "0x406b61",
            "decompiledFuncCode": "\nundefined8 FUN_00406a80(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060e880;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00405540(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00407690(lVar3 + 1);\n  FUN_00405540(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00406a80"
        },
        {
            "funcStartAddr": "0x406b70",
            "funcEndAddr": "0x406b7a",
            "decompiledFuncCode": "\nvoid FUN_00406b70(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00406a80(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406b70"
        },
        {
            "funcStartAddr": "0x406b80",
            "funcEndAddr": "0x406c15",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406b80(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060e2f8;\n  if (1 < DAT_0060e310) {\n    ppvVar2 = (void **)(PTR_DAT_0060e2f8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060e2f8 + (ulong)(DAT_0060e310 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060e780) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060e300 = 0x100;\n    PTR_DAT_0060e308 = &DAT_0060e780;\n  }\n  if (__ptr_00 != &DAT_0060e300) {\n    free(__ptr_00);\n    PTR_DAT_0060e2f8 = &DAT_0060e300;\n  }\n  DAT_0060e310 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00406b80"
        },
        {
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c31",
            "decompiledFuncCode": "\nvoid FUN_00406c20(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406770(param_1,param_2,0xffffffffffffffff,&DAT_0060e880);\n  return;\n}\n\n",
            "funcName": "FUN_00406c20"
        },
        {
            "funcStartAddr": "0x406c40",
            "funcEndAddr": "0x406c4a",
            "decompiledFuncCode": "\nvoid FUN_00406c40(void)\n\n{\n  FUN_00406770();\n  return;\n}\n\n",
            "funcName": "FUN_00406c40"
        },
        {
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x406c66",
            "decompiledFuncCode": "\nvoid FUN_00406c50(undefined8 param_1)\n\n{\n  FUN_00406770(0,param_1,0xffffffffffffffff,&DAT_0060e880);\n  return;\n}\n\n",
            "funcName": "FUN_00406c50"
        },
        {
            "funcStartAddr": "0x406c70",
            "funcEndAddr": "0x406c82",
            "decompiledFuncCode": "\nvoid FUN_00406c70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406770(0,param_1,param_2,&DAT_0060e880);\n  return;\n}\n\n",
            "funcName": "FUN_00406c70"
        },
        {
            "funcStartAddr": "0x406c90",
            "funcEndAddr": "0x406cf8",
            "decompiledFuncCode": "\nvoid FUN_00406c90(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00406770(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406c90"
        },
        {
            "funcStartAddr": "0x406d00",
            "funcEndAddr": "0x406d64",
            "decompiledFuncCode": "\nvoid FUN_00406d00(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00406770(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406d00"
        },
        {
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x406d7c",
            "decompiledFuncCode": "\nvoid FUN_00406d70(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00406c90(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406d70"
        },
        {
            "funcStartAddr": "0x406d80",
            "funcEndAddr": "0x406d8f",
            "decompiledFuncCode": "\nvoid FUN_00406d80(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00406d00(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406d80"
        },
        {
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406e00",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406d90(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060e8b0;\n  local_48 = _DAT_0060e880;\n  uStack_40 = uRam000000000060e888;\n  local_38 = _DAT_0060e890;\n  uStack_30 = uRam000000000060e898;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060e8a0;\n  uStack_20 = uRam000000000060e8a8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00406770(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00406d90"
        },
        {
            "funcStartAddr": "0x406e00",
            "funcEndAddr": "0x406e0d",
            "decompiledFuncCode": "\nvoid FUN_00406e00(undefined8 param_1,char param_2)\n\n{\n  FUN_00406d90(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406e00"
        },
        {
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406e21",
            "decompiledFuncCode": "\nvoid FUN_00406e10(undefined8 param_1)\n\n{\n  FUN_00406d90(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00406e10"
        },
        {
            "funcStartAddr": "0x406e30",
            "funcEndAddr": "0x406e3a",
            "decompiledFuncCode": "\nvoid FUN_00406e30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406d90(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00406e30"
        },
        {
            "funcStartAddr": "0x406e40",
            "funcEndAddr": "0x406eae",
            "decompiledFuncCode": "\nvoid FUN_00406e40(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00406770(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406e40"
        },
        {
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x406f1c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406eb0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060e888;\n  local_38 = _DAT_0060e890;\n  uStack_30 = uRam000000000060e898;\n  local_28 = _DAT_0060e8a0;\n  lStack_20 = uRam000000000060e8a8;\n  local_18 = DAT_0060e8b0;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060e880 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00406770(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406eb0"
        },
        {
            "funcStartAddr": "0x406f20",
            "funcEndAddr": "0x406f29",
            "decompiledFuncCode": "\nvoid FUN_00406f20(void)\n\n{\n  FUN_00406eb0();\n  return;\n}\n\n",
            "funcName": "FUN_00406f20"
        },
        {
            "funcStartAddr": "0x406f30",
            "funcEndAddr": "0x406f47",
            "decompiledFuncCode": "\nvoid FUN_00406f30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00406eb0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00406f30"
        },
        {
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x406f63",
            "decompiledFuncCode": "\nvoid FUN_00406f50(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00406eb0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00406f50"
        },
        {
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x406f7a",
            "decompiledFuncCode": "\nvoid FUN_00406f70(void)\n\n{\n  FUN_00406770();\n  return;\n}\n\n",
            "funcName": "FUN_00406f70"
        },
        {
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x406f92",
            "decompiledFuncCode": "\nvoid FUN_00406f80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406770(0,param_1,param_2,&DAT_0060e2c0);\n  return;\n}\n\n",
            "funcName": "FUN_00406f80"
        },
        {
            "funcStartAddr": "0x406fa0",
            "funcEndAddr": "0x406fb1",
            "decompiledFuncCode": "\nvoid FUN_00406fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406770(param_1,param_2,0xffffffffffffffff,&DAT_0060e2c0);\n  return;\n}\n\n",
            "funcName": "FUN_00406fa0"
        },
        {
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x406fd6",
            "decompiledFuncCode": "\nvoid FUN_00406fc0(undefined8 param_1)\n\n{\n  FUN_00406770(0,param_1,0xffffffffffffffff,&DAT_0060e2c0);\n  return;\n}\n\n",
            "funcName": "FUN_00406fc0"
        },
        {
            "funcStartAddr": "0x406fe0",
            "funcEndAddr": "0x40703d",
            "decompiledFuncCode": "\nssize_t FUN_00406fe0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7fffe001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00406fe0"
        },
        {
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x40709d",
            "decompiledFuncCode": "\nssize_t FUN_00407040(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7fffe001) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00407040"
        },
        {
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070ec",
            "decompiledFuncCode": "\nuint FUN_004070a0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00409740();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_004070a0"
        },
        {
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x407494",
            "decompiledFuncCode": "\nundefined8\nFUN_004070f0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040ba6b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040736c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040736c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00407409;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00407409:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004071ea;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_004071ea:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004070f0"
        },
        {
            "funcStartAddr": "0x4074d0",
            "funcEndAddr": "0x4074f0",
            "decompiledFuncCode": "\nvoid FUN_004074d0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004070f0();\n  return;\n}\n\n",
            "funcName": "FUN_004074d0"
        },
        {
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407549",
            "decompiledFuncCode": "\nvoid FUN_004074f0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004070f0();\n  return;\n}\n\n",
            "funcName": "FUN_004074f0"
        },
        {
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x407608",
            "decompiledFuncCode": "\nvoid FUN_00407550(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004070f0();\n  return;\n}\n\n",
            "funcName": "FUN_00407550"
        },
        {
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x407684",
            "decompiledFuncCode": "\nvoid FUN_00407610(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00407610"
        },
        {
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4076aa",
            "decompiledFuncCode": "\nvoid FUN_00407690(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004078e0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00407690"
        },
        {
            "funcStartAddr": "0x4076b0",
            "funcEndAddr": "0x4076d1",
            "decompiledFuncCode": "\nvoid FUN_004076b0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00407690();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004078e0();\n}\n\n",
            "funcName": "FUN_004076b0"
        },
        {
            "funcStartAddr": "0x4076e0",
            "funcEndAddr": "0x4076e2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00407690(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004078e0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4076e0"
        },
        {
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x407720",
            "decompiledFuncCode": "\nvoid * FUN_004076f0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004078e0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004076f0"
        },
        {
            "funcStartAddr": "0x407730",
            "funcEndAddr": "0x407751",
            "decompiledFuncCode": "\nvoid FUN_00407730(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_004076f0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004078e0();\n}\n\n",
            "funcName": "FUN_00407730"
        },
        {
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x4077d8",
            "decompiledFuncCode": "\nvoid FUN_00407760(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004077bb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004077bb:\n                    /* WARNING: Subroutine does not return */\n      FUN_004078e0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004076f0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00407760"
        },
        {
            "funcStartAddr": "0x4077f0",
            "funcEndAddr": "0x40783a",
            "decompiledFuncCode": "\nvoid FUN_004077f0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_004076f0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040783a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040783a:\n                    /* WARNING: Subroutine does not return */\n      FUN_004078e0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_004076f0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004077f0"
        },
        {
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x407857",
            "decompiledFuncCode": "\nvoid FUN_00407840(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00407690();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00407840"
        },
        {
            "funcStartAddr": "0x407860",
            "funcEndAddr": "0x40788e",
            "decompiledFuncCode": "\nvoid FUN_00407860(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004078e0();\n}\n\n",
            "funcName": "FUN_00407860"
        },
        {
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x4078b8",
            "decompiledFuncCode": "\nvoid FUN_00407890(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00407690(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00407890"
        },
        {
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x4078d3",
            "decompiledFuncCode": "\nvoid FUN_004078c0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00407690(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004078c0"
        },
        {
            "funcStartAddr": "0x4078e0",
            "funcEndAddr": "0x40790c",
            "decompiledFuncCode": "\nvoid FUN_004078e0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_0060e2b0,0,\"%s\",uVar1);\n}\n\n",
            "funcName": "FUN_004078e0"
        },
        {
            "funcStartAddr": "0x407920",
            "funcEndAddr": "0x4079e3",
            "decompiledFuncCode": "\nulong FUN_00407920(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  ulong local_40 [2];\n  \n  iVar1 = FUN_00407a20(param_1,0,param_2,local_40);\n  if (iVar1 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar2 = __errno_location();\n    *piVar2 = (-(uint)(local_40[0] < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar2 = __errno_location();\n    if (iVar1 == 1) {\n      *piVar2 = 0x4b;\n    }\n    else if (iVar1 == 3) {\n      *piVar2 = 0;\n    }\n  }\n  uVar3 = FUN_00406fc0(param_1);\n  iVar1 = *piVar2;\n  if (iVar1 == 0x16) {\n    iVar1 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  error(param_7,iVar1,\"%s: %s\",param_6,uVar3);\n}\n\n",
            "funcName": "FUN_00407920"
        },
        {
            "funcStartAddr": "0x4079f0",
            "funcEndAddr": "0x407a11",
            "decompiledFuncCode": "\nvoid FUN_004079f0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00407920(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_004079f0"
        },
        {
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407dce",
            "decompiledFuncCode": "\nulong FUN_00407a20(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00407ac2;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_00407bac_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_00407b9a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00407b81. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040be38)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_00407b9a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00407c07;\n  default:\nswitchD_00407bac_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00407c94;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x00407bcc;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00407c07;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x00407bcc:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00407c07:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00407c94;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00407c94;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00407c94;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00407c94:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00407c07;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00407c07;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00407ac2:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00407a20"
        },
        {
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407ed8",
            "decompiledFuncCode": "\nint FUN_00407e60(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00407ec7;\n    }\n    iVar1 = FUN_00407ee0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00407ec7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00407e60"
        },
        {
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407f1b",
            "decompiledFuncCode": "\nvoid FUN_00407ee0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00407f20(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00407ee0"
        },
        {
            "funcStartAddr": "0x407f20",
            "funcEndAddr": "0x407f76",
            "decompiledFuncCode": "\nulong FUN_00407f20(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00407f20"
        },
        {
            "funcStartAddr": "0x407f80",
            "funcEndAddr": "0x408055",
            "decompiledFuncCode": "\nvoid FUN_00407f80(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_00407ffc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_00407ffc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_00407ffc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00407f80"
        },
        {
            "funcStartAddr": "0x408060",
            "funcEndAddr": "0x40865e",
            "decompiledFuncCode": "\nint FUN_00408060(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00408280;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004081c0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004081c0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004081c0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_0040c269,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00408280:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00408060"
        },
        {
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x408be7",
            "decompiledFuncCode": "\nuint FUN_00408680(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_004086ca:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_004087cd;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_004087cd:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_004087d8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00408748;\nLAB_004087ec:\n    if (*pbVar8 == 0) goto LAB_00408748;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_004086ca;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_004087d8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_004087ec;\nLAB_00408748:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00407f80(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_004088b6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040c281;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00407f80(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_004088b6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040c281;\n        goto LAB_00408a15;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_004089c0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00408060(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040c282);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_004089c0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040c2a0;\nLAB_00408a15:\n  uVar3 = FUN_00408060(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00408680"
        },
        {
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408ca6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408c50(void)\n\n{\n  DAT_0060e8c0 = DAT_0060e31c;\n  _DAT_0060e8c4 = DAT_0060e318;\n  FUN_00408680();\n  DAT_0060e31c = DAT_0060e8c0;\n  DAT_0060e908 = DAT_0060e8d0;\n  _DAT_0060e314 = DAT_0060e8c8;\n  return;\n}\n\n",
            "funcName": "FUN_00408c50"
        },
        {
            "funcStartAddr": "0x408cb0",
            "funcEndAddr": "0x408cc8",
            "decompiledFuncCode": "\nvoid FUN_00408cb0(void)\n\n{\n  FUN_00408c50();\n  return;\n}\n\n",
            "funcName": "FUN_00408cb0"
        },
        {
            "funcStartAddr": "0x408cd0",
            "funcEndAddr": "0x408ce3",
            "decompiledFuncCode": "\nvoid FUN_00408cd0(void)\n\n{\n  FUN_00408c50();\n  return;\n}\n\n",
            "funcName": "FUN_00408cd0"
        },
        {
            "funcStartAddr": "0x408cf0",
            "funcEndAddr": "0x408d05",
            "decompiledFuncCode": "\nvoid FUN_00408cf0(void)\n\n{\n  FUN_00408680();\n  return;\n}\n\n",
            "funcName": "FUN_00408cf0"
        },
        {
            "funcStartAddr": "0x408d10",
            "funcEndAddr": "0x408d26",
            "decompiledFuncCode": "\nvoid FUN_00408d10(void)\n\n{\n  FUN_00408c50();\n  return;\n}\n\n",
            "funcName": "FUN_00408d10"
        },
        {
            "funcStartAddr": "0x408d30",
            "funcEndAddr": "0x408d48",
            "decompiledFuncCode": "\nvoid FUN_00408d30(void)\n\n{\n  FUN_00408680();\n  return;\n}\n\n",
            "funcName": "FUN_00408d30"
        },
        {
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408dbf",
            "decompiledFuncCode": "\nsize_t FUN_00408d50(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40c29f;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00408d74;\n  }\n  param_1 = &local_1c;\nLAB_00408d74:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00409170(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00408d50"
        },
        {
            "funcStartAddr": "0x408dd0",
            "funcEndAddr": "0x408eb3",
            "decompiledFuncCode": "\nulong * FUN_00408dd0(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_00408e10:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_00408e10;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00408dd0"
        },
        {
            "funcStartAddr": "0x408ee0",
            "funcEndAddr": "0x409031",
            "decompiledFuncCode": "\nint FUN_00408ee0(byte *param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  ulong uVar3;\n  long lVar4;\n  uint uVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  char *__s1;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  char *local_30 [2];\n  \n  bVar10 = 0;\n  __s1 = \"HUP\";\n  uVar3 = 0;\n  if ((int)(char)*param_1 - 0x30U < 10) {\n    uVar3 = strtol((char *)param_1,local_30,10);\n    if ((*local_30[0] == '\\0') && ((long)uVar3 < 0x41)) {\nLAB_00408f2e:\n      *param_2 = (int)uVar3;\n      return (int)uVar3 >> 0x1f;\n    }\n  }\n  else {\n    do {\n      iVar1 = strcmp(__s1,(char *)param_1);\n      if (iVar1 == 0) {\n        uVar3 = (ulong)(uint)(&DAT_0060e320)[uVar3 * 3];\n        goto LAB_00408f2e;\n      }\n      uVar5 = (int)uVar3 + 1;\n      uVar3 = (ulong)uVar5;\n      __s1 = __s1 + 0xc;\n    } while (uVar5 != 0x23);\n    iVar1 = __libc_current_sigrtmin();\n    iVar2 = __libc_current_sigrtmax();\n    bVar8 = false;\n    bVar9 = iVar1 == 0;\n    if (0 < iVar1) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMIN\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((!bVar8 && !bVar9) == bVar8) {\n        lVar4 = strtol((char *)(param_1 + 5),local_30,10);\n        if (((*local_30[0] == '\\0') && (-1 < lVar4)) && (lVar4 <= iVar2 - iVar1)) {\n          uVar3 = (ulong)(uint)((int)lVar4 + iVar1);\n          goto LAB_00408f2e;\n        }\n        goto LAB_00408f60;\n      }\n    }\n    bVar8 = false;\n    bVar9 = iVar2 == 0;\n    if (0 < iVar2) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMAX\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((((!bVar8 && !bVar9) == bVar8) &&\n          (lVar4 = strtol((char *)(param_1 + 5),local_30,10), *local_30[0] == '\\0')) &&\n         ((iVar1 - iVar2 <= lVar4 && (lVar4 < 1)))) {\n        uVar3 = (ulong)(uint)((int)lVar4 + iVar2);\n        goto LAB_00408f2e;\n      }\n    }\n  }\nLAB_00408f60:\n  *param_2 = -1;\n  return -1;\n}\n\n",
            "funcName": "FUN_00408ee0"
        },
        {
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x4090fd",
            "decompiledFuncCode": "\nint FUN_00409040(int param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ulong uVar5;\n  \n  piVar3 = &DAT_0060e320;\n  uVar5 = 0;\n  do {\n    if (*piVar3 == param_1) {\n      strcpy((char *)param_2,&DAT_0060e324 + uVar5 * 0xc);\n      return 0;\n    }\n    uVar4 = (int)uVar5 + 1;\n    uVar5 = (ulong)uVar4;\n    piVar3 = piVar3 + 3;\n  } while (uVar4 != 0x23);\n  iVar1 = __libc_current_sigrtmin();\n  iVar2 = __libc_current_sigrtmax();\n  if ((param_1 < iVar1) || (iVar2 < param_1)) {\n    param_1 = -1;\n  }\n  else {\n    if ((iVar2 - iVar1 >> 1) + iVar1 < param_1) {\n      *param_2 = 0x414d5452;\n      *(undefined2 *)(param_2 + 1) = 0x58;\n      iVar1 = iVar2;\n    }\n    else {\n      *param_2 = 0x494d5452;\n      *(undefined2 *)(param_2 + 1) = 0x4e;\n    }\n    param_1 = param_1 - iVar1;\n    if (param_1 != 0) {\n      __sprintf_chk((long)param_2 + 5,1,0xffffffffffffffff,&DAT_0040c2b0,param_1);\n      return 0;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00409040"
        },
        {
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x40916c",
            "decompiledFuncCode": "\nulong FUN_00409110(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00407e60(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00409110"
        },
        {
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091c6",
            "decompiledFuncCode": "\nbool FUN_00409170(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040c2b4;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00409170"
        },
        {
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x409724",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004091d0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060e8f8 != (char *)0x0) goto LAB_0040920a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_004092f5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00409316;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_004092f5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00409316:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_004093b0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040953c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_004093b0;\n              if (uVar4 == 0x23) goto LAB_004095a1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040954f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00407e60(__stream);\n                goto LAB_00409354;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040953c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040954f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040934e;\n    }\n  }\n  DAT_0060e8f8 = \"\";\nLAB_0040920a:\n  cVar1 = *DAT_0060e8f8;\n  pcVar7 = DAT_0060e8f8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00409264:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00409264;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_004095a1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040954f;\n  goto LAB_004093b0;\nLAB_0040954f:\n  FUN_00407e60(__stream);\n  if (local_d0 == 0) {\nLAB_0040934e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00409354:\n  free(__file);\n  DAT_0060e8f8 = pcVar7;\n  goto LAB_0040920a;\n}\n\n",
            "funcName": "FUN_004091d0"
        },
        {
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x40974e",
            "decompiledFuncCode": "\nvoid FUN_00409740(undefined8 param_1)\n\n{\n  FUN_00409750(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00409740"
        },
        {
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x40987c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00409750(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0060e900 < 0) {\n    iVar1 = FUN_00409750(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0060e900 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0060e900 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00409750(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0060e900 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00409750"
        },
        {
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x4098ed",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004098c3) */\n/* WARNING: Removing unreachable block (ram,0x004098c8) */\n\nvoid FUN_00409890(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00409890"
        },
        {
            "funcStartAddr": "0x4098f0",
            "funcEndAddr": "0x4098f1",
            "decompiledFuncCode": "\nvoid FUN_004098f0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004098f0"
        },
        {
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409918",
            "decompiledFuncCode": "\nvoid FUN_00409900(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060e288);\n  return;\n}\n\n",
            "funcName": "FUN_00409900"
        },
        {
            "funcStartAddr": "0x409918",
            "funcEndAddr": "0x409938",
            "decompiledFuncCode": "\nundefined8 FUN_00409918(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060de30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00409918"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}