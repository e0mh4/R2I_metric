{
    "funcCount": 194,
    "funcInfo": [
        {
            "funcStartAddr": "0x4021d0",
            "funcEndAddr": "0x4021d5",
            "decompiledFuncCode": "\nvoid FUN_004021d0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021d0"
        },
        {
            "funcStartAddr": "0x4021d5",
            "funcEndAddr": "0x4021da",
            "decompiledFuncCode": "\nvoid FUN_004021d5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021d5"
        },
        {
            "funcStartAddr": "0x4021da",
            "funcEndAddr": "0x4021df",
            "decompiledFuncCode": "\nvoid FUN_004021da(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021da"
        },
        {
            "funcStartAddr": "0x4021df",
            "funcEndAddr": "0x4021e4",
            "decompiledFuncCode": "\nvoid FUN_004021df(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021df"
        },
        {
            "funcStartAddr": "0x4021e9",
            "funcEndAddr": "0x4021ee",
            "decompiledFuncCode": "\nvoid FUN_004021e9(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021e9"
        },
        {
            "funcStartAddr": "0x4021ee",
            "funcEndAddr": "0x4021f3",
            "decompiledFuncCode": "\nvoid FUN_004021ee(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021ee"
        },
        {
            "funcStartAddr": "0x4021f3",
            "funcEndAddr": "0x4021f8",
            "decompiledFuncCode": "\nvoid FUN_004021f3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021f3"
        },
        {
            "funcStartAddr": "0x4021f8",
            "funcEndAddr": "0x4021fd",
            "decompiledFuncCode": "\nvoid FUN_004021f8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004021f8"
        },
        {
            "funcStartAddr": "0x402202",
            "funcEndAddr": "0x402207",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_402202"
        },
        {
            "funcStartAddr": "0x402210",
            "funcEndAddr": "0x40291a",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte FUN_00402210(ulong param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  bool bVar2;\n  byte bVar3;\n  byte bVar4;\n  int iVar5;\n  undefined8 uVar6;\n  void *__ptr;\n  char *pcVar7;\n  uint *puVar8;\n  undefined8 uVar9;\n  int *piVar10;\n  uint uVar11;\n  undefined8 *puVar12;\n  undefined8 *puVar13;\n  char *pcVar14;\n  ulong uVar15;\n  char *__filename;\n  char *pcVar16;\n  undefined auVar17 [16];\n  undefined8 uStack_e8;\n  char *local_e0;\n  char **local_d8;\n  uint local_d0;\n  byte local_c9;\n  stat local_c8;\n  \n  bVar4 = 0;\n  bVar2 = false;\n  uVar15 = 0;\n  param_1 = param_1 & 0xffffffff;\n  FUN_00406260(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040bb40(FUN_00404960);\n  DAT_006113e0 = 0;\n  DAT_006113e1 = 0;\n  DAT_006113e3 = 0;\n  DAT_006113e2 = '\\0';\n  DAT_006113e6 = '\\0';\n  local_e0 = (char *)0x0;\n  __filename = (char *)0x0;\n  pcVar16 = (char *)0x0;\nLAB_004022a0:\n  iVar5 = FUN_0040a1b0(param_1 & 0xffffffff,param_2,\"bdfinrst:vFLPS:T\",&PTR_s_backup_0040cc00,0);\n  if (iVar5 == -1) {\n    uVar11 = (int)param_1 - DAT_0061137c;\n    param_1 = (ulong)uVar11;\n    param_2 = param_2 + DAT_0061137c;\n    if ((int)uVar11 < 1) goto LAB_00402823;\n    if ((char)uVar15 == '\\0') {\n      if ((__filename != (char *)0x0) || (__filename = \".\", uVar11 == 1)) goto LAB_00402524;\n      local_d8 = (char **)(param_2 + (long)(int)uVar11 + -1);\n      __filename = *local_d8;\n      pcVar7 = (char *)FUN_00404ca0(__filename);\n      uVar15 = 0xffffffffffffffff;\n      pcVar14 = pcVar7;\n      goto code_r0x004026a5;\n    }\n    if (__filename == (char *)0x0) {\n      if (uVar11 == 2) goto LAB_004025bd;\n      if (uVar11 == 1) goto LAB_004028a6;\n      param_1 = FUN_00407c30(4,param_2[2]);\n      pcVar14 = \"extra operand %s\";\n    }\n    else {\n      uVar6 = dcgettext(0,\"cannot combine --target-directory and --no-target-directory\",5);\n      error(1,0,uVar6);\nLAB_004028a6:\n      param_1 = FUN_00407c30(4,*param_2);\n      pcVar14 = \"missing destination file operand after %s\";\n    }\n    uVar6 = dcgettext(0,pcVar14,5);\n    error(0,0,uVar6,param_1);\n  }\n  else {\n    if (iVar5 == 0x62) {\n      bVar2 = true;\n      if (DAT_006115a0 != (char *)0x0) {\n        pcVar16 = DAT_006115a0;\n      }\n      goto LAB_004022a0;\n    }\n    if (iVar5 < 99) {\nLAB_00402370:\n      if (iVar5 == 0x4c) {\n        DAT_006113e4 = 1;\n      }\n      else {\n        if (iVar5 < 0x4d) goto LAB_004023c8;\n        if (iVar5 == 0x53) {\n          local_e0 = DAT_006115a0;\n          bVar2 = true;\n        }\n        else if (iVar5 == 0x54) {\n          uVar15 = 1;\n        }\n        else {\n          if (iVar5 != 0x50) goto LAB_004023b9;\n          DAT_006113e4 = 0;\n        }\n      }\n      goto LAB_004022a0;\n    }\n    if (iVar5 == 0x6e) {\n      DAT_006112f0 = '\\0';\n      goto LAB_004022a0;\n    }\n    if (iVar5 < 0x6f) {\n      if (iVar5 == 0x66) {\n        DAT_006113e2 = '\\x01';\n        DAT_006113e3 = 0;\n      }\n      else {\n        if (iVar5 != 0x69) {\n          if (iVar5 != 100) goto LAB_004023b9;\n          goto LAB_00402461;\n        }\n        DAT_006113e2 = '\\0';\n        DAT_006113e3 = 1;\n      }\n      goto LAB_004022a0;\n    }\n    if (iVar5 == 0x73) {\n      DAT_006113e6 = '\\x01';\n      goto LAB_004022a0;\n    }\n    if (iVar5 < 0x74) {\n      if (iVar5 != 0x72) goto LAB_004023b9;\n      DAT_006113e5 = '\\x01';\n      goto LAB_004022a0;\n    }\n    if (iVar5 == 0x74) {\n      if (__filename != (char *)0x0) goto LAB_00402926;\n      iVar5 = __xstat(1,DAT_006115a0,&local_c8);\n      __filename = DAT_006115a0;\n      if (iVar5 == 0) {\n        if ((local_c8.st_mode & 0xf000) != 0x4000) {\n          param_1 = FUN_00407c30(4,DAT_006115a0);\n          uVar6 = dcgettext(0,\"target %s is not a directory\",5);\n          iVar5 = error(1,0,uVar6,param_1);\n          goto LAB_00402370;\n        }\n        goto LAB_004022a0;\n      }\n      goto LAB_004028e5;\n    }\n    if (iVar5 == 0x76) {\n      DAT_006113e1 = 1;\n      goto LAB_004022a0;\n    }\n  }\nLAB_004023b9:\n  while( true ) {\n    while( true ) {\n      iVar5 = FUN_004032b0(1);\nLAB_004023c8:\n      if (iVar5 != -0x82) break;\n      FUN_004032b0(0);\nLAB_004027b4:\n      uVar6 = FUN_00407c30(4,__filename);\n      uVar9 = dcgettext(0,\"failed to access %s\",5);\n      error(1,uVar15,uVar9,uVar6);\nLAB_004027ea:\n      uVar15 = 0;\nLAB_004027ed:\n      param_1 = FUN_00407c30(4,__filename);\n      uVar6 = dcgettext(0,\"target %s is not a directory\",5);\n      error(1,uVar15,uVar6,param_1);\nLAB_00402823:\n      uVar6 = dcgettext(0,\"missing file operand\",5);\n      error(0,0,uVar6);\n    }\n    if (iVar5 == 0x46) break;\n    if (iVar5 == -0x83) {\n      FUN_00408910(stdout,&DAT_0040bc39,\"GNU coreutils\",PTR_DAT_006112f8,\"Mike Parker\",\n                   \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n  }\nLAB_00402461:\n  DAT_006113e0 = 1;\n  goto LAB_004022a0;\n  while( true ) {\n    uVar15 = uVar15 - 1;\n    cVar1 = *pcVar14;\n    pcVar14 = pcVar14 + (ulong)bVar4 * -2 + 1;\n    if (cVar1 == '\\0') break;\ncode_r0x004026a5:\n    if (uVar15 == 0) break;\n  }\n  local_d0 = 1;\n  if (~uVar15 != 1) {\n    local_d0 = (uint)(pcVar7[~uVar15 - 2] == '/');\n  }\n  local_c9 = (byte)local_d0;\n  if (DAT_006112f0 == '\\0') {\n    iVar5 = __lxstat(1,__filename,&local_c8);\n  }\n  else {\n    iVar5 = __xstat(1,__filename,&local_c8);\n  }\n  if (iVar5 == 0) goto LAB_00402775;\n  puVar8 = (uint *)__errno_location();\n  uVar11 = *puVar8;\n  uVar15 = (ulong)uVar11;\n  if (uVar11 == 0) goto LAB_00402775;\n  if (0x28 < uVar11) goto LAB_004027b4;\n  if ((0x11000100004U >> (uVar15 & 0x3f) & 1) == 0) goto LAB_004027b4;\n  if (local_d0 != 0) goto LAB_004027ed;\n  do {\n    if ((int)param_1 == 2) goto LAB_004025bd;\n    param_1 = FUN_00407c30(4,*local_d8);\n    uVar6 = dcgettext(0,\"target %s is not a directory\",5);\n    error(1,0,uVar6,param_1);\nLAB_00402775:\n    if (((local_c8.st_mode & 0xf000) == 0x4000) < local_c9) goto LAB_004027ea;\n  } while ((local_c8.st_mode & 0xf000) != 0x4000);\n  uVar11 = (int)param_1 - 1;\n  __filename = (char *)param_2[(int)uVar11];\nLAB_00402524:\n  iVar5 = 0;\n  if (bVar2) {\n    uVar6 = dcgettext(0,\"backup type\",5);\n    iVar5 = FUN_00404280(uVar6,pcVar16);\n  }\n  DAT_006113e8 = iVar5;\n  FUN_00403ce0(local_e0);\n  if ((DAT_006113e5 == '\\0') || (DAT_006113e6 != '\\0')) {\n    if (__filename == (char *)0x0) {\n      bVar4 = FUN_00402a30(*param_2,param_2[1]);\n    }\n    else {\n      if ((((uVar11 != 1) && (DAT_006113e2 != '\\0')) && (DAT_006113e6 == '\\0')) &&\n         ((DAT_006113e8 != 3 &&\n          (DAT_006113d8 = FUN_004057d0(0x3d,0,FUN_00406190,FUN_004061d0,FUN_00406240),\n          DAT_006113d8 == 0)))) {\n                    /* WARNING: Subroutine does not return */\n        FUN_00408ca0();\n      }\n      bVar4 = 1;\n      puVar12 = param_2;\n      do {\n        puVar13 = puVar12 + 1;\n        uVar6 = FUN_00404ca0(*puVar12);\n        __ptr = (void *)FUN_00404e40(__filename,uVar6,&local_c8);\n        FUN_00404d30(local_c8.st_dev);\n        bVar3 = FUN_00402a30(*puVar12,__ptr);\n        bVar4 = bVar4 & bVar3;\n        free(__ptr);\n        puVar12 = puVar13;\n      } while (puVar13 != param_2 + (ulong)(uVar11 - 1) + 1);\n    }\n    return bVar4 ^ 1;\n  }\n  uVar6 = dcgettext(0,\"cannot do --relative without --symbolic\",5);\n  error(1,0,uVar6);\nLAB_004028e5:\n  uVar6 = FUN_00407c30(4,DAT_006115a0);\n  uVar9 = dcgettext(0,\"failed to access %s\",5);\n  piVar10 = __errno_location();\n  error(1,*piVar10,uVar9,uVar6);\nLAB_00402926:\n  uVar6 = dcgettext(0,\"multiple target directories specified\",5);\n  auVar17 = error(1,0,uVar6);\n  uVar6 = uStack_e8;\n  uStack_e8 = SUB168(auVar17,0);\n  (*(code *)PTR___libc_start_main_00610ff0)\n            (FUN_00402210,uVar6,&local_e0,FUN_0040bad0,FUN_0040bb30,SUB168(auVar17 >> 0x40,0),\n             &uStack_e8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\nLAB_004025bd:\n  uVar11 = 2;\n  __filename = (char *)0x0;\n  goto LAB_00402524;\n}\n\n",
            "funcName": "FUN_00402210"
        },
        {
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x40297b",
            "decompiledFuncCode": "\nvoid FUN_00402950(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00610ff0)\n            (FUN_00402210,unaff_retaddr,&stack0x00000008,FUN_0040bad0,FUN_0040bb30,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402950"
        },
        {
            "funcStartAddr": "0x40297b",
            "funcEndAddr": "0x40299a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402988) */\n/* WARNING: Removing unreachable block (ram,0x00402992) */\n\nvoid FUN_0040297b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040297b"
        },
        {
            "funcStartAddr": "0x40299a",
            "funcEndAddr": "0x4029d1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004029c9) */\n\nvoid FUN_0040299a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040299a"
        },
        {
            "funcStartAddr": "0x4029d1",
            "funcEndAddr": "0x402a28",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402a06) */\n\nvoid FUN_004029d1(void)\n\n{\n  if (DAT_006113c8 != '\\0') {\n    return;\n  }\n  FUN_0040297b();\n  DAT_006113c8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004029d1"
        },
        {
            "funcStartAddr": "0x402a28",
            "funcEndAddr": "0x402a2d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004029c9) */\n\nvoid thunk_FUN_0040299a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402a28"
        },
        {
            "funcStartAddr": "0x402a30",
            "funcEndAddr": "0x403236",
            "decompiledFuncCode": "\nuint FUN_00402a30(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  byte bVar2;\n  char cVar3;\n  int iVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  char *pcVar8;\n  uint *puVar9;\n  undefined8 uVar10;\n  void *__ptr;\n  void *__ptr_00;\n  void *__ptr_01;\n  char *__ptr_02;\n  undefined4 uVar11;\n  uint uVar12;\n  byte bVar13;\n  char *__ptr_03;\n  char cVar14;\n  bool bVar15;\n  stat local_158;\n  stat local_c8;\n  \n  bVar2 = DAT_006113e6;\n  uVar12 = (uint)DAT_006113e6;\n  if (DAT_006113e6 == 0) {\n    if (DAT_006113e4 == '\\0') {\n      iVar4 = __lxstat(1,param_1,&local_158);\n    }\n    else {\n      iVar4 = __xstat(1,param_1,&local_158);\n    }\n    if (iVar4 != 0) {\n      uVar6 = FUN_00407c30(4,param_1);\n      uVar7 = dcgettext(0,\"failed to access %s\",5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,uVar7,uVar6);\n      return uVar12;\n    }\n    if ((local_158.st_mode & 0xf000) != 0x4000) goto LAB_00402a92;\n    cVar14 = DAT_006113e0;\n    if (DAT_006113e0 == '\\0') {\n      uVar6 = FUN_00407d00(0,3,param_1);\n      pcVar8 = \"%s: hard link not allowed for directory\";\n      goto LAB_00402f2d;\n    }\n  }\n  else {\nLAB_00402a92:\n    cVar14 = '\\0';\n  }\n  bVar13 = DAT_006113e2;\n  if (((DAT_006113e2 == 0) && (DAT_006113e3 == 0)) && (DAT_006113e8 == 0)) {\nLAB_00402ae6:\n    bVar15 = false;\n    pcVar8 = (char *)0x0;\n  }\n  else {\n    iVar4 = __lxstat(1,param_2,&local_c8);\n    if (iVar4 != 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 != 2) {\n        uVar6 = FUN_00407c30(4,param_2);\n        uVar7 = dcgettext(0,\"failed to access %s\",5);\n        error(0,*piVar5,uVar7,uVar6);\n        return 0;\n      }\n      if (((bVar13 == 0) && ((bVar2 != 0 || (DAT_006113e8 == 0)))) && (iVar4 == 0))\n      goto LAB_00402c70;\n      goto LAB_00402ae6;\n    }\n    if ((DAT_006113d8 != 0) &&\n       (cVar3 = FUN_00404e00(DAT_006113d8,param_2,&local_c8), bVar13 = DAT_006113e2, cVar3 != '\\0'))\n    {\n      uVar6 = FUN_00407b50(1,4,param_1);\n      uVar7 = FUN_00407b50(0,4,param_2);\n      uVar10 = dcgettext(0,\"will not overwrite just-created %s with %s\",5);\n      goto LAB_00402ff0;\n    }\n    if (bVar13 == 0) {\n      if ((DAT_006113e6 == 0) && (DAT_006113e8 != 0)) goto LAB_00402f6b;\n    }\n    else if (DAT_006113e8 == 0) {\n      if ((DAT_006113e6 == 0) || (iVar4 = __xstat(1,param_1,&local_158), iVar4 == 0)) {\nLAB_00402f6b:\n        if (((local_158.st_ino == local_c8.st_ino) && (local_158.st_dev == local_c8.st_dev)) &&\n           ((local_158.st_nlink == 1 || (cVar3 = FUN_004080f0(param_1,param_2), cVar3 != '\\0')))) {\n          uVar6 = FUN_00407b50(1,4,param_2);\n          uVar7 = FUN_00407b50(0,4,param_1);\n          uVar10 = dcgettext(0,\"%s and %s are the same file\",5);\nLAB_00402ff0:\n          error(0,0,uVar10,uVar7,uVar6);\n          return 0;\n        }\n      }\n    }\n    else if (DAT_006113e6 == 0) goto LAB_00402f6b;\nLAB_00402c70:\n    if ((local_c8.st_mode & 0xf000) == 0x4000) {\n      uVar6 = FUN_00407d00(0,3,param_2);\n      pcVar8 = \"%s: cannot overwrite directory\";\nLAB_00402f2d:\n      uVar7 = dcgettext(0,pcVar8,5);\n      error(0,0,uVar7,uVar6);\n      return 0;\n    }\n    uVar12 = (uint)DAT_006113e3;\n    if (DAT_006113e3 != 0) {\n      uVar7 = FUN_00407c30(4,param_2);\n      uVar6 = DAT_00611410;\n      uVar10 = dcgettext(0,\"%s: replace %s? \",5);\n      __fprintf_chk(stderr,1,uVar10,uVar6,uVar7);\n      cVar3 = FUN_00408d10();\n      if (cVar3 == '\\0') {\n        return uVar12;\n      }\n      DAT_006113e2 = 1;\n    }\n    if (DAT_006113e8 == 0) goto LAB_00402ae6;\n    pcVar8 = (char *)FUN_00404240(param_2);\n    iVar4 = rename(param_2,pcVar8);\n    if (iVar4 != 0) {\n      piVar5 = __errno_location();\n      iVar4 = *piVar5;\n      free(pcVar8);\n      if (iVar4 != 2) {\n        uVar6 = FUN_00407c30(4,param_2);\n        uVar7 = dcgettext(0,\"cannot backup %s\",5);\n        error(0,iVar4,uVar7,uVar6);\n        return 0;\n      }\n      goto LAB_00402ae6;\n    }\n    bVar15 = pcVar8 != (char *)0x0;\n  }\n  __ptr_02 = param_1;\n  __ptr_03 = (char *)0x0;\n  if (DAT_006113e5 != '\\0') {\n    __ptr = (void *)FUN_00404bc0(param_2);\n    __ptr_00 = (void *)FUN_004042d0(__ptr,2);\n    __ptr_01 = (void *)FUN_004042d0(param_1,2);\n    if ((__ptr_00 == (void *)0x0) || (__ptr_01 == (void *)0x0)) {\nLAB_00403060:\n      free(__ptr);\n      free(__ptr_00);\n      free(__ptr_01);\n    }\n    else {\n      __ptr_02 = (char *)FUN_00408a50(0x1000);\n      cVar3 = FUN_00403a10(__ptr_01,__ptr_00,__ptr_02,0x1000);\n      if (cVar3 == '\\0') {\n        free(__ptr_02);\n        goto LAB_00403060;\n      }\n      free(__ptr);\n      free(__ptr_00);\n      free(__ptr_01);\n      __ptr_03 = __ptr_02;\n      if (__ptr_02 != (char *)0x0) goto LAB_00402afb;\n    }\n    __ptr_02 = (char *)FUN_00408c80(param_1);\n    __ptr_03 = __ptr_02;\n  }\nLAB_00402afb:\n  if (DAT_006113e6 == 0) {\n    uVar12 = FUN_00403750(0xffffff9c,__ptr_02,0xffffff9c,param_2,(ulong)(DAT_006113e4 != '\\0') << 10\n                         );\n  }\n  else {\n    uVar12 = FUN_00403890(__ptr_02,0xffffff9c,param_2,bVar15 | DAT_006113e2);\n  }\n  if (-1 < (int)uVar12) {\n    if (DAT_006113e6 == 0) {\n      FUN_00404d70(DAT_006113d8,param_2,&local_158);\n    }\n    if (DAT_006113e1 != '\\0') {\n      if (pcVar8 != (char *)0x0) {\n        uVar6 = FUN_00407c30(4,pcVar8);\n        __printf_chk(1,\"%s ~ \",uVar6);\n      }\n      uVar6 = FUN_00407b50(1,4,__ptr_02);\n      uVar11 = 0x3d;\n      if (DAT_006113e6 != 0) {\n        uVar11 = 0x2d;\n      }\n      uVar7 = FUN_00407b50(0,4,param_2);\n      __printf_chk(1,\"%s %c> %s\\n\",uVar7,uVar11,uVar6);\n    }\n    goto LAB_00402bd5;\n  }\n  uVar6 = FUN_00407b50(1,4,__ptr_02);\n  uVar7 = FUN_00407b50(0,4,param_2);\n  puVar9 = (uint *)__errno_location();\n  if (DAT_006113e6 == 0) {\n    uVar1 = *puVar9;\n    if (uVar1 == 0x1f) {\n      if (cVar14 != '\\0') goto LAB_00403038;\n      uVar10 = dcgettext(0,\"failed to create hard link to %.0s%s\",5);\n    }\n    else if (((uVar1 == 0x7a) || (uVar1 == 0x11)) || ((uVar1 & 0xfffffffd) == 0x1c)) {\n      uVar10 = dcgettext(0,\"failed to create hard link %s\",5);\n    }\n    else {\nLAB_00403038:\n      uVar10 = dcgettext(0,\"failed to create hard link %s => %s\",5);\n    }\n  }\n  else if ((*puVar9 == 0x24) || (*__ptr_02 == '\\0')) {\n    uVar10 = dcgettext(0,\"failed to create symbolic link %s -> %s\",5);\n  }\n  else {\n    uVar10 = dcgettext(0,\"failed to create symbolic link %s\",5);\n  }\n  error(0,*puVar9,uVar10,uVar7,uVar6);\n  if ((pcVar8 != (char *)0x0) && (iVar4 = rename(pcVar8,param_2), iVar4 != 0)) {\n    uVar6 = FUN_00407c30(4,param_2);\n    uVar7 = dcgettext(0,\"cannot un-backup %s\",5);\n    error(0,*puVar9,uVar7,uVar6);\n  }\nLAB_00402bd5:\n  free(pcVar8);\n  free(__ptr_03);\n  return ~uVar12 >> 0x1f;\n}\n\n",
            "funcName": "FUN_00402a30"
        },
        {
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x40369d",
            "decompiledFuncCode": "\nvoid FUN_004032b0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_00611410;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_004032ef;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [-T] TARGET LINK_NAME   (1st form)\\n  or:  %s [OPTION]... TARGET                  (2nd form)\\n  or:  %s [OPTION]... TARGET... DIRECTORY     (3rd form)\\n  or:  %s [OPTION]... -t DIRECTORY TARGET...  (4th form)\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar5,uVar5,uVar5,uVar5);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"In the 1st form, create a link to TARGET with the name LINK_NAME.\\nIn the 2nd form, create a link to TARGET in the current directory.\\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\\nCreate hard links by default, symbolic links with --symbolic.\\nBy default, each destination (name of new link) should not already exist.\\nWhen creating hard links, each TARGET must exist.  Symbolic links\\ncan hold arbitrary text; if later resolved, a relative link is\\ninterpreted in relation to its parent directory.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --backup[=CONTROL]      make a backup of each existing destination file\\n  -b                          like --backup but does not accept an argument\\n  -d, -F, --directory         allow the superuser to attempt to hard link\\n                                directories (note: will probably fail due to\\n                                system restrictions, even for the superuser)\\n  -f, --force                 remove existing destination files\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -i, --interactive           prompt whether to remove destinations\\n  -L, --logical               dereference TARGETs that are symbolic links\\n  -n, --no-dereference        treat LINK_NAME as a normal file if\\n                                it is a symbolic link to a directory\\n  -P, --physical              make hard links directly to symbolic links\\n  -r, --relative              create symbolic links relative to link location\\n  -s, --symbolic              make symbolic links instead of hard links\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -S, --suffix=SUFFIX         override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\\n                                the links\\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\\n  -v, --verbose               print name of each linked file\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe backup suffix is \\'~\\', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"\\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\\nbehavior when a TARGET is a symbolic link, defaulting to %s.\\n\"\n                    ,5);\n  __printf_chk(1,uVar5,&DAT_0040bc3c);\n  local_88 = &DAT_0040bc3f;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40bcb9;\n  local_78[1] = (byte *)0x40bc51;\n  local_78[2] = (byte *)0x40bc67;\n  local_78[3] = (byte *)0x40bc71;\n  local_78[4] = (byte *)0x40bc80;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar9 = *ppbVar6;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_0040bc39;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar7[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_0040bc39;\n        goto LAB_00403673;\n      }\n    }\n    pbVar9 = &DAT_0040bc39;\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_0040bc39);\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00403673:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,&DAT_0040bc39);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_0040bc39);\n    if (pbVar9 != &DAT_0040bc39) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pbVar9,pcVar4);\nLAB_004032ef:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004032b0"
        },
        {
            "funcStartAddr": "0x4036a0",
            "funcEndAddr": "0x4036b8",
            "decompiledFuncCode": "\nvoid FUN_004036a0(char *param_1,int *param_2)\n\n{\n  linkat(*param_2,*(char **)(param_2 + 2),param_2[4],param_1,param_2[5]);\n  return;\n}\n\n",
            "funcName": "FUN_004036a0"
        },
        {
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x40371d",
            "decompiledFuncCode": "\nvoid * FUN_004036c0(void *param_1,void *param_2)\n\n{\n  ulong __size;\n  long lVar1;\n  undefined8 *puVar2;\n  \n  lVar1 = FUN_00404ca0();\n  __size = (lVar1 - (long)param_1) + 9;\n  if ((0x100 < __size) && (param_2 = malloc(__size), param_2 == (void *)0x0)) {\n    return (void *)0x0;\n  }\n  puVar2 = (undefined8 *)mempcpy(param_2,param_1,lVar1 - (long)param_1);\n  *puVar2 = DAT_0040ce00;\n  *(undefined *)(puVar2 + 1) = DAT_0040ce08;\n  return param_2;\n}\n\n",
            "funcName": "FUN_004036c0"
        },
        {
            "funcStartAddr": "0x403730",
            "funcEndAddr": "0x403741",
            "decompiledFuncCode": "\nvoid FUN_00403730(char *param_1,char **param_2)\n\n{\n  symlinkat(*param_2,*(int *)(param_2 + 1),param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00403730"
        },
        {
            "funcStartAddr": "0x403750",
            "funcEndAddr": "0x40387b",
            "decompiledFuncCode": "\nint FUN_00403750(int param_1,char *param_2,int param_3,char *param_4,int param_5,char param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *__old;\n  int local_158 [2];\n  char *local_150;\n  int local_148;\n  int local_144;\n  char local_138 [264];\n  \n  iVar1 = linkat(param_1,param_2,param_3,param_4,param_5);\n  if ((param_6 == '\\x01') && (iVar1 != 0)) {\n    piVar3 = __errno_location();\n    if (*piVar3 == 0x11) {\n      __old = (char *)FUN_004036c0(param_4,local_138);\n      if (__old == (char *)0x0) {\n        iVar1 = -1;\n      }\n      else {\n        local_158[0] = param_1;\n        local_150 = param_2;\n        local_148 = param_3;\n        local_144 = param_5;\n        iVar1 = FUN_004082d0(__old,0,local_158,FUN_004036a0,6);\n        if (iVar1 == 0) {\n          iVar2 = renameat(param_3,__old,param_3,param_4);\n          if (iVar2 != 0) {\n            iVar2 = *piVar3;\n          }\n          unlinkat(param_3,__old,0);\n        }\n        else {\n          iVar2 = *piVar3;\n        }\n        if (__old != local_138) {\n          free(__old);\n        }\n        iVar1 = 1;\n        if (iVar2 != 0) {\n          *piVar3 = iVar2;\n          iVar1 = -1;\n        }\n      }\n    }\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00403750"
        },
        {
            "funcStartAddr": "0x403890",
            "funcEndAddr": "0x403984",
            "decompiledFuncCode": "\nint FUN_00403890(char *param_1,int param_2,char *param_3,char param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *__old;\n  char *local_148;\n  int local_140;\n  char local_138 [264];\n  \n  iVar1 = symlinkat(param_1,param_2,param_3);\n  if (param_4 != '\\x01') {\n    return iVar1;\n  }\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x11) {\n    return iVar1;\n  }\n  __old = (char *)FUN_004036c0(param_3,local_138);\n  if (__old != (char *)0x0) {\n    local_148 = param_1;\n    local_140 = param_2;\n    iVar1 = FUN_004082d0(__old,0,&local_148,FUN_00403730,6);\n    if (iVar1 == 0) {\n      iVar1 = renameat(param_2,__old,param_2,param_3);\n      if (iVar1 == 0) {\n        if (__old == local_138) {\n          return 1;\n        }\n        free(__old);\n        return 1;\n      }\n      iVar1 = *piVar2;\n      unlinkat(param_2,__old,0);\n    }\n    else {\n      iVar1 = *piVar2;\n    }\n    if (__old != local_138) {\n      free(__old);\n    }\n    if (iVar1 == 0) {\n      return 1;\n    }\n    *piVar2 = iVar1;\n    return -1;\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_00403890"
        },
        {
            "funcStartAddr": "0x403990",
            "funcEndAddr": "0x4039fe",
            "decompiledFuncCode": "\nundefined8 FUN_00403990(char *param_1,void **param_2,ulong *param_3)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  __dest = *param_2;\n  if (__dest == (void *)0x0) {\n    fputs_unlocked(param_1,stdout);\n    return 0;\n  }\n  sVar1 = strlen(param_1);\n  if (*param_3 < sVar1 || *param_3 == sVar1) {\n    return 1;\n  }\n  memcpy(__dest,param_1,sVar1 + 1);\n  *param_2 = (void *)((long)*param_2 + sVar1);\n  *param_3 = *param_3 - sVar1;\n  return 0;\n}\n\n",
            "funcName": "FUN_00403990"
        },
        {
            "funcStartAddr": "0x403a10",
            "funcEndAddr": "0x403bea",
            "decompiledFuncCode": "\nuint FUN_00403a10(char *param_1,char *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  char cVar2;\n  bool bVar3;\n  char cVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  undefined8 uVar8;\n  long lVar9;\n  int iVar10;\n  char *pcVar11;\n  char cVar12;\n  int iVar13;\n  bool bVar14;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  cVar4 = param_1[1];\n  uVar5 = 0;\n  if ((param_2[1] == '/') == (cVar4 == '/')) {\n    cVar12 = *param_2;\n    if (cVar12 != '\\0') {\n      bVar3 = cVar12 != *param_1 || *param_1 == '\\0';\n      if (bVar3) {\n        uVar5 = 0;\n      }\n      else {\n        lVar9 = 2;\n        iVar10 = 0;\n        cVar2 = param_2[1];\n        while( true ) {\n          cVar1 = cVar2;\n          iVar13 = (int)lVar9 + -1;\n          if (cVar12 == '/') {\n            iVar10 = iVar13;\n          }\n          bVar14 = cVar4 == '\\0';\n          if (cVar1 == '\\0') {\n            if ((cVar4 == '/') || (bVar14)) goto LAB_00403ac5;\n            goto LAB_00403ac1;\n          }\n          if ((cVar1 != cVar4) || (bVar14)) break;\n          pcVar11 = param_2 + lVar9;\n          cVar4 = param_1[lVar9];\n          lVar9 = lVar9 + 1;\n          cVar2 = *pcVar11;\n          cVar12 = cVar1;\n        }\n        if ((cVar1 != '/') || (!bVar14)) {\nLAB_00403ac1:\n          iVar13 = iVar10;\n          if (iVar10 == 0) {\n            return (uint)bVar3;\n          }\n        }\nLAB_00403ac5:\n        param_2 = param_2 + iVar13;\n        cVar4 = *param_2;\n        if (cVar4 == '/') {\n          cVar4 = param_2[1];\n          param_2 = param_2 + 1;\n        }\n        pcVar11 = param_1 + iVar13 + (param_1[iVar13] == '/');\n        local_28 = param_4;\n        local_20 = param_3;\n        if (cVar4 == '\\0') {\n          if (*pcVar11 == '\\0') {\n            pcVar11 = \".\";\n          }\n          uVar5 = FUN_00403990(pcVar11,&local_20,&local_28);\n        }\n        else {\n          uVar5 = FUN_00403990(&DAT_0040ce0a,&local_20,&local_28);\n          cVar4 = *param_2;\n          while (cVar4 != '\\0') {\n            if (cVar4 == '/') {\n              uVar6 = FUN_00403990(&DAT_0040ce09,&local_20,&local_28);\n              uVar5 = uVar5 | uVar6;\n            }\n            param_2 = param_2 + 1;\n            cVar4 = *param_2;\n          }\n          if (*pcVar11 != '\\0') {\n            uVar6 = FUN_00403990(&DAT_0040d01e,&local_20,&local_28);\n            uVar7 = FUN_00403990(pcVar11,&local_20,&local_28);\n            uVar5 = uVar5 | uVar6 | uVar7;\n          }\n        }\n        if ((char)uVar5 != '\\0') {\n          uVar8 = dcgettext(0,\"generating relative path\",5);\n          error(0,0x24,&DAT_0040e363,uVar8);\n        }\n        uVar5 = uVar5 ^ 1;\n      }\n    }\n  }\n  return uVar5;\n}\n\n",
            "funcName": "FUN_00403a10"
        },
        {
            "funcStartAddr": "0x403c10",
            "funcEndAddr": "0x403cc6",
            "decompiledFuncCode": "\nvoid FUN_00403c10(char *param_1,long param_2)\n\n{\n  undefined2 uVar1;\n  undefined2 *puVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  puVar2 = (undefined2 *)FUN_00404ca0();\n  uVar3 = FUN_00404d00(puVar2);\n  if (0xe < uVar3) {\n    uVar1 = *puVar2;\n    *puVar2 = 0x2e;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar5 = pathconf(param_1,3);\n    if ((-1 < (long)uVar5) || (uVar6 = 0xff, *piVar4 == 0)) {\n      uVar6 = uVar5;\n    }\n    *puVar2 = uVar1;\n    if (uVar6 < uVar3) {\n      param_1 = param_1 + param_2;\n      if ((ulong)((long)param_1 - (long)puVar2) < uVar6) {\n        uVar6 = ((long)param_1 - (long)puVar2) + 1;\n      }\n      else {\n        param_1 = (char *)((long)puVar2 + (uVar6 - 1));\n      }\n      *param_1 = '~';\n      *(undefined *)((long)puVar2 + uVar6) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403c10"
        },
        {
            "funcStartAddr": "0x403ce0",
            "funcEndAddr": "0x403d26",
            "decompiledFuncCode": "\nvoid FUN_00403ce0(char *param_1)\n\n{\n  char *pcVar1;\n  \n  if ((((param_1 != (char *)0x0) ||\n       (param_1 = getenv(\"SIMPLE_BACKUP_SUFFIX\"), param_1 != (char *)0x0)) && (*param_1 != '\\0')) &&\n     (pcVar1 = (char *)FUN_00404ca0(param_1), pcVar1 == param_1)) {\n    DAT_006113f0 = param_1;\n    return;\n  }\n  DAT_006113f0 = &DAT_0040ce2b;\n  return;\n}\n\n",
            "funcName": "FUN_00403ce0"
        },
        {
            "funcStartAddr": "0x403d40",
            "funcEndAddr": "0x4041de",
            "decompiledFuncCode": "\nvoid * FUN_00403d40(void *param_1,int param_2,char param_3)\n\n{\n  undefined4 *puVar1;\n  ulong uVar2;\n  char cVar3;\n  undefined2 uVar4;\n  int iVar5;\n  char *pcVar6;\n  size_t sVar7;\n  long lVar8;\n  ulong __n;\n  void *pvVar9;\n  long lVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__dest;\n  undefined2 *puVar13;\n  int *piVar14;\n  DIR *__dirp;\n  ulong uVar15;\n  byte bVar16;\n  long lVar17;\n  byte bVar18;\n  ulong local_78;\n  size_t local_70;\n  int local_58;\n  \n  pcVar6 = (char *)FUN_00404ca0();\n  sVar7 = strlen(pcVar6);\n  lVar17 = (long)pcVar6 - (long)param_1;\n  lVar8 = sVar7 + lVar17;\n  if (DAT_006113f0 == (char *)0x0) {\n    FUN_00403ce0();\n  }\n  sVar7 = strlen(DAT_006113f0);\n  __n = sVar7 + 1;\n  uVar15 = 9;\n  if (8 < __n) {\n    uVar15 = __n;\n  }\n  sVar7 = uVar15 + lVar8 + 1U;\n  pvVar9 = malloc(sVar7);\n  if (pvVar9 != (void *)0x0) {\n    __dirp = (DIR *)0x0;\n    __dest = pvVar9;\n    local_58 = param_2;\n    do {\n      memcpy(__dest,param_1,lVar8 + 1U);\n      if (local_58 == 1) {\n        memcpy((void *)((long)__dest + lVar8),DAT_006113f0,__n);\n      }\n      else {\n        puVar13 = (undefined2 *)((long)__dest + lVar17);\n        lVar10 = FUN_00404d00(puVar13);\n        if (__dirp == (DIR *)0x0) {\n          uVar4 = *puVar13;\n          *puVar13 = 0x2e;\n          __dirp = (DIR *)FUN_00404b20(__dest);\n          puVar1 = (undefined4 *)((long)puVar13 + lVar10);\n          if (__dirp != (DIR *)0x0) {\n            *puVar13 = uVar4;\n            *puVar1 = 0x7e317e2e;\n            *(undefined *)(puVar1 + 1) = 0;\n            goto LAB_00403e11;\n          }\n          piVar14 = __errno_location();\n          iVar5 = *piVar14;\n          *puVar13 = uVar4;\n          bVar18 = (iVar5 == 0xc) + 2;\n          *puVar1 = 0x7e317e2e;\n          *(undefined *)(puVar1 + 1) = 0;\n        }\n        else {\n          rewinddir(__dirp);\nLAB_00403e11:\n          bVar16 = 2;\n          local_78 = 1;\n          local_70 = sVar7;\nLAB_00403e38:\n          pdVar11 = readdir(__dirp);\n          pvVar9 = __dest;\n          bVar18 = bVar16;\n          if (pdVar11 != (dirent *)0x0) {\n            while( true ) {\n              pcVar6 = pdVar11->d_name;\n              sVar12 = strlen(pcVar6);\n              __dest = pvVar9;\n              if (sVar12 < lVar10 + 4U) break;\n              iVar5 = memcmp((void *)((long)pvVar9 + lVar17),pcVar6,lVar10 + 2U);\n              if (iVar5 != 0) break;\n              pcVar6 = pcVar6 + lVar10 + 2U;\n              if (8 < (byte)(*pcVar6 - 0x31U)) break;\n              bVar18 = *pcVar6 == '9';\n              uVar15 = 1;\n              cVar3 = pcVar6[1];\n              while ((int)cVar3 - 0x30U < 10) {\n                uVar15 = uVar15 + 1;\n                bVar18 = cVar3 == '9' & bVar18;\n                cVar3 = pcVar6[uVar15];\n              }\n              if (((cVar3 != '~') || (pcVar6[uVar15 + 1] != '\\0')) ||\n                 ((uVar15 <= local_78 &&\n                  ((local_78 != uVar15 ||\n                   (iVar5 = memcmp((void *)((long)pvVar9 + lVar8 + 2),pcVar6,local_78), 0 < iVar5)))\n                  ))) break;\n              local_78 = bVar18 + uVar15;\n              uVar2 = lVar8 + 4 + local_78;\n              if (local_70 < uVar2) {\n                local_70 = uVar2;\n                if ((-1 < (long)(uVar2 * 2)) && (-1 < (long)uVar2)) {\n                  local_70 = uVar2 * 2;\n                }\n                __dest = realloc(pvVar9,local_70);\n                if (__dest == (void *)0x0) goto LAB_00404168;\n              }\n              puVar13 = (undefined2 *)(lVar8 + (long)__dest);\n              *puVar13 = 0x7e2e;\n              *(undefined *)(puVar13 + 1) = 0x30;\n              pvVar9 = memcpy((void *)((long)puVar13 + (ulong)bVar18 + 2),pcVar6,uVar15 + 2);\n              pcVar6 = (char *)((long)pvVar9 + (uVar15 - 1));\n              cVar3 = *(char *)((long)pvVar9 + (uVar15 - 1));\n              while (cVar3 == '9') {\n                *pcVar6 = '0';\n                pcVar6 = pcVar6 + -1;\n                cVar3 = *pcVar6;\n              }\n              *pcVar6 = cVar3 + '\\x01';\n              pdVar11 = readdir(__dirp);\n              pvVar9 = __dest;\n              bVar16 = bVar18;\n              if (pdVar11 == (dirent *)0x0) goto LAB_00404010;\n            }\n            goto LAB_00403e38;\n          }\n        }\nLAB_00404010:\n        if (bVar18 == 2) {\n          if (local_58 == 2) {\n            memcpy((void *)((long)__dest + lVar8),DAT_006113f0,__n);\n            local_58 = 1;\n          }\n        }\n        else {\n          pvVar9 = __dest;\n          if (bVar18 == 3) {\nLAB_00404168:\n            free(pvVar9);\n            piVar14 = __errno_location();\n            *piVar14 = 0xc;\n            return (void *)0x0;\n          }\n          if (bVar18 != 1) goto LAB_0040402b;\n        }\n        FUN_00403c10(__dest,lVar8);\n      }\nLAB_0040402b:\n      if (param_3 == '\\0') goto LAB_004041d8;\n      if (__dirp == (DIR *)0x0) {\nLAB_004040b0:\n        iVar5 = -100;\n        lVar17 = 0;\n        pvVar9 = __dest;\n      }\n      else {\n        iVar5 = dirfd(__dirp);\n        pvVar9 = (void *)((long)__dest + lVar17);\n        if (iVar5 < 0) goto LAB_004040b0;\n      }\n      iVar5 = FUN_00407ea0(0xffffff9c,param_1,iVar5,pvVar9,local_58 != 1);\n      if (iVar5 == 0) {\nLAB_004041d8:\n        if (__dirp == (DIR *)0x0) {\n          return __dest;\n        }\n        closedir(__dirp);\n        return __dest;\n      }\n      piVar14 = __errno_location();\n      iVar5 = *piVar14;\n    } while (iVar5 == 0x11);\n    if (__dirp != (DIR *)0x0) {\n      closedir(__dirp);\n    }\n    pvVar9 = (void *)0x0;\n    free(__dest);\n    *piVar14 = iVar5;\n  }\n  return pvVar9;\n}\n\n",
            "funcName": "FUN_00403d40"
        },
        {
            "funcStartAddr": "0x404210",
            "funcEndAddr": "0x40423c",
            "decompiledFuncCode": "\nundefined4 FUN_00404210(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040a670(param_1,param_2,&PTR_DAT_0040cec0,&DAT_0040cea0,4,PTR_FUN_00611380);\n  return *(undefined4 *)(&DAT_0040cea0 + lVar1 * 4);\n}\n\n",
            "funcName": "FUN_00404210"
        },
        {
            "funcStartAddr": "0x404240",
            "funcEndAddr": "0x40425a",
            "decompiledFuncCode": "\nvoid FUN_00404240(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00403d40(param_1,param_2,0);\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00404240"
        },
        {
            "funcStartAddr": "0x404260",
            "funcEndAddr": "0x404272",
            "decompiledFuncCode": "\nundefined8 FUN_00404260(undefined8 param_1,char *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_2 != (char *)0x0) && (*param_2 != '\\0')) {\n    uVar1 = FUN_00404210();\n    return uVar1;\n  }\n  return 2;\n}\n\n",
            "funcName": "FUN_00404260"
        },
        {
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x4042bd",
            "decompiledFuncCode": "\nundefined8 FUN_00404280(char *param_1,char *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n    param_2 = getenv(\"VERSION_CONTROL\");\n    if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n      return 2;\n    }\n    param_1 = \"$VERSION_CONTROL\";\n  }\n  uVar1 = FUN_00404210(param_1,param_2);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404280"
        },
        {
            "funcStartAddr": "0x4042d0",
            "funcEndAddr": "0x4048fb",
            "decompiledFuncCode": "\nchar * FUN_004042d0(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *pcVar7;\n  size_t sVar8;\n  int *piVar9;\n  uint uVar10;\n  char cVar11;\n  char *pcVar12;\n  char *pcVar13;\n  long lVar14;\n  char *pcVar15;\n  char *pcVar16;\n  long local_f0;\n  char *local_e8;\n  void *local_e0;\n  ulong local_d8;\n  stat local_c8;\n  \n  uVar10 = param_2 & 3;\n  if (((uVar10 & uVar10 - 1) == 0) && (param_1 != (char *)0x0)) {\n    if (*param_1 == '\\0') {\n      piVar9 = __errno_location();\n      __s = (char *)0x0;\n      *piVar9 = 2;\n    }\n    else {\n      if (*param_1 == '/') {\n        __s = (char *)FUN_00408a50(0x1000);\n        pcVar15 = __s + 0x1000;\n        pcVar12 = __s + 1;\n        *__s = '/';\n      }\n      else {\n        __s = (char *)FUN_00408ce0();\n        if (__s == (char *)0x0) {\n          return (char *)0x0;\n        }\n        sVar6 = strlen(__s);\n        if (sVar6 < 0x1000) {\n          __s = (char *)FUN_00408ab0(__s,0x1000);\n          pcVar12 = __s + sVar6;\n          pcVar15 = __s + 0x1000;\n        }\n        else {\n          pcVar12 = __s + sVar6;\n          pcVar15 = pcVar12;\n        }\n      }\n      cVar4 = *param_1;\n      local_f0 = 0;\n      local_d8 = 0;\n      local_e0 = (void *)0x0;\n      local_e8 = param_1;\nLAB_00404378:\n      while (pcVar13 = pcVar12, cVar4 != '\\0') {\n        pcVar7 = param_1;\n        cVar11 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            param_1 = param_1 + 1;\n            cVar11 = *param_1;\n          } while (cVar11 == '/');\n          pcVar7 = param_1;\n          if (cVar11 == '\\0') break;\n        }\n        do {\n          pcVar16 = param_1;\n          cVar4 = pcVar16[1];\n          param_1 = pcVar16 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar7) break;\n        sVar6 = (long)param_1 - (long)pcVar7;\n        pcVar12 = pcVar13;\n        if (sVar6 == 1) goto LAB_00404568;\n        if (((cVar11 != '.') || (sVar6 != 2)) || (pcVar7[1] != '.')) goto LAB_004043ec;\n        if (((__s + 1 < pcVar13) && (pcVar12 = pcVar13 + -1, __s < pcVar12)) && (pcVar13[-2] != '/')\n           ) {\n          for (pcVar12 = pcVar13 + -2; (__s != pcVar12 && (pcVar12[-1] != '/'));\n              pcVar12 = pcVar12 + -1) {\n          }\n        }\n      }\n      if ((__s + 1 < pcVar13) && (pcVar13[-1] == '/')) {\n        pcVar7 = pcVar13 + -1;\n        pcVar12 = pcVar13;\n      }\n      else {\n        pcVar12 = pcVar13 + 1;\n        pcVar7 = pcVar13;\n      }\n      *pcVar7 = '\\0';\n      if (pcVar15 != pcVar12) {\n        __s = (char *)FUN_00408ab0(__s,pcVar7 + (1 - (long)__s));\n      }\n      free(local_e0);\n      if (local_f0 != 0) {\n        FUN_00405a10(local_f0);\n      }\n    }\n  }\n  else {\n    piVar9 = __errno_location();\n    __s = (char *)0x0;\n    *piVar9 = 0x16;\n  }\n  return __s;\nLAB_00404568:\n  if (cVar11 == '.') goto LAB_00404378;\nLAB_004043ec:\n  if (pcVar13[-1] != '/') {\n    *pcVar13 = '/';\n    pcVar13 = pcVar13 + 1;\n  }\n  if (pcVar15 <= pcVar13 + sVar6) {\n    lVar14 = (long)pcVar13 - (long)__s;\n    lVar3 = 0x1000 - (long)__s;\n    if (0xfff < (long)sVar6) {\n      lVar3 = (sVar6 + 1) - (long)__s;\n    }\n    __s = (char *)FUN_00408ab0(__s,pcVar15 + lVar3);\n    pcVar15 = __s + (long)(pcVar15 + lVar3);\n    pcVar13 = __s + lVar14;\n  }\n  memcpy(pcVar13,pcVar7,sVar6);\n  pcVar12 = pcVar13 + sVar6;\n  *pcVar12 = '\\0';\n  pcVar13 = pcVar12;\n  if ((uVar10 == 2) && ((param_2 & 4) != 0)) {\nLAB_0040446b:\n    local_c8.st_mode = 0;\nLAB_00404473:\n    if ((*param_1 == '\\0') || (uVar10 == 2)) {\nLAB_00404484:\n      cVar4 = *param_1;\n      pcVar12 = pcVar13;\n      goto LAB_00404378;\n    }\n    piVar9 = __errno_location();\n    iVar5 = 0x14;\nLAB_004047d5:\n    free(local_e0);\n    free(__s);\n    if (local_f0 == 0) goto LAB_00404731;\n  }\n  else {\n    if ((param_2 & 4) == 0) {\n      iVar5 = __lxstat(1,__s,&local_c8);\n    }\n    else {\n      iVar5 = __xstat(1,__s,&local_c8);\n    }\n    if (iVar5 != 0) {\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if (uVar10 != 0) {\n        if (uVar10 != 1) goto LAB_0040446b;\n        sVar6 = strspn(param_1,\"/\");\n        if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_00404529;\n      }\n      goto LAB_004047d5;\n    }\n    if ((local_c8.st_mode & 0xf000) != 0xa000) {\n      if ((local_c8.st_mode & 0xf000) == 0x4000) goto LAB_00404484;\n      goto LAB_00404473;\n    }\n    if ((local_f0 == 0) &&\n       (local_f0 = FUN_004057d0(7,0,FUN_00406190,FUN_00406200,FUN_00406240), local_f0 == 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00408ca0();\n    }\n    cVar4 = FUN_00404e00(local_f0,local_e8,&local_c8);\n    if (cVar4 == '\\0') {\n      FUN_00404d70(local_f0,local_e8,&local_c8);\n      pcVar7 = (char *)FUN_0040a2b0(__s,local_c8.st_size);\n      if (pcVar7 != (char *)0x0) {\n        sVar6 = strlen(pcVar7);\n        sVar8 = strlen(param_1);\n        uVar1 = sVar6 + 1 + sVar8;\n        if (local_d8 == 0) {\n          local_d8 = 0x1000;\n          if (0xfff < uVar1) {\n            local_d8 = uVar1;\n          }\n          local_e0 = (void *)FUN_00408a50(local_d8);\n        }\n        else if (local_d8 < uVar1) {\n          local_e0 = (void *)FUN_00408ab0(local_e0,uVar1);\n          local_d8 = uVar1;\n        }\n        memmove((void *)((long)local_e0 + sVar6),param_1,sVar8 + 1);\n        param_1 = (char *)memcpy(local_e0,pcVar7,sVar6);\n        pcVar13 = __s + 1;\n        if (*pcVar7 == '/') {\n          *__s = '/';\n        }\n        else {\n          bVar2 = pcVar13 < pcVar12;\n          pcVar13 = pcVar12;\n          if ((bVar2) && (pcVar13 = pcVar12 + -1, __s < pcVar13)) {\n            cVar4 = pcVar12[-2];\n            pcVar12 = pcVar13;\n            while ((pcVar13 = pcVar12, cVar4 != '/' && (pcVar13 = pcVar12 + -1, __s != pcVar13))) {\n              cVar4 = pcVar12[-2];\n              pcVar12 = pcVar13;\n            }\n          }\n        }\n        free(pcVar7);\n        local_e8 = param_1;\n        goto LAB_00404484;\n      }\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if ((uVar10 == 2) && (iVar5 != 0xc)) goto LAB_00404529;\n    }\n    else {\n      if (uVar10 == 2) {\nLAB_00404529:\n        cVar4 = pcVar16[1];\n        goto LAB_00404378;\n      }\n      piVar9 = __errno_location();\n      iVar5 = 0x28;\n    }\n    free(local_e0);\n    free(__s);\n  }\n  FUN_00405a10(local_f0);\nLAB_00404731:\n  *piVar9 = iVar5;\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_004042d0"
        },
        {
            "funcStartAddr": "0x404950",
            "funcEndAddr": "0x404958",
            "decompiledFuncCode": "\nvoid FUN_00404950(undefined8 param_1)\n\n{\n  DAT_006113f8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404950"
        },
        {
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x404a51",
            "decompiledFuncCode": "\nvoid FUN_00404960(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = FUN_00408f00(stdin);\n  if (lVar2 == 0) {\n    iVar1 = FUN_0040a730(uVar3);\n    if (iVar1 == 0) {\n      FUN_00404a80();\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_00408f30(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00408ec0(stdin);\n      if (iVar1 != 0) {\n        FUN_0040a730(stdin);\n        goto LAB_004049b8;\n      }\n    }\n    iVar1 = FUN_0040a730(stdin);\n    if (iVar1 == 0) {\n      FUN_00404a80();\n      return;\n    }\n  }\nLAB_004049b8:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = DAT_006113f8;\n  piVar4 = __errno_location();\n  if (lVar2 == 0) {\n    error(0,*piVar4,&DAT_0040e363,uVar3);\n  }\n  else {\n    uVar5 = FUN_00407cd0(lVar2);\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n  FUN_00404a80();\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00611300);\n}\n\n",
            "funcName": "FUN_00404960"
        },
        {
            "funcStartAddr": "0x404a60",
            "funcEndAddr": "0x404a68",
            "decompiledFuncCode": "\nvoid FUN_00404a60(undefined8 param_1)\n\n{\n  DAT_00611408 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404a60"
        },
        {
            "funcStartAddr": "0x404a70",
            "funcEndAddr": "0x404a78",
            "decompiledFuncCode": "\nvoid FUN_00404a70(undefined param_1)\n\n{\n  DAT_00611400 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00404a70"
        },
        {
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404b1e",
            "decompiledFuncCode": "\nvoid FUN_00404a80(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0040a730(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00611400 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00611408 == 0) {\n        error(0,*piVar2,&DAT_0040e363,uVar3);\n      }\n      else {\n        uVar4 = FUN_00407cd0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00404afe;\n    }\n  }\n  iVar1 = FUN_0040a730(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00404afe:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00611300);\n}\n\n",
            "funcName": "FUN_00404a80"
        },
        {
            "funcStartAddr": "0x404b20",
            "funcEndAddr": "0x404bb0",
            "decompiledFuncCode": "\nDIR * FUN_00404b20(char *param_1)\n\n{\n  uint uVar1;\n  int __fd;\n  DIR *__dirp;\n  int *piVar2;\n  DIR *pDVar3;\n  int iVar4;\n  \n  __dirp = opendir(param_1);\n  if (__dirp != (DIR *)0x0) {\n    uVar1 = dirfd(__dirp);\n    if (uVar1 < 3) {\n      __fd = FUN_00408d80(uVar1,0x406,3);\n      piVar2 = __errno_location();\n      if (__fd < 0) {\n        iVar4 = *piVar2;\n        pDVar3 = (DIR *)0x0;\n      }\n      else {\n        pDVar3 = fdopendir(__fd);\n        iVar4 = *piVar2;\n        if (pDVar3 == (DIR *)0x0) {\n          close(__fd);\n        }\n      }\n      closedir(__dirp);\n      *piVar2 = iVar4;\n      return pDVar3;\n    }\n  }\n  return __dirp;\n}\n\n",
            "funcName": "FUN_00404b20"
        },
        {
            "funcStartAddr": "0x404bc0",
            "funcEndAddr": "0x404bd8",
            "decompiledFuncCode": "\nvoid FUN_00404bc0(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00404c40();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00404bc0"
        },
        {
            "funcStartAddr": "0x404be0",
            "funcEndAddr": "0x404c38",
            "decompiledFuncCode": "\nulong FUN_00404be0(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_00404ca0();\n  uVar3 = lVar2 - (long)param_1;\n  if (((cVar1 == '/') < uVar3) && (*(char *)(lVar2 + -1) == '/')) {\n    do {\n      uVar4 = uVar3 - 1;\n      if ((cVar1 == '/') == uVar4) {\n        return uVar4;\n      }\n      lVar2 = uVar3 - 2;\n      uVar3 = uVar4;\n    } while (param_1[lVar2] == '/');\n    return uVar4;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00404be0"
        },
        {
            "funcStartAddr": "0x404c40",
            "funcEndAddr": "0x404c9a",
            "decompiledFuncCode": "\nundefined * FUN_00404c40(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_00404be0();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_00404c40"
        },
        {
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404cf2",
            "decompiledFuncCode": "\nchar * FUN_00404ca0(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00404ca0"
        },
        {
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d27",
            "decompiledFuncCode": "\nvoid FUN_00404d00(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404d00"
        },
        {
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d63",
            "decompiledFuncCode": "\nbool FUN_00404d30(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  pcVar3 = (char *)FUN_00404ca0();\n  if (*pcVar3 == '\\0') {\n    pcVar3 = param_1;\n  }\n  lVar2 = FUN_00404d00(pcVar3);\n  cVar1 = pcVar3[lVar2];\n  pcVar3[lVar2] = '\\0';\n  return cVar1 != '\\0';\n}\n\n",
            "funcName": "FUN_00404d30"
        },
        {
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x404de8",
            "decompiledFuncCode": "\nvoid FUN_00404d70(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_00408a50(0x18);\n  uVar2 = FUN_00408c80(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_00405f70(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_00406240(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00404d70"
        },
        {
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e34",
            "decompiledFuncCode": "\nulong FUN_00404e00(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_00405560(param_1,&local_28);\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00404e00"
        },
        {
            "funcStartAddr": "0x404e40",
            "funcEndAddr": "0x404e58",
            "decompiledFuncCode": "\nvoid FUN_00404e40(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00404e60();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00404e40"
        },
        {
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404f34",
            "decompiledFuncCode": "\nvoid * FUN_00404e60(void *param_1,char *param_2,long *param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  size_t __n;\n  void *__dest;\n  undefined *puVar5;\n  size_t __n_00;\n  \n  lVar3 = FUN_00404ca0();\n  uVar4 = FUN_00404d00(lVar3);\n  __n_00 = (lVar3 - (long)param_1) + uVar4;\n  if (uVar4 != 0) {\n    uVar4 = (ulong)(*(char *)(lVar3 + -1 + uVar4) != '/');\n  }\n  cVar1 = *param_2;\n  cVar2 = cVar1;\n  while (cVar2 == '/') {\n    param_2 = param_2 + 1;\n    cVar2 = *param_2;\n  }\n  __n = strlen(param_2);\n  __dest = malloc(uVar4 + 1 + __n_00 + __n);\n  if (__dest != (void *)0x0) {\n    puVar5 = (undefined *)mempcpy(__dest,param_1,__n_00);\n    *puVar5 = 0x2f;\n    if (param_3 != (long *)0x0) {\n      *param_3 = (long)(puVar5 + uVar4) - (ulong)(cVar1 == '/');\n    }\n    puVar5 = (undefined *)mempcpy(puVar5 + uVar4,param_2,__n);\n    *puVar5 = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_00404e60"
        },
        {
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x404fd1",
            "decompiledFuncCode": "\nulong FUN_00404f40(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00404fc0:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00404fc0;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404f40"
        },
        {
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x404ff0",
            "decompiledFuncCode": "\nulong FUN_00404fe0(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_00404fe0"
        },
        {
            "funcStartAddr": "0x404ff0",
            "funcEndAddr": "0x404ff7",
            "decompiledFuncCode": "\nbool FUN_00404ff0(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_00404ff0"
        },
        {
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x405021",
            "decompiledFuncCode": "\nlong FUN_00405000(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405000"
        },
        {
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405135",
            "decompiledFuncCode": "\nlong FUN_00405030(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_00405000();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_004050bc:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_004050bc;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_00405030"
        },
        {
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4051ca",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00405150(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040cfa0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040cfb4 < fVar1) && (fVar1 < DAT_0040cfb8)) && (_DAT_0040cfbc < pfVar2[3])) &&\n     (_DAT_0040cfc0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040cfb4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040cfc4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040cfa0;\n  return 0;\n}\n\n",
            "funcName": "FUN_00405150"
        },
        {
            "funcStartAddr": "0x4051d0",
            "funcEndAddr": "0x40530a",
            "decompiledFuncCode": "\nundefined8 FUN_004051d0(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_004051f8:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00405000(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0040526f;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0040526f:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_004051f8;\n    plVar3 = (long *)FUN_00405000(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004051d0"
        },
        {
            "funcStartAddr": "0x405320",
            "funcEndAddr": "0x405325",
            "decompiledFuncCode": "\nundefined8 FUN_00405320(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_00405320"
        },
        {
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x405335",
            "decompiledFuncCode": "\nundefined8 FUN_00405330(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00405330"
        },
        {
            "funcStartAddr": "0x405340",
            "funcEndAddr": "0x405345",
            "decompiledFuncCode": "\nundefined8 FUN_00405340(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00405340"
        },
        {
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x40539f",
            "decompiledFuncCode": "\nvoid FUN_00405350(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405350"
        },
        {
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405402",
            "decompiledFuncCode": "\nbool FUN_004053a0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_004053b8:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_004053b8;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_004053a0"
        },
        {
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x40554c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405410(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040547d;\n    }\n  }\nLAB_0040547d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040cfd8) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_00405410"
        },
        {
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x4055ab",
            "decompiledFuncCode": "\nlong FUN_00405560(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00405000();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00405560"
        },
        {
            "funcStartAddr": "0x4055c0",
            "funcEndAddr": "0x4055fa",
            "decompiledFuncCode": "\nlong FUN_004055c0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_004021d5();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_004021d5();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_004055c0"
        },
        {
            "funcStartAddr": "0x405610",
            "funcEndAddr": "0x405669",
            "decompiledFuncCode": "\nlong FUN_00405610(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00405000();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00405610"
        },
        {
            "funcStartAddr": "0x405680",
            "funcEndAddr": "0x4056e0",
            "decompiledFuncCode": "\nulong FUN_00405680(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405680"
        },
        {
            "funcStartAddr": "0x4056f0",
            "funcEndAddr": "0x40575b",
            "decompiledFuncCode": "\nlong FUN_004056f0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_004056f0"
        },
        {
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x4057a1",
            "decompiledFuncCode": "\nulong FUN_00405770(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405770"
        },
        {
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x4057d0",
            "decompiledFuncCode": "\nvoid FUN_004057b0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_004057b0"
        },
        {
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x405950",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_004057d0(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00404fe0;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00404ff0;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040cfa0;\n    cVar1 = FUN_00405150(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_004058b0;\n    fVar4 = DAT_0040cfc8;\n    if ((long)param_1 < 0) goto LAB_00405933;\nLAB_004058ee:\n    fVar3 = (float)param_1;\nLAB_004058f7:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040cfcc <= fVar3) goto LAB_004058b0;\n    if (fVar3 < _DAT_0040cfd0) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040cfd0) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_00405150(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_004058b0;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_004058ee;\nLAB_00405933:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_004058f7;\n    }\n  }\n  __nmemb = (void *)FUN_00404f40(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_004058b0:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_004057d0"
        },
        {
            "funcStartAddr": "0x405960",
            "funcEndAddr": "0x405a05",
            "decompiledFuncCode": "\nvoid FUN_00405960(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_004059f3;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_004059f3:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_00405960"
        },
        {
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405ae0",
            "decompiledFuncCode": "\nvoid FUN_00405a10(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_00405aac;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_00405a6f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_00405a6f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_00405aac:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405a10"
        },
        {
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405cdb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00405af0(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040cfcc <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040cfd0) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040cfd0) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_00404f40(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_004051d0(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_004051d0(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_004051d0(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00405af0"
        },
        {
            "funcStartAddr": "0x405cf0",
            "funcEndAddr": "0x405f41",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00405cf0(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00405030(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_00405dea;\nLAB_00405d5b:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_00405d72;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_00405d5b;\nLAB_00405dea:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_00405d72;\n  }\n  FUN_00405150(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040cfcc <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040cfd0 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0040cfd0) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_00405af0(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_00405030(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_004021df();\n      return uVar5;\n    }\n  }\nLAB_00405d72:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_00405cf0"
        },
        {
            "funcStartAddr": "0x405f70",
            "funcEndAddr": "0x405fa4",
            "decompiledFuncCode": "\nundefined8 FUN_00405f70(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_00405cf0(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00405f70"
        },
        {
            "funcStartAddr": "0x405fb0",
            "funcEndAddr": "0x40616f",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00405fb0(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_00405030(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_00405150(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040cfd0 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040cfd0) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_00405af0(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00405fb0"
        },
        {
            "funcStartAddr": "0x406190",
            "funcEndAddr": "0x4061b7",
            "decompiledFuncCode": "\nulong FUN_00406190(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_0040a7f0(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n",
            "funcName": "FUN_00406190"
        },
        {
            "funcStartAddr": "0x4061c0",
            "funcEndAddr": "0x4061cd",
            "decompiledFuncCode": "\nulong FUN_004061c0(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_004061c0"
        },
        {
            "funcStartAddr": "0x4061d0",
            "funcEndAddr": "0x4061f2",
            "decompiledFuncCode": "\nundefined8 FUN_004061d0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_004080f0(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_004061d0"
        },
        {
            "funcStartAddr": "0x406200",
            "funcEndAddr": "0x406230",
            "decompiledFuncCode": "\nulong FUN_00406200(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00406200"
        },
        {
            "funcStartAddr": "0x406240",
            "funcEndAddr": "0x406255",
            "decompiledFuncCode": "\nvoid FUN_00406240(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406240"
        },
        {
            "funcStartAddr": "0x406260",
            "funcEndAddr": "0x4062f9",
            "decompiledFuncCode": "\nvoid FUN_00406260(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = &DAT_0040d018;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040d020;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00611410 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00406260"
        },
        {
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x4063df",
            "decompiledFuncCode": "\nchar * FUN_00406300(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040a830();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004063d8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d031;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d026;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004063d8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d02d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d02a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00406300"
        },
        {
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x407533",
            "decompiledFuncCode": "\nulong FUN_00406400(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00407051:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00406c86;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00407051;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00406300(&DAT_0040d035,param_5);\n      param_9 = (char *)FUN_00406300(&DAT_0040e2d7);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00406498:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_004064a8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00406c28;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00406ba0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00406bb2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00406a1e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004068b5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00406bb2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00406bb2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00406bb2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_004068b5;\n      case 0xc:\nswitchD_00406bb2_caseD_c:\n        bVar17 = 0x66;\nLAB_004068b5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00406808;\n        }\nLAB_004068c0:\n        bVar23 = false;\n        goto LAB_0040667b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00406598_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004067d0;\n      case 0x20:\n        bVar25 = false;\nLAB_00406bfa:\n        uVar19 = 0x20;\n        goto LAB_00406bc2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00406598_caseD_21:\n        bVar25 = false;\n        goto LAB_004067db;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00406bda:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004065e8;\n        }\n        bVar23 = false;\n        goto LAB_004065ff;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00406bc2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00406601;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00406a1e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00406a1e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00406598_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00406a1e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004067f7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00406ba0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00406598_caseD_0;\n      default:\n        goto switchD_00406a1e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004068c0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00406bb2_caseD_9;\n      case 10:\n        goto switchD_00406bb2_caseD_a;\n      case 0xb:\n        goto switchD_00406bb2_caseD_b;\n      case 0xc:\n        goto switchD_00406bb2_caseD_c;\n      case 0xd:\n        goto switchD_00406598_caseD_d;\n      case 0x20:\n        goto LAB_00406bfa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00406598_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00406bda;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00406bc2;\n      case 0x27:\n        goto switchD_00406a1e_caseD_27;\n      case 0x3f:\n        goto switchD_00406a1e_caseD_3f;\n      case 0x5c:\n        goto switchD_00406598_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00406a1e_caseD_7b;\n      }\n      goto LAB_00406642;\n    }\n    goto LAB_0040681a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00406bb2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00406598_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004066f8;\n          }\nLAB_0040693a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040693a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004066f8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00406979:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004066f8;\n        goto LAB_00406601;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040680c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004065e8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_004064a8;\n  default:\nswitchD_00406a1e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_0040a230(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040732a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00407467;\n          goto LAB_00407457;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040680c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040732a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004069f4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00406a32;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00406a32;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00406a32:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00406a4a:\n      param_5 = 2;\n      goto LAB_0040680c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004065d6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004065d6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00406a4a;\n    goto LAB_004065e8;\n  case 0x23:\n  case 0x7e:\nLAB_004065cd:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004065d6;\n    goto LAB_004067db;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00406a1e_caseD_25;\n  case 0x27:\nswitchD_00406a1e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004065e8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004066f8;\n    }\n    goto LAB_0040680c;\n  case 0x3f:\nswitchD_00406a1e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004066f8;\n      }\n      goto LAB_0040680c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004065e8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00406979;\n      }\n      goto LAB_0040681a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004065e8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00406598_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00406714;\n    }\n    if (local_5c) goto LAB_0040680c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00406714;\n  case 0x7b:\n  case 0x7d:\nswitchD_00406a1e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_004065cd;\n    goto LAB_004067db;\n  }\nLAB_004067d0:\n  if (!bVar6) {\nLAB_004067db:\n    bVar23 = false;\n    goto LAB_004065e8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004067f7;\nLAB_00406c28:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040680c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040681a:\n    uVar9 = FUN_00406400(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004074fd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00406400(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004074fd;\nLAB_00406c86:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00406498;\n  while (__s1[uVar21] != 0) {\nLAB_00407457:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00407467:\n  bVar23 = false;\nLAB_0040732a:\n  if (1 < uVar21) {\nLAB_00406eee:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040680c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040668d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00406714;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004069f4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00406eee;\n  }\nswitchD_00406a1e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004065e8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004065ff:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00406601:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004066f8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004066f8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00406714:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040668d;\n    }\n  }\njoined_r0x004067f7:\n  if (local_5c) {\nLAB_00406808:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040680c;\n  }\nLAB_00406642:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040667b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040668d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_004064a8;\n}\n\n",
            "funcName": "FUN_00406400"
        },
        {
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x4077cb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00407630(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00611358;\n  if (DAT_00611370 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00408ca0();\n    }\n    if (PTR_DAT_00611358 == &DAT_00611360) {\n      puVar8 = (undefined4 *)FUN_00408ab0(0);\n      uVar6 = PTR_DAT_00611368._4_4_;\n      uVar5 = PTR_DAT_00611368._0_4_;\n      uVar3 = _UNK_00611364;\n      PTR_DAT_00611358 = (undefined *)puVar8;\n      *puVar8 = _DAT_00611360;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00408ab0(PTR_DAT_00611358);\n      PTR_DAT_00611358 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00611370 * 4,0,(long)((param_1 + 1) - DAT_00611370) << 4);\n    DAT_00611370 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00406400(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00611420) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00408a50(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00406400(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00407630"
        },
        {
            "funcStartAddr": "0x4077d0",
            "funcEndAddr": "0x407804",
            "decompiledFuncCode": "\nvoid FUN_004077d0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00611520;\n  }\n  FUN_00408c50(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004077d0"
        },
        {
            "funcStartAddr": "0x407810",
            "funcEndAddr": "0x40781f",
            "decompiledFuncCode": "\nundefined4 FUN_00407810(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00611520;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00407810"
        },
        {
            "funcStartAddr": "0x407820",
            "funcEndAddr": "0x40782f",
            "decompiledFuncCode": "\nvoid FUN_00407820(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00611520;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00407820"
        },
        {
            "funcStartAddr": "0x407830",
            "funcEndAddr": "0x407863",
            "decompiledFuncCode": "\nuint FUN_00407830(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00611520;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00407830"
        },
        {
            "funcStartAddr": "0x407870",
            "funcEndAddr": "0x407883",
            "decompiledFuncCode": "\nundefined4 FUN_00407870(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00611520;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00407870"
        },
        {
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x4078bb",
            "decompiledFuncCode": "\nvoid FUN_00407890(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00611520;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407890"
        },
        {
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x407932",
            "decompiledFuncCode": "\nvoid FUN_004078c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00611520;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00406400(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004078c0"
        },
        {
            "funcStartAddr": "0x407940",
            "funcEndAddr": "0x407a21",
            "decompiledFuncCode": "\nundefined8 FUN_00407940(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00611520;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00406400(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00408a50(lVar3 + 1);\n  FUN_00406400(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00407940"
        },
        {
            "funcStartAddr": "0x407a30",
            "funcEndAddr": "0x407a3a",
            "decompiledFuncCode": "\nvoid FUN_00407a30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00407940(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00407a30"
        },
        {
            "funcStartAddr": "0x407a40",
            "funcEndAddr": "0x407ad5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407a40(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00611358;\n  if (1 < DAT_00611370) {\n    ppvVar2 = (void **)(PTR_DAT_00611358 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00611358 + (ulong)(DAT_00611370 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00611420) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00611360 = 0x100;\n    PTR_DAT_00611368 = &DAT_00611420;\n  }\n  if (__ptr_00 != &DAT_00611360) {\n    free(__ptr_00);\n    PTR_DAT_00611358 = &DAT_00611360;\n  }\n  DAT_00611370 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00407a40"
        },
        {
            "funcStartAddr": "0x407ae0",
            "funcEndAddr": "0x407af1",
            "decompiledFuncCode": "\nvoid FUN_00407ae0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00407630(param_1,param_2,0xffffffffffffffff,&DAT_00611520);\n  return;\n}\n\n",
            "funcName": "FUN_00407ae0"
        },
        {
            "funcStartAddr": "0x407b00",
            "funcEndAddr": "0x407b0a",
            "decompiledFuncCode": "\nvoid FUN_00407b00(void)\n\n{\n  FUN_00407630();\n  return;\n}\n\n",
            "funcName": "FUN_00407b00"
        },
        {
            "funcStartAddr": "0x407b10",
            "funcEndAddr": "0x407b26",
            "decompiledFuncCode": "\nvoid FUN_00407b10(undefined8 param_1)\n\n{\n  FUN_00407630(0,param_1,0xffffffffffffffff,&DAT_00611520);\n  return;\n}\n\n",
            "funcName": "FUN_00407b10"
        },
        {
            "funcStartAddr": "0x407b30",
            "funcEndAddr": "0x407b42",
            "decompiledFuncCode": "\nvoid FUN_00407b30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00407630(0,param_1,param_2,&DAT_00611520);\n  return;\n}\n\n",
            "funcName": "FUN_00407b30"
        },
        {
            "funcStartAddr": "0x407b50",
            "funcEndAddr": "0x407bb8",
            "decompiledFuncCode": "\nvoid FUN_00407b50(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00407630(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407b50"
        },
        {
            "funcStartAddr": "0x407bc0",
            "funcEndAddr": "0x407c24",
            "decompiledFuncCode": "\nvoid FUN_00407bc0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00407630(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407bc0"
        },
        {
            "funcStartAddr": "0x407c30",
            "funcEndAddr": "0x407c3c",
            "decompiledFuncCode": "\nvoid FUN_00407c30(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00407b50(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00407c30"
        },
        {
            "funcStartAddr": "0x407c40",
            "funcEndAddr": "0x407c4f",
            "decompiledFuncCode": "\nvoid FUN_00407c40(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00407bc0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00407c40"
        },
        {
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x407cc0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407c50(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_00611550;\n  local_48 = _DAT_00611520;\n  uStack_40 = uRam0000000000611528;\n  local_38 = _DAT_00611530;\n  uStack_30 = uRam0000000000611538;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_00611540;\n  uStack_20 = uRam0000000000611548;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00407630(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00407c50"
        },
        {
            "funcStartAddr": "0x407cc0",
            "funcEndAddr": "0x407ccd",
            "decompiledFuncCode": "\nvoid FUN_00407cc0(undefined8 param_1,char param_2)\n\n{\n  FUN_00407c50(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00407cc0"
        },
        {
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407ce1",
            "decompiledFuncCode": "\nvoid FUN_00407cd0(undefined8 param_1)\n\n{\n  FUN_00407c50(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00407cd0"
        },
        {
            "funcStartAddr": "0x407cf0",
            "funcEndAddr": "0x407cfa",
            "decompiledFuncCode": "\nvoid FUN_00407cf0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00407c50(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00407cf0"
        },
        {
            "funcStartAddr": "0x407d00",
            "funcEndAddr": "0x407d6e",
            "decompiledFuncCode": "\nvoid FUN_00407d00(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00407630(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407d00"
        },
        {
            "funcStartAddr": "0x407d70",
            "funcEndAddr": "0x407ddc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407d70(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam0000000000611528;\n  local_38 = _DAT_00611530;\n  uStack_30 = uRam0000000000611538;\n  local_28 = _DAT_00611540;\n  lStack_20 = uRam0000000000611548;\n  local_18 = DAT_00611550;\n  local_48 = CONCAT44((int)((ulong)_DAT_00611520 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00407630(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407d70"
        },
        {
            "funcStartAddr": "0x407de0",
            "funcEndAddr": "0x407de9",
            "decompiledFuncCode": "\nvoid FUN_00407de0(void)\n\n{\n  FUN_00407d70();\n  return;\n}\n\n",
            "funcName": "FUN_00407de0"
        },
        {
            "funcStartAddr": "0x407df0",
            "funcEndAddr": "0x407e07",
            "decompiledFuncCode": "\nvoid FUN_00407df0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00407d70(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00407df0"
        },
        {
            "funcStartAddr": "0x407e10",
            "funcEndAddr": "0x407e23",
            "decompiledFuncCode": "\nvoid FUN_00407e10(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00407d70(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00407e10"
        },
        {
            "funcStartAddr": "0x407e30",
            "funcEndAddr": "0x407e3a",
            "decompiledFuncCode": "\nvoid FUN_00407e30(void)\n\n{\n  FUN_00407630();\n  return;\n}\n\n",
            "funcName": "FUN_00407e30"
        },
        {
            "funcStartAddr": "0x407e40",
            "funcEndAddr": "0x407e52",
            "decompiledFuncCode": "\nvoid FUN_00407e40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00407630(0,param_1,param_2,&DAT_00611320);\n  return;\n}\n\n",
            "funcName": "FUN_00407e40"
        },
        {
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407e71",
            "decompiledFuncCode": "\nvoid FUN_00407e60(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00407630(param_1,param_2,0xffffffffffffffff,&DAT_00611320);\n  return;\n}\n\n",
            "funcName": "FUN_00407e60"
        },
        {
            "funcStartAddr": "0x407e80",
            "funcEndAddr": "0x407e96",
            "decompiledFuncCode": "\nvoid FUN_00407e80(undefined8 param_1)\n\n{\n  FUN_00407630(0,param_1,0xffffffffffffffff,&DAT_00611320);\n  return;\n}\n\n",
            "funcName": "FUN_00407e80"
        },
        {
            "funcStartAddr": "0x407ea0",
            "funcEndAddr": "0x4080d8",
            "decompiledFuncCode": "\nulong FUN_00407ea0(uint param_1,char *param_2,uint param_3,char *param_4,uint param_5)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  ulong uVar4;\n  int *piVar5;\n  size_t sVar6;\n  size_t sVar7;\n  stat local_158;\n  stat local_c8;\n  \n  uVar4 = syscall(0x13c,(ulong)param_1,param_2,(ulong)param_3,param_4,(ulong)param_5);\n  if (-1 < (int)uVar4) {\n    return uVar4 & 0xffffffff;\n  }\n  piVar5 = __errno_location();\n  bVar1 = (*piVar5 - 0x16U & 0xffffffef) != 0 && *piVar5 != 0x5f;\n  if (bVar1) {\n    return uVar4 & 0xffffffff;\n  }\n  if (param_5 != 0) {\n    if ((param_5 & 0xfffffffe) != 0) {\n      *piVar5 = 0x5f;\n      return 0xffffffff;\n    }\n    iVar2 = __fxstatat(1,param_3,param_4,&local_c8,0x100);\n    if ((iVar2 == 0) || (*piVar5 == 0x4b)) {\n      *piVar5 = 0x11;\n      return 0xffffffff;\n    }\n    if (*piVar5 != 2) {\n      return 0xffffffff;\n    }\n    bVar1 = true;\n  }\n  sVar6 = strlen(param_2);\n  sVar7 = strlen(param_4);\n  if (((sVar6 != 0) && (sVar7 != 0)) && ((param_2[sVar6 - 1] == '/' || (param_4[sVar7 - 1] == '/')))\n     ) {\n    iVar2 = __fxstatat(1,param_1,param_2,&local_158,0x100);\n    if (iVar2 != 0) {\n      return 0xffffffff;\n    }\n    if (bVar1) {\n      if ((local_158.st_mode & 0xf000) != 0x4000) {\n        *piVar5 = 2;\n        return 0xffffffff;\n      }\n    }\n    else {\n      iVar2 = __fxstatat(1,param_3,param_4,&local_c8,0x100);\n      if (iVar2 == 0) {\n        if ((local_c8.st_mode & 0xf000) != 0x4000) {\n          *piVar5 = 0x14;\n          return 0xffffffff;\n        }\n        if ((local_158.st_mode & 0xf000) != 0x4000) {\n          *piVar5 = 0x15;\n          return 0xffffffff;\n        }\n      }\n      else if ((*piVar5 != 2) || ((local_158.st_mode & 0xf000) != 0x4000)) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 = renameat(param_1,param_2,param_3,param_4);\n  return (ulong)uVar3;\n}\n\n",
            "funcName": "FUN_00407ea0"
        },
        {
            "funcStartAddr": "0x4080f0",
            "funcEndAddr": "0x40820f",
            "decompiledFuncCode": "\nbool FUN_004080f0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *__filename;\n  char *__filename_00;\n  int *piVar3;\n  bool bVar4;\n  stat local_158;\n  stat local_c8;\n  \n  bVar4 = false;\n  __s1 = (void *)FUN_00404ca0();\n  __s2 = (void *)FUN_00404ca0(param_2);\n  __n = FUN_00404d00(__s1);\n  sVar2 = FUN_00404d00(__s2);\n  if ((__n == sVar2) && (iVar1 = memcmp(__s1,__s2,__n), iVar1 == 0)) {\n    __filename = (char *)FUN_00404bc0(param_1);\n    __filename_00 = (char *)FUN_00404bc0(param_2);\n    iVar1 = __xstat(1,__filename,&local_158);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_0040e363,__filename);\n    }\n    iVar1 = __xstat(1,__filename_00,&local_c8);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_0040e363,__filename_00);\n    }\n    bVar4 = local_158.st_ino == local_c8.st_ino && local_158.st_dev == local_c8.st_dev;\n    free(__filename);\n    free(__filename_00);\n  }\n  return bVar4;\n}\n\n",
            "funcName": "FUN_004080f0"
        },
        {
            "funcStartAddr": "0x408220",
            "funcEndAddr": "0x408271",
            "decompiledFuncCode": "\nint FUN_00408220(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  stat sStack_98;\n  \n  iVar1 = __lxstat(1,param_1,&sStack_98);\n  piVar2 = __errno_location();\n  if ((iVar1 != 0) && (*piVar2 != 0x4b)) {\n    return -(uint)(*piVar2 != 2);\n  }\n  *piVar2 = 0x11;\n  return -1;\n}\n\n",
            "funcName": "FUN_00408220"
        },
        {
            "funcStartAddr": "0x408280",
            "funcEndAddr": "0x40828a",
            "decompiledFuncCode": "\nvoid FUN_00408280(char *param_1)\n\n{\n  mkdir(param_1,0x1c0);\n  return;\n}\n\n",
            "funcName": "FUN_00408280"
        },
        {
            "funcStartAddr": "0x408290",
            "funcEndAddr": "0x4082a6",
            "decompiledFuncCode": "\nvoid FUN_00408290(char *param_1,uint *param_2)\n\n{\n  open(param_1,*param_2 & 0xffffff3c | 0xc2,0x180);\n  return;\n}\n\n",
            "funcName": "FUN_00408290"
        },
        {
            "funcStartAddr": "0x4082b0",
            "funcEndAddr": "0x4082cd",
            "decompiledFuncCode": "\nvoid FUN_004082b0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\",\"lib/tempname.c\",0x147,\"gen_tempname_len\");\n}\n\n",
            "funcName": "FUN_004082b0"
        },
        {
            "funcStartAddr": "0x4082d0",
            "funcEndAddr": "0x40842d",
            "decompiledFuncCode": "\nint FUN_004082d0(char *param_1,int param_2,undefined8 param_3,code *param_4,ulong param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  char *pcVar9;\n  char *pcVar10;\n  \n  piVar2 = __errno_location();\n  iVar7 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)param_2 + param_5 <= sVar3) {\n    lVar4 = sVar3 - ((long)param_2 + param_5);\n    sVar3 = strspn(param_1 + lVar4,\"X\");\n    if (param_5 <= sVar3) {\n      lVar5 = FUN_0040add0(0,param_5);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      iVar8 = 0x3a2f8;\n      while( true ) {\n        pcVar9 = param_1 + lVar4;\n        if (param_5 != 0) {\n          do {\n            pcVar10 = pcVar9 + 1;\n            lVar6 = FUN_0040ae10(lVar5,0x3d);\n            *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar9 = pcVar10;\n          } while (pcVar10 != param_1 + lVar4 + param_5);\n        }\n        iVar1 = (*param_4)(param_1,param_3);\n        if (-1 < iVar1) break;\n        if (*piVar2 != 0x11) {\n          iVar1 = -1;\n          iVar7 = *piVar2;\n          goto LAB_004083e5;\n        }\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) {\n          FUN_0040af30(lVar5);\n          *piVar2 = 0x11;\n          return -1;\n        }\n      }\n      *piVar2 = iVar7;\nLAB_004083e5:\n      FUN_0040af30(lVar5);\n      *piVar2 = iVar7;\n      return iVar1;\n    }\n  }\n  *piVar2 = 0x16;\n  return -1;\n}\n\n",
            "funcName": "FUN_004082d0"
        },
        {
            "funcStartAddr": "0x408430",
            "funcEndAddr": "0x408460",
            "decompiledFuncCode": "\nulong FUN_00408430(char *param_1,undefined8 param_2,undefined4 param_3,code *param_4)\n\n{\n  char *__s;\n  uint uVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  ulong uVar7;\n  int iVar8;\n  undefined8 extraout_RDX;\n  int iVar9;\n  char *pcVar10;\n  char *pcVar11;\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_004082d0(param_1,param_2,local_c,(&PTR_FUN_0040ddc0)[(ulong)param_4 & 0xffffffff]);\n    return uVar7;\n  }\n  FUN_004082b0();\n  iVar9 = (int)param_2;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_004082d0();\n    return uVar7;\n  }\n  FUN_004082b0();\n  piVar2 = __errno_location();\n  iVar8 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)iVar9 + 6U <= sVar3) {\n    lVar4 = sVar3 - ((long)iVar9 + 6U);\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_0040add0(0,6);\n      if (lVar5 == 0) {\n        uVar1 = 0xffffffff;\n      }\n      else {\n        iVar9 = 0x3a2f8;\n        pcVar10 = __s;\n        do {\n          do {\n            pcVar11 = pcVar10 + 1;\n            lVar6 = FUN_0040ae10(lVar5,0x3d);\n            *pcVar10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar10 = pcVar11;\n          } while (pcVar11 != param_1 + lVar4 + 6);\n          uVar1 = (*param_4)(param_1,extraout_RDX);\n          if (-1 < (int)uVar1) {\n            *piVar2 = iVar8;\nLAB_004083e5:\n            FUN_0040af30(lVar5);\n            *piVar2 = iVar8;\n            goto LAB_00408400;\n          }\n          if (*piVar2 != 0x11) {\n            uVar1 = 0xffffffff;\n            iVar8 = *piVar2;\n            goto LAB_004083e5;\n          }\n          iVar9 = iVar9 + -1;\n          pcVar10 = __s;\n        } while (iVar9 != 0);\n        FUN_0040af30(lVar5);\n        *piVar2 = 0x11;\n        uVar1 = 0xffffffff;\n      }\n      goto LAB_00408400;\n    }\n  }\n  *piVar2 = 0x16;\n  uVar1 = 0xffffffff;\nLAB_00408400:\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00408430"
        },
        {
            "funcStartAddr": "0x408460",
            "funcEndAddr": "0x4084a0",
            "decompiledFuncCode": "\nulong FUN_00408460(char *param_1,undefined8 param_2,undefined4 param_3,code *param_4)\n\n{\n  char *__s;\n  uint uVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  ulong uVar7;\n  int iVar8;\n  undefined8 extraout_RDX;\n  int iVar9;\n  char *pcVar10;\n  char *pcVar11;\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if ((uint)param_4 < 3) {\n    uVar7 = FUN_004082d0(param_1,param_2,local_c,(&PTR_FUN_0040ddc0)[(ulong)param_4 & 0xffffffff],6)\n    ;\n    return uVar7;\n  }\n  FUN_004082b0();\n  piVar2 = __errno_location();\n  iVar8 = *piVar2;\n  sVar3 = strlen(param_1);\n  uVar7 = (long)(int)param_2 + 6;\n  if (uVar7 <= sVar3) {\n    lVar4 = sVar3 - uVar7;\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_0040add0(0,6);\n      if (lVar5 == 0) {\n        uVar1 = 0xffffffff;\n      }\n      else {\n        iVar9 = 0x3a2f8;\n        pcVar10 = __s;\n        do {\n          do {\n            pcVar11 = pcVar10 + 1;\n            lVar6 = FUN_0040ae10(lVar5,0x3d);\n            *pcVar10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar10 = pcVar11;\n          } while (pcVar11 != param_1 + lVar4 + 6);\n          uVar1 = (*param_4)(param_1,extraout_RDX);\n          if (-1 < (int)uVar1) {\n            *piVar2 = iVar8;\nLAB_004083e5:\n            FUN_0040af30(lVar5);\n            *piVar2 = iVar8;\n            goto LAB_00408400;\n          }\n          if (*piVar2 != 0x11) {\n            uVar1 = 0xffffffff;\n            iVar8 = *piVar2;\n            goto LAB_004083e5;\n          }\n          iVar9 = iVar9 + -1;\n          pcVar10 = __s;\n        } while (iVar9 != 0);\n        FUN_0040af30(lVar5);\n        *piVar2 = 0x11;\n        uVar1 = 0xffffffff;\n      }\n      goto LAB_00408400;\n    }\n  }\n  *piVar2 = 0x16;\n  uVar1 = 0xffffffff;\nLAB_00408400:\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00408460"
        },
        {
            "funcStartAddr": "0x4084a0",
            "funcEndAddr": "0x4084ab",
            "decompiledFuncCode": "\nint FUN_004084a0(char *param_1,int param_2,undefined8 param_3,code *param_4)\n\n{\n  char *__s;\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  char *pcVar9;\n  char *pcVar10;\n  \n  piVar2 = __errno_location();\n  iVar7 = *piVar2;\n  sVar3 = strlen(param_1);\n  if ((long)param_2 + 6U <= sVar3) {\n    lVar4 = sVar3 - ((long)param_2 + 6U);\n    __s = param_1 + lVar4;\n    sVar3 = strspn(__s,\"X\");\n    if (5 < sVar3) {\n      lVar5 = FUN_0040add0(0,6);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      iVar8 = 0x3a2f8;\n      pcVar9 = __s;\n      while( true ) {\n        do {\n          pcVar10 = pcVar9 + 1;\n          lVar6 = FUN_0040ae10(lVar5,0x3d);\n          *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n          pcVar9 = pcVar10;\n        } while (pcVar10 != param_1 + lVar4 + 6);\n        iVar1 = (*param_4)(param_1,param_3);\n        if (-1 < iVar1) break;\n        if (*piVar2 != 0x11) {\n          iVar1 = -1;\n          iVar7 = *piVar2;\n          goto LAB_004083e5;\n        }\n        iVar8 = iVar8 + -1;\n        pcVar9 = __s;\n        if (iVar8 == 0) {\n          FUN_0040af30(lVar5);\n          *piVar2 = 0x11;\n          return -1;\n        }\n      }\n      *piVar2 = iVar7;\nLAB_004083e5:\n      FUN_0040af30(lVar5);\n      *piVar2 = iVar7;\n      return iVar1;\n    }\n  }\n  *piVar2 = 0x16;\n  return -1;\n}\n\n",
            "funcName": "FUN_004084a0"
        },
        {
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x408854",
            "decompiledFuncCode": "\nundefined8\nFUN_004084b0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040de52,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040872c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040872c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_004087c9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_004087c9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004085aa;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_004085aa:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004084b0"
        },
        {
            "funcStartAddr": "0x408890",
            "funcEndAddr": "0x4088b0",
            "decompiledFuncCode": "\nvoid FUN_00408890(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004084b0();\n  return;\n}\n\n",
            "funcName": "FUN_00408890"
        },
        {
            "funcStartAddr": "0x4088b0",
            "funcEndAddr": "0x408909",
            "decompiledFuncCode": "\nvoid FUN_004088b0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004084b0();\n  return;\n}\n\n",
            "funcName": "FUN_004088b0"
        },
        {
            "funcStartAddr": "0x408910",
            "funcEndAddr": "0x4089c8",
            "decompiledFuncCode": "\nvoid FUN_00408910(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004084b0();\n  return;\n}\n\n",
            "funcName": "FUN_00408910"
        },
        {
            "funcStartAddr": "0x4089d0",
            "funcEndAddr": "0x408a44",
            "decompiledFuncCode": "\nvoid FUN_004089d0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_004089d0"
        },
        {
            "funcStartAddr": "0x408a50",
            "funcEndAddr": "0x408a6a",
            "decompiledFuncCode": "\nvoid FUN_00408a50(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00408ca0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00408a50"
        },
        {
            "funcStartAddr": "0x408a70",
            "funcEndAddr": "0x408a91",
            "decompiledFuncCode": "\nvoid FUN_00408a70(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00408a50();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00408a70"
        },
        {
            "funcStartAddr": "0x408aa0",
            "funcEndAddr": "0x408aa2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00408a50(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00408ca0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_408aa0"
        },
        {
            "funcStartAddr": "0x408ab0",
            "funcEndAddr": "0x408ae0",
            "decompiledFuncCode": "\nvoid * FUN_00408ab0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00408ca0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00408ab0"
        },
        {
            "funcStartAddr": "0x408af0",
            "funcEndAddr": "0x408b11",
            "decompiledFuncCode": "\nvoid FUN_00408af0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00408ab0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00408af0"
        },
        {
            "funcStartAddr": "0x408b20",
            "funcEndAddr": "0x408b98",
            "decompiledFuncCode": "\nvoid FUN_00408b20(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00408b7b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00408b7b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00408ca0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00408ab0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00408b20"
        },
        {
            "funcStartAddr": "0x408bb0",
            "funcEndAddr": "0x408bfa",
            "decompiledFuncCode": "\nvoid FUN_00408bb0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00408ab0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00408bfa;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00408bfa:\n                    /* WARNING: Subroutine does not return */\n      FUN_00408ca0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00408ab0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00408bb0"
        },
        {
            "funcStartAddr": "0x408c00",
            "funcEndAddr": "0x408c17",
            "decompiledFuncCode": "\nvoid FUN_00408c00(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00408a50();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00408c00"
        },
        {
            "funcStartAddr": "0x408c20",
            "funcEndAddr": "0x408c4e",
            "decompiledFuncCode": "\nvoid FUN_00408c20(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00408ca0();\n}\n\n",
            "funcName": "FUN_00408c20"
        },
        {
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408c78",
            "decompiledFuncCode": "\nvoid FUN_00408c50(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00408a50(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408c50"
        },
        {
            "funcStartAddr": "0x408c80",
            "funcEndAddr": "0x408c93",
            "decompiledFuncCode": "\nvoid FUN_00408c80(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00408a50(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00408c80"
        },
        {
            "funcStartAddr": "0x408ca0",
            "funcEndAddr": "0x408cd1",
            "decompiledFuncCode": "\nvoid FUN_00408ca0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00611300,0,&DAT_0040e363,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408ca0"
        },
        {
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408d06",
            "decompiledFuncCode": "\nlong FUN_00408ce0(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_00408f90(0,0);\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00408ca0();\n    }\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00408ce0"
        },
        {
            "funcStartAddr": "0x408d10",
            "funcEndAddr": "0x408d78",
            "decompiledFuncCode": "\nbool FUN_00408d10(void)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  bool bVar3;\n  char *local_18;\n  size_t local_10;\n  \n  bVar3 = false;\n  local_18 = (char *)0x0;\n  local_10 = 0;\n  _Var2 = __getdelim(&local_18,&local_10,10,stdin);\n  if (0 < _Var2) {\n    if (local_18[_Var2 + -1] == '\\n') {\n      local_18[_Var2 + -1] = '\\0';\n    }\n    iVar1 = rpmatch(local_18);\n    bVar3 = 0 < iVar1;\n  }\n  free(local_18);\n  return bVar3;\n}\n\n",
            "funcName": "FUN_00408d10"
        },
        {
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408eac",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00408d80(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_00611558 < 0) {\n    iVar1 = FUN_00408d80(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_00611558 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_00611558 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00408d80(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_00611558 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00408d80"
        },
        {
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408efb",
            "decompiledFuncCode": "\nvoid FUN_00408ec0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00408f30(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00408ec0"
        },
        {
            "funcStartAddr": "0x408f00",
            "funcEndAddr": "0x408f28",
            "decompiledFuncCode": "\nlong FUN_00408f00(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00408f00"
        },
        {
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f86",
            "decompiledFuncCode": "\nulong FUN_00408f30(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00408f30"
        },
        {
            "funcStartAddr": "0x408f90",
            "funcEndAddr": "0x409435",
            "decompiledFuncCode": "\nvoid * FUN_00408f90(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_00408fc2:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_00408fc2;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_004092a8:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_00409361;\n          goto joined_r0x0040936f;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_004093cd:\n          close(iVar6);\n          goto joined_r0x0040936f;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_004093cd;\n        }\nLAB_00409120:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_00409330;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_00409361;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_00409330:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_00409120;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_0040923f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_00409361:\n          closedir(__dirp);\n          goto joined_r0x0040936f;\n        }\nLAB_0040923f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_004092a8;\n      }\n      goto LAB_00409390;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_00409390:\n  iVar7 = *piVar8;\njoined_r0x0040936f:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00408f90"
        },
        {
            "funcStartAddr": "0x409460",
            "funcEndAddr": "0x409535",
            "decompiledFuncCode": "\nvoid FUN_00409460(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_004094dc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_004094dc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_004094dc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00409460"
        },
        {
            "funcStartAddr": "0x409540",
            "funcEndAddr": "0x409b3e",
            "decompiledFuncCode": "\nint FUN_00409540(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00409760;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004096a0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004096a0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004096a0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_0040e2d1,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00409760:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00409540"
        },
        {
            "funcStartAddr": "0x409b60",
            "funcEndAddr": "0x40a0c7",
            "decompiledFuncCode": "\nuint FUN_00409b60(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00409baa:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00409cad;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00409cad:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00409cb8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00409c28;\nLAB_00409ccc:\n    if (*pbVar8 == 0) goto LAB_00409c28;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00409baa;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00409cb8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00409ccc;\nLAB_00409c28:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00409460(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00409d96:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040e2e9;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00409460(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00409d96;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040e2e9;\n        goto LAB_00409ef5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00409ea0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00409540(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040e2ea);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00409ea0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040e308;\nLAB_00409ef5:\n  uVar3 = FUN_00409540(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00409b60"
        },
        {
            "funcStartAddr": "0x40a130",
            "funcEndAddr": "0x40a186",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040a130(void)\n\n{\n  DAT_00611560 = DAT_0061137c;\n  _DAT_00611564 = DAT_00611378;\n  FUN_00409b60();\n  DAT_0061137c = DAT_00611560;\n  DAT_006115a0 = DAT_00611570;\n  _DAT_00611374 = DAT_00611568;\n  return;\n}\n\n",
            "funcName": "FUN_0040a130"
        },
        {
            "funcStartAddr": "0x40a190",
            "funcEndAddr": "0x40a1a8",
            "decompiledFuncCode": "\nvoid FUN_0040a190(void)\n\n{\n  FUN_0040a130();\n  return;\n}\n\n",
            "funcName": "FUN_0040a190"
        },
        {
            "funcStartAddr": "0x40a1b0",
            "funcEndAddr": "0x40a1c3",
            "decompiledFuncCode": "\nvoid FUN_0040a1b0(void)\n\n{\n  FUN_0040a130();\n  return;\n}\n\n",
            "funcName": "FUN_0040a1b0"
        },
        {
            "funcStartAddr": "0x40a1d0",
            "funcEndAddr": "0x40a1e5",
            "decompiledFuncCode": "\nvoid FUN_0040a1d0(void)\n\n{\n  FUN_00409b60();\n  return;\n}\n\n",
            "funcName": "FUN_0040a1d0"
        },
        {
            "funcStartAddr": "0x40a1f0",
            "funcEndAddr": "0x40a206",
            "decompiledFuncCode": "\nvoid FUN_0040a1f0(void)\n\n{\n  FUN_0040a130();\n  return;\n}\n\n",
            "funcName": "FUN_0040a1f0"
        },
        {
            "funcStartAddr": "0x40a210",
            "funcEndAddr": "0x40a228",
            "decompiledFuncCode": "\nvoid FUN_0040a210(void)\n\n{\n  FUN_00409b60();\n  return;\n}\n\n",
            "funcName": "FUN_0040a210"
        },
        {
            "funcStartAddr": "0x40a230",
            "funcEndAddr": "0x40a29f",
            "decompiledFuncCode": "\nsize_t FUN_0040a230(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40e307;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_0040a254;\n  }\n  param_1 = &local_1c;\nLAB_0040a254:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_0040a790(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_0040a230"
        },
        {
            "funcStartAddr": "0x40a2b0",
            "funcEndAddr": "0x40a38b",
            "decompiledFuncCode": "\nchar * FUN_0040a2b0(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040a2b0"
        },
        {
            "funcStartAddr": "0x40a3a0",
            "funcEndAddr": "0x40a3aa",
            "decompiledFuncCode": "\nvoid FUN_0040a3a0(void)\n\n{\n  FUN_004032b0(1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a3a0"
        },
        {
            "funcStartAddr": "0x40a3b0",
            "funcEndAddr": "0x40a4b3",
            "decompiledFuncCode": "\nlong FUN_0040a3b0(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_0040a447:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_0040a447;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_0040a3b0"
        },
        {
            "funcStartAddr": "0x40a4d0",
            "funcEndAddr": "0x40a53c",
            "decompiledFuncCode": "\nvoid FUN_0040a4d0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00407e60(1,param_1);\n  uVar3 = FUN_00407b50(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_0040a4d0"
        },
        {
            "funcStartAddr": "0x40a550",
            "funcEndAddr": "0x40a65f",
            "decompiledFuncCode": "\nvoid FUN_0040a550(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_00407e80(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_0040a620;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_00407e80(lVar5);\n    __fprintf_chk(stderr,1,&DAT_0040e361,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_0040a620:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_0040a550"
        },
        {
            "funcStartAddr": "0x40a670",
            "funcEndAddr": "0x40a6dd",
            "decompiledFuncCode": "\nlong FUN_0040a670(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040a3b0(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_0040a4d0(param_1,param_2,lVar1);\n    FUN_0040a550(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040a670"
        },
        {
            "funcStartAddr": "0x40a6e0",
            "funcEndAddr": "0x40a72c",
            "decompiledFuncCode": "\nlong FUN_0040a6e0(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_0040a6e0"
        },
        {
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a78c",
            "decompiledFuncCode": "\nulong FUN_0040a730(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040b9a0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_0040a730"
        },
        {
            "funcStartAddr": "0x40a790",
            "funcEndAddr": "0x40a7e6",
            "decompiledFuncCode": "\nbool FUN_0040a790(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040e366;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_0040a790"
        },
        {
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a822",
            "decompiledFuncCode": "\nulong FUN_0040a7f0(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a7f0"
        },
        {
            "funcStartAddr": "0x40a830",
            "funcEndAddr": "0x40ad84",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040a830(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00611598 != (char *)0x0) goto LAB_0040a86a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040a955:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040a976;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040a955;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040a976:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040aa10:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040ab9c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040aa10;\n              if (uVar4 == 0x23) goto LAB_0040ac01;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040abaf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040b9a0(__stream);\n                goto LAB_0040a9b4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040ab9c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040abaf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040a9ae;\n    }\n  }\n  DAT_00611598 = \"\";\nLAB_0040a86a:\n  cVar1 = *DAT_00611598;\n  pcVar7 = DAT_00611598;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040a8c4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040a8c4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040ac01:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040abaf;\n  goto LAB_0040aa10;\nLAB_0040abaf:\n  FUN_0040b9a0(__stream);\n  if (local_d0 == 0) {\nLAB_0040a9ae:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040a9b4:\n  free(__file);\n  DAT_00611598 = pcVar7;\n  goto LAB_0040a86a;\n}\n\n",
            "funcName": "FUN_0040a830"
        },
        {
            "funcStartAddr": "0x40ada0",
            "funcEndAddr": "0x40adc3",
            "decompiledFuncCode": "\nvoid FUN_0040ada0(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00408a50(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_0040ada0"
        },
        {
            "funcStartAddr": "0x40add0",
            "funcEndAddr": "0x40adff",
            "decompiledFuncCode": "\nlong * FUN_0040add0(void)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  lVar1 = FUN_0040aff0();\n  plVar2 = (long *)0x0;\n  if (lVar1 != 0) {\n    plVar2 = (long *)FUN_00408a50(0x18);\n    *plVar2 = lVar1;\n    plVar2[2] = 0;\n    plVar2[1] = 0;\n  }\n  return plVar2;\n}\n\n",
            "funcName": "FUN_0040add0"
        },
        {
            "funcStartAddr": "0x40ae00",
            "funcEndAddr": "0x40ae04",
            "decompiledFuncCode": "\nundefined8 FUN_0040ae00(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n",
            "funcName": "FUN_0040ae00"
        },
        {
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40aefb",
            "decompiledFuncCode": "\nulong FUN_0040ae10(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  long lVar7;\n  ulong uVar8;\n  ulong uVar9;\n  byte local_40 [16];\n  \n  uVar1 = param_2 + 1;\n  uVar3 = *param_1;\n  uVar9 = param_1[1];\n  uVar8 = param_1[2];\n  while( true ) {\n    uVar4 = uVar9;\n    if (uVar8 < param_2) {\n      lVar7 = 0;\n      uVar4 = uVar8;\n      do {\n        lVar7 = lVar7 + 1;\n        uVar4 = uVar4 * 0x100 + 0xff;\n      } while (uVar4 < param_2);\n      FUN_0040b300(uVar3,local_40,lVar7);\n      pbVar5 = local_40;\n      do {\n        bVar2 = *pbVar5;\n        pbVar5 = pbVar5 + 1;\n        uVar8 = uVar8 * 0x100 + 0xff;\n        uVar9 = uVar9 * 0x100 + (ulong)bVar2;\n        uVar4 = uVar9;\n      } while (uVar8 < param_2);\n    }\n    if (uVar8 == param_2) break;\n    uVar6 = (uVar8 - param_2) % uVar1;\n    uVar9 = uVar4 % uVar1;\n    if (uVar4 <= uVar8 - uVar6) {\n      param_1[1] = uVar4 / uVar1;\n      param_1[2] = (uVar8 - param_2) / uVar1;\n      return uVar9;\n    }\n    uVar8 = uVar6 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  return uVar4;\n}\n\n",
            "funcName": "FUN_0040ae10"
        },
        {
            "funcStartAddr": "0x40af10",
            "funcEndAddr": "0x40af2e",
            "decompiledFuncCode": "\nvoid FUN_0040af10(void *param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040af10"
        },
        {
            "funcStartAddr": "0x40af30",
            "funcEndAddr": "0x40af81",
            "decompiledFuncCode": "\nundefined4 FUN_0040af30(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = FUN_0040b460(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040af30"
        },
        {
            "funcStartAddr": "0x40af90",
            "funcEndAddr": "0x40afed",
            "decompiledFuncCode": "\nvoid FUN_0040af90(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_00407e80();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n    error(DAT_00611300,*piVar2,uVar3,uVar1);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040af90"
        },
        {
            "funcStartAddr": "0x40aff0",
            "funcEndAddr": "0x40b2cc",
            "decompiledFuncCode": "\nFILE ** FUN_0040aff0(FILE *param_1,ulong param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  FILE *pFVar2;\n  FILE **ppFVar3;\n  FILE **ppFVar4;\n  size_t __n;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  timeval *ptVar8;\n  undefined *puVar9;\n  ulong uVar10;\n  byte bVar11;\n  __uid_t local_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  \n  bVar11 = 0;\n  if (param_2 == 0) {\n    ppFVar3 = (FILE **)FUN_00408a50(0x1038);\n    *ppFVar3 = (FILE *)0x0;\n    ppFVar3[1] = (FILE *)FUN_0040af90;\n    ppFVar3[2] = (FILE *)0x0;\n    return ppFVar3;\n  }\n  if (param_1 != (FILE *)0x0) {\n    pFVar2 = (FILE *)FUN_0040ba20(param_1,&DAT_0040e424);\n    if (pFVar2 != (FILE *)0x0) {\n      ppFVar3 = (FILE **)FUN_00408a50(0x1038);\n      *ppFVar3 = pFVar2;\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      ppFVar3[1] = (FILE *)FUN_0040af90;\n      ppFVar3[2] = param_1;\n      setvbuf(pFVar2,(char *)(ppFVar3 + 3),0,__n);\n      return ppFVar3;\n    }\n    return (FILE **)0x0;\n  }\n  ppFVar4 = (FILE **)FUN_00408a50(0x1038);\n  *ppFVar4 = (FILE *)0x0;\n  ppFVar3 = ppFVar4 + 4;\n  ppFVar4[1] = (FILE *)FUN_0040af90;\n  ppFVar4[2] = (FILE *)0x0;\n  ppFVar4[3] = (FILE *)0x0;\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    uVar5 = 0x14;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    *(__uid_t *)(ppFVar4 + 4) = local_48;\n    *(undefined4 *)((long)ppFVar4 + 0x24) = uStack_44;\n    *(undefined4 *)(ppFVar4 + 5) = uStack_40;\n    *(undefined4 *)((long)ppFVar4 + 0x2c) = uStack_3c;\n    local_48 = getpid();\n    *(__uid_t *)(ppFVar4 + 6) = local_48;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    pFVar2 = (FILE *)__read_chk(__fd,ppFVar3,param_2,0x1018);\n    close(__fd);\n    if (0x7ff < (long)pFVar2) goto LAB_0040b0f8;\n    if ((long)pFVar2 < 0) {\n      pFVar2 = param_1;\n    }\n    uVar5 = 0x800 - (long)pFVar2;\n    if (0x10 < uVar5) {\n      uVar5 = 0x10;\n    }\n    lVar7 = (long)&pFVar2->_flags + uVar5;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + (long)pFVar2);\n    for (uVar5 = uVar5 & 0xffffffff; uVar5 != 0; uVar5 = uVar5 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < lVar7) goto LAB_0040b0f8;\n    uVar10 = 0x800 - lVar7;\n    if (4 < uVar10) {\n      uVar10 = 4;\n    }\n    local_48 = getpid();\n    uVar5 = uVar10 + lVar7;\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + lVar7);\n    for (uVar10 = uVar10 & 0xffffffff; uVar10 != 0; uVar10 = uVar10 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < uVar5) goto LAB_0040b0f8;\n  }\n  uVar10 = 0x800 - uVar5;\n  if (4 < uVar10) {\n    uVar10 = 4;\n  }\n  local_48 = getppid();\n  if ((uint)uVar10 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)ppFVar3 + uVar6 + uVar5) = *(undefined *)((long)&local_48 + uVar6);\n    } while (uVar1 < (uint)uVar10);\n  }\n  uVar10 = uVar10 + uVar5;\n  if (uVar10 < 0x800) {\n    uVar5 = 0x800 - uVar10;\n    if (4 < uVar5) {\n      uVar5 = 4;\n    }\n    local_48 = getuid();\n    if ((uint)uVar5 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n      } while (uVar1 < (uint)uVar5);\n    }\n    uVar10 = uVar10 + uVar5;\n    if (uVar10 < 0x800) {\n      local_48 = getgid();\n      uVar5 = 0x800 - uVar10;\n      if (4 < uVar5) {\n        uVar5 = 4;\n      }\n      if ((uint)uVar5 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n        } while (uVar1 < (uint)uVar5);\n      }\n    }\n  }\nLAB_0040b0f8:\n  FUN_0040b760(ppFVar3);\n  return ppFVar4;\n}\n\n",
            "funcName": "FUN_0040aff0"
        },
        {
            "funcStartAddr": "0x40b2e0",
            "funcEndAddr": "0x40b2e5",
            "decompiledFuncCode": "\nvoid FUN_0040b2e0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040b2e0"
        },
        {
            "funcStartAddr": "0x40b2f0",
            "funcEndAddr": "0x40b2f5",
            "decompiledFuncCode": "\nvoid FUN_0040b2f0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040b2f0"
        },
        {
            "funcStartAddr": "0x40b300",
            "funcEndAddr": "0x40b442",
            "decompiledFuncCode": "\nvoid FUN_0040b300(FILE **param_1,void *param_2,FILE *param_3)\n\n{\n  FILE **ppFVar1;\n  int *piVar2;\n  size_t sVar3;\n  int iVar4;\n  void *__dest;\n  FILE **__src;\n  FILE *pFVar5;\n  \n  pFVar5 = *param_1;\n  if (pFVar5 != (FILE *)0x0) {\n    piVar2 = __errno_location();\n    while( true ) {\n      sVar3 = fread_unlocked(param_2,1,(size_t)param_3,pFVar5);\n      iVar4 = *piVar2;\n      param_2 = (void *)((long)param_2 + sVar3);\n      param_3 = (FILE *)((long)param_3 - sVar3);\n      if (param_3 == (FILE *)0x0) break;\n      pFVar5 = param_1[2];\n      if ((*(byte *)&(*param_1)->_flags & 0x20) == 0) {\n        iVar4 = 0;\n      }\n      *piVar2 = iVar4;\n      (*(code *)param_1[1])(pFVar5);\n      pFVar5 = *param_1;\n    }\n    return;\n  }\n  pFVar5 = param_1[3];\n  __src = param_1 + 0x107;\n  ppFVar1 = param_1 + 4;\n  __dest = param_2;\n  if (param_3 <= pFVar5) {\n    __src = (FILE **)((long)__src + (0x800 - (long)pFVar5));\n    goto LAB_0040b415;\n  }\n  do {\n    param_2 = (void *)((long)__dest + (long)pFVar5);\n    param_3 = (FILE *)((long)param_3 - (long)pFVar5);\n    memcpy(__dest,(void *)((0x800 - (long)pFVar5) + (long)__src),(size_t)pFVar5);\n    if (((ulong)param_2 & 7) == 0) goto LAB_0040b3fb;\n    pFVar5 = (FILE *)0x800;\n    FUN_0040b4b0(ppFVar1,__src);\n    __dest = param_2;\n  } while ((FILE *)0x800 < param_3);\n  goto LAB_0040b40f;\nLAB_0040b3fb:\n  while ((FILE *)0x7ff < param_3) {\n    FUN_0040b4b0(ppFVar1,param_2);\n    param_3 = (FILE *)&param_3[-10]._fileno;\n    param_2 = (void *)((long)param_2 + 0x800);\n    if (param_3 == (FILE *)0x0) {\n      param_1[3] = (FILE *)0x0;\n      return;\n    }\n  }\n  FUN_0040b4b0(ppFVar1,__src);\nLAB_0040b40f:\n  pFVar5 = (FILE *)0x800;\nLAB_0040b415:\n  memcpy(param_2,__src,(size_t)param_3);\n  param_1[3] = (FILE *)((long)pFVar5 - (long)param_3);\n  return;\n}\n\n",
            "funcName": "FUN_0040b300"
        },
        {
            "funcStartAddr": "0x40b460",
            "funcEndAddr": "0x40b4a1",
            "decompiledFuncCode": "\nundefined8 FUN_0040b460(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = FUN_0040b9a0(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b460"
        },
        {
            "funcStartAddr": "0x40b4b0",
            "funcEndAddr": "0x40b755",
            "decompiledFuncCode": "\nvoid FUN_0040b4b0(long *param_1,long *param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long lVar6;\n  \n  lVar6 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar6 + 1;\n  lVar6 = param_1[0x101] + lVar6 + 1;\n  plVar1 = param_1;\n  plVar5 = param_2;\n  do {\n    lVar4 = *plVar1;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar1[0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar1 = lVar6;\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8)) + lVar4;\n    *plVar5 = lVar4;\n    lVar6 = plVar1[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar1[0x81];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar1[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[1] = lVar6;\n    lVar4 = plVar1[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar1[0x82];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar1[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar5[2] = lVar4;\n    lVar6 = plVar1[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar1[0x83];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2 = plVar1 + 4;\n    plVar1[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[3] = lVar6;\n    plVar1 = plVar2;\n    plVar5 = plVar5 + 4;\n  } while (plVar2 != param_1 + 0x80);\n  plVar1 = param_2 + 0x80;\n  do {\n    lVar4 = *plVar2;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar2[-0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar2 = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    *plVar1 = lVar4;\n    lVar6 = plVar2[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar2[-0x7f];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[1] = lVar6;\n    lVar4 = plVar2[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar2[-0x7e];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar2[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar1[2] = lVar4;\n    lVar6 = plVar2[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar2[-0x7d];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar5 = plVar2 + 4;\n    plVar2[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[3] = lVar6;\n    plVar2 = plVar5;\n    plVar1 = plVar1 + 4;\n  } while (plVar5 != param_1 + 0x100);\n  param_1[0x100] = uVar3;\n  param_1[0x101] = lVar6;\n  return;\n}\n\n",
            "funcName": "FUN_0040b4b0"
        },
        {
            "funcStartAddr": "0x40b760",
            "funcEndAddr": "0x40b994",
            "decompiledFuncCode": "\nvoid FUN_0040b760(ulong *param_1)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong *puVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  long lVar9;\n  ulong uVar10;\n  ulong uVar11;\n  long lVar12;\n  ulong uVar13;\n  ulong uVar14;\n  \n  uVar3 = 0x98f5704f6c44c0ab;\n  uVar7 = 0x82f053db8355e0ce;\n  uVar13 = 0xb29b2e824a595524;\n  uVar14 = 0xae985bf2cbfc89ed;\n  uVar11 = 0x8c0ea5053d4712a0;\n  uVar10 = 0xb9f8b322c73ac862;\n  uVar8 = 0x647c4677a2884b7c;\n  uVar5 = 0x48fe4a0fa5a09315;\n  puVar1 = param_1;\n  do {\n    lVar9 = uVar8 + (*puVar1 - (uVar7 + puVar1[4]));\n    uVar6 = uVar5 + puVar1[5] ^ uVar3 + puVar1[7] >> 9;\n    uVar10 = uVar10 + (puVar1[1] - uVar6);\n    uVar5 = uVar14 + puVar1[6] ^ lVar9 * 0x200;\n    lVar12 = uVar11 + (puVar1[2] - uVar5);\n    uVar3 = uVar3 + puVar1[7] + lVar9 ^ uVar10 >> 0x17;\n    uVar13 = uVar13 + (puVar1[3] - uVar3);\n    uVar8 = lVar9 + uVar10 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar1[4]) - uVar8;\n    *puVar1 = uVar8;\n    uVar10 = uVar10 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar1[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar5 - uVar11;\n    puVar1[2] = uVar11;\n    puVar2 = puVar1 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar1[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar1[5] = uVar5;\n    puVar1[4] = uVar7;\n    puVar1[6] = uVar14;\n    puVar1[7] = uVar3;\n    puVar1 = puVar2;\n    puVar4 = param_1;\n  } while (param_1 + 0x100 != puVar2);\n  do {\n    lVar9 = (uVar8 + *puVar4) - (uVar7 + puVar4[4]);\n    uVar6 = uVar5 + puVar4[5] ^ uVar3 + puVar4[7] >> 9;\n    uVar5 = (uVar10 + puVar4[1]) - uVar6;\n    uVar14 = uVar14 + puVar4[6] ^ lVar9 * 0x200;\n    lVar12 = (uVar11 + puVar4[2]) - uVar14;\n    uVar3 = uVar3 + puVar4[7] + lVar9 ^ uVar5 >> 0x17;\n    uVar13 = (uVar13 + puVar4[3]) - uVar3;\n    uVar8 = lVar9 + uVar5 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar4[4]) - uVar8;\n    *puVar4 = uVar8;\n    uVar10 = uVar5 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar4[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar14 - uVar11;\n    puVar4[2] = uVar11;\n    puVar1 = puVar4 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar4[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar4[5] = uVar5;\n    puVar4[4] = uVar7;\n    puVar4[6] = uVar14;\n    puVar4[7] = uVar3;\n    puVar4 = puVar1;\n  } while (param_1 + 0x100 != puVar1);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_0040b760"
        },
        {
            "funcStartAddr": "0x40b9a0",
            "funcEndAddr": "0x40ba18",
            "decompiledFuncCode": "\nint FUN_0040b9a0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040ba07;\n    }\n    iVar1 = FUN_00408ec0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040ba07:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040b9a0"
        },
        {
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40baa9",
            "decompiledFuncCode": "\nFILE * FUN_0040ba20(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_0040bac0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_0040b9a0(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_0040b9a0(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_0040ba20"
        },
        {
            "funcStartAddr": "0x40bac0",
            "funcEndAddr": "0x40bace",
            "decompiledFuncCode": "\nvoid FUN_0040bac0(undefined8 param_1)\n\n{\n  FUN_00408d80(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040bac0"
        },
        {
            "funcStartAddr": "0x40bad0",
            "funcEndAddr": "0x40bb2d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040bb03) */\n/* WARNING: Removing unreachable block (ram,0x0040bb08) */\n\nvoid FUN_0040bad0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040bad0"
        },
        {
            "funcStartAddr": "0x40bb30",
            "funcEndAddr": "0x40bb31",
            "decompiledFuncCode": "\nvoid FUN_0040bb30(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040bb30"
        },
        {
            "funcStartAddr": "0x40bb40",
            "funcEndAddr": "0x40bb58",
            "decompiledFuncCode": "\nvoid FUN_0040bb40(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_006112e8);\n  return;\n}\n\n",
            "funcName": "FUN_0040bb40"
        },
        {
            "funcStartAddr": "0x40bb58",
            "funcEndAddr": "0x40bb78",
            "decompiledFuncCode": "\nundefined8 FUN_0040bb58(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00610e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040bb58"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}