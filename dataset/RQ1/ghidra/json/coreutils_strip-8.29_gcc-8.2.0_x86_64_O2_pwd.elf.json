{
    "funcCount": 100,
    "funcInfo": [
        {
            "funcStartAddr": "0x401a55",
            "funcEndAddr": "0x401a5a",
            "decompiledFuncCode": "\nvoid FUN_00401a55(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401a55"
        },
        {
            "funcStartAddr": "0x401a5a",
            "funcEndAddr": "0x401a5f",
            "decompiledFuncCode": "\nvoid FUN_00401a5a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401a5a"
        },
        {
            "funcStartAddr": "0x401a5f",
            "funcEndAddr": "0x401a64",
            "decompiledFuncCode": "\nvoid FUN_00401a5f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401a5f"
        },
        {
            "funcStartAddr": "0x401a64",
            "funcEndAddr": "0x401a69",
            "decompiledFuncCode": "\nvoid FUN_00401a64(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401a64"
        },
        {
            "funcStartAddr": "0x401a70",
            "funcEndAddr": "0x401c1b",
            "decompiledFuncCode": "\nundefined8 FUN_00401a70(int param_1,undefined8 *param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char *pcVar3;\n  void **__ptr;\n  void *pvVar4;\n  undefined8 uVar5;\n  bool bVar6;\n  \n  pcVar3 = getenv(\"POSIXLY_CORRECT\");\n  bVar6 = pcVar3 != (char *)0x0;\n  FUN_004027f0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_004070f0(FUN_00402750);\n  while( true ) {\n    iVar2 = FUN_00405f00(param_1,param_2,&DAT_00407257,&PTR_s_logical_00407680,0);\n    if (iVar2 == -1) {\n      if (DAT_0060a29c < param_1) {\n        uVar5 = dcgettext(0,\"ignoring non-option arguments\",5);\n        error(0,0,uVar5);\n      }\n      if ((bVar6) && (pcVar3 = (char *)FUN_00401d10(), pcVar3 != (char *)0x0)) {\n        puts(pcVar3);\n        return 0;\n      }\n      pcVar3 = (char *)FUN_00404cb0();\n      if (pcVar3 == (char *)0x0) {\n        __ptr = (void **)FUN_00404a20(0x18);\n        __ptr[1] = (void *)0x2000;\n        pvVar4 = (void *)FUN_00404a20(0x2000);\n        *__ptr = pvVar4;\n        puVar1 = (undefined *)((long)pvVar4 + -1 + (long)__ptr[1]);\n        __ptr[2] = puVar1;\n        *puVar1 = 0;\n        FUN_00401f10(__ptr);\n        puts((char *)__ptr[2]);\n        free(*__ptr);\n        free(__ptr);\n      }\n      else {\n        puts(pcVar3);\n        free(pcVar3);\n      }\n      return 0;\n    }\n    if (iVar2 == -0x82) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004023d0(0);\n    }\n    if (iVar2 < -0x81) break;\n    if (iVar2 == 0x4c) {\n      bVar6 = true;\n    }\n    else {\n      if (iVar2 != 0x50) goto LAB_00401c19;\n      bVar6 = false;\n    }\n  }\n  if (iVar2 == -0x83) {\n    FUN_004048e0(stdout,&DAT_004071a4,\"GNU coreutils\",PTR_DAT_0060a230,\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n    exit(0);\n  }\nLAB_00401c19:\n                    /* WARNING: Subroutine does not return */\n  FUN_004023d0(1);\n}\n\n",
            "funcName": "FUN_00401a70"
        },
        {
            "funcStartAddr": "0x401c30",
            "funcEndAddr": "0x401c5b",
            "decompiledFuncCode": "\nvoid FUN_00401c30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00609ff0)\n            (FUN_00401a70,unaff_retaddr,&stack0x00000008,FUN_00407080,FUN_004070e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00401c30"
        },
        {
            "funcStartAddr": "0x401c5b",
            "funcEndAddr": "0x401c7a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401c68) */\n/* WARNING: Removing unreachable block (ram,0x00401c72) */\n\nvoid FUN_00401c5b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401c5b"
        },
        {
            "funcStartAddr": "0x401c7a",
            "funcEndAddr": "0x401cb1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401ca9) */\n\nvoid FUN_00401c7a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401c7a"
        },
        {
            "funcStartAddr": "0x401cb1",
            "funcEndAddr": "0x401d08",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401ce6) */\n\nvoid FUN_00401cb1(void)\n\n{\n  if (DAT_0060a2c8 != '\\0') {\n    return;\n  }\n  FUN_00401c5b();\n  DAT_0060a2c8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00401cb1"
        },
        {
            "funcStartAddr": "0x401d08",
            "funcEndAddr": "0x401d0d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401ca9) */\n\nvoid thunk_FUN_00401c7a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_401d08"
        },
        {
            "funcStartAddr": "0x401d10",
            "funcEndAddr": "0x401dc8",
            "decompiledFuncCode": "\nchar * FUN_00401d10(void)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__filename;\n  long lVar3;\n  char *pcVar4;\n  stat local_128;\n  stat local_98;\n  \n  __filename = getenv(\"PWD\");\n  if ((__filename != (char *)0x0) && (pcVar4 = __filename, *__filename == '/')) {\n    while (lVar3 = FUN_00406480(pcVar4,&DAT_00407148), lVar3 != 0) {\n      cVar1 = *(char *)(lVar3 + 2);\n      if (cVar1 == '\\0') {\n        return (char *)0x0;\n      }\n      if (cVar1 == '/') {\n        return (char *)0x0;\n      }\n      if (cVar1 == '.') {\n        if (*(char *)(lVar3 + 3) == '\\0') {\n          return (char *)0x0;\n        }\n        if (*(char *)(lVar3 + 3) == '/') {\n          return (char *)0x0;\n        }\n      }\n      pcVar4 = (char *)(lVar3 + 1);\n    }\n    iVar2 = __xstat(1,__filename,&local_128);\n    if ((((iVar2 == 0) && (iVar2 = __xstat(1,\".\",&local_98), iVar2 == 0)) &&\n        (local_128.st_ino == local_98.st_ino)) && (local_128.st_dev == local_98.st_dev)) {\n      return __filename;\n    }\n  }\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_00401d10"
        },
        {
            "funcStartAddr": "0x401dd0",
            "funcEndAddr": "0x401e44",
            "decompiledFuncCode": "\nvoid FUN_00401dd0(ulong param_1)\n\n{\n  undefined2 *puVar1;\n  undefined2 *puVar2;\n  undefined2 *puVar3;\n  \n  if ((-1 < SUB168(ZEXT816(3) * ZEXT816(param_1),0)) &&\n     (SUB168(ZEXT816(3) * ZEXT816(param_1) >> 0x40,0) == 0)) {\n    puVar2 = (undefined2 *)FUN_00404a20(param_1 * 3);\n    if (param_1 != 0) {\n      puVar1 = (undefined2 *)((long)puVar2 + param_1 * 3);\n      do {\n        *(undefined *)(puVar2 + 1) = 0x2f;\n        puVar3 = (undefined2 *)((long)puVar2 + 3);\n        *puVar2 = 0x2e2e;\n        puVar2 = puVar3;\n      } while (puVar3 != puVar1);\n      *(undefined *)((long)puVar1 + -1) = 0;\n      return;\n    }\n    *(undefined *)((long)puVar2 + -1) = 0;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404c70();\n}\n\n",
            "funcName": "FUN_00401dd0"
        },
        {
            "funcStartAddr": "0x401e50",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "\nvoid FUN_00401e50(void **param_1,void *param_2,ulong param_3)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  void *pvVar3;\n  long lVar4;\n  void *__dest;\n  ulong uVar5;\n  \n  pvVar3 = param_1[2];\n  uVar5 = (long)pvVar3 - (long)*param_1;\n  if (uVar5 < param_3 + 1) {\n    lVar4 = param_3 + 1 + (long)param_1[1];\n    pvVar1 = (void *)(lVar4 * 2);\n    if (((long)pvVar1 < 0) || (lVar4 < 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00404c70();\n    }\n    pvVar2 = (void *)FUN_00404a20(pvVar1);\n    pvVar3 = *param_1;\n    __dest = (void *)((long)pvVar1 + (uVar5 - (long)param_1[1]) + (long)pvVar2);\n    param_1[2] = __dest;\n    memcpy(__dest,(void *)((long)pvVar3 + uVar5),(long)param_1[1] - uVar5);\n    free(pvVar3);\n    *param_1 = pvVar2;\n    pvVar3 = param_1[2];\n    param_1[1] = pvVar1;\n  }\n  param_1[2] = (undefined *)((long)pvVar3 + ~param_3);\n  *(undefined *)((long)pvVar3 + ~param_3) = 0x2f;\n  memcpy((void *)((long)param_1[2] + 1),param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00401e50"
        },
        {
            "funcStartAddr": "0x401f10",
            "funcEndAddr": "0x4023c4",
            "decompiledFuncCode": "\nvoid FUN_00401f10(long param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  FILE *pFVar3;\n  int iVar4;\n  int iVar5;\n  DIR *__dirp;\n  int *piVar6;\n  dirent *pdVar7;\n  size_t sVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  char *pcVar11;\n  byte **ppbVar12;\n  long lVar14;\n  byte *pbVar15;\n  byte *pbVar16;\n  bool bVar17;\n  bool bVar18;\n  byte bVar19;\n  byte *pbStack_2a0;\n  char *pcStack_298;\n  byte *apbStack_290 [5];\n  char *pcStack_268;\n  char *pcStack_260;\n  char *pcStack_258;\n  char *pcStack_250;\n  char *pcStack_248;\n  undefined8 uStack_240;\n  undefined8 uStack_238;\n  undefined8 uStack_230;\n  undefined8 uStack_228;\n  undefined8 uStack_220;\n  char local_211;\n  long local_210;\n  long *local_208;\n  long local_200;\n  undefined local_1f8 [16];\n  undefined4 local_1e8;\n  undefined4 uStack_1e4;\n  undefined4 uStack_1e0;\n  undefined4 uStack_1dc;\n  undefined4 local_158;\n  undefined4 uStack_154;\n  undefined4 uStack_150;\n  undefined4 uStack_14c;\n  stat local_c8;\n  byte **ppbVar13;\n  \n  bVar19 = 0;\n  uStack_220 = 0x401f30;\n  local_200 = param_1;\n  local_208 = (long *)FUN_00404430(local_1f8);\n  if (local_208 != (long *)0x0) {\n    uStack_220 = 0x401f52;\n    iVar4 = __xstat(1,\".\",(stat *)&local_1e8);\n    if (-1 < iVar4) {\n      lVar14 = 1;\nLAB_00401f60:\n      if ((CONCAT44(uStack_1dc,uStack_1e0) == *local_208) &&\n         (CONCAT44(uStack_1e4,local_1e8) == local_208[1])) {\n        if (**(char **)(local_200 + 0x10) == '\\0') {\n          uStack_220 = 0x402251;\n          FUN_00401e50(local_200,\"\",0);\n        }\n        return;\n      }\n      local_210 = lVar14 + 1;\n      uStack_220 = 0x401f91;\n      __dirp = opendir(\"..\");\n      if (__dirp != (DIR *)0x0) {\n        uStack_220 = 0x401fa5;\n        iVar4 = dirfd(__dirp);\n        if (iVar4 < 0) goto LAB_004021e8;\n        uStack_220 = 0x401fb6;\n        iVar5 = fchdir(iVar4);\n        if (-1 < iVar5) {\n          uStack_220 = 0x401fd2;\n          iVar4 = __fxstat(1,iVar4,(stat *)&local_158);\nLAB_00401fd7:\n          uStack_220 = 0x401fdc;\n          piVar6 = __errno_location();\n          if (iVar4 < 0) goto LAB_00402297;\n          lVar2 = CONCAT44(uStack_154,local_158);\n          lVar1 = CONCAT44(uStack_1e4,local_1e8);\n          local_211 = lVar2 != lVar1;\nLAB_00402000:\n          *piVar6 = 0;\nLAB_00402007:\n          uStack_220 = 0x40200f;\n          pdVar7 = readdir(__dirp);\n          if (pdVar7 != (dirent *)0x0) {\n            do {\n              pcVar11 = pdVar7->d_name;\n              if (pdVar7->d_name[0] != '.') {\nLAB_00402026:\n                if ((pdVar7->d_ino == 0) || (local_211 != '\\0')) {\n                  uStack_220 = 0x402115;\n                  iVar4 = __lxstat(1,pcVar11,&local_c8);\n                  if (((iVar4 < 0) || (local_c8.st_ino != CONCAT44(uStack_1dc,uStack_1e0))) ||\n                     ((lVar2 != lVar1 && (local_c8.st_dev != CONCAT44(uStack_1e4,local_1e8)))))\n                  goto LAB_00402000;\n                }\n                else if (pdVar7->d_ino != CONCAT44(uStack_1dc,uStack_1e0)) goto LAB_00402000;\n                uStack_220 = 0x40204c;\n                sVar8 = strlen(pcVar11);\n                uStack_220 = 0x40205c;\n                FUN_00401e50(local_200,pcVar11,sVar8);\n                uStack_220 = 0x402064;\n                iVar4 = closedir(__dirp);\n                if (iVar4 != 0) goto LAB_0040225e;\n                local_1e8 = local_158;\n                uStack_1e4 = uStack_154;\n                uStack_1e0 = uStack_150;\n                uStack_1dc = uStack_14c;\n                lVar14 = local_210;\n                goto LAB_00401f60;\n              }\n              if (pdVar7->d_name[(ulong)(pdVar7->d_name[1] == '.') + 1] == '\\0') goto LAB_00402007;\n              if (pdVar7->d_name[(ulong)(pdVar7->d_name[1] == '.') + 1] != '/') goto LAB_00402026;\n              uStack_220 = 0x40217f;\n              pdVar7 = readdir(__dirp);\n              if (pdVar7 == (dirent *)0x0) break;\n            } while( true );\n          }\n          iVar4 = *piVar6;\n          if (iVar4 == 0) {\n            uStack_220 = 0x4021a3;\n            iVar4 = closedir(__dirp);\n            if (iVar4 != 0) goto LAB_0040225e;\n            uStack_220 = 0x4021b3;\n            uVar9 = FUN_00401dd0(lVar14);\n            uStack_220 = 0x4021bb;\n            __dirp = (DIR *)FUN_00404410(uVar9);\n            uStack_220 = 0x4021cf;\n            uVar9 = dcgettext(0,\"couldn\\'t find directory entry in %s with matching i-node\",5);\n            uStack_220 = 0x4021e3;\n            error(1,0,uVar9,__dirp);\nLAB_004021e8:\n            uStack_220 = 0x4021f2;\n            iVar4 = chdir(\"..\");\n            if (iVar4 < 0) goto LAB_004022d0;\n            uStack_220 = 0x402211;\n            iVar4 = __xstat(1,\".\",(stat *)&local_158);\n            goto LAB_00401fd7;\n          }\n          uStack_220 = 0x40225b;\n          closedir(__dirp);\n          *piVar6 = iVar4;\nLAB_0040225e:\n          uStack_220 = 0x402266;\n          uVar9 = FUN_00401dd0(lVar14);\n          uStack_220 = 0x40226e;\n          uVar9 = FUN_00404410(uVar9);\n          uStack_220 = 0x402282;\n          uVar10 = dcgettext(0,\"reading directory %s\",5);\n          uStack_220 = 0x402297;\n          error(1,*piVar6,uVar10,uVar9);\nLAB_00402297:\n          uStack_220 = 0x40229f;\n          uVar9 = FUN_00401dd0(lVar14);\n          uStack_220 = 0x4022a7;\n          uVar9 = FUN_00404410(uVar9);\n          uStack_220 = 0x4022bb;\n          uVar10 = dcgettext(0,\"failed to stat %s\",5);\n          uStack_220 = 0x4022d0;\n          error(1,*piVar6,uVar10,uVar9);\n        }\nLAB_004022d0:\n        uStack_220 = 0x4022d8;\n        uVar9 = FUN_00401dd0(lVar14);\n        uStack_220 = 0x4022e0;\n        uVar9 = FUN_00404410(uVar9);\n        uStack_220 = 0x4022f4;\n        uVar10 = dcgettext(0,\"failed to chdir to %s\",5);\n        uStack_220 = 0x4022fc;\n        piVar6 = __errno_location();\n        uStack_220 = 0x402310;\n        error(1,*piVar6,uVar10,uVar9);\n      }\n      uStack_220 = 0x402318;\n      uVar9 = FUN_00401dd0(lVar14);\n      uStack_220 = 0x402320;\n      uVar9 = FUN_00404410(uVar9);\n      uStack_220 = 0x402334;\n      uVar10 = dcgettext(0,\"cannot open directory %s\",5);\n      uStack_220 = 0x40233c;\n      piVar6 = __errno_location();\n      uStack_220 = 0x402350;\n      error(1,*piVar6,uVar10,uVar9);\n    }\n    uStack_220 = 0x40235f;\n    uVar9 = FUN_004041c0(4,&DAT_0040715e);\n    uStack_220 = 0x402373;\n    uVar10 = dcgettext(0,\"failed to stat %s\",5);\n    uStack_220 = 0x40237b;\n    piVar6 = __errno_location();\n    uStack_220 = 0x40238f;\n    error(1,*piVar6,uVar10,uVar9);\n  }\n  uStack_220 = 0x40239e;\n  uStack_228 = FUN_004041c0(4,&DAT_00407776);\n  uStack_220 = 0x4023b2;\n  uStack_230 = dcgettext(0,\"failed to get attributes of %s\",5);\n  uStack_220 = 0x4023ba;\n  piVar6 = __errno_location();\n  iVar4 = 1;\n  uStack_220 = 0x4023ce;\n  error(1,*piVar6,uStack_230,uStack_228);\n  uVar9 = DAT_0060a2e8;\n  if (iVar4 != 0) {\n    uVar10 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar10,uVar9);\n    goto LAB_0040240f;\n  }\n  uVar10 = dcgettext(0,\"Usage: %s [OPTION]...\\n\",5);\n  __printf_chk(1,uVar10,uVar9);\n  pFVar3 = stdout;\n  pcVar11 = (char *)dcgettext(0,\"Print the full filename of the current working directory.\\n\\n\",5);\n  fputs_unlocked(pcVar11,pFVar3);\n  pFVar3 = stdout;\n  pcVar11 = (char *)dcgettext(0,\n                              \"  -L, --logical   use PWD from environment, even if it contains symlinks\\n  -P, --physical  avoid all symlinks\\n\"\n                              ,5);\n  fputs_unlocked(pcVar11,pFVar3);\n  pFVar3 = stdout;\n  pcVar11 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar11,pFVar3);\n  pFVar3 = stdout;\n  pcVar11 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar11,pFVar3);\n  pFVar3 = stdout;\n  pcVar11 = (char *)dcgettext(0,\"\\nIf no option is specified, -P is assumed.\\n\",5);\n  fputs_unlocked(pcVar11,pFVar3);\n  uVar9 = dcgettext(0,\n                    \"\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell\\'s documentation\\nfor details about the options it supports.\\n\"\n                    ,5);\n  __printf_chk(1,uVar9,&DAT_004071a4);\n  pbStack_2a0 = &DAT_004071bf;\n  pcStack_298 = \"test invocation\";\n  apbStack_290[0] = (byte *)0x407239;\n  apbStack_290[1] = (byte *)0x4071d1;\n  apbStack_290[2] = (byte *)0x4071e7;\n  apbStack_290[3] = (byte *)0x4071f1;\n  apbStack_290[4] = (byte *)0x407200;\n  pcStack_268 = \"sha2 utilities\";\n  pcStack_260 = \"sha384sum\";\n  pcStack_258 = \"sha2 utilities\";\n  pcStack_250 = \"sha512sum\";\n  pcStack_248 = \"sha2 utilities\";\n  uStack_240 = 0;\n  uStack_238 = 0;\n  ppbVar12 = &pbStack_2a0;\n  do {\n    ppbVar13 = ppbVar12;\n    ppbVar12 = ppbVar13 + 2;\n    pbVar15 = *ppbVar12;\n    bVar17 = false;\n    bVar18 = pbVar15 == (byte *)0x0;\n    if (bVar18) break;\n    lVar14 = 4;\n    pbVar16 = &DAT_004071a4;\n    do {\n      if (lVar14 == 0) break;\n      lVar14 = lVar14 + -1;\n      bVar17 = *pbVar16 < *pbVar15;\n      bVar18 = *pbVar16 == *pbVar15;\n      pbVar16 = pbVar16 + (ulong)bVar19 * -2 + 1;\n      pbVar15 = pbVar15 + (ulong)bVar19 * -2 + 1;\n    } while (bVar18);\n  } while ((!bVar17 && !bVar18) != bVar17);\n  pbVar15 = ppbVar13[3];\n  if (pbVar15 == (byte *)0x0) {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar11 = setlocale(5,(char *)0x0);\n    if ((pcVar11 != (char *)0x0) && (iVar5 = strncmp(pcVar11,\"en_\",3), iVar5 != 0)) {\n      pbVar15 = &DAT_004071a4;\n      goto LAB_00402703;\n    }\n    pbVar15 = &DAT_004071a4;\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar11 = \" invocation\";\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",&DAT_004071a4);\n  }\n  else {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar11 = setlocale(5,(char *)0x0);\n    if ((pcVar11 != (char *)0x0) && (iVar5 = strncmp(pcVar11,\"en_\",3), iVar5 != 0)) {\nLAB_00402703:\n      uVar9 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\",5\n                       );\n      __printf_chk(1,uVar9,&DAT_004071a4);\n    }\n    pcVar11 = \" invocation\";\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",&DAT_004071a4);\n    if (pbVar15 != &DAT_004071a4) {\n      pcVar11 = \"\";\n    }\n  }\n  uVar9 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar9,pbVar15,pcVar11);\nLAB_0040240f:\n                    /* WARNING: Subroutine does not return */\n  exit(iVar4);\n}\n\n",
            "funcName": "FUN_00401f10"
        },
        {
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x40272d",
            "decompiledFuncCode": "\nvoid FUN_004023d0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_0060a2e8;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_0040240f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]...\\n\",5);\n  __printf_chk(1,uVar3,uVar5);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"Print the full filename of the current working directory.\\n\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -L, --logical   use PWD from environment, even if it contains symlinks\\n  -P, --physical  avoid all symlinks\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nIf no option is specified, -P is assumed.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell\\'s documentation\\nfor details about the options it supports.\\n\"\n                    ,5);\n  __printf_chk(1,uVar5,&DAT_004071a4);\n  local_88 = &DAT_004071bf;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x407239;\n  local_78[1] = (byte *)0x4071d1;\n  local_78[2] = (byte *)0x4071e7;\n  local_78[3] = (byte *)0x4071f1;\n  local_78[4] = (byte *)0x407200;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar9 = *ppbVar6;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 4;\n    pbVar10 = &DAT_004071a4;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar7[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_004071a4;\n        goto LAB_00402703;\n      }\n    }\n    pbVar9 = &DAT_004071a4;\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_004071a4);\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402703:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,&DAT_004071a4);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_004071a4);\n    if (pbVar9 != &DAT_004071a4) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pbVar9,pcVar4);\nLAB_0040240f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004023d0"
        },
        {
            "funcStartAddr": "0x402730",
            "funcEndAddr": "0x402738",
            "decompiledFuncCode": "\nvoid FUN_00402730(undefined8 param_1)\n\n{\n  DAT_0060a2e0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402730"
        },
        {
            "funcStartAddr": "0x402740",
            "funcEndAddr": "0x402748",
            "decompiledFuncCode": "\nvoid FUN_00402740(undefined param_1)\n\n{\n  DAT_0060a2d8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402740"
        },
        {
            "funcStartAddr": "0x402750",
            "funcEndAddr": "0x4027ee",
            "decompiledFuncCode": "\nvoid FUN_00402750(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00406820(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060a2d8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060a2e0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00404260();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_004027ce;\n    }\n  }\n  iVar1 = FUN_00406820(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_004027ce:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060a238);\n}\n\n",
            "funcName": "FUN_00402750"
        },
        {
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x402889",
            "decompiledFuncCode": "\nvoid FUN_004027f0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = &DAT_00407770;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00407778;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060a2e8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004027f0"
        },
        {
            "funcStartAddr": "0x402890",
            "funcEndAddr": "0x40296f",
            "decompiledFuncCode": "\nchar * FUN_00402890(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004068e0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00402968:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00407789;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040777e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00402968;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00407785;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00407782;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402890"
        },
        {
            "funcStartAddr": "0x402990",
            "funcEndAddr": "0x403ac3",
            "decompiledFuncCode": "\nulong FUN_00402990(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_004035e1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00403216;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_004035e1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00402890(&DAT_0040778d,param_5);\n      param_9 = (char *)FUN_00402890(&DAT_00408957);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00402a28:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00402a38:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_004031b8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00403130:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403142_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00402fae_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00402e45;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403142_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403142_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403142_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00402e45;\n      case 0xc:\nswitchD_00403142_caseD_c:\n        bVar17 = 0x66;\nLAB_00402e45:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00402d98;\n        }\nLAB_00402e50:\n        bVar23 = false;\n        goto LAB_00402c0b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00402b28_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00402d60;\n      case 0x20:\n        bVar25 = false;\nLAB_0040318a:\n        uVar19 = 0x20;\n        goto LAB_00403152;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00402b28_caseD_21:\n        bVar25 = false;\n        goto LAB_00402d6b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040316a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00402b78;\n        }\n        bVar23 = false;\n        goto LAB_00402b8f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00403152:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00402b91;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00402fae_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00402fae_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00402b28_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00402fae_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00402d87;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00403130;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00402b28_caseD_0;\n      default:\n        goto switchD_00402fae_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00402e50;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403142_caseD_9;\n      case 10:\n        goto switchD_00403142_caseD_a;\n      case 0xb:\n        goto switchD_00403142_caseD_b;\n      case 0xc:\n        goto switchD_00403142_caseD_c;\n      case 0xd:\n        goto switchD_00402b28_caseD_d;\n      case 0x20:\n        goto LAB_0040318a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00402b28_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040316a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00403152;\n      case 0x27:\n        goto switchD_00402fae_caseD_27;\n      case 0x3f:\n        goto switchD_00402fae_caseD_3f;\n      case 0x5c:\n        goto switchD_00402b28_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00402fae_caseD_7b;\n      }\n      goto LAB_00402bd2;\n    }\n    goto LAB_00402daa;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403142_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00402b28_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00402c88;\n          }\nLAB_00402eca:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00402eca;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00402c88;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00402f09:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00402c88;\n        goto LAB_00402b91;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_00402d9c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00402b78;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00402a38;\n  default:\nswitchD_00402fae_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00405f80(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_004038ba;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_004039f7;\n          goto LAB_004039e7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_00402d9c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_004038ba;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00402f84;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00402fc2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00402fc2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00402fc2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00402fda:\n      param_5 = 2;\n      goto LAB_00402d9c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00402b66;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00402b66:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00402fda;\n    goto LAB_00402b78;\n  case 0x23:\n  case 0x7e:\nLAB_00402b5d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00402b66;\n    goto LAB_00402d6b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00402fae_caseD_25;\n  case 0x27:\nswitchD_00402fae_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00402b78;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00402c88;\n    }\n    goto LAB_00402d9c;\n  case 0x3f:\nswitchD_00402fae_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00402c88;\n      }\n      goto LAB_00402d9c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00402b78;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00402f09;\n      }\n      goto LAB_00402daa;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00402b78;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00402b28_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00402ca4;\n    }\n    if (local_5c) goto LAB_00402d9c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00402ca4;\n  case 0x7b:\n  case 0x7d:\nswitchD_00402fae_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_00402b5d;\n    goto LAB_00402d6b;\n  }\nLAB_00402d60:\n  if (!bVar6) {\nLAB_00402d6b:\n    bVar23 = false;\n    goto LAB_00402b78;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00402d87;\nLAB_004031b8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_00402d9c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_00402daa:\n    uVar9 = FUN_00402990(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00403a8d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00402990(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00403a8d;\nLAB_00403216:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00402a28;\n  while (__s1[uVar21] != 0) {\nLAB_004039e7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_004039f7:\n  bVar23 = false;\nLAB_004038ba:\n  if (1 < uVar21) {\nLAB_0040347e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_00402d9c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00402c1d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00402ca4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00402f84:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040347e;\n  }\nswitchD_00402fae_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00402b78:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00402b8f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00402b91:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00402c88;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00402c88:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00402ca4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00402c1d;\n    }\n  }\njoined_r0x00402d87:\n  if (local_5c) {\nLAB_00402d98:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_00402d9c;\n  }\nLAB_00402bd2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00402c0b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00402c1d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00402a38;\n}\n\n",
            "funcName": "FUN_00402990"
        },
        {
            "funcStartAddr": "0x403bc0",
            "funcEndAddr": "0x403d5b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00403bc0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060a278;\n  if (DAT_0060a290 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00404c70();\n    }\n    if (PTR_DAT_0060a278 == &DAT_0060a280) {\n      puVar8 = (undefined4 *)FUN_00404a80(0);\n      uVar6 = PTR_DAT_0060a288._4_4_;\n      uVar5 = PTR_DAT_0060a288._0_4_;\n      uVar3 = _UNK_0060a284;\n      PTR_DAT_0060a278 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060a280;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00404a80(PTR_DAT_0060a278);\n      PTR_DAT_0060a278 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060a290 * 4,0,(long)((param_1 + 1) - DAT_0060a290) << 4);\n    DAT_0060a290 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00402990(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060a300) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00404a20(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00402990(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00403bc0"
        },
        {
            "funcStartAddr": "0x403d60",
            "funcEndAddr": "0x403d94",
            "decompiledFuncCode": "\nvoid FUN_00403d60(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  FUN_00404c20(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00403d60"
        },
        {
            "funcStartAddr": "0x403da0",
            "funcEndAddr": "0x403daf",
            "decompiledFuncCode": "\nundefined4 FUN_00403da0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00403da0"
        },
        {
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x403dbf",
            "decompiledFuncCode": "\nvoid FUN_00403db0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00403db0"
        },
        {
            "funcStartAddr": "0x403dc0",
            "funcEndAddr": "0x403df3",
            "decompiledFuncCode": "\nuint FUN_00403dc0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00403dc0"
        },
        {
            "funcStartAddr": "0x403e00",
            "funcEndAddr": "0x403e13",
            "decompiledFuncCode": "\nundefined4 FUN_00403e00(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00403e00"
        },
        {
            "funcStartAddr": "0x403e20",
            "funcEndAddr": "0x403e4b",
            "decompiledFuncCode": "\nvoid FUN_00403e20(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00403e20"
        },
        {
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x403ec2",
            "decompiledFuncCode": "\nvoid FUN_00403e50(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060a400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00402990(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00403e50"
        },
        {
            "funcStartAddr": "0x403ed0",
            "funcEndAddr": "0x403fb1",
            "decompiledFuncCode": "\nundefined8 FUN_00403ed0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060a400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00402990(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00404a20(lVar3 + 1);\n  FUN_00402990(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00403ed0"
        },
        {
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x403fca",
            "decompiledFuncCode": "\nvoid FUN_00403fc0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00403ed0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00403fc0"
        },
        {
            "funcStartAddr": "0x403fd0",
            "funcEndAddr": "0x404065",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00403fd0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060a278;\n  if (1 < DAT_0060a290) {\n    ppvVar2 = (void **)(PTR_DAT_0060a278 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060a278 + (ulong)(DAT_0060a290 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060a300) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060a280 = 0x100;\n    PTR_DAT_0060a288 = &DAT_0060a300;\n  }\n  if (__ptr_00 != &DAT_0060a280) {\n    free(__ptr_00);\n    PTR_DAT_0060a278 = &DAT_0060a280;\n  }\n  DAT_0060a290 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00403fd0"
        },
        {
            "funcStartAddr": "0x404070",
            "funcEndAddr": "0x404081",
            "decompiledFuncCode": "\nvoid FUN_00404070(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403bc0(param_1,param_2,0xffffffffffffffff,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_00404070"
        },
        {
            "funcStartAddr": "0x404090",
            "funcEndAddr": "0x40409a",
            "decompiledFuncCode": "\nvoid FUN_00404090(void)\n\n{\n  FUN_00403bc0();\n  return;\n}\n\n",
            "funcName": "FUN_00404090"
        },
        {
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x4040b6",
            "decompiledFuncCode": "\nvoid FUN_004040a0(undefined8 param_1)\n\n{\n  FUN_00403bc0(0,param_1,0xffffffffffffffff,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_004040a0"
        },
        {
            "funcStartAddr": "0x4040c0",
            "funcEndAddr": "0x4040d2",
            "decompiledFuncCode": "\nvoid FUN_004040c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403bc0(0,param_1,param_2,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_004040c0"
        },
        {
            "funcStartAddr": "0x4040e0",
            "funcEndAddr": "0x404148",
            "decompiledFuncCode": "\nvoid FUN_004040e0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403bc0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004040e0"
        },
        {
            "funcStartAddr": "0x404150",
            "funcEndAddr": "0x4041b4",
            "decompiledFuncCode": "\nvoid FUN_00404150(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403bc0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404150"
        },
        {
            "funcStartAddr": "0x4041c0",
            "funcEndAddr": "0x4041cc",
            "decompiledFuncCode": "\nvoid FUN_004041c0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_004040e0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004041c0"
        },
        {
            "funcStartAddr": "0x4041d0",
            "funcEndAddr": "0x4041df",
            "decompiledFuncCode": "\nvoid FUN_004041d0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404150(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004041d0"
        },
        {
            "funcStartAddr": "0x4041e0",
            "funcEndAddr": "0x404250",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004041e0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060a430;\n  local_48 = _DAT_0060a400;\n  uStack_40 = uRam000000000060a408;\n  local_38 = _DAT_0060a410;\n  uStack_30 = uRam000000000060a418;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060a420;\n  uStack_20 = uRam000000000060a428;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00403bc0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_004041e0"
        },
        {
            "funcStartAddr": "0x404250",
            "funcEndAddr": "0x40425d",
            "decompiledFuncCode": "\nvoid FUN_00404250(undefined8 param_1,char param_2)\n\n{\n  FUN_004041e0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404250"
        },
        {
            "funcStartAddr": "0x404260",
            "funcEndAddr": "0x404271",
            "decompiledFuncCode": "\nvoid FUN_00404260(undefined8 param_1)\n\n{\n  FUN_004041e0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404260"
        },
        {
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x40428a",
            "decompiledFuncCode": "\nvoid FUN_00404280(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004041e0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404280"
        },
        {
            "funcStartAddr": "0x404290",
            "funcEndAddr": "0x4042fe",
            "decompiledFuncCode": "\nvoid FUN_00404290(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403bc0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404290"
        },
        {
            "funcStartAddr": "0x404300",
            "funcEndAddr": "0x40436c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404300(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060a408;\n  local_38 = _DAT_0060a410;\n  uStack_30 = uRam000000000060a418;\n  local_28 = _DAT_0060a420;\n  lStack_20 = uRam000000000060a428;\n  local_18 = DAT_0060a430;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060a400 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00403bc0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404300"
        },
        {
            "funcStartAddr": "0x404370",
            "funcEndAddr": "0x404379",
            "decompiledFuncCode": "\nvoid FUN_00404370(void)\n\n{\n  FUN_00404300();\n  return;\n}\n\n",
            "funcName": "FUN_00404370"
        },
        {
            "funcStartAddr": "0x404380",
            "funcEndAddr": "0x404397",
            "decompiledFuncCode": "\nvoid FUN_00404380(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404300(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00404380"
        },
        {
            "funcStartAddr": "0x4043a0",
            "funcEndAddr": "0x4043b3",
            "decompiledFuncCode": "\nvoid FUN_004043a0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00404300(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_004043a0"
        },
        {
            "funcStartAddr": "0x4043c0",
            "funcEndAddr": "0x4043ca",
            "decompiledFuncCode": "\nvoid FUN_004043c0(void)\n\n{\n  FUN_00403bc0();\n  return;\n}\n\n",
            "funcName": "FUN_004043c0"
        },
        {
            "funcStartAddr": "0x4043d0",
            "funcEndAddr": "0x4043e2",
            "decompiledFuncCode": "\nvoid FUN_004043d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403bc0(0,param_1,param_2,&DAT_0060a240);\n  return;\n}\n\n",
            "funcName": "FUN_004043d0"
        },
        {
            "funcStartAddr": "0x4043f0",
            "funcEndAddr": "0x404401",
            "decompiledFuncCode": "\nvoid FUN_004043f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403bc0(param_1,param_2,0xffffffffffffffff,&DAT_0060a240);\n  return;\n}\n\n",
            "funcName": "FUN_004043f0"
        },
        {
            "funcStartAddr": "0x404410",
            "funcEndAddr": "0x404426",
            "decompiledFuncCode": "\nvoid FUN_00404410(undefined8 param_1)\n\n{\n  FUN_00403bc0(0,param_1,0xffffffffffffffff,&DAT_0060a240);\n  return;\n}\n\n",
            "funcName": "FUN_00404410"
        },
        {
            "funcStartAddr": "0x404430",
            "funcEndAddr": "0x404478",
            "decompiledFuncCode": "\n__ino_t * FUN_00404430(__ino_t *param_1)\n\n{\n  int iVar1;\n  stat local_98;\n  \n  iVar1 = __lxstat(1,\"/\",&local_98);\n  if (iVar1 == 0) {\n    *param_1 = local_98.st_ino;\n    param_1[1] = local_98.st_dev;\n    return param_1;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_00404430"
        },
        {
            "funcStartAddr": "0x404480",
            "funcEndAddr": "0x404824",
            "decompiledFuncCode": "\nundefined8\nFUN_00404480(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_004084cb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004046fc;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_004046fc:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00404799;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00404799:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040457a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040457a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404480"
        },
        {
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404880",
            "decompiledFuncCode": "\nvoid FUN_00404860(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00404480();\n  return;\n}\n\n",
            "funcName": "FUN_00404860"
        },
        {
            "funcStartAddr": "0x404880",
            "funcEndAddr": "0x4048d9",
            "decompiledFuncCode": "\nvoid FUN_00404880(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00404480();\n  return;\n}\n\n",
            "funcName": "FUN_00404880"
        },
        {
            "funcStartAddr": "0x4048e0",
            "funcEndAddr": "0x404998",
            "decompiledFuncCode": "\nvoid FUN_004048e0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00404480();\n  return;\n}\n\n",
            "funcName": "FUN_004048e0"
        },
        {
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x404a14",
            "decompiledFuncCode": "\nvoid FUN_004049a0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_004049a0"
        },
        {
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404a3a",
            "decompiledFuncCode": "\nvoid FUN_00404a20(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404c70();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404a20"
        },
        {
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404a61",
            "decompiledFuncCode": "\nvoid FUN_00404a40(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00404a20();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404c70();\n}\n\n",
            "funcName": "FUN_00404a40"
        },
        {
            "funcStartAddr": "0x404a70",
            "funcEndAddr": "0x404a72",
            "decompiledFuncCode": "\nvoid thunk_FUN_00404a20(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404c70();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_404a70"
        },
        {
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404ab0",
            "decompiledFuncCode": "\nvoid * FUN_00404a80(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404c70();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00404a80"
        },
        {
            "funcStartAddr": "0x404ac0",
            "funcEndAddr": "0x404ae1",
            "decompiledFuncCode": "\nvoid FUN_00404ac0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00404a80();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404c70();\n}\n\n",
            "funcName": "FUN_00404ac0"
        },
        {
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404b68",
            "decompiledFuncCode": "\nvoid FUN_00404af0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00404b4b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00404b4b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00404c70(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00404a80(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404af0"
        },
        {
            "funcStartAddr": "0x404b80",
            "funcEndAddr": "0x404bca",
            "decompiledFuncCode": "\nvoid FUN_00404b80(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00404a80(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00404bca;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00404bca:\n                    /* WARNING: Subroutine does not return */\n      FUN_00404c70();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00404a80(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00404b80"
        },
        {
            "funcStartAddr": "0x404bd0",
            "funcEndAddr": "0x404be7",
            "decompiledFuncCode": "\nvoid FUN_00404bd0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00404a20();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00404bd0"
        },
        {
            "funcStartAddr": "0x404bf0",
            "funcEndAddr": "0x404c1e",
            "decompiledFuncCode": "\nvoid FUN_00404bf0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404c70();\n}\n\n",
            "funcName": "FUN_00404bf0"
        },
        {
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404c48",
            "decompiledFuncCode": "\nvoid FUN_00404c20(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00404a20(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404c20"
        },
        {
            "funcStartAddr": "0x404c50",
            "funcEndAddr": "0x404c63",
            "decompiledFuncCode": "\nvoid FUN_00404c50(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00404a20(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00404c50"
        },
        {
            "funcStartAddr": "0x404c70",
            "funcEndAddr": "0x404ca1",
            "decompiledFuncCode": "\nvoid FUN_00404c70(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060a238,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404c70"
        },
        {
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cd6",
            "decompiledFuncCode": "\nlong FUN_00404cb0(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_00404ce0(0,0);\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00404c70();\n    }\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00404cb0"
        },
        {
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x405185",
            "decompiledFuncCode": "\nvoid * FUN_00404ce0(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_00404d12:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_00404d12;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_00404ff8:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_004050b1;\n          goto joined_r0x004050bf;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0040511d:\n          close(iVar6);\n          goto joined_r0x004050bf;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0040511d;\n        }\nLAB_00404e70:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_00405080;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_004050b1;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_00405080:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_00404e70;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_00404f8f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_004050b1:\n          closedir(__dirp);\n          goto joined_r0x004050bf;\n        }\nLAB_00404f8f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_00404ff8;\n      }\n      goto LAB_004050e0;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_004050e0:\n  iVar7 = *piVar8;\njoined_r0x004050bf:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00404ce0"
        },
        {
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x405285",
            "decompiledFuncCode": "\nvoid FUN_004051b0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040522c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040522c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040522c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004051b0"
        },
        {
            "funcStartAddr": "0x405290",
            "funcEndAddr": "0x40588e",
            "decompiledFuncCode": "\nint FUN_00405290(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004054b0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004053f0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004053f0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004053f0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00408951,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004054b0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00405290"
        },
        {
            "funcStartAddr": "0x4058b0",
            "funcEndAddr": "0x405e17",
            "decompiledFuncCode": "\nuint FUN_004058b0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_004058fa:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_004059fd;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_004059fd:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00405a08:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00405978;\nLAB_00405a1c:\n    if (*pbVar8 == 0) goto LAB_00405978;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_004058fa;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00405a08;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00405a1c;\nLAB_00405978:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004051b0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00405ae6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00408959;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004051b0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00405ae6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00408959;\n        goto LAB_00405c45;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00405bf0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00405290(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040895a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00405bf0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00408978;\nLAB_00405c45:\n  uVar3 = FUN_00405290(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004058b0"
        },
        {
            "funcStartAddr": "0x405e80",
            "funcEndAddr": "0x405ed6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405e80(void)\n\n{\n  DAT_0060a440 = DAT_0060a29c;\n  _DAT_0060a444 = DAT_0060a298;\n  FUN_004058b0();\n  DAT_0060a29c = DAT_0060a440;\n  _DAT_0060a480 = DAT_0060a450;\n  _DAT_0060a294 = DAT_0060a448;\n  return;\n}\n\n",
            "funcName": "FUN_00405e80"
        },
        {
            "funcStartAddr": "0x405ee0",
            "funcEndAddr": "0x405ef8",
            "decompiledFuncCode": "\nvoid FUN_00405ee0(void)\n\n{\n  FUN_00405e80();\n  return;\n}\n\n",
            "funcName": "FUN_00405ee0"
        },
        {
            "funcStartAddr": "0x405f00",
            "funcEndAddr": "0x405f13",
            "decompiledFuncCode": "\nvoid FUN_00405f00(void)\n\n{\n  FUN_00405e80();\n  return;\n}\n\n",
            "funcName": "FUN_00405f00"
        },
        {
            "funcStartAddr": "0x405f20",
            "funcEndAddr": "0x405f35",
            "decompiledFuncCode": "\nvoid FUN_00405f20(void)\n\n{\n  FUN_004058b0();\n  return;\n}\n\n",
            "funcName": "FUN_00405f20"
        },
        {
            "funcStartAddr": "0x405f40",
            "funcEndAddr": "0x405f56",
            "decompiledFuncCode": "\nvoid FUN_00405f40(void)\n\n{\n  FUN_00405e80();\n  return;\n}\n\n",
            "funcName": "FUN_00405f40"
        },
        {
            "funcStartAddr": "0x405f60",
            "funcEndAddr": "0x405f78",
            "decompiledFuncCode": "\nvoid FUN_00405f60(void)\n\n{\n  FUN_004058b0();\n  return;\n}\n\n",
            "funcName": "FUN_00405f60"
        },
        {
            "funcStartAddr": "0x405f80",
            "funcEndAddr": "0x405fef",
            "decompiledFuncCode": "\nsize_t FUN_00405f80(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x408977;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00405fa4;\n  }\n  param_1 = &local_1c;\nLAB_00405fa4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00406880(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00405f80"
        },
        {
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x40611d",
            "decompiledFuncCode": "\nulong FUN_00406000(long param_1,ulong param_2,long *param_3)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  bool bVar9;\n  \n  lVar8 = 1;\n  lVar4 = 1;\n  uVar2 = 0xffffffffffffffff;\n  uVar3 = 0;\n  while (uVar7 = lVar4 + uVar3, uVar5 = uVar3, lVar4 + uVar3 < param_2) {\n    while (uVar3 = uVar7, bVar1 = *(byte *)(param_1 + uVar2 + lVar4),\n          *(byte *)(param_1 + uVar3) < bVar1) {\n      lVar4 = 1;\n      lVar8 = uVar3 - uVar2;\n      uVar7 = uVar3 + 1;\n      uVar5 = uVar3;\n      if (param_2 <= uVar3 + 1) goto LAB_00406053;\n    }\n    if (*(byte *)(param_1 + uVar3) == bVar1) {\n      if (lVar4 == lVar8) {\n        lVar4 = 1;\n      }\n      else {\n        lVar4 = lVar4 + 1;\n        uVar3 = uVar5;\n      }\n    }\n    else {\n      lVar8 = 1;\n      lVar4 = 1;\n      uVar2 = uVar5;\n      uVar3 = uVar5 + 1;\n    }\n  }\nLAB_00406053:\n  *param_3 = lVar8;\n  lVar4 = 1;\n  lVar8 = 1;\n  uVar3 = 0;\n  uVar7 = 0xffffffffffffffff;\n  while (uVar5 = lVar8 + uVar3, uVar6 = uVar3, lVar8 + uVar3 < param_2) {\n    while (uVar3 = uVar5, bVar1 = *(byte *)(param_1 + uVar7 + lVar8),\n          bVar9 = *(byte *)(param_1 + uVar3) == bVar1, bVar1 <= *(byte *)(param_1 + uVar3) && !bVar9\n          ) {\n      lVar8 = 1;\n      lVar4 = uVar3 - uVar7;\n      uVar5 = uVar3 + 1;\n      uVar6 = uVar3;\n      if (param_2 <= uVar3 + 1) goto LAB_004060a0;\n    }\n    if (bVar9) {\n      if (lVar8 == lVar4) {\n        lVar8 = 1;\n      }\n      else {\n        lVar8 = lVar8 + 1;\n        uVar3 = uVar6;\n      }\n    }\n    else {\n      lVar4 = 1;\n      lVar8 = 1;\n      uVar3 = uVar6 + 1;\n      uVar7 = uVar6;\n    }\n  }\nLAB_004060a0:\n  uVar3 = uVar2 + 1;\n  if (uVar2 + 1 <= uVar7 + 1) {\n    *param_3 = lVar4;\n    uVar3 = uVar7 + 1;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00406000"
        },
        {
            "funcStartAddr": "0x406130",
            "funcEndAddr": "0x406453",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nbyte * FUN_00406130(long param_1,byte *param_2,byte *param_3,byte *param_4)\n\n{\n  byte bVar1;\n  int iVar2;\n  byte *__n;\n  byte **ppbVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  byte *local_840;\n  byte *local_838 [256];\n  byte *local_38;\n  \n  if (param_4 < (byte *)0x3) {\n    local_840 = (byte *)0x1;\n    __n = param_4 + -1;\n  }\n  else {\n    __n = (byte *)FUN_00406000(param_3,param_4,&local_840);\n  }\n  pbVar5 = local_840;\n  ppbVar3 = local_838;\n  do {\n    *ppbVar3 = param_4;\n    ppbVar3 = ppbVar3 + 1;\n  } while (&local_38 != ppbVar3);\n  if (param_4 == (byte *)0x0) {\n    iVar2 = memcmp(param_3,param_3 + (long)local_840,(size_t)__n);\n    if (iVar2 == 0) {\n      return (byte *)0;\n    }\n  }\n  else {\n    pbVar10 = param_4 + -1;\n    pbVar4 = param_3;\n    do {\n      bVar1 = *pbVar4;\n      lVar6 = (long)pbVar10 - (long)pbVar4;\n      pbVar4 = pbVar4 + 1;\n      local_838[bVar1] = param_3 + lVar6;\n    } while (param_3 + (long)param_4 != pbVar4);\n    iVar2 = memcmp(param_3,param_3 + (long)local_840,(size_t)__n);\n    if (iVar2 == 0) {\n      pbVar4 = __n + -1;\n      pbVar7 = (byte *)0x0;\n      pbVar11 = (byte *)0x0;\nLAB_00406369:\n      do {\n        while( true ) {\n          pbVar9 = pbVar7 + (long)param_4;\n          lVar6 = FUN_00406f70(param_2 + param_1,0,(long)pbVar9 - (long)param_2);\n          if (lVar6 != 0) {\n            return (byte *)0;\n          }\n          if (pbVar9 == (byte *)0x0) {\n            return (byte *)0;\n          }\n          pbVar8 = local_838[pbVar9[param_1 + -1]];\n          param_2 = pbVar9;\n          if (pbVar8 == (byte *)0x0) break;\n          if ((pbVar8 < pbVar5) && (pbVar11 != (byte *)0x0)) {\n            pbVar8 = param_4 + -(long)pbVar5;\n          }\n          pbVar7 = pbVar7 + (long)pbVar8;\n          pbVar11 = (byte *)0x0;\n        }\n        pbVar9 = __n;\n        if (__n <= pbVar11) {\n          pbVar9 = pbVar11;\n        }\n        if (pbVar9 < pbVar10) {\n          do {\n            if (param_3[(long)pbVar9] != (pbVar7 + param_1)[(long)pbVar9]) {\n              pbVar7 = pbVar9 + (long)(pbVar7 + (1 - (long)__n));\n              pbVar11 = (byte *)0x0;\n              goto LAB_00406369;\n            }\n            pbVar9 = pbVar9 + 1;\n          } while (pbVar9 != pbVar10);\n        }\n        pbVar9 = __n;\n        if ((pbVar11 < __n) &&\n           (pbVar8 = pbVar4, (pbVar7 + param_1)[(long)pbVar4] == param_3[(long)pbVar4])) {\n          do {\n            pbVar9 = pbVar8;\n            if (pbVar11 == pbVar9) break;\n            pbVar8 = pbVar9 + -1;\n          } while (param_3[(long)(pbVar9 + -1)] == (pbVar9 + -1)[(long)(pbVar7 + param_1)]);\n        }\n        if (pbVar9 < pbVar11 + 1) {\n          return pbVar7 + param_1;\n        }\n        pbVar7 = pbVar7 + (long)pbVar5;\n        pbVar11 = param_4 + -(long)pbVar5;\n      } while( true );\n    }\n  }\n  pbVar5 = param_4 + -(long)__n;\n  if (param_4 + -(long)__n < __n) {\n    pbVar5 = __n;\n  }\n  pbVar10 = (byte *)0x0;\n  local_840 = pbVar5 + 1;\n  do {\n    while( true ) {\n      pbVar4 = param_4 + (long)pbVar10;\n      lVar6 = FUN_00406f70(param_2 + param_1,0,(long)pbVar4 - (long)param_2);\n      if ((pbVar4 == (byte *)0x0) || (lVar6 != 0)) {\n        return (byte *)0x0;\n      }\n      pbVar7 = local_838[pbVar4[param_1 + -1]];\n      param_2 = pbVar4;\n      if (pbVar7 == (byte *)0x0) break;\nLAB_00406220:\n      pbVar10 = pbVar10 + (long)pbVar7;\n    }\n    pbVar4 = pbVar10 + param_1;\n    if (__n < param_4 + -1) {\n      pbVar7 = __n;\n      if (pbVar4[(long)__n] == param_3[(long)__n]) {\n        do {\n          pbVar7 = pbVar7 + 1;\n          if (param_4 + -1 <= pbVar7) goto LAB_004062a3;\n        } while (param_3[(long)pbVar7] == pbVar4[(long)pbVar7]);\n      }\n      pbVar10 = pbVar10 + (1 - (long)__n);\n      goto LAB_00406220;\n    }\nLAB_004062a3:\n    pbVar7 = __n + -1;\n    if (pbVar7 == (byte *)0xffffffffffffffff) {\n      return pbVar4;\n    }\n    if (pbVar4[(long)pbVar7] == param_3[(long)(__n + -1)]) {\n      do {\n        pbVar7 = pbVar7 + -1;\n        if (pbVar7 == (byte *)0xffffffffffffffff) {\n          return pbVar4;\n        }\n      } while (param_3[(long)pbVar7] == pbVar4[(long)pbVar7]);\n    }\n    pbVar10 = pbVar10 + (long)(pbVar5 + 1);\n  } while( true );\n}\n\n",
            "funcName": "FUN_00406130"
        },
        {
            "funcStartAddr": "0x406480",
            "funcEndAddr": "0x4067d3",
            "decompiledFuncCode": "\nchar * FUN_00406480(char *param_1,char *param_2)\n\n{\n  long lVar1;\n  char cVar2;\n  bool bVar3;\n  ulong uVar4;\n  char cVar5;\n  int iVar6;\n  char *pcVar7;\n  ulong __n;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  char cVar11;\n  char *pcVar12;\n  char *pcVar13;\n  ulong uVar14;\n  long lVar15;\n  long lVar16;\n  long lVar17;\n  bool bVar18;\n  long local_40 [2];\n  \n  cVar5 = *param_1;\n  cVar2 = *param_2;\n  pcVar7 = param_1;\n  if (cVar5 == '\\0') {\n    pcVar7 = (char *)0x0;\n    if (cVar2 == '\\0') {\n      pcVar7 = param_1;\n    }\n  }\n  else if (cVar2 != '\\0') {\n    bVar3 = true;\n    pcVar12 = param_1;\n    pcVar13 = param_2;\n    cVar11 = cVar2;\n    do {\n      pcVar12 = pcVar12 + 1;\n      pcVar13 = pcVar13 + 1;\n      bVar18 = cVar11 == cVar5;\n      cVar11 = *pcVar13;\n      bVar3 = (bool)(bVar3 & bVar18);\n      cVar5 = *pcVar12;\n      if (cVar5 == '\\0') {\n        if (cVar11 != '\\0') {\n          return (char *)0x0;\n        }\n        break;\n      }\n    } while (cVar11 != '\\0');\n    if (!bVar3) {\n      uVar14 = (long)pcVar13 - (long)param_2;\n      pcVar7 = strchr(param_1 + 1,(int)cVar2);\n      if ((pcVar7 != (char *)0x0) && (uVar14 != 1)) {\n        pcVar13 = pcVar13 + -uVar14;\n        lVar15 = (long)(param_1 + uVar14) - (long)pcVar7;\n        if (param_1 + uVar14 < pcVar7) {\n          lVar15 = 1;\n        }\n        if (uVar14 < 0x20) {\n          if (uVar14 < 3) {\n            local_40[0] = 1;\n            __n = uVar14 - 1;\n          }\n          else {\n            __n = FUN_00406000(pcVar13,uVar14,local_40);\n          }\n          lVar17 = local_40[0];\n          iVar6 = memcmp(pcVar13,pcVar13 + local_40[0],__n);\n          if (iVar6 == 0) {\n            uVar9 = __n - 1;\n            lVar16 = 0;\n            uVar10 = 0;\n            while( true ) {\n              lVar1 = uVar14 + lVar16;\n              lVar15 = FUN_00406f70(pcVar7 + lVar15,0,lVar1 - lVar15);\n              if ((lVar1 == 0) || (lVar15 != 0)) break;\n              uVar8 = uVar10;\n              if (uVar10 <= __n) {\n                uVar8 = __n;\n              }\n              lVar15 = lVar1;\n              if (uVar8 < uVar14) {\n                if (pcVar7[lVar16 + uVar8] == pcVar13[uVar8]) {\n                  do {\n                    uVar8 = uVar8 + 1;\n                    if (uVar14 == uVar8) goto LAB_00406653;\n                  } while (pcVar13[uVar8] == pcVar7[uVar8 + lVar16]);\n                }\n                uVar10 = 0;\n                lVar16 = uVar8 + (1 - __n) + lVar16;\n              }\n              else {\nLAB_00406653:\n                uVar8 = __n;\n                if ((uVar10 < __n) && (uVar4 = uVar9, pcVar13[uVar9] == pcVar7[uVar9 + lVar16])) {\n                  do {\n                    uVar8 = uVar4;\n                    if (uVar10 == uVar8) break;\n                    uVar4 = uVar8 - 1;\n                  } while (pcVar13[uVar8 - 1] == pcVar7[(uVar8 - 1) + lVar16]);\n                }\n                if (uVar8 < uVar10 + 1) {\n                  return pcVar7 + lVar16;\n                }\n                lVar16 = lVar16 + lVar17;\n                uVar10 = uVar14 - lVar17;\n              }\n            }\n          }\n          else {\n            uVar9 = uVar14 - __n;\n            if (uVar14 - __n < __n) {\n              uVar9 = __n;\n            }\n            lVar17 = 0;\n            local_40[0] = uVar9 + 1;\n            while( true ) {\n              lVar16 = uVar14 + lVar17;\n              lVar15 = FUN_00406f70(pcVar7 + lVar15,0,lVar16 - lVar15);\n              if ((lVar16 == 0) || (lVar15 != 0)) break;\n              lVar15 = lVar16;\n              if (__n < uVar14) {\n                uVar10 = __n;\n                if (pcVar7[lVar17 + __n] == pcVar13[__n]) {\n                  do {\n                    uVar10 = uVar10 + 1;\n                    if (uVar14 <= uVar10) goto LAB_00406773;\n                  } while (pcVar13[uVar10] == pcVar7[uVar10 + lVar17]);\n                }\n                lVar17 = uVar10 + (1 - __n) + lVar17;\n              }\n              else {\nLAB_00406773:\n                pcVar12 = pcVar7 + lVar17;\n                lVar16 = __n - 1;\n                if (lVar16 == -1) {\n                  return pcVar12;\n                }\n                if (pcVar12[lVar16] == pcVar13[__n - 1]) {\n                  do {\n                    lVar16 = lVar16 + -1;\n                    if (lVar16 == -1) {\n                      return pcVar12;\n                    }\n                  } while (pcVar13[lVar16] == pcVar12[lVar16]);\n                }\n                lVar17 = lVar17 + uVar9 + 1;\n              }\n            }\n          }\n          pcVar7 = (char *)0x0;\n        }\n        else {\n          pcVar7 = (char *)FUN_00406130(pcVar7,lVar15,pcVar13,uVar14);\n        }\n      }\n    }\n  }\n  return pcVar7;\n}\n\n",
            "funcName": "FUN_00406480"
        },
        {
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x40687c",
            "decompiledFuncCode": "\nulong FUN_00406820(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00406e50(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00406820"
        },
        {
            "funcStartAddr": "0x406880",
            "funcEndAddr": "0x4068d6",
            "decompiledFuncCode": "\nbool FUN_00406880(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040897c;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00406880"
        },
        {
            "funcStartAddr": "0x4068e0",
            "funcEndAddr": "0x406e34",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004068e0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060a478 != (char *)0x0) goto LAB_0040691a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00406a05:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00406a26;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00406a05;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00406a26:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00406ac0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00406c4c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00406ac0;\n              if (uVar4 == 0x23) goto LAB_00406cb1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00406c5f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00406e50(__stream);\n                goto LAB_00406a64;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00406c4c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00406c5f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_00406a5e;\n    }\n  }\n  DAT_0060a478 = \"\";\nLAB_0040691a:\n  cVar1 = *DAT_0060a478;\n  pcVar7 = DAT_0060a478;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00406974:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00406974;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00406cb1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00406c5f;\n  goto LAB_00406ac0;\nLAB_00406c5f:\n  FUN_00406e50(__stream);\n  if (local_d0 == 0) {\nLAB_00406a5e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00406a64:\n  free(__file);\n  DAT_0060a478 = pcVar7;\n  goto LAB_0040691a;\n}\n\n",
            "funcName": "FUN_004068e0"
        },
        {
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406ec8",
            "decompiledFuncCode": "\nint FUN_00406e50(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00406eb7;\n    }\n    iVar1 = FUN_00406ed0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00406eb7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00406e50"
        },
        {
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406f0b",
            "decompiledFuncCode": "\nvoid FUN_00406ed0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00406f10(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406ed0"
        },
        {
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x406f66",
            "decompiledFuncCode": "\nulong FUN_00406f10(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00406f10"
        },
        {
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x407053",
            "decompiledFuncCode": "\nulong * FUN_00406f70(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_00406fb0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_00406fb0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00406f70"
        },
        {
            "funcStartAddr": "0x407080",
            "funcEndAddr": "0x4070dd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004070b3) */\n/* WARNING: Removing unreachable block (ram,0x004070b8) */\n\nvoid FUN_00407080(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00407080"
        },
        {
            "funcStartAddr": "0x4070e0",
            "funcEndAddr": "0x4070e1",
            "decompiledFuncCode": "\nvoid FUN_004070e0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004070e0"
        },
        {
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x407108",
            "decompiledFuncCode": "\nvoid FUN_004070f0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060a228);\n  return;\n}\n\n",
            "funcName": "FUN_004070f0"
        },
        {
            "funcStartAddr": "0x407108",
            "funcEndAddr": "0x407128",
            "decompiledFuncCode": "\nundefined8 FUN_00407108(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00609e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407108"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pwd.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}