{
    "funcCount": 117,
    "funcInfo": [
        {
            "funcStartAddr": "0x401925",
            "funcEndAddr": "0x40192a",
            "decompiledFuncCode": "\nvoid FUN_00401925(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401925"
        },
        {
            "funcStartAddr": "0x40192a",
            "funcEndAddr": "0x40192f",
            "decompiledFuncCode": "\nvoid FUN_0040192a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040192a"
        },
        {
            "funcStartAddr": "0x40192f",
            "funcEndAddr": "0x401934",
            "decompiledFuncCode": "\nvoid FUN_0040192f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040192f"
        },
        {
            "funcStartAddr": "0x401934",
            "funcEndAddr": "0x401939",
            "decompiledFuncCode": "\nvoid FUN_00401934(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401934"
        },
        {
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x40236e",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_00401940(uint param_1,undefined8 *param_2)\n\n{\n  char *pcVar1;\n  void *pvVar2;\n  char cVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  char *pcVar7;\n  long lVar8;\n  undefined8 uVar9;\n  ulong uVar10;\n  char *pcVar11;\n  undefined8 uVar12;\n  char *pcVar13;\n  int *piVar14;\n  undefined **ppuVar15;\n  char **ppcVar16;\n  char **ppcVar17;\n  char *pcVar18;\n  _IO_FILE *p_Var19;\n  ulong uVar20;\n  ulong uVar21;\n  char **ppcVar22;\n  char *local_b8;\n  ulong local_b0;\n  int local_a8;\n  char local_a1;\n  ulong local_a0;\n  char *local_98;\n  char *local_90;\n  char *local_88 [4];\n  void *local_68;\n  char *local_58;\n  long local_50;\n  void *local_48;\n  \n  ppcVar22 = (char **)(ulong)param_1;\n  pcVar7 = getenv(\"POSIXLY_CORRECT\");\n  local_88[1] = \"-\";\n  local_88[0] = \"-\";\n  uVar20 = (ulong)(pcVar7 != (char *)0x0);\n  uVar21 = 0;\n  pcVar11 = (char *)0x0;\n  ppcVar16 = (char **)0x0;\n  FUN_00403410(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  DAT_0060c300 = FUN_00403190(3);\n  FUN_00407660(FUN_00402eb0);\n  DAT_0060c2f0 = (char *)0x0;\n  DAT_0060c2f8 = 0;\n  DAT_0060c2e8 = 0xffffffffffffffff;\n  DAT_0060c2e2 = 1;\n  DAT_0060c2e3 = '\\x01';\n  DAT_0060c2e1 = '\\0';\n  DAT_0060c2e4 = 1;\n  DAT_0060c2dc = 0;\n  local_a1 = '\\n';\n  local_b8 = (char *)0x0;\n  local_b0 = 0xffffffffffffffff;\nLAB_00401a62:\n  do {\n    pcVar13 = pcVar11;\n    if ((int)ppcVar16 == -1) goto LAB_00401a30;\nLAB_00401a67:\n    iVar5 = (int)pcVar11;\n    pcVar13 = pcVar11;\n    if ((iVar5 != 0) && (pcVar7 != (char *)0x0)) {\nLAB_00401a30:\n      pcVar11 = local_88[1];\n      pcVar1 = local_88[0];\n      if (DAT_0060c29c < (int)param_1) {\n        lVar8 = (long)DAT_0060c29c;\n        if ((int)pcVar13 == 2) {\nLAB_00402309:\n          pcVar11 = (char *)FUN_00405030();\n          uVar12 = dcgettext(0,\"extra operand %s\",5);\n          error(0,0,uVar12,pcVar11);\n          p_Var19 = (_IO_FILE *)0x1;\n          FUN_004026b0();\nLAB_0040233d:\n          __overflow(p_Var19,local_a8);\n          ppcVar17 = ppcVar16;\n          do {\n            ppcVar16 = ppcVar22;\n            fwrite_unlocked(ppcVar16[2],1,(size_t)ppcVar16[1],stdout);\n            local_b8 = (char *)(uVar20 & 0xff);\n            ppcVar22 = ppcVar17;\n            local_a0 = uVar21;\n            local_90 = pcVar11;\n            do {\n              while (((*stdin & 0x10) != 0 ||\n                     (lVar8 = FUN_00403200(ppcVar22,stdin,local_a8), lVar8 == 0))) {\n                if (((DAT_0060c2d8 - 2U & 0xfffffffd) == 0) && ((char)local_b8 != '\\0')) {\n                  pcVar11 = stdout->_IO_write_ptr;\n                  if (pcVar11 < stdout->_IO_write_end) {\n                    stdout->_IO_write_ptr = pcVar11 + 1;\n                    *pcVar11 = local_a1;\n                  }\n                  else {\n                    __overflow(stdout,local_a8);\n                  }\n                }\nLAB_00401e9a:\n                if (((*stdin & 0x20) == 0) && (iVar5 = FUN_00405e30(), iVar5 == 0)) {\n                  free(local_68);\n                  free(local_48);\n                  return 0;\n                }\nLAB_00402067:\n                uVar12 = FUN_00404de0(4,local_98);\n                uVar9 = dcgettext(0,\"error reading %s\",5);\n                error(1,0,uVar9,uVar12);\nLAB_0040209e:\n                if (DAT_0060c2e4 != 1) {\nLAB_00401d61:\n                  lVar8 = FUN_00403200(&local_58,stdin,local_a8);\n                  pvVar2 = local_48;\n                  if (lVar8 != 0) {\n                    uVar21 = 0;\n                    lVar8 = local_50 + -1;\n                    local_b0 = FUN_004025e0(local_50,local_48);\n                    local_a0 = 1;\n                    ppcVar16 = local_88 + 2;\n                    ppcVar22 = &local_58;\n                    local_b8 = (char *)(lVar8 - (local_b0 - (long)pvVar2));\n                    while (uVar20 = uVar21, (*stdin & 0x10) == 0) {\nLAB_00401dd0:\n                      ppcVar17 = ppcVar16;\n                      lVar8 = FUN_00403200(ppcVar17,stdin,local_a8);\n                      if (lVar8 == 0) {\n                        if ((*stdin & 0x20) == 0) break;\n                        goto LAB_00402067;\n                      }\n                      pcVar11 = ppcVar17[1];\n                      pcVar7 = ppcVar17[2];\n                      lVar8 = FUN_004025e0(pcVar11,pcVar7);\n                      pcVar11 = pcVar11 + (-1 - (lVar8 - (long)pcVar7));\n                      uVar4 = FUN_00402480(lVar8,local_b0,pcVar11,local_b8);\n                      local_90._0_4_ = (uVar4 ^ 1) & 0xff;\n                      uVar21 = uVar20 + ((uVar4 ^ 1) & 0xff);\n                      cVar3 = (char)uVar4;\n                      if (uVar21 == 0xffffffffffffffff) {\n                        if (DAT_0060c2dc == 0) {\n                          uVar21 = 0xfffffffffffffffe;\n                          goto LAB_00401f20;\n                        }\n                        uVar21 = 0xfffffffffffffffe;\n                        if (cVar3 == '\\0') goto LAB_00401f28;\n                        local_a0 = 0;\n                        uVar21 = 0xfffffffffffffffe;\nLAB_00401e5b:\n                        uVar20 = 0;\n                        FUN_00402560(ppcVar22,(uint)local_90,uVar21);\n                        ppcVar16 = ppcVar22;\n                        ppcVar22 = ppcVar17;\n                        local_b8 = pcVar11;\n                        local_b0 = lVar8;\n                        if ((*stdin & 0x10) != 0) break;\n                        goto LAB_00401dd0;\n                      }\n                      if (DAT_0060c2dc == 0) {\nLAB_00401f20:\n                        if (cVar3 == '\\0') goto LAB_00401f28;\n                        goto LAB_00401e5b;\n                      }\n                      if (cVar3 != '\\0') {\n                        if (uVar21 != 0) {\n                          local_a0._0_1_ = 0;\n                        }\n                        local_a0 = (ulong)(byte)local_a0;\n                        goto LAB_00401e5b;\n                      }\n                      if ((uVar21 == 1) &&\n                         ((DAT_0060c2dc == 1 || ((DAT_0060c2dc == 2 && ((byte)local_a0 == 0)))))) {\n                        pcVar7 = stdout->_IO_write_ptr;\n                        if (pcVar7 < stdout->_IO_write_end) {\n                          stdout->_IO_write_ptr = pcVar7 + 1;\n                          *pcVar7 = local_a1;\n                        }\n                        else {\n                          local_90 = (char *)((((ulong)local_90 & 0xffffffff00000000 | (ulong)uVar4)\n                                              ^ 1) & 0xffffffff000000ff);\n                          __overflow(stdout,local_a8);\n                        }\n                      }\nLAB_00401f28:\n                      ppcVar16 = ppcVar17;\n                      if (DAT_0060c2e1 != '\\0') {\n                        FUN_00402560(ppcVar22,(uint)local_90,uVar21);\n                        ppcVar16 = ppcVar22;\n                        ppcVar22 = ppcVar17;\n                        local_b8 = pcVar11;\n                        local_b0 = lVar8;\n                      }\n                    }\n                    FUN_00402560(ppcVar22,0,uVar20);\n                  }\n                  goto LAB_00401e9a;\n                }\n                local_b8 = (char *)0x0;\n                ppcVar16 = &local_58;\n                ppcVar22 = local_88 + 2;\n              }\n              pcVar11 = ppcVar22[1];\n              pcVar7 = ppcVar22[2];\n              uVar21 = FUN_004025e0(pcVar11,pcVar7);\n              pcVar11 = pcVar11 + (-1 - (uVar21 - (long)pcVar7));\n              if (ppcVar16[1] == (char *)0x0) {\nLAB_00402109:\n                ppcVar17 = ppcVar16;\n                if ((DAT_0060c2d8 != 0) &&\n                   (((DAT_0060c2d8 == 1 || (DAT_0060c2d8 == 4)) ||\n                    (((char)local_b8 != '\\0' && (DAT_0060c2d8 - 2U < 2)))))) {\n                  pcVar7 = stdout->_IO_write_ptr;\n                  p_Var19 = stdout;\n                  if (stdout->_IO_write_end <= pcVar7) goto LAB_0040233d;\n                  stdout->_IO_write_ptr = pcVar7 + 1;\n                  *pcVar7 = local_a1;\n                }\n                break;\n              }\nLAB_0040224c:\n              cVar3 = FUN_00402480(uVar21,local_a0,pcVar11,local_90);\n              if (cVar3 != '\\0') goto LAB_00402109;\n              ppcVar17 = ppcVar16;\n            } while (DAT_0060c2d8 == 0);\n          } while( true );\n        }\n        DAT_0060c29c = DAT_0060c29c + 1;\n        pcVar11 = (char *)(ulong)((int)pcVar13 + 1);\n        local_88[(ulong)pcVar13 & 0xffffffff] = (char *)param_2[lVar8];\n        goto LAB_00401a62;\n      }\n      if (DAT_0060c2d8 == 0) {\n        if ((DAT_0060c2e4 != 0) ||\n           (pcVar18 = \"printing all duplicated lines and repeat counts is meaningless\",\n           DAT_0060c2e1 == '\\0')) {\nLAB_00401cc7:\n          local_a8 = (int)local_a1;\n          local_98 = local_88[0];\n          iVar5 = strcmp(local_88[0],\"-\");\n          if ((iVar5 != 0) && (lVar8 = FUN_00402fe0(pcVar1,\"r\",stdin), lVar8 == 0)) {\n            pcVar11 = (char *)FUN_00404eb0(0,3,pcVar1);\n            piVar14 = __errno_location();\n            error(1,*piVar14,&DAT_004083dc,pcVar11);\n            goto LAB_0040224c;\n          }\n          iVar5 = strcmp(pcVar11,\"-\");\n          if ((iVar5 == 0) || (lVar8 = FUN_00402fe0(pcVar11,&DAT_004077d2,stdout), lVar8 != 0)) {\n            FUN_00402f60(stdin,2);\n            FUN_004031f0(local_88 + 2);\n            FUN_004031f0(&local_58);\n            if (DAT_0060c2e3 == '\\0') goto LAB_00401d61;\n            uVar20 = (ulong)DAT_0060c2e2;\n            if (DAT_0060c2e2 != 0) goto LAB_0040209e;\n            goto LAB_00401d61;\n          }\n          goto LAB_00402352;\n        }\n      }\n      else {\n        if ((char)uVar21 != '\\0') goto LAB_0040237f;\n        pcVar18 = \"grouping and printing repeat counts is meaningless\";\n        if (DAT_0060c2e4 == 1) goto LAB_00401cc7;\n      }\nLAB_00401eff:\n      pcVar11 = pcVar13;\n      uVar12 = dcgettext(0,pcVar18,5);\n      error(0,0,uVar12);\nLAB_00401b39:\n      do {\n        uVar4 = FUN_004026b0();\nLAB_00401b48:\n        if (uVar4 == 0x7a) {\n          local_a1 = '\\0';\n          goto LAB_00401a67;\n        }\n        if (uVar4 == 0x80) {\n          if (DAT_0060c4a0 == (char *)0x0) {\n            DAT_0060c2d8 = 3;\n          }\n          else {\n            lVar8 = FUN_00402dd0(\"--group\",DAT_0060c4a0,&PTR_s_prepend_00408320,&DAT_00408300,4,\n                                 PTR_FUN_0060c218);\n            DAT_0060c2d8 = *(int *)(&DAT_00408300 + lVar8 * 4);\n          }\n          goto LAB_00401a67;\n        }\n      } while (uVar4 != 0x77);\n      DAT_0060c2e8 = FUN_00402500(DAT_0060c4a0,\"invalid number of bytes to compare\");\n      goto LAB_00401a67;\n    }\n    ppuVar15 = &PTR_s_count_00408160;\n    uVar4 = FUN_00406d40(param_1,param_2,\"-0123456789Dcdf:is:uw:z\",&PTR_s_count_00408160,0);\n    ppcVar16 = (char **)(ulong)uVar4;\n    if (uVar4 == 0xffffffff) goto LAB_00401a30;\n    if (uVar4 == 100) {\n      DAT_0060c2e3 = '\\0';\n      uVar21 = 1;\n      goto LAB_00401a67;\n    }\n    if (100 < (int)uVar4) {\n      if (uVar4 == 0x75) {\n        DAT_0060c2e2 = 0;\n        uVar21 = 1;\n      }\n      else {\n        if (0x75 < (int)uVar4) goto LAB_00401b48;\n        if (uVar4 == 0x69) {\n          DAT_0060c2e0 = 1;\n        }\n        else if (uVar4 == 0x73) {\n          DAT_0060c2f0 = (char *)FUN_00402500(DAT_0060c4a0,\"invalid number of bytes to skip\");\n        }\n        else {\n          if (uVar4 != 0x66) goto LAB_00401b39;\n          DAT_0060c2f8 = FUN_00402500(DAT_0060c4a0,\"invalid number of fields to skip\");\n          local_b8 = (char *)0x2;\n        }\n      }\n      goto LAB_00401a67;\n    }\n    if (0x39 < (int)uVar4) {\n      if (uVar4 == 0x44) {\n        DAT_0060c2e3 = '\\0';\n        DAT_0060c2e1 = '\\x01';\n        if (DAT_0060c4a0 == (char *)0x0) {\n          DAT_0060c2dc = 0;\n          uVar21 = 1;\n        }\n        else {\n          uVar21 = 1;\n          lVar8 = FUN_00402dd0(\"--all-repeated\",DAT_0060c4a0,&PTR_DAT_00408360,&DAT_00408348,4,\n                               PTR_FUN_0060c218);\n          DAT_0060c2dc = *(int *)(&DAT_00408348 + lVar8 * 4);\n        }\n      }\n      else {\n        if (uVar4 != 99) goto LAB_00401b39;\n        DAT_0060c2e4 = 0;\n        uVar21 = 1;\n      }\n      goto LAB_00401a67;\n    }\n    if ((int)uVar4 < 0x30) {\n      if (uVar4 == 0xffffff7e) {\n        FUN_004026b0(0);\nLAB_00402352:\n        pcVar13 = (char *)FUN_00404eb0(0,3,pcVar11);\n        piVar14 = __errno_location();\n        error(1,*piVar14,&DAT_004083dc,pcVar13);\nLAB_0040237f:\n        pcVar18 = \"--group is mutually exclusive with -c/-d/-D/-u\";\n        goto LAB_00401eff;\n      }\n      if (uVar4 != 1) {\n        if (uVar4 == 0xffffff7d) {\n          FUN_004054b0(stdout,&DAT_004076d1,\"GNU coreutils\",PTR_DAT_0060c210,\"Richard M. Stallman\",\n                       \"David MacKenzie\",0,ppuVar15);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\n        goto LAB_00401b39;\n      }\n      if (((*DAT_0060c4a0 == '+') && (iVar6 = FUN_00403390(), 0x2b8 < iVar6 - 0x30db0U)) &&\n         (iVar6 = FUN_00405a00(DAT_0060c4a0,0,10,&local_58), iVar6 == 0)) {\n        DAT_0060c2f0 = local_58;\n      }\n      else {\n        if (iVar5 == 2) goto LAB_00402309;\n        uVar10 = (ulong)pcVar11 & 0xffffffff;\n        pcVar11 = (char *)(ulong)(iVar5 + 1);\n        local_88[uVar10] = DAT_0060c4a0;\n      }\n      goto LAB_00401a67;\n    }\n    if ((int)local_b8 == 2) {\n      uVar10 = (ulong)(int)(uVar4 - 0x30);\n    }\n    else if ((0x1999999999999999 < DAT_0060c2f8) ||\n            (uVar10 = DAT_0060c2f8 * 10 + (long)(int)(uVar4 - 0x30), uVar10 < DAT_0060c2f8)) {\n      uVar10 = local_b0;\n    }\n    local_b8 = (char *)0x1;\n    DAT_0060c2f8 = uVar10;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00401940"
        },
        {
            "funcStartAddr": "0x4023a0",
            "funcEndAddr": "0x4023cb",
            "decompiledFuncCode": "\nvoid FUN_004023a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060bff0)\n            (FUN_00401940,unaff_retaddr,&stack0x00000008,FUN_004075f0,FUN_00407650,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_004023a0"
        },
        {
            "funcStartAddr": "0x4023cb",
            "funcEndAddr": "0x4023ea",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004023d8) */\n/* WARNING: Removing unreachable block (ram,0x004023e2) */\n\nvoid FUN_004023cb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004023cb"
        },
        {
            "funcStartAddr": "0x4023ea",
            "funcEndAddr": "0x402421",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402419) */\n\nvoid FUN_004023ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004023ea"
        },
        {
            "funcStartAddr": "0x402421",
            "funcEndAddr": "0x402478",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402456) */\n\nvoid FUN_00402421(void)\n\n{\n  if (DAT_0060c2c8 != '\\0') {\n    return;\n  }\n  FUN_004023cb();\n  DAT_0060c2c8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402421"
        },
        {
            "funcStartAddr": "0x402478",
            "funcEndAddr": "0x40247d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402419) */\n\nvoid thunk_FUN_004023ea(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402478"
        },
        {
            "funcStartAddr": "0x402480",
            "funcEndAddr": "0x4024f2",
            "decompiledFuncCode": "\nulong FUN_00402480(void *param_1,void *param_2,ulong param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  undefined4 extraout_var;\n  \n  if (DAT_0060c2e8 <= param_3) {\n    param_3 = DAT_0060c2e8;\n  }\n  if (DAT_0060c2e8 <= param_4) {\n    param_4 = DAT_0060c2e8;\n  }\n  uVar2 = (ulong)DAT_0060c2e0;\n  if (DAT_0060c2e0 == 0) {\n    if (DAT_0060c300 == '\\0') {\n      uVar2 = 1;\n      if (param_3 == param_4) {\n        iVar1 = memcmp(param_1,param_2,param_3);\n        return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 != 0);\n      }\n    }\n    else {\n      uVar2 = FUN_00405940(param_1,param_3,param_2);\n      uVar2 = uVar2 & 0xffffffffffffff00 | (ulong)((int)uVar2 != 0);\n    }\n  }\n  else if (param_3 == param_4) {\n    uVar2 = FUN_00403340();\n    return uVar2 & 0xffffffffffffff00 | (ulong)((int)uVar2 != 0);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00402480"
        },
        {
            "funcStartAddr": "0x402500",
            "funcEndAddr": "0x402560",
            "decompiledFuncCode": "\nsize_t FUN_00402500(undefined8 param_1,undefined8 param_2)\n\n{\n  byte bVar1;\n  char cVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  size_t sVar5;\n  long extraout_RDX;\n  long lVar6;\n  size_t local_20 [2];\n  \n  uVar3 = FUN_00405a00(param_1,0,10,local_20,\"\");\n  if (uVar3 < 2) {\n    return local_20[0];\n  }\n  uVar4 = dcgettext(0,param_2,5);\n  cVar2 = '\\0';\n  lVar6 = 1;\n  error(1,0,\"%s: %s\",param_1,uVar4);\n  bVar1 = DAT_0060c2e3;\n  if ((extraout_RDX == 0) || (bVar1 = DAT_0060c2e1, cVar2 != '\\0')) {\n    uVar3 = bVar1 ^ 1;\n    cVar2 = (char)uVar3;\n  }\n  else {\n    uVar3 = DAT_0060c2e2 ^ 1;\n    cVar2 = (char)uVar3;\n  }\n  if (cVar2 != '\\0') {\n    return (ulong)uVar3;\n  }\n  if (DAT_0060c2e4 == 0) {\n    __printf_chk(1,\"%7lu \",extraout_RDX + 1);\n  }\n  sVar5 = fwrite_unlocked(*(void **)(lVar6 + 0x10),1,*(size_t *)(lVar6 + 8),stdout);\n  return sVar5;\n}\n\n",
            "funcName": "FUN_00402500"
        },
        {
            "funcStartAddr": "0x402560",
            "funcEndAddr": "0x4025d0",
            "decompiledFuncCode": "\nvoid FUN_00402560(long param_1,char param_2,long param_3)\n\n{\n  char cVar1;\n  \n  cVar1 = DAT_0060c2e3;\n  if ((param_3 == 0) || (cVar1 = DAT_0060c2e1, param_2 != '\\0')) {\n    if (cVar1 != '\\x01') {\n      return;\n    }\n  }\n  else if (DAT_0060c2e2 != '\\x01') {\n    return;\n  }\n  if (DAT_0060c2e4 == 0) {\n    __printf_chk(1,\"%7lu \",param_3 + 1);\n  }\n  fwrite_unlocked(*(void **)(param_1 + 0x10),1,*(size_t *)(param_1 + 8),stdout);\n  return;\n}\n\n",
            "funcName": "FUN_00402560"
        },
        {
            "funcStartAddr": "0x4025e0",
            "funcEndAddr": "0x40269f",
            "decompiledFuncCode": "\nbyte * FUN_004025e0(long param_1,byte *param_2)\n\n{\n  ushort *puVar1;\n  ulong uVar2;\n  ushort **ppuVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ushort uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  \n  uVar2 = DAT_0060c2f8;\n  uVar7 = param_1 - 1;\n  if ((param_1 == 1) || (DAT_0060c2f8 == 0)) {\n    uVar5 = 0;\n  }\n  else {\n    ppuVar3 = __ctype_b_loc();\n    uVar8 = 0;\n    puVar1 = *ppuVar3;\n    uVar4 = (ulong)*param_2;\n    uVar6 = puVar1[uVar4];\n    uVar5 = 0;\n    while( true ) {\n      while (((char)uVar4 == '\\n' || ((uVar6 & 1) != 0))) {\n        uVar5 = uVar5 + 1;\n        if (uVar7 <= uVar5) goto LAB_00402650;\n        uVar4 = (ulong)param_2[uVar5];\n        uVar6 = puVar1[uVar4];\n      }\n      if (uVar7 <= uVar5) break;\n      while (((char)uVar4 != '\\n' && ((uVar6 & 1) == 0))) {\n        uVar5 = uVar5 + 1;\n        if (uVar7 <= uVar5) goto LAB_00402650;\n        uVar4 = (ulong)param_2[uVar5];\n        uVar6 = puVar1[uVar4];\n      }\n      uVar8 = uVar8 + 1;\n      if ((uVar2 <= uVar8) || (uVar7 <= uVar5)) break;\n    }\nLAB_00402650:\n    uVar7 = uVar7 - uVar5;\n  }\n  if (DAT_0060c2f0 <= uVar7) {\n    uVar7 = DAT_0060c2f0;\n  }\n  return param_2 + uVar5 + uVar7;\n}\n\n",
            "funcName": "FUN_004025e0"
        },
        {
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x402afd",
            "decompiledFuncCode": "\nvoid FUN_004026b0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0060c318;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_004026ef;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [INPUT [OUTPUT]]\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Filter adjacent matching lines from INPUT (or standard input),\\nwriting to OUTPUT (or standard output).\\n\\nWith no options, matching lines are merged to the first occurrence.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -c, --count           prefix lines by the number of occurrences\\n  -d, --repeated        only print duplicate lines, one for each group\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -D                    print all duplicate lines\\n      --all-repeated[=METHOD]  like -D, but allow separating groups\\n                                 with an empty line;\\n                                 METHOD={none(default),prepend,separate}\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -f, --skip-fields=N   avoid comparing the first N fields\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --group[=METHOD]  show all items, separating groups with an empty line;\\n                          METHOD={separate(default),prepend,append,both}\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -i, --ignore-case     ignore differences in case when comparing\\n  -s, --skip-chars=N    avoid comparing the first N characters\\n  -u, --unique          only print unique lines\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -z, --zero-terminated     line delimiter is NUL, not newline\\n\",5)\n  ;\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -w, --check-chars=N   compare no more than N characters in lines\\n\",\n                             5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nA field is a run of blanks (usually spaces and/or TABs), then non-blank\\ncharacters.  Fields are skipped before chars.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nNote: \\'uniq\\' does not detect repeated lines unless they are adjacent.\\nYou may want to sort the input first, or use \\'sort -u\\' without \\'uniq\\'.\\nAlso, comparisons honor the rules specified by \\'LC_COLLATE\\'.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_004076d6;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x407750;\n  local_78[1] = (byte *)0x4076e8;\n  local_78[2] = (byte *)0x4076fe;\n  local_78[3] = (byte *)0x407708;\n  local_78[4] = (byte *)0x407717;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 5;\n    pbVar10 = &DAT_004076d1;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_004076d1;\n        goto LAB_00402ad3;\n      }\n    }\n    pbVar9 = &DAT_004076d1;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_004076d1);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402ad3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_004076d1);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_004076d1);\n    if (pbVar9 != &DAT_004076d1) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_004026ef:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004026b0"
        },
        {
            "funcStartAddr": "0x402b00",
            "funcEndAddr": "0x402b0a",
            "decompiledFuncCode": "\nvoid FUN_00402b00(void)\n\n{\n  FUN_004026b0(1);\n  return;\n}\n\n",
            "funcName": "FUN_00402b00"
        },
        {
            "funcStartAddr": "0x402b10",
            "funcEndAddr": "0x402c13",
            "decompiledFuncCode": "\nlong FUN_00402b10(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_00402ba7:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_00402ba7;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_00402b10"
        },
        {
            "funcStartAddr": "0x402c30",
            "funcEndAddr": "0x402c9c",
            "decompiledFuncCode": "\nvoid FUN_00402c30(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00405010(1,param_1);\n  uVar3 = FUN_00404d00(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00402c30"
        },
        {
            "funcStartAddr": "0x402cb0",
            "funcEndAddr": "0x402dbf",
            "decompiledFuncCode": "\nvoid FUN_00402cb0(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_00405030(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_00402d80;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_00405030(lVar5);\n    __fprintf_chk(stderr,1,&DAT_004083da,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_00402d80:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_00402cb0"
        },
        {
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x402e3d",
            "decompiledFuncCode": "\nlong FUN_00402dd0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00402b10(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00402c30(param_1,param_2,lVar1);\n    FUN_00402cb0(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00402dd0"
        },
        {
            "funcStartAddr": "0x402e40",
            "funcEndAddr": "0x402e8c",
            "decompiledFuncCode": "\nlong FUN_00402e40(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_00402e40"
        },
        {
            "funcStartAddr": "0x402e90",
            "funcEndAddr": "0x402e98",
            "decompiledFuncCode": "\nvoid FUN_00402e90(undefined8 param_1)\n\n{\n  DAT_0060c310 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402e90"
        },
        {
            "funcStartAddr": "0x402ea0",
            "funcEndAddr": "0x402ea8",
            "decompiledFuncCode": "\nvoid FUN_00402ea0(undefined param_1)\n\n{\n  DAT_0060c308 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402ea0"
        },
        {
            "funcStartAddr": "0x402eb0",
            "funcEndAddr": "0x402f4e",
            "decompiledFuncCode": "\nvoid FUN_00402eb0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00406e40(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060c308 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060c310 == 0) {\n        error(0,*piVar2,&DAT_004083dc,uVar3);\n      }\n      else {\n        uVar4 = FUN_00404e80();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00402f2e;\n    }\n  }\n  iVar1 = FUN_00406e40(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00402f2e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060c220);\n}\n\n",
            "funcName": "FUN_00402eb0"
        },
        {
            "funcStartAddr": "0x402f50",
            "funcEndAddr": "0x402f55",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0060c0f8)();\n  return iVar1;\n}\n\n",
            "funcName": "thunk_402f50"
        },
        {
            "funcStartAddr": "0x402f60",
            "funcEndAddr": "0x402f7c",
            "decompiledFuncCode": "\nvoid FUN_00402f60(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402f60"
        },
        {
            "funcStartAddr": "0x402f90",
            "funcEndAddr": "0x402fd9",
            "decompiledFuncCode": "\nundefined8 FUN_00402f90(int param_1)\n\n{\n  int __fd;\n  int *piVar1;\n  undefined8 uVar2;\n  \n  uVar2 = 1;\n  __fd = open(\"/dev/null\",0);\n  if ((param_1 != __fd) && (uVar2 = 0, -1 < __fd)) {\n    close(__fd);\n    piVar1 = __errno_location();\n    *piVar1 = 9;\n    return 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00402f90"
        },
        {
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x403169",
            "decompiledFuncCode": "\nlong FUN_00402fe0(undefined8 param_1,undefined8 param_2,FILE *param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int *piVar4;\n  long lVar5;\n  char cVar6;\n  char cVar7;\n  \n  iVar3 = fileno(param_3);\n  piVar4 = __errno_location();\n  if (iVar3 == 1) {\n    cVar6 = false;\n    cVar7 = false;\nLAB_00403050:\n    iVar3 = dup2(0,0);\n    if (iVar3 != 0) {\n      cVar2 = FUN_00402f90();\n      if (cVar2 != '\\0') {\n        cVar1 = cVar2;\n        if ((bool)cVar7 != false) goto LAB_004030d8;\n        goto LAB_00403074;\n      }\n      cVar2 = '\\x01';\n      lVar5 = 0;\n      goto LAB_0040309f;\n    }\n    cVar2 = '\\0';\n    cVar1 = '\\0';\n    if ((bool)cVar7 == false) {\nLAB_00403074:\n      if (((bool)cVar6 == false) || (cVar6 = FUN_00402f90(2), cVar6 != '\\0')) goto LAB_0040308c;\n      iVar3 = *piVar4;\n      lVar5 = 0;\n      goto LAB_00403146;\n    }\nLAB_004030d8:\n    cVar2 = cVar1;\n    cVar7 = FUN_00402f90(1);\n    if (cVar7 != '\\0') goto LAB_00403074;\n    iVar3 = *piVar4;\n    lVar5 = 0;\n    if ((bool)cVar6 != false) {\n      close(2);\n    }\n  }\n  else {\n    if (iVar3 == 2) {\n      cVar6 = false;\nLAB_0040303a:\n      iVar3 = dup2(1,1);\n      cVar7 = iVar3 != 1;\n      goto LAB_00403050;\n    }\n    if (iVar3 != 0) {\n      iVar3 = dup2(2,2);\n      cVar6 = iVar3 != 2;\n      goto LAB_0040303a;\n    }\n    cVar6 = '\\0';\n    cVar7 = '\\0';\n    cVar2 = '\\0';\nLAB_0040308c:\n    lVar5 = FUN_00405ef0(param_1,param_2,param_3);\nLAB_0040309f:\n    iVar3 = *piVar4;\n    if (cVar6 != '\\0') {\nLAB_00403146:\n      close(2);\n    }\n    if (cVar7 == '\\0') goto joined_r0x0040310d;\n  }\n  close(1);\njoined_r0x0040310d:\n  if (cVar2 != '\\0') {\n    close(0);\n  }\n  if (lVar5 == 0) {\n    *piVar4 = iVar3;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00402fe0"
        },
        {
            "funcStartAddr": "0x403190",
            "funcEndAddr": "0x4031e6",
            "decompiledFuncCode": "\nbool FUN_00403190(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_004083f5;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00403190"
        },
        {
            "funcStartAddr": "0x4031f0",
            "funcEndAddr": "0x403200",
            "decompiledFuncCode": "\nvoid FUN_004031f0(undefined (*param_1) [16])\n\n{\n  *(undefined8 *)param_1[1] = 0;\n  *param_1 = (undefined  [16])0x0;\n  return;\n}\n\n",
            "funcName": "FUN_004031f0"
        },
        {
            "funcStartAddr": "0x403200",
            "funcEndAddr": "0x403306",
            "decompiledFuncCode": "\nlong * FUN_00403200(long *param_1,_IO_FILE *param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  uint uVar3;\n  char *pcVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char cVar7;\n  uint uVar8;\n  char *pcVar9;\n  \n  cVar7 = (char)param_3;\n  pcVar5 = (char *)param_1[2];\n  pcVar9 = pcVar5 + *param_1;\n  pcVar6 = pcVar5;\n  if ((*(byte *)&param_2->_flags & 0x10) != 0) {\n    return (long *)0x0;\n  }\n  do {\n    pbVar1 = (byte *)param_2->_IO_read_ptr;\n    if (pbVar1 < param_2->_IO_read_end) {\n      param_2->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar3 = (uint)*pbVar1;\nLAB_0040324b:\n      pcVar4 = pcVar6;\n      uVar8 = uVar3;\n      if (pcVar6 == pcVar9) goto LAB_004032a7;\n    }\n    else {\n      uVar3 = __uflow(param_2);\n      if (uVar3 != 0xffffffff) goto LAB_0040324b;\n      if (pcVar5 == pcVar6) {\n        return (long *)0x0;\n      }\n      if ((*(byte *)&param_2->_flags & 0x20) != 0) {\n        return (long *)0x0;\n      }\n      if (pcVar6[-1] == cVar7) goto LAB_004032fc;\n      if (pcVar6 != pcVar9) {\n        *pcVar6 = cVar7;\n        pcVar6 = pcVar6 + 1;\n        goto LAB_004032fc;\n      }\n      uVar3 = (int)cVar7;\n      uVar8 = param_3 & 0xff;\nLAB_004032a7:\n      lVar2 = *param_1;\n      pcVar5 = (char *)FUN_00405750(pcVar5,param_1);\n      param_1[2] = (long)pcVar5;\n      pcVar9 = pcVar5 + *param_1;\n      pcVar4 = pcVar5 + lVar2;\n      uVar8 = uVar8 & 0xff;\n    }\n    pcVar6 = pcVar4 + 1;\n    *pcVar4 = (char)uVar8;\n    if (uVar3 == (int)cVar7) {\nLAB_004032fc:\n      param_1[1] = (long)pcVar6 - (long)pcVar5;\n      return param_1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403200"
        },
        {
            "funcStartAddr": "0x403320",
            "funcEndAddr": "0x40332a",
            "decompiledFuncCode": "\nvoid FUN_00403320(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403200(param_1,param_2,10);\n  return;\n}\n\n",
            "funcName": "FUN_00403320"
        },
        {
            "funcStartAddr": "0x403330",
            "funcEndAddr": "0x403339",
            "decompiledFuncCode": "\nvoid FUN_00403330(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  return;\n}\n\n",
            "funcName": "FUN_00403330"
        },
        {
            "funcStartAddr": "0x403340",
            "funcEndAddr": "0x403383",
            "decompiledFuncCode": "\nint FUN_00403340(long param_1,long param_2,long param_3)\n\n{\n  int iVar1;\n  __int32_t **pp_Var2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    return 0;\n  }\n  pp_Var2 = __ctype_toupper_loc();\n  lVar3 = 0;\n  do {\n    iVar1 = (*pp_Var2)[*(byte *)(param_1 + lVar3)] - (*pp_Var2)[*(byte *)(param_2 + lVar3)];\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    lVar3 = lVar3 + 1;\n  } while (lVar3 != param_3);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00403340"
        },
        {
            "funcStartAddr": "0x403390",
            "funcEndAddr": "0x4033f8",
            "decompiledFuncCode": "\nulong FUN_00403390(void)\n\n{\n  char *__nptr;\n  ulong uVar1;\n  ulong uVar2;\n  char *local_10;\n  \n  uVar2 = 0x31069;\n  __nptr = getenv(\"_POSIX2_VERSION\");\n  if ((__nptr != (char *)0x0) && (*__nptr != '\\0')) {\n    uVar1 = strtol(__nptr,&local_10,10);\n    if (*local_10 == '\\0') {\n      if (-0x80000001 < (long)uVar1) {\n        uVar2 = 0x7fffffff;\n        if ((long)uVar1 < 0x80000000) {\n          uVar2 = uVar1;\n        }\n        return uVar2 & 0xffffffff;\n      }\n      uVar2 = 0x80000000;\n    }\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00403390"
        },
        {
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x4034a9",
            "decompiledFuncCode": "\nvoid FUN_00403410(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00408450;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060c318 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403410"
        },
        {
            "funcStartAddr": "0x4034b0",
            "funcEndAddr": "0x40358f",
            "decompiledFuncCode": "\nchar * FUN_004034b0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00406ea0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403588:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00408461;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00408456;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403588;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040845d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040845a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_004034b0"
        },
        {
            "funcStartAddr": "0x4035b0",
            "funcEndAddr": "0x4046e3",
            "decompiledFuncCode": "\nulong FUN_004035b0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404201:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00403e36;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404201;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_004034b0(&DAT_00408465,param_5);\n      param_9 = (char *)FUN_004034b0(&DAT_00409a27);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403648:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403658:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00403dd8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00403d50:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403d62_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00403bce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403a65;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403d62_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403d62_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403d62_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403a65;\n      case 0xc:\nswitchD_00403d62_caseD_c:\n        bVar17 = 0x66;\nLAB_00403a65:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004039b8;\n        }\nLAB_00403a70:\n        bVar23 = false;\n        goto LAB_0040382b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403748_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00403980;\n      case 0x20:\n        bVar25 = false;\nLAB_00403daa:\n        uVar19 = 0x20;\n        goto LAB_00403d72;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403748_caseD_21:\n        bVar25 = false;\n        goto LAB_0040398b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00403d8a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403798;\n        }\n        bVar23 = false;\n        goto LAB_004037af;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00403d72:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004037b1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00403bce_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00403bce_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403748_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00403bce_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004039a7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00403d50;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403748_caseD_0;\n      default:\n        goto switchD_00403bce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403a70;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403d62_caseD_9;\n      case 10:\n        goto switchD_00403d62_caseD_a;\n      case 0xb:\n        goto switchD_00403d62_caseD_b;\n      case 0xc:\n        goto switchD_00403d62_caseD_c;\n      case 0xd:\n        goto switchD_00403748_caseD_d;\n      case 0x20:\n        goto LAB_00403daa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403748_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00403d8a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00403d72;\n      case 0x27:\n        goto switchD_00403bce_caseD_27;\n      case 0x3f:\n        goto switchD_00403bce_caseD_3f;\n      case 0x5c:\n        goto switchD_00403748_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00403bce_caseD_7b;\n      }\n      goto LAB_004037f2;\n    }\n    goto LAB_004039ca;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403d62_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403748_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004038a8;\n          }\nLAB_00403aea:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00403aea;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004038a8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00403b29:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004038a8;\n        goto LAB_004037b1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004039bc;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403798;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403658;\n  default:\nswitchD_00403bce_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00406dc0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_004044da;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404617;\n          goto LAB_00404607;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004039bc;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_004044da;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00403ba4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00403be2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00403be2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00403be2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00403bfa:\n      param_5 = 2;\n      goto LAB_004039bc;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403786;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403786:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00403bfa;\n    goto LAB_00403798;\n  case 0x23:\n  case 0x7e:\nLAB_0040377d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403786;\n    goto LAB_0040398b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00403bce_caseD_25;\n  case 0x27:\nswitchD_00403bce_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403798;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004038a8;\n    }\n    goto LAB_004039bc;\n  case 0x3f:\nswitchD_00403bce_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004038a8;\n      }\n      goto LAB_004039bc;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403798;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00403b29;\n      }\n      goto LAB_004039ca;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403798;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403748_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004038c4;\n    }\n    if (local_5c) goto LAB_004039bc;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004038c4;\n  case 0x7b:\n  case 0x7d:\nswitchD_00403bce_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040377d;\n    goto LAB_0040398b;\n  }\nLAB_00403980:\n  if (!bVar6) {\nLAB_0040398b:\n    bVar23 = false;\n    goto LAB_00403798;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004039a7;\nLAB_00403dd8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004039bc:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004039ca:\n    uVar9 = FUN_004035b0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004046ad:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_004035b0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004046ad;\nLAB_00403e36:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403648;\n  while (__s1[uVar21] != 0) {\nLAB_00404607:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404617:\n  bVar23 = false;\nLAB_004044da:\n  if (1 < uVar21) {\nLAB_0040409e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004039bc;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040383d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004038c4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00403ba4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040409e;\n  }\nswitchD_00403bce_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403798:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004037af:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004037b1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004038a8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004038a8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004038c4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040383d;\n    }\n  }\njoined_r0x004039a7:\n  if (local_5c) {\nLAB_004039b8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004039bc;\n  }\nLAB_004037f2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040382b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040383d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403658;\n}\n\n",
            "funcName": "FUN_004035b0"
        },
        {
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x40497b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_004047e0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060c278;\n  if (DAT_0060c290 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00405840();\n    }\n    if (PTR_DAT_0060c278 == &DAT_0060c280) {\n      puVar8 = (undefined4 *)FUN_00405650(0);\n      uVar6 = PTR_DAT_0060c288._4_4_;\n      uVar5 = PTR_DAT_0060c288._0_4_;\n      uVar3 = _UNK_0060c284;\n      PTR_DAT_0060c278 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060c280;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00405650(PTR_DAT_0060c278);\n      PTR_DAT_0060c278 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060c290 * 4,0,(long)((param_1 + 1) - DAT_0060c290) << 4);\n    DAT_0060c290 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_004035b0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060c320) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_004055f0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_004035b0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_004047e0"
        },
        {
            "funcStartAddr": "0x404980",
            "funcEndAddr": "0x4049b4",
            "decompiledFuncCode": "\nvoid FUN_00404980(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  FUN_004057f0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404980"
        },
        {
            "funcStartAddr": "0x4049c0",
            "funcEndAddr": "0x4049cf",
            "decompiledFuncCode": "\nundefined4 FUN_004049c0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004049c0"
        },
        {
            "funcStartAddr": "0x4049d0",
            "funcEndAddr": "0x4049df",
            "decompiledFuncCode": "\nvoid FUN_004049d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004049d0"
        },
        {
            "funcStartAddr": "0x4049e0",
            "funcEndAddr": "0x404a13",
            "decompiledFuncCode": "\nuint FUN_004049e0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_004049e0"
        },
        {
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404a33",
            "decompiledFuncCode": "\nundefined4 FUN_00404a20(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404a20"
        },
        {
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404a6b",
            "decompiledFuncCode": "\nvoid FUN_00404a40(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404a40"
        },
        {
            "funcStartAddr": "0x404a70",
            "funcEndAddr": "0x404ae2",
            "decompiledFuncCode": "\nvoid FUN_00404a70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060c420;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_004035b0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404a70"
        },
        {
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404bd1",
            "decompiledFuncCode": "\nundefined8 FUN_00404af0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060c420;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_004035b0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_004055f0(lVar3 + 1);\n  FUN_004035b0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00404af0"
        },
        {
            "funcStartAddr": "0x404be0",
            "funcEndAddr": "0x404bea",
            "decompiledFuncCode": "\nvoid FUN_00404be0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404af0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404be0"
        },
        {
            "funcStartAddr": "0x404bf0",
            "funcEndAddr": "0x404c85",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404bf0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060c278;\n  if (1 < DAT_0060c290) {\n    ppvVar2 = (void **)(PTR_DAT_0060c278 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060c278 + (ulong)(DAT_0060c290 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060c320) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060c280 = 0x100;\n    PTR_DAT_0060c288 = &DAT_0060c320;\n  }\n  if (__ptr_00 != &DAT_0060c280) {\n    free(__ptr_00);\n    PTR_DAT_0060c278 = &DAT_0060c280;\n  }\n  DAT_0060c290 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00404bf0"
        },
        {
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404ca1",
            "decompiledFuncCode": "\nvoid FUN_00404c90(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004047e0(param_1,param_2,0xffffffffffffffff,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_00404c90"
        },
        {
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cba",
            "decompiledFuncCode": "\nvoid FUN_00404cb0(void)\n\n{\n  FUN_004047e0();\n  return;\n}\n\n",
            "funcName": "FUN_00404cb0"
        },
        {
            "funcStartAddr": "0x404cc0",
            "funcEndAddr": "0x404cd6",
            "decompiledFuncCode": "\nvoid FUN_00404cc0(undefined8 param_1)\n\n{\n  FUN_004047e0(0,param_1,0xffffffffffffffff,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_00404cc0"
        },
        {
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x404cf2",
            "decompiledFuncCode": "\nvoid FUN_00404ce0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004047e0(0,param_1,param_2,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_00404ce0"
        },
        {
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d68",
            "decompiledFuncCode": "\nvoid FUN_00404d00(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004047e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404d00"
        },
        {
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x404dd4",
            "decompiledFuncCode": "\nvoid FUN_00404d70(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004047e0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404d70"
        },
        {
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x404dec",
            "decompiledFuncCode": "\nvoid FUN_00404de0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00404d00(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404de0"
        },
        {
            "funcStartAddr": "0x404df0",
            "funcEndAddr": "0x404dff",
            "decompiledFuncCode": "\nvoid FUN_00404df0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404d70(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404df0"
        },
        {
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e70",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404e00(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060c450;\n  local_48 = _DAT_0060c420;\n  uStack_40 = uRam000000000060c428;\n  local_38 = _DAT_0060c430;\n  uStack_30 = uRam000000000060c438;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060c440;\n  uStack_20 = uRam000000000060c448;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_004047e0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00404e00"
        },
        {
            "funcStartAddr": "0x404e70",
            "funcEndAddr": "0x404e7d",
            "decompiledFuncCode": "\nvoid FUN_00404e70(undefined8 param_1,char param_2)\n\n{\n  FUN_00404e00(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404e70"
        },
        {
            "funcStartAddr": "0x404e80",
            "funcEndAddr": "0x404e91",
            "decompiledFuncCode": "\nvoid FUN_00404e80(undefined8 param_1)\n\n{\n  FUN_00404e00(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404e80"
        },
        {
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404eaa",
            "decompiledFuncCode": "\nvoid FUN_00404ea0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404e00(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404ea0"
        },
        {
            "funcStartAddr": "0x404eb0",
            "funcEndAddr": "0x404f1e",
            "decompiledFuncCode": "\nvoid FUN_00404eb0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004047e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404eb0"
        },
        {
            "funcStartAddr": "0x404f20",
            "funcEndAddr": "0x404f8c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404f20(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060c428;\n  local_38 = _DAT_0060c430;\n  uStack_30 = uRam000000000060c438;\n  local_28 = _DAT_0060c440;\n  lStack_20 = uRam000000000060c448;\n  local_18 = DAT_0060c450;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060c420 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_004047e0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404f20"
        },
        {
            "funcStartAddr": "0x404f90",
            "funcEndAddr": "0x404f99",
            "decompiledFuncCode": "\nvoid FUN_00404f90(void)\n\n{\n  FUN_00404f20();\n  return;\n}\n\n",
            "funcName": "FUN_00404f90"
        },
        {
            "funcStartAddr": "0x404fa0",
            "funcEndAddr": "0x404fb7",
            "decompiledFuncCode": "\nvoid FUN_00404fa0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404f20(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00404fa0"
        },
        {
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x404fd3",
            "decompiledFuncCode": "\nvoid FUN_00404fc0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00404f20(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00404fc0"
        },
        {
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x404fea",
            "decompiledFuncCode": "\nvoid FUN_00404fe0(void)\n\n{\n  FUN_004047e0();\n  return;\n}\n\n",
            "funcName": "FUN_00404fe0"
        },
        {
            "funcStartAddr": "0x404ff0",
            "funcEndAddr": "0x405002",
            "decompiledFuncCode": "\nvoid FUN_00404ff0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004047e0(0,param_1,param_2,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00404ff0"
        },
        {
            "funcStartAddr": "0x405010",
            "funcEndAddr": "0x405021",
            "decompiledFuncCode": "\nvoid FUN_00405010(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004047e0(param_1,param_2,0xffffffffffffffff,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00405010"
        },
        {
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405046",
            "decompiledFuncCode": "\nvoid FUN_00405030(undefined8 param_1)\n\n{\n  FUN_004047e0(0,param_1,0xffffffffffffffff,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00405030"
        },
        {
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x4053f4",
            "decompiledFuncCode": "\nundefined8\nFUN_00405050(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_004091ab,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004052cc;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_004052cc:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405369;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405369:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040514a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040514a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405050"
        },
        {
            "funcStartAddr": "0x405430",
            "funcEndAddr": "0x405450",
            "decompiledFuncCode": "\nvoid FUN_00405430(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405050();\n  return;\n}\n\n",
            "funcName": "FUN_00405430"
        },
        {
            "funcStartAddr": "0x405450",
            "funcEndAddr": "0x4054a9",
            "decompiledFuncCode": "\nvoid FUN_00405450(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405050();\n  return;\n}\n\n",
            "funcName": "FUN_00405450"
        },
        {
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x405568",
            "decompiledFuncCode": "\nvoid FUN_004054b0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405050();\n  return;\n}\n\n",
            "funcName": "FUN_004054b0"
        },
        {
            "funcStartAddr": "0x405570",
            "funcEndAddr": "0x4055e4",
            "decompiledFuncCode": "\nvoid FUN_00405570(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00405570"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40560a",
            "decompiledFuncCode": "\nvoid FUN_004055f0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405840();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x405610",
            "funcEndAddr": "0x405631",
            "decompiledFuncCode": "\nvoid FUN_00405610(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_004055f0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405840();\n}\n\n",
            "funcName": "FUN_00405610"
        },
        {
            "funcStartAddr": "0x405640",
            "funcEndAddr": "0x405642",
            "decompiledFuncCode": "\nvoid thunk_FUN_004055f0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405840();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_405640"
        },
        {
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x405680",
            "decompiledFuncCode": "\nvoid * FUN_00405650(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405840();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00405650"
        },
        {
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x4056b1",
            "decompiledFuncCode": "\nvoid FUN_00405690(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00405650();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405840();\n}\n\n",
            "funcName": "FUN_00405690"
        },
        {
            "funcStartAddr": "0x4056c0",
            "funcEndAddr": "0x405738",
            "decompiledFuncCode": "\nvoid FUN_004056c0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040571b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040571b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405840(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00405650(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004056c0"
        },
        {
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x40579a",
            "decompiledFuncCode": "\nvoid FUN_00405750(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00405650(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040579a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040579a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405840();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00405650(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405750"
        },
        {
            "funcStartAddr": "0x4057a0",
            "funcEndAddr": "0x4057b7",
            "decompiledFuncCode": "\nvoid FUN_004057a0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_004055f0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004057a0"
        },
        {
            "funcStartAddr": "0x4057c0",
            "funcEndAddr": "0x4057ee",
            "decompiledFuncCode": "\nvoid FUN_004057c0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405840();\n}\n\n",
            "funcName": "FUN_004057c0"
        },
        {
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405818",
            "decompiledFuncCode": "\nvoid FUN_004057f0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_004055f0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004057f0"
        },
        {
            "funcStartAddr": "0x405820",
            "funcEndAddr": "0x405833",
            "decompiledFuncCode": "\nvoid FUN_00405820(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_004055f0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00405820"
        },
        {
            "funcStartAddr": "0x405840",
            "funcEndAddr": "0x405871",
            "decompiledFuncCode": "\nvoid FUN_00405840(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060c220,0,&DAT_004083dc,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405840"
        },
        {
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x405934",
            "decompiledFuncCode": "\nvoid FUN_00405880(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  uVar1 = dcgettext(0,\"string comparison failed\",5);\n  error(0,param_1,uVar1);\n  uVar1 = dcgettext(0,\"Set LC_ALL=\\'C\\' to work around the problem.\",5);\n  error(0,0,uVar1);\n  uVar1 = FUN_00404d70(1,8,param_4,param_5);\n  uVar2 = FUN_00404d70(0,8,param_2,param_3);\n  uVar3 = dcgettext(0,\"The strings compared were %s and %s.\",5);\n  error(DAT_0060c220,0,uVar3,uVar2,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405880"
        },
        {
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x405990",
            "decompiledFuncCode": "\nundefined4 FUN_00405940(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_004074d0();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_00405880(*piVar2,param_1,param_2,param_3,param_4);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405940"
        },
        {
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x4059f2",
            "decompiledFuncCode": "\nundefined4 FUN_004059a0(undefined8 param_1,long param_2,undefined8 param_3,long param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00407580();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_00405880(*piVar2,param_1,param_2 + -1,param_3,param_4 + -1);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004059a0"
        },
        {
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405dac",
            "decompiledFuncCode": "\nulong FUN_00405a00(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00405aa0;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_00405b7c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_00405b6a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00405b59. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_004095f0)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_00405b6a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00405bd7;\n  default:\nswitchD_00405b7c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405c64;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x00405b9c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00405bd7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x00405b9c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00405bd7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405c64;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405c64;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405c64;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00405c64:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00405bd7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00405bd7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00405aa0:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00405a00"
        },
        {
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405ea8",
            "decompiledFuncCode": "\nint FUN_00405e30(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00405e97;\n    }\n    iVar1 = FUN_00405eb0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00405e97:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00405e30"
        },
        {
            "funcStartAddr": "0x405eb0",
            "funcEndAddr": "0x405eeb",
            "decompiledFuncCode": "\nvoid FUN_00405eb0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00405f90(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405eb0"
        },
        {
            "funcStartAddr": "0x405ef0",
            "funcEndAddr": "0x405f8a",
            "decompiledFuncCode": "\nFILE * FUN_00405ef0(char *param_1,char *param_2,FILE *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  FILE *pFVar3;\n  int *piVar4;\n  \n  pFVar3 = freopen(param_1,param_2,param_3);\n  if ((pFVar3 != (FILE *)0x0) && (param_1 != (char *)0x0)) {\n    iVar1 = fileno(pFVar3);\n    iVar2 = dup2(iVar1,iVar1);\n    if ((iVar2 < 0) && (piVar4 = __errno_location(), *piVar4 == 9)) {\n      iVar2 = open(\"/dev/null\",0x80000);\n      if (iVar1 != iVar2) {\n        iVar1 = dup2(iVar2,iVar1);\n        if (iVar1 < 0) {\n          close(iVar2);\n          return pFVar3;\n        }\n        close(iVar2);\n      }\n      pFVar3 = freopen(param_1,param_2,pFVar3);\n      return pFVar3;\n    }\n  }\n  return pFVar3;\n}\n\n",
            "funcName": "FUN_00405ef0"
        },
        {
            "funcStartAddr": "0x405f90",
            "funcEndAddr": "0x405fe6",
            "decompiledFuncCode": "\nulong FUN_00405f90(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00405f90"
        },
        {
            "funcStartAddr": "0x405ff0",
            "funcEndAddr": "0x4060c5",
            "decompiledFuncCode": "\nvoid FUN_00405ff0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040606c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040606c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040606c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00405ff0"
        },
        {
            "funcStartAddr": "0x4060d0",
            "funcEndAddr": "0x4066ce",
            "decompiledFuncCode": "\nint FUN_004060d0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004062f0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00406230;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00406230;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00406230:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00409a21,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004062f0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004060d0"
        },
        {
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x406c57",
            "decompiledFuncCode": "\nuint FUN_004066f0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040673a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040683d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040683d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00406848:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_004067b8;\nLAB_0040685c:\n    if (*pbVar8 == 0) goto LAB_004067b8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040673a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00406848;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040685c;\nLAB_004067b8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00405ff0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00406926:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00409a29;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00405ff0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00406926;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00409a29;\n        goto LAB_00406a85;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00406a30;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004060d0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00409a2a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00406a30:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00409a48;\nLAB_00406a85:\n  uVar3 = FUN_004060d0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004066f0"
        },
        {
            "funcStartAddr": "0x406cc0",
            "funcEndAddr": "0x406d16",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406cc0(void)\n\n{\n  DAT_0060c460 = DAT_0060c29c;\n  _DAT_0060c464 = DAT_0060c298;\n  FUN_004066f0();\n  DAT_0060c29c = DAT_0060c460;\n  DAT_0060c4a0 = DAT_0060c470;\n  _DAT_0060c294 = DAT_0060c468;\n  return;\n}\n\n",
            "funcName": "FUN_00406cc0"
        },
        {
            "funcStartAddr": "0x406d20",
            "funcEndAddr": "0x406d38",
            "decompiledFuncCode": "\nvoid FUN_00406d20(void)\n\n{\n  FUN_00406cc0();\n  return;\n}\n\n",
            "funcName": "FUN_00406d20"
        },
        {
            "funcStartAddr": "0x406d40",
            "funcEndAddr": "0x406d53",
            "decompiledFuncCode": "\nvoid FUN_00406d40(void)\n\n{\n  FUN_00406cc0();\n  return;\n}\n\n",
            "funcName": "FUN_00406d40"
        },
        {
            "funcStartAddr": "0x406d60",
            "funcEndAddr": "0x406d75",
            "decompiledFuncCode": "\nvoid FUN_00406d60(void)\n\n{\n  FUN_004066f0();\n  return;\n}\n\n",
            "funcName": "FUN_00406d60"
        },
        {
            "funcStartAddr": "0x406d80",
            "funcEndAddr": "0x406d96",
            "decompiledFuncCode": "\nvoid FUN_00406d80(void)\n\n{\n  FUN_00406cc0();\n  return;\n}\n\n",
            "funcName": "FUN_00406d80"
        },
        {
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406db8",
            "decompiledFuncCode": "\nvoid FUN_00406da0(void)\n\n{\n  FUN_004066f0();\n  return;\n}\n\n",
            "funcName": "FUN_00406da0"
        },
        {
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406e2f",
            "decompiledFuncCode": "\nsize_t FUN_00406dc0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x409a47;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00406de4;\n  }\n  param_1 = &local_1c;\nLAB_00406de4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00403190(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00406dc0"
        },
        {
            "funcStartAddr": "0x406e40",
            "funcEndAddr": "0x406e9c",
            "decompiledFuncCode": "\nulong FUN_00406e40(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00405e30(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00406e40"
        },
        {
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x4073f4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00406ea0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060c498 != (char *)0x0) goto LAB_00406eda;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00406fc5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00406fe6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00406fc5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00406fe6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00407080:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040720c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00407080;\n              if (uVar4 == 0x23) goto LAB_00407271;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040721f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00405e30(__stream);\n                goto LAB_00407024;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040720c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040721f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040701e;\n    }\n  }\n  DAT_0060c498 = \"\";\nLAB_00406eda:\n  cVar1 = *DAT_0060c498;\n  pcVar7 = DAT_0060c498;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00406f34:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00406f34;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00407271:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040721f;\n  goto LAB_00407080;\nLAB_0040721f:\n  FUN_00405e30(__stream);\n  if (local_d0 == 0) {\nLAB_0040701e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00407024:\n  free(__file);\n  DAT_0060c498 = pcVar7;\n  goto LAB_00406eda;\n}\n\n",
            "funcName": "FUN_00406ea0"
        },
        {
            "funcStartAddr": "0x407410",
            "funcEndAddr": "0x4074b1",
            "decompiledFuncCode": "\nint FUN_00407410(char *param_1,long param_2,char *param_3,long param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  \n  piVar2 = __errno_location();\n  while( true ) {\n    *piVar2 = 0;\n    iVar1 = strcoll(param_1,param_3);\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    sVar3 = strlen(param_1);\n    sVar4 = strlen(param_3);\n    param_1 = param_1 + sVar3 + 1;\n    param_3 = param_3 + sVar4 + 1;\n    param_4 = param_4 - (sVar4 + 1);\n    param_2 = param_2 - (sVar3 + 1);\n    if (param_2 == 0) break;\n    if (param_4 == 0) {\n      return 1;\n    }\n  }\n  return -(uint)(param_4 != 0);\n}\n\n",
            "funcName": "FUN_00407410"
        },
        {
            "funcStartAddr": "0x4074d0",
            "funcEndAddr": "0x40756e",
            "decompiledFuncCode": "\nundefined4 FUN_004074d0(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined uVar3;\n  undefined uVar4;\n  int iVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  \n  if ((param_2 == param_4) && (iVar5 = memcmp(param_1,param_3,param_2), iVar5 == 0)) {\n    piVar7 = __errno_location();\n    *piVar7 = 0;\n    return 0;\n  }\n  puVar1 = (undefined *)((long)param_1 + param_2);\n  puVar2 = (undefined *)((long)param_3 + param_4);\n  uVar3 = *puVar1;\n  uVar4 = *puVar2;\n  *puVar1 = 0;\n  *puVar2 = 0;\n  uVar6 = FUN_00407410(param_1,param_2 + 1,param_3,param_4 + 1);\n  *puVar1 = uVar3;\n  *puVar2 = uVar4;\n  return uVar6;\n}\n\n",
            "funcName": "FUN_004074d0"
        },
        {
            "funcStartAddr": "0x407580",
            "funcEndAddr": "0x4075dd",
            "decompiledFuncCode": "\nundefined8 FUN_00407580(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_2 == param_4) {\n    iVar1 = memcmp(param_1,param_3,param_2);\n    if (iVar1 == 0) {\n      piVar2 = __errno_location();\n      *piVar2 = 0;\n      return 0;\n    }\n  }\n  uVar3 = FUN_00407410(param_1,param_2,param_3,param_4);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00407580"
        },
        {
            "funcStartAddr": "0x4075f0",
            "funcEndAddr": "0x40764d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00407623) */\n/* WARNING: Removing unreachable block (ram,0x00407628) */\n\nvoid FUN_004075f0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_004075f0"
        },
        {
            "funcStartAddr": "0x407650",
            "funcEndAddr": "0x407651",
            "decompiledFuncCode": "\nvoid FUN_00407650(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00407650"
        },
        {
            "funcStartAddr": "0x407660",
            "funcEndAddr": "0x407678",
            "decompiledFuncCode": "\nvoid FUN_00407660(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060c208);\n  return;\n}\n\n",
            "funcName": "FUN_00407660"
        },
        {
            "funcStartAddr": "0x407678",
            "funcEndAddr": "0x407698",
            "decompiledFuncCode": "\nundefined8 FUN_00407678(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060be30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407678"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_uniq.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}