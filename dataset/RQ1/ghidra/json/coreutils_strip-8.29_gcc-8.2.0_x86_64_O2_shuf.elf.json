{
    "funcCount": 160,
    "funcInfo": [
        {
            "funcStartAddr": "0x401d65",
            "funcEndAddr": "0x401d6a",
            "decompiledFuncCode": "\nvoid FUN_00401d65(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d65"
        },
        {
            "funcStartAddr": "0x401d6a",
            "funcEndAddr": "0x401d6f",
            "decompiledFuncCode": "\nvoid FUN_00401d6a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d6a"
        },
        {
            "funcStartAddr": "0x401d6f",
            "funcEndAddr": "0x401d74",
            "decompiledFuncCode": "\nvoid FUN_00401d6f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d6f"
        },
        {
            "funcStartAddr": "0x401d74",
            "funcEndAddr": "0x401d79",
            "decompiledFuncCode": "\nvoid FUN_00401d74(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d74"
        },
        {
            "funcStartAddr": "0x401d79",
            "funcEndAddr": "0x401d7e",
            "decompiledFuncCode": "\nvoid FUN_00401d79(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d79"
        },
        {
            "funcStartAddr": "0x401d83",
            "funcEndAddr": "0x401d88",
            "decompiledFuncCode": "\nvoid FUN_00401d83(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d83"
        },
        {
            "funcStartAddr": "0x401d88",
            "funcEndAddr": "0x401d8d",
            "decompiledFuncCode": "\nvoid FUN_00401d88(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d88"
        },
        {
            "funcStartAddr": "0x401d8d",
            "funcEndAddr": "0x401d92",
            "decompiledFuncCode": "\nvoid FUN_00401d8d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d8d"
        },
        {
            "funcStartAddr": "0x401d92",
            "funcEndAddr": "0x401d97",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401d92"
        },
        {
            "funcStartAddr": "0x401da0",
            "funcEndAddr": "0x402b54",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined8 FUN_00401da0(ulong param_1,stat *param_2)\n\n{\n  char cVar1;\n  void *pvVar2;\n  int iVar3;\n  char *pcVar4;\n  char *pcVar5;\n  long lVar6;\n  size_t sVar7;\n  stat *psVar8;\n  long lVar9;\n  __off_t _Var10;\n  __ino_t _Var11;\n  stat *psVar12;\n  int *piVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  ulong uVar16;\n  uint uVar17;\n  size_t __n;\n  ulong uVar18;\n  ulong uVar19;\n  stat *psVar20;\n  stat *psVar21;\n  stat *unaff_R15;\n  stat *psVar22;\n  stat *psVar23;\n  bool bVar24;\n  byte bVar25;\n  stat *local_100;\n  stat *local_f8;\n  stat *local_f0;\n  stat *local_e8;\n  byte local_e0;\n  stat *local_d8;\n  char local_cf;\n  byte local_ce;\n  byte local_cd;\n  stat local_c8;\n  \n  bVar25 = 0;\n  local_e0 = 0;\n  param_1 = param_1 & 0xffffffff;\n  FUN_00403430(param_2->st_dev);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00409f90(FUN_00403000);\n  local_cd = 0;\n  local_cf = '\\n';\n  local_f8 = (stat *)0x0;\n  local_100 = (stat *)0xffffffffffffffff;\n  local_f0 = (stat *)0x0;\n  local_ce = 0;\n  psVar20 = (stat *)0x0;\n  psVar21 = (stat *)0xffffffffffffffff;\n  psVar12 = local_100;\n  psVar22 = local_f8;\nLAB_00401e28:\n  do {\n    local_f8 = psVar22;\n    local_100 = psVar12;\n    psVar8 = psVar20;\n    uVar16 = 0;\n    iVar3 = FUN_004082a0(param_1,param_2,\"ei:n:o:rz\",&PTR_DAT_0040a6a0);\n    psVar23 = DAT_0060f4c8;\n    if (iVar3 == -1) goto LAB_004020a7;\n    psVar20 = psVar8;\n    psVar12 = local_100;\n    psVar22 = local_f8;\n    if (iVar3 != 0x6e) {\n      if (0x6e < iVar3) {\n        if (iVar3 == 0x72) {\n          local_cd = 1;\n        }\n        else if (iVar3 < 0x73) {\n          if (iVar3 != 0x6f) goto LAB_004029dc;\n          psVar22 = DAT_0060f4c8;\n          unaff_R15 = psVar23;\n          if ((local_f8 != (stat *)0x0) &&\n             (iVar3 = strcmp((char *)local_f8,(char *)DAT_0060f4c8), iVar3 != 0)) goto LAB_00402a3d;\n        }\n        else if (iVar3 == 0x7a) {\n          local_cf = '\\0';\n        }\n        else {\n          if (iVar3 != 0x80) goto LAB_004029dc;\n          psVar20 = psVar23;\n          unaff_R15 = psVar23;\n          if ((psVar8 != (stat *)0x0) &&\n             (iVar3 = strcmp((char *)psVar8,(char *)DAT_0060f4c8), iVar3 != 0)) {\n            uVar15 = dcgettext(0,\"multiple random sources specified\",5);\n            error(1,0,uVar15);\n            goto LAB_00402b70;\n          }\n        }\n        goto LAB_00401e28;\n      }\n      if (iVar3 == -0x82) goto LAB_004029e6;\n      if (iVar3 < -0x81) {\n        if (iVar3 == -0x83) {\n          FUN_00406650(stdout,&DAT_00409fe4,\"GNU coreutils\",PTR_DAT_0060f270,\"Paul Eggert\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\n        goto LAB_004029dc;\n      }\n      if (iVar3 != 0x65) {\n        if (iVar3 != 0x69) goto LAB_004029dc;\n        unaff_R15 = (stat *)strchr((char *)DAT_0060f4c8,0x2d);\n        local_e8 = (stat *)((ulong)local_e8 & 0xffffffffffffff00 | (ulong)(unaff_R15 == (stat *)0x0)\n                           );\n        if (local_ce != 0) goto LAB_00402a1b;\n        if (unaff_R15 == (stat *)0x0) {\n          uVar15 = dcgettext(0,\"invalid input range\",5);\n          FUN_00406af0(psVar23,0,0xffffffffffffffff,\"\",uVar15);\n        }\n        else {\n          *(undefined *)&unaff_R15->st_dev = 0;\n          uVar15 = dcgettext(0,\"invalid input range\",5);\n          psVar23 = (stat *)FUN_00406af0(DAT_0060f4c8,0,0xffffffffffffffff,\"\",uVar15);\n          *(undefined *)&unaff_R15->st_dev = 0x2d;\n          dcgettext(0,\"invalid input range\",5);\n          local_f0 = (stat *)FUN_00406af0((undefined *)((long)&unaff_R15->st_dev + 1),0,\n                                          0xffffffffffffffff,\"\");\n          if ((((long)local_f0 - (long)psVar23 == -1) == local_f0 < psVar23) &&\n             (unaff_R15 != (stat *)0x0)) {\n            local_ce = 1;\n            psVar21 = psVar23;\n            goto LAB_00401e28;\n          }\n        }\n        param_2 = (stat *)FUN_00405050(DAT_0060f4c8);\n        uVar15 = dcgettext(0,\"invalid input range\",5);\n        piVar13 = __errno_location();\n        psVar20 = param_2;\n        error(1,*piVar13,\"%s: %s\",uVar15);\n        uVar17 = (uint)psVar20;\n        psVar21 = psVar23;\n        goto LAB_004023ca;\n      }\n      local_e0 = 1;\n      goto LAB_00401e28;\n    }\n    iVar3 = FUN_00406b20(DAT_0060f4c8,0,10,&local_c8);\n    if (iVar3 == 0) {\n      psVar12 = (stat *)local_c8.st_dev;\n      if (local_100 <= local_c8.st_dev) {\n        psVar12 = local_100;\n      }\n      goto LAB_00401e28;\n    }\n  } while (iVar3 == 1);\n  param_1 = FUN_00405050(DAT_0060f4c8);\n  uVar15 = dcgettext(0,\"invalid line count: %s\",5);\n  error(1,0,uVar15,param_1);\nLAB_004020a7:\n  psVar20 = stdin;\n  uVar17 = (int)param_1 - DAT_0060f2d8._4_4_;\n  param_2 = (stat *)(param_2->__unused + (long)DAT_0060f2d8._4_4_ + -0xf);\n  uVar16 = (ulong)uVar17;\n  if (local_e0 == 0) {\n    if (local_ce == 0) goto LAB_004020cc;\n    if (0 < (int)uVar17) goto LAB_00402afa;\n    param_2 = (stat *)0x0;\n    unaff_R15 = (stat *)((long)local_f0 + (1 - (long)psVar21));\n  }\n  else {\n    if (local_ce != 0) {\n      uVar15 = dcgettext(0,\"cannot combine -e and -i options\",5);\n      error(0,0,uVar15);\nLAB_004029dc:\n      FUN_00402c60(1);\nLAB_004029e6:\n      FUN_00402c60(0);\n      goto LAB_004029ed;\n    }\nLAB_004020cc:\n    if (local_e0 == 0) {\n      lVar6 = 8;\n      if (1 < (int)uVar17) goto LAB_00402afc;\n      uVar16 = (ulong)(uVar17 - 1);\n      if (uVar17 - 1 == 0) {\n        unaff_R15 = (stat *)param_2->st_dev;\n        iVar3 = strcmp((char *)unaff_R15,\"-\");\n        if (iVar3 == 0) goto LAB_0040273e;\n        if (local_100 != (stat *)0x0) {\n          lVar6 = FUN_00403130(unaff_R15,\"r\",psVar20);\n          if (lVar6 == 0) {\nLAB_004029ed:\n            uVar15 = FUN_00404ed0(0,3,param_2->st_dev);\n            piVar13 = __errno_location();\n            error(1,*piVar13,\"%s\",uVar15);\n            psVar23 = psVar21;\nLAB_00402a1b:\n            uVar15 = dcgettext(0,\"multiple -i options specified\",5);\n            error(1,0,uVar15);\n            psVar21 = psVar23;\n            psVar23 = unaff_R15;\nLAB_00402a3d:\n            uVar15 = dcgettext(0,\"multiple output files specified\",5);\n            error(1,0,uVar15);\nLAB_00402a5f:\n            uVar15 = dcgettext(0,\"too many input lines\",5);\n            error(1,0x4b,uVar15);\nLAB_00402a84:\n            uVar15 = dcgettext(0,\"read error\",5);\n            piVar13 = __errno_location();\n            error(1,*piVar13,uVar15);\n            unaff_R15 = psVar23;\n            do {\n              uVar15 = dcgettext(0,\"no lines to repeat\",5);\n              error(1,0,uVar15);\nLAB_00402ad0:\n              uVar15 = dcgettext(0,\"read error\",5);\n              piVar13 = __errno_location();\n              error(1,*piVar13,uVar15);\nLAB_00402afa:\n              lVar6 = 0;\nLAB_00402afc:\n              uVar15 = FUN_00405050(*(undefined8 *)((long)param_2->__unused + lVar6 + -0x78));\n              uVar14 = dcgettext(0,\"extra operand %s\",5);\n              error(0,0,uVar14,uVar15);\n              FUN_00402c60(1);\nLAB_00402b35:\n              iVar3 = FUN_00407390();\n              if (iVar3 != 0) goto LAB_00402534;\nLAB_0040247b:\n              if ((local_f8 != (stat *)0x0) &&\n                 (lVar6 = FUN_00403130(local_f8,&DAT_0040a122,stdout), lVar6 == 0))\n              goto LAB_004028ee;\n              if (local_100 == (stat *)0x0) {\n                return 0;\n              }\n            } while (unaff_R15 == (stat *)0x0);\n            if (local_ce == 0) goto LAB_0040255e;\n            psVar20 = (stat *)0x0;\n            param_2 = (stat *)((long)local_f0 - (long)psVar21);\n            while( true ) {\n              lVar6 = FUN_004050e0(local_d8,param_2);\n              iVar3 = __printf_chk(1,\"%lu%c\",(long)psVar21->__unused + lVar6 + -0x78,local_cf);\n              psVar22 = local_d8;\n              psVar23 = local_100;\n              if (iVar3 < 0) break;\n              psVar20 = (stat *)((long)&psVar20->st_dev + 1);\n              if (psVar20 == local_100) {\n                return 0;\n              }\n            }\nLAB_004025b1:\n            do {\n              uVar15 = dcgettext(0,\"write error\",5);\n              piVar13 = __errno_location();\n              error(1,*piVar13,uVar15);\nLAB_004025db:\n              if (uVar16 != 0) {\n                param_2 = &local_c8;\n                FUN_004032e0(param_2);\n                do {\n                  psVar8 = (stat *)FUN_004050e0(local_d8,psVar23);\n                  psVar12 = param_2;\n                  if (psVar8 < local_100) {\n                    psVar12 = (stat *)(psVar22->__unused + (long)psVar8 * 3 + -0xf);\n                  }\n                  lVar6 = FUN_004032f0(psVar12,psVar20,(ulong)local_e8 & 0xffffffff);\n                  if (lVar6 == 0) {\n                    local_e8 = psVar22;\n                    if (psVar23 == (stat *)0x0) goto LAB_00402a5f;\n                    goto LAB_0040265c;\n                  }\n                  bVar24 = psVar23 != (stat *)0x0;\n                  psVar23 = (stat *)((long)&psVar23->st_dev + 1);\n                } while (bVar24);\n                psVar23 = (stat *)0x1;\nLAB_0040265c:\n                FUN_00403420();\n                local_e8 = psVar22;\n              }\nLAB_00402664:\n              if ((*(byte *)&psVar20->st_dev & 0x20) != 0) goto LAB_00402a84;\n              unaff_R15 = psVar23;\n              if (local_100 <= psVar23) {\n                unaff_R15 = local_100;\n              }\n              iVar3 = FUN_00407390();\n              local_100 = unaff_R15;\n              if (iVar3 == 0) {\n                param_2 = (stat *)0x0;\n                if (local_cd == 0) {\n                  local_cd = 1;\nLAB_004026ab:\n                  lVar6 = FUN_004052b0(local_d8,local_100,unaff_R15);\n                  if ((local_f8 == (stat *)0x0) ||\n                     (lVar9 = FUN_00403130(local_f8,&DAT_0040a122,stdout), lVar9 != 0)) {\n                    psVar20 = (stat *)0x0;\n                    if (local_cd != 0) {\n                      while( true ) {\n                        if (unaff_R15 == psVar20) {\n                          return 0;\n                        }\n                        param_2 = (stat *)(psVar22->__unused +\n                                          *(long *)(lVar6 + (long)psVar20 * 8) * 3 + -0xf);\n                        sVar7 = fwrite_unlocked((void *)param_2->st_nlink,1,param_2->st_ino,stdout);\n                        psVar23 = unaff_R15;\n                        if (sVar7 != param_2->st_ino) break;\n                        psVar20 = (stat *)((long)&psVar20->st_dev + 1);\n                      }\n                      goto LAB_004025b1;\n                    }\nLAB_00402305:\n                    psVar23 = unaff_R15;\n                    if (local_ce != 0) {\n                      psVar20 = (stat *)(ulong)(uint)(int)local_cf;\n                      param_2 = (stat *)0x0;\n                      while( true ) {\n                        if (param_2 == local_100) {\n                          return 0;\n                        }\n                        iVar3 = __printf_chk(1,\"%lu%c\",\n                                             (long)psVar21->__unused +\n                                             *(long *)(lVar6 + (long)param_2 * 8) + -0x78,psVar20);\n                        psVar22 = local_100;\n                        if (iVar3 < 0) break;\n                        param_2 = (stat *)((long)&param_2->st_dev + 1);\n                      }\n                      goto LAB_004025b1;\n                    }\n                  }\n                  else {\nLAB_004028ee:\n                    lVar6 = FUN_00404ed0(0,3,local_f8);\n                    piVar13 = __errno_location();\n                    error(1,*piVar13,\"%s\",lVar6);\n                    psVar23 = unaff_R15;\n                  }\n                  psVar22 = (stat *)0x0;\n                  while( true ) {\n                    if (psVar22 == local_100) {\n                      return 0;\n                    }\n                    pvVar2 = (void *)param_2->__unused[*(long *)(lVar6 + (long)psVar22 * 8) + -0xf];\n                    psVar20 = (stat *)((param_2->__unused +\n                                       *(long *)(lVar6 + (long)psVar22 * 8) + -0xf)[1] -\n                                      (long)pvVar2);\n                    psVar12 = (stat *)fwrite_unlocked(pvVar2,1,(size_t)psVar20,stdout);\n                    psVar21 = local_100;\n                    if (psVar20 != psVar12) break;\n                    psVar22 = (stat *)((long)&psVar22->st_dev + 1);\n                  }\n                  goto LAB_004025b1;\n                }\n                goto LAB_0040247b;\n              }\nLAB_00402534:\n              uVar15 = dcgettext(0,\"read error\",5);\n              piVar13 = __errno_location();\n              error(1,*piVar13,uVar15);\nLAB_0040255e:\n              psVar20 = (stat *)((long)unaff_R15[-1].__unused + 0x17);\n              psVar22 = (stat *)0x0;\n              while( true ) {\n                lVar6 = FUN_004050e0(local_d8,psVar20);\n                pvVar2 = (void *)param_2->__unused[lVar6 + -0xf];\n                __n = (param_2->__unused + lVar6 + -0xf)[1] - (long)pvVar2;\n                sVar7 = fwrite_unlocked(pvVar2,1,__n,stdout);\n                psVar21 = local_d8;\n                psVar23 = local_100;\n                if (__n != sVar7) break;\n                psVar22 = (stat *)((long)&psVar22->st_dev + 1);\n                if (local_100 == psVar22) {\n                  return 0;\n                }\n              }\n            } while( true );\n          }\n          FUN_004030b0(stdin);\n          if ((local_cd != 0) || (local_100 == (stat *)0xffffffffffffffff)) goto LAB_004027ca;\n          goto LAB_0040276e;\n        }\n        FUN_004030b0(psVar20,2);\n        if (local_cd == 0) goto LAB_0040213b;\n      }\n      else {\nLAB_0040273e:\n        FUN_004030b0(psVar20);\n        if ((local_cd == 0) && (local_100 != (stat *)0xffffffffffffffff)) {\n          if (local_100 != (stat *)0x0) {\nLAB_0040276e:\n            param_2 = &local_c8;\n            iVar3 = __fxstat(1,0,param_2);\n            if ((((iVar3 == 0) && ((local_c8.st_mode & 0xd000) == 0x8000)) &&\n                (_Var10 = lseek(0,0,1), -1 < _Var10)) && (local_c8.st_size - _Var10 < 0x800001))\n            goto LAB_004027ca;\n          }\nLAB_0040213b:\n          local_d8 = (stat *)FUN_004050a0(psVar8,0xffffffffffffffff);\n          psVar20 = stdin;\n          if (local_d8 == (stat *)0x0) goto LAB_0040225e;\n          local_e8 = (stat *)(ulong)(uint)(int)local_cf;\n          psVar12 = (stat *)0x400;\n          if (local_100 < (stat *)0x401) {\n            psVar12 = local_100;\n          }\n          psVar22 = (stat *)FUN_00406960(psVar12,0x18);\n          uVar16 = 0;\n          psVar8 = (stat *)0x0;\n          while( true ) {\n            do {\n              psVar23 = psVar8;\n              if (local_100 == psVar23) goto LAB_004025db;\n              param_2 = (stat *)((long)psVar23 * 0x18);\n              uVar16 = FUN_004032f0((long)(((stat *)(((stat *)(param_2->__unused + -0xf))->__unused\n                                                    + -0xf))->__unused + 0xfffffffffffffff1) +\n                                    (long)((stat *)(((stat *)(((stat *)(psVar22->__unused + -0xf))->\n                                                              __unused + -0xf))->__unused + -0xf))->\n                                          __unused + 0xffffffffffffff88U,psVar20,local_e8);\n              if (uVar16 == 0) goto LAB_00402664;\n              psVar8 = (stat *)((long)&psVar23->st_dev + 1);\n            } while (psVar8 < psVar12);\n            psVar12 = (stat *)&psVar12[7].st_nlink;\n            if ((SUB168(ZEXT816(0x18) * ZEXT816(psVar12),0) < 0) ||\n               (SUB168(ZEXT816(0x18) * ZEXT816(psVar12) >> 0x40,0) != 0)) break;\n            psVar22 = (stat *)FUN_004067f0(psVar22);\n            memset(&psVar22->st_mode + (long)psVar23 * 6,0,0x6000);\n          }\n          goto LAB_00402b70;\n        }\n      }\nLAB_004027ca:\n      param_2 = &local_c8;\n      local_e8 = (stat *)(ulong)(uint)(int)local_cf;\n      _Var11 = FUN_00405fa0(stdin,param_2);\n      if (_Var11 == 0) goto LAB_00402ad0;\n      if (((stat *)local_c8.st_dev != (stat *)0x0) &&\n         (local_cf != *(char *)((long)(local_c8.st_dev + 0x78) + (_Var11 - 0x79)))) {\n        *(char *)((long)(local_c8.st_dev + 0x78) + (_Var11 - 0x78)) = local_cf;\n        local_c8.st_dev = (__dev_t)((long)(__dev_t *)local_c8.st_dev + 1);\n      }\n      uVar18 = (long)(local_c8.st_dev + 0x78) + (_Var11 - 0x78);\n      unaff_R15 = (stat *)0x0;\n      uVar19 = _Var11;\n      while (psVar20 = (stat *)((long)&unaff_R15->st_dev + 1), uVar19 < uVar18) {\n        lVar6 = FUN_004083a0(uVar19,local_e8,uVar18 - uVar19);\n        unaff_R15 = psVar20;\n        uVar19 = lVar6 + 1;\n      }\n      if ((SUB168(ZEXT816(8) * ZEXT816(psVar20),0) < 0) ||\n         (SUB168(ZEXT816(8) * ZEXT816(psVar20) >> 0x40,0) != 0)) {\nLAB_00402b70:\n                    /* WARNING: Subroutine does not return */\n        FUN_004069e0();\n      }\n      param_2 = (stat *)FUN_00406790((long)psVar20 * 8);\n      param_2->st_dev = _Var11;\n      psVar20 = param_2;\n      while (psVar20 != (stat *)(param_2->__unused + (long)((long)unaff_R15[-1].__unused + 9))) {\n        psVar20 = (stat *)&psVar20->st_ino;\n        lVar6 = FUN_004083a0(_Var11,local_e8,uVar18 - _Var11);\n        _Var11 = lVar6 + 1;\n        *(__ino_t *)psVar20 = _Var11;\n      }\n      local_e0 = 0;\n      local_e8 = param_2;\n    }\n    else {\nLAB_004023ca:\n      unaff_R15 = (stat *)(long)(int)uVar17;\n      lVar6 = 0;\n      psVar20 = unaff_R15;\n      while ((int)lVar6 < (int)uVar17) {\n        lVar9 = lVar6 + -0xf;\n        uVar16 = 0xffffffffffffffff;\n        lVar6 = lVar6 + 1;\n        pcVar4 = (char *)param_2->__unused[lVar9];\n        do {\n          if (uVar16 == 0) break;\n          uVar16 = uVar16 - 1;\n          cVar1 = *pcVar4;\n          pcVar4 = pcVar4 + (ulong)bVar25 * -2 + 1;\n        } while (cVar1 != '\\0');\n        psVar20 = (stat *)((long)psVar20->__unused + (~uVar16 - 0x79));\n      }\n      pcVar4 = (char *)FUN_00406790(psVar20);\n      uVar16 = (ulong)uVar17;\n      local_e8 = (stat *)((ulong)local_e8 & 0xffffffffffffff00 | (ulong)local_e0);\n      for (lVar6 = 0; (int)lVar6 < (int)uVar17; lVar6 = lVar6 + 1) {\n        pcVar5 = stpcpy(pcVar4,(char *)param_2->__unused[lVar6 + -0xf]);\n        param_2->__unused[lVar6 + -0xf] = (long)pcVar4;\n        *pcVar5 = local_cf;\n        pcVar4 = pcVar5 + 1;\n      }\n      param_2->__unused[(long)((long)unaff_R15[-1].__unused + 9)] = (long)pcVar4;\n    }\n  }\n  if (local_cd == 0) goto LAB_0040228b;\n  local_d8 = (stat *)FUN_004050a0(psVar8,0xffffffffffffffff);\n  if (local_d8 != (stat *)0x0) {\n    if (local_e0 != 0) goto LAB_0040247b;\n    if (local_ce == 0) goto LAB_00402b35;\n    goto LAB_0040247b;\n  }\nLAB_0040225e:\n  do {\n    uVar15 = FUN_00404ed0(0,3,psVar8);\n    piVar13 = __errno_location();\n    error(1,*piVar13,\"%s\",uVar15);\nLAB_0040228b:\n    if (unaff_R15 < local_100) {\n      local_100 = unaff_R15;\n    }\n    uVar15 = FUN_00405280(local_100,unaff_R15);\n    local_d8 = (stat *)FUN_004050a0(psVar8,uVar15);\n  } while (local_d8 == (stat *)0x0);\n  local_e0 = local_e0 | local_ce;\n  if (local_e0 == 0) {\n    psVar22 = (stat *)0x0;\n    iVar3 = FUN_00407390(stdin);\n    local_cd = local_e0;\n    if (iVar3 == 0) goto LAB_004026ab;\n    goto LAB_00402534;\n  }\n  lVar6 = FUN_004052b0(local_d8,local_100,unaff_R15);\n  if (local_f8 == (stat *)0x0) goto LAB_00402305;\n  lVar9 = FUN_00403130(local_f8,&DAT_0040a122,stdout);\n  if (lVar9 == 0) goto LAB_004028ee;\n  goto LAB_00402305;\n}\n\n",
            "funcName": "FUN_00401da0"
        },
        {
            "funcStartAddr": "0x402b80",
            "funcEndAddr": "0x402bab",
            "decompiledFuncCode": "\nvoid FUN_00402b80(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060eff0)\n            (FUN_00401da0,unaff_retaddr,&stack0x00000008,FUN_00409f20,FUN_00409f80,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402b80"
        },
        {
            "funcStartAddr": "0x402bab",
            "funcEndAddr": "0x402bca",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402bb8) */\n/* WARNING: Removing unreachable block (ram,0x00402bc2) */\n\nvoid FUN_00402bab(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402bab"
        },
        {
            "funcStartAddr": "0x402bca",
            "funcEndAddr": "0x402c01",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402bf9) */\n\nvoid FUN_00402bca(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402bca"
        },
        {
            "funcStartAddr": "0x402c01",
            "funcEndAddr": "0x402c58",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402c36) */\n\nvoid FUN_00402c01(void)\n\n{\n  if (DAT_0060f308 != '\\0') {\n    return;\n  }\n  FUN_00402bab();\n  DAT_0060f308 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402c01"
        },
        {
            "funcStartAddr": "0x402c58",
            "funcEndAddr": "0x402c5d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402bf9) */\n\nvoid thunk_FUN_00402bca(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402c58"
        },
        {
            "funcStartAddr": "0x402c60",
            "funcEndAddr": "0x402fdd",
            "decompiledFuncCode": "\nvoid FUN_00402c60(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0060f328;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_00402c9f;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [FILE]\\n  or:  %s -e [OPTION]... [ARG]...\\n  or:  %s -i LO-HI [OPTION]...\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"Write a random permutation of the input lines to standard output.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -e, --echo                treat each ARG as an input line\\n  -i, --input-range=LO-HI   treat each number LO through HI as an input line\\n  -n, --head-count=COUNT    output at most COUNT lines\\n  -o, --output=FILE         write result to FILE instead of standard output\\n      --random-source=FILE  get random bytes from FILE\\n  -r, --repeat              output lines can be repeated\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -z, --zero-terminated     line delimiter is NUL, not newline\\n\",5)\n  ;\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00409fe9;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40a063;\n  local_78[1] = (byte *)0x409ffb;\n  local_78[2] = (byte *)0x40a011;\n  local_78[3] = (byte *)0x40a01b;\n  local_78[4] = (byte *)0x40a02a;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 5;\n    pbVar10 = &DAT_00409fe4;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_00409fe4;\n        goto LAB_00402fb3;\n      }\n    }\n    pbVar9 = &DAT_00409fe4;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00409fe4);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402fb3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_00409fe4);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00409fe4);\n    if (pbVar9 != &DAT_00409fe4) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_00402c9f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402c60"
        },
        {
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x402fe8",
            "decompiledFuncCode": "\nvoid FUN_00402fe0(undefined8 param_1)\n\n{\n  DAT_0060f320 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402fe0"
        },
        {
            "funcStartAddr": "0x402ff0",
            "funcEndAddr": "0x402ff8",
            "decompiledFuncCode": "\nvoid FUN_00402ff0(undefined param_1)\n\n{\n  DAT_0060f318 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402ff0"
        },
        {
            "funcStartAddr": "0x403000",
            "funcEndAddr": "0x40309e",
            "decompiledFuncCode": "\nvoid FUN_00403000(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004084b0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060f318 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060f320 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00404ea0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_0040307e;\n    }\n  }\n  iVar1 = FUN_004084b0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_0040307e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060f278);\n}\n\n",
            "funcName": "FUN_00403000"
        },
        {
            "funcStartAddr": "0x4030a0",
            "funcEndAddr": "0x4030a5",
            "decompiledFuncCode": "\nvoid FUN_004030a0(void)\n\n{\n  (*(code *)PTR_posix_fadvise_0060f140)();\n  return;\n}\n\n",
            "funcName": "FUN_004030a0"
        },
        {
            "funcStartAddr": "0x4030b0",
            "funcEndAddr": "0x4030cc",
            "decompiledFuncCode": "\nvoid FUN_004030b0(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004030b0"
        },
        {
            "funcStartAddr": "0x4030e0",
            "funcEndAddr": "0x403129",
            "decompiledFuncCode": "\nundefined8 FUN_004030e0(int param_1)\n\n{\n  int __fd;\n  int *piVar1;\n  undefined8 uVar2;\n  \n  uVar2 = 1;\n  __fd = open(\"/dev/null\",0);\n  if ((param_1 != __fd) && (uVar2 = 0, -1 < __fd)) {\n    close(__fd);\n    piVar1 = __errno_location();\n    *piVar1 = 9;\n    return 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_004030e0"
        },
        {
            "funcStartAddr": "0x403130",
            "funcEndAddr": "0x4032b9",
            "decompiledFuncCode": "\nlong FUN_00403130(undefined8 param_1,undefined8 param_2,FILE *param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int *piVar4;\n  long lVar5;\n  char cVar6;\n  char cVar7;\n  \n  iVar3 = fileno(param_3);\n  piVar4 = __errno_location();\n  if (iVar3 == 1) {\n    cVar6 = false;\n    cVar7 = false;\nLAB_004031a0:\n    iVar3 = dup2(0,0);\n    if (iVar3 != 0) {\n      cVar2 = FUN_004030e0();\n      if (cVar2 != '\\0') {\n        cVar1 = cVar2;\n        if ((bool)cVar7 != false) goto LAB_00403228;\n        goto LAB_004031c4;\n      }\n      cVar2 = '\\x01';\n      lVar5 = 0;\n      goto LAB_004031ef;\n    }\n    cVar2 = '\\0';\n    cVar1 = '\\0';\n    if ((bool)cVar7 == false) {\nLAB_004031c4:\n      if (((bool)cVar6 == false) || (cVar6 = FUN_004030e0(2), cVar6 != '\\0')) goto LAB_004031dc;\n      iVar3 = *piVar4;\n      lVar5 = 0;\n      goto LAB_00403296;\n    }\nLAB_00403228:\n    cVar2 = cVar1;\n    cVar7 = FUN_004030e0(1);\n    if (cVar7 != '\\0') goto LAB_004031c4;\n    iVar3 = *piVar4;\n    lVar5 = 0;\n    if ((bool)cVar6 != false) {\n      close(2);\n    }\n  }\n  else {\n    if (iVar3 == 2) {\n      cVar6 = false;\nLAB_0040318a:\n      iVar3 = dup2(1,1);\n      cVar7 = iVar3 != 1;\n      goto LAB_004031a0;\n    }\n    if (iVar3 != 0) {\n      iVar3 = dup2(2,2);\n      cVar6 = iVar3 != 2;\n      goto LAB_0040318a;\n    }\n    cVar6 = '\\0';\n    cVar7 = '\\0';\n    cVar2 = '\\0';\nLAB_004031dc:\n    lVar5 = FUN_00407450(param_1,param_2,param_3);\nLAB_004031ef:\n    iVar3 = *piVar4;\n    if (cVar6 != '\\0') {\nLAB_00403296:\n      close(2);\n    }\n    if (cVar7 == '\\0') goto joined_r0x0040325d;\n  }\n  close(1);\njoined_r0x0040325d:\n  if (cVar2 != '\\0') {\n    close(0);\n  }\n  if (lVar5 == 0) {\n    *piVar4 = iVar3;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00403130"
        },
        {
            "funcStartAddr": "0x4032e0",
            "funcEndAddr": "0x4032f0",
            "decompiledFuncCode": "\nvoid FUN_004032e0(undefined (*param_1) [16])\n\n{\n  *(undefined8 *)param_1[1] = 0;\n  *param_1 = (undefined  [16])0x0;\n  return;\n}\n\n",
            "funcName": "FUN_004032e0"
        },
        {
            "funcStartAddr": "0x4032f0",
            "funcEndAddr": "0x4033f6",
            "decompiledFuncCode": "\nlong * FUN_004032f0(long *param_1,_IO_FILE *param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  uint uVar3;\n  char *pcVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char cVar7;\n  uint uVar8;\n  char *pcVar9;\n  \n  cVar7 = (char)param_3;\n  pcVar5 = (char *)param_1[2];\n  pcVar9 = pcVar5 + *param_1;\n  pcVar6 = pcVar5;\n  if ((*(byte *)&param_2->_flags & 0x10) != 0) {\n    return (long *)0x0;\n  }\n  do {\n    pbVar1 = (byte *)param_2->_IO_read_ptr;\n    if (pbVar1 < param_2->_IO_read_end) {\n      param_2->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar3 = (uint)*pbVar1;\nLAB_0040333b:\n      pcVar4 = pcVar6;\n      uVar8 = uVar3;\n      if (pcVar6 == pcVar9) goto LAB_00403397;\n    }\n    else {\n      uVar3 = __uflow(param_2);\n      if (uVar3 != 0xffffffff) goto LAB_0040333b;\n      if (pcVar5 == pcVar6) {\n        return (long *)0x0;\n      }\n      if ((*(byte *)&param_2->_flags & 0x20) != 0) {\n        return (long *)0x0;\n      }\n      if (pcVar6[-1] == cVar7) goto LAB_004033ec;\n      if (pcVar6 != pcVar9) {\n        *pcVar6 = cVar7;\n        pcVar6 = pcVar6 + 1;\n        goto LAB_004033ec;\n      }\n      uVar3 = (int)cVar7;\n      uVar8 = param_3 & 0xff;\nLAB_00403397:\n      lVar2 = *param_1;\n      pcVar5 = (char *)FUN_004068f0(pcVar5,param_1);\n      param_1[2] = (long)pcVar5;\n      pcVar9 = pcVar5 + *param_1;\n      pcVar4 = pcVar5 + lVar2;\n      uVar8 = uVar8 & 0xff;\n    }\n    pcVar6 = pcVar4 + 1;\n    *pcVar4 = (char)uVar8;\n    if (uVar3 == (int)cVar7) {\nLAB_004033ec:\n      param_1[1] = (long)pcVar6 - (long)pcVar5;\n      return param_1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004032f0"
        },
        {
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x40341a",
            "decompiledFuncCode": "\nvoid FUN_00403410(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004032f0(param_1,param_2,10);\n  return;\n}\n\n",
            "funcName": "FUN_00403410"
        },
        {
            "funcStartAddr": "0x403420",
            "funcEndAddr": "0x403429",
            "decompiledFuncCode": "\nvoid FUN_00403420(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  return;\n}\n\n",
            "funcName": "FUN_00403420"
        },
        {
            "funcStartAddr": "0x403430",
            "funcEndAddr": "0x4034c9",
            "decompiledFuncCode": "\nvoid FUN_00403430(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040a830;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060f328 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403430"
        },
        {
            "funcStartAddr": "0x4034d0",
            "funcEndAddr": "0x4035af",
            "decompiledFuncCode": "\nchar * FUN_004034d0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00409860();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004035a8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040a841;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040a836;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004035a8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040a83d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040a83a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_004034d0"
        },
        {
            "funcStartAddr": "0x4035d0",
            "funcEndAddr": "0x404703",
            "decompiledFuncCode": "\nulong FUN_004035d0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404221:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00403e56;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404221;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_004034d0(&DAT_0040a845,param_5);\n      param_9 = (char *)FUN_004034d0(&DAT_0040c0ef);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403668:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403678:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00403df8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00403d70:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403d82_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00403bee_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403a85;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403d82_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403d82_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403d82_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403a85;\n      case 0xc:\nswitchD_00403d82_caseD_c:\n        bVar17 = 0x66;\nLAB_00403a85:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004039d8;\n        }\nLAB_00403a90:\n        bVar23 = false;\n        goto LAB_0040384b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403768_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004039a0;\n      case 0x20:\n        bVar25 = false;\nLAB_00403dca:\n        uVar19 = 0x20;\n        goto LAB_00403d92;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403768_caseD_21:\n        bVar25 = false;\n        goto LAB_004039ab;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00403daa:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004037b8;\n        }\n        bVar23 = false;\n        goto LAB_004037cf;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00403d92:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004037d1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00403bee_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00403bee_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403768_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00403bee_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004039c7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00403d70;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403768_caseD_0;\n      default:\n        goto switchD_00403bee_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403a90;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403d82_caseD_9;\n      case 10:\n        goto switchD_00403d82_caseD_a;\n      case 0xb:\n        goto switchD_00403d82_caseD_b;\n      case 0xc:\n        goto switchD_00403d82_caseD_c;\n      case 0xd:\n        goto switchD_00403768_caseD_d;\n      case 0x20:\n        goto LAB_00403dca;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403768_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00403daa;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00403d92;\n      case 0x27:\n        goto switchD_00403bee_caseD_27;\n      case 0x3f:\n        goto switchD_00403bee_caseD_3f;\n      case 0x5c:\n        goto switchD_00403768_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00403bee_caseD_7b;\n      }\n      goto LAB_00403812;\n    }\n    goto LAB_004039ea;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403d82_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403768_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004038c8;\n          }\nLAB_00403b0a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00403b0a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004038c8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00403b49:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004038c8;\n        goto LAB_004037d1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004039dc;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004037b8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403678;\n  default:\nswitchD_00403bee_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00408320(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_004044fa;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404637;\n          goto LAB_00404627;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004039dc;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_004044fa;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00403bc4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00403c02;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00403c02;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00403c02:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00403c1a:\n      param_5 = 2;\n      goto LAB_004039dc;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004037a6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004037a6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00403c1a;\n    goto LAB_004037b8;\n  case 0x23:\n  case 0x7e:\nLAB_0040379d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004037a6;\n    goto LAB_004039ab;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00403bee_caseD_25;\n  case 0x27:\nswitchD_00403bee_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004037b8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004038c8;\n    }\n    goto LAB_004039dc;\n  case 0x3f:\nswitchD_00403bee_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004038c8;\n      }\n      goto LAB_004039dc;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004037b8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00403b49;\n      }\n      goto LAB_004039ea;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004037b8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403768_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004038e4;\n    }\n    if (local_5c) goto LAB_004039dc;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004038e4;\n  case 0x7b:\n  case 0x7d:\nswitchD_00403bee_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040379d;\n    goto LAB_004039ab;\n  }\nLAB_004039a0:\n  if (!bVar6) {\nLAB_004039ab:\n    bVar23 = false;\n    goto LAB_004037b8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004039c7;\nLAB_00403df8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004039dc:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004039ea:\n    uVar9 = FUN_004035d0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004046cd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_004035d0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004046cd;\nLAB_00403e56:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403668;\n  while (__s1[uVar21] != 0) {\nLAB_00404627:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404637:\n  bVar23 = false;\nLAB_004044fa:\n  if (1 < uVar21) {\nLAB_004040be:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004039dc;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040385d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004038e4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00403bc4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_004040be;\n  }\nswitchD_00403bee_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004037b8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004037cf:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004037d1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004038c8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004038c8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004038e4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040385d;\n    }\n  }\njoined_r0x004039c7:\n  if (local_5c) {\nLAB_004039d8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004039dc;\n  }\nLAB_00403812:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040384b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040385d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403678;\n}\n\n",
            "funcName": "FUN_004035d0"
        },
        {
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40499b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00404800(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060f2b8;\n  if (DAT_0060f2d0 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004069e0();\n    }\n    if (PTR_DAT_0060f2b8 == &DAT_0060f2c0) {\n      puVar8 = (undefined4 *)FUN_004067f0(0);\n      uVar6 = PTR_DAT_0060f2c8._4_4_;\n      uVar5 = PTR_DAT_0060f2c8._0_4_;\n      uVar3 = _UNK_0060f2c4;\n      PTR_DAT_0060f2b8 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060f2c0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_004067f0(PTR_DAT_0060f2b8);\n      PTR_DAT_0060f2b8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060f2d0 * 4,0,(long)((param_1 + 1) - DAT_0060f2d0) << 4);\n    DAT_0060f2d0 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_004035d0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060f340) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00406790(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_004035d0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00404800"
        },
        {
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x4049d4",
            "decompiledFuncCode": "\nvoid FUN_004049a0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f440;\n  }\n  FUN_00406990(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004049a0"
        },
        {
            "funcStartAddr": "0x4049e0",
            "funcEndAddr": "0x4049ef",
            "decompiledFuncCode": "\nundefined4 FUN_004049e0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f440;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004049e0"
        },
        {
            "funcStartAddr": "0x4049f0",
            "funcEndAddr": "0x4049ff",
            "decompiledFuncCode": "\nvoid FUN_004049f0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f440;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004049f0"
        },
        {
            "funcStartAddr": "0x404a00",
            "funcEndAddr": "0x404a33",
            "decompiledFuncCode": "\nuint FUN_00404a00(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f440;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00404a00"
        },
        {
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404a53",
            "decompiledFuncCode": "\nundefined4 FUN_00404a40(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060f440;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404a40"
        },
        {
            "funcStartAddr": "0x404a60",
            "funcEndAddr": "0x404a8b",
            "decompiledFuncCode": "\nvoid FUN_00404a60(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060f440;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404a60"
        },
        {
            "funcStartAddr": "0x404a90",
            "funcEndAddr": "0x404b02",
            "decompiledFuncCode": "\nvoid FUN_00404a90(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060f440;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_004035d0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404a90"
        },
        {
            "funcStartAddr": "0x404b10",
            "funcEndAddr": "0x404bf1",
            "decompiledFuncCode": "\nundefined8 FUN_00404b10(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060f440;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_004035d0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00406790(lVar3 + 1);\n  FUN_004035d0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00404b10"
        },
        {
            "funcStartAddr": "0x404c00",
            "funcEndAddr": "0x404c0a",
            "decompiledFuncCode": "\nvoid FUN_00404c00(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404b10(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404c00"
        },
        {
            "funcStartAddr": "0x404c10",
            "funcEndAddr": "0x404ca5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404c10(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060f2b8;\n  if (1 < DAT_0060f2d0) {\n    ppvVar2 = (void **)(PTR_DAT_0060f2b8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060f2b8 + (ulong)(DAT_0060f2d0 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060f340) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060f2c0 = 0x100;\n    PTR_DAT_0060f2c8 = &DAT_0060f340;\n  }\n  if (__ptr_00 != &DAT_0060f2c0) {\n    free(__ptr_00);\n    PTR_DAT_0060f2b8 = &DAT_0060f2c0;\n  }\n  DAT_0060f2d0 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00404c10"
        },
        {
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cc1",
            "decompiledFuncCode": "\nvoid FUN_00404cb0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404800(param_1,param_2,0xffffffffffffffff,&DAT_0060f440);\n  return;\n}\n\n",
            "funcName": "FUN_00404cb0"
        },
        {
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404cda",
            "decompiledFuncCode": "\nvoid FUN_00404cd0(void)\n\n{\n  FUN_00404800();\n  return;\n}\n\n",
            "funcName": "FUN_00404cd0"
        },
        {
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x404cf6",
            "decompiledFuncCode": "\nvoid FUN_00404ce0(undefined8 param_1)\n\n{\n  FUN_00404800(0,param_1,0xffffffffffffffff,&DAT_0060f440);\n  return;\n}\n\n",
            "funcName": "FUN_00404ce0"
        },
        {
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d12",
            "decompiledFuncCode": "\nvoid FUN_00404d00(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404800(0,param_1,param_2,&DAT_0060f440);\n  return;\n}\n\n",
            "funcName": "FUN_00404d00"
        },
        {
            "funcStartAddr": "0x404d20",
            "funcEndAddr": "0x404d88",
            "decompiledFuncCode": "\nvoid FUN_00404d20(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404800(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404d20"
        },
        {
            "funcStartAddr": "0x404d90",
            "funcEndAddr": "0x404df4",
            "decompiledFuncCode": "\nvoid FUN_00404d90(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404800(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404d90"
        },
        {
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e0c",
            "decompiledFuncCode": "\nvoid FUN_00404e00(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00404d20(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404e00"
        },
        {
            "funcStartAddr": "0x404e10",
            "funcEndAddr": "0x404e1f",
            "decompiledFuncCode": "\nvoid FUN_00404e10(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404d90(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404e10"
        },
        {
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e90",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404e20(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060f470;\n  local_48 = _DAT_0060f440;\n  uStack_40 = uRam000000000060f448;\n  local_38 = _DAT_0060f450;\n  uStack_30 = uRam000000000060f458;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060f460;\n  uStack_20 = uRam000000000060f468;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00404800(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00404e20"
        },
        {
            "funcStartAddr": "0x404e90",
            "funcEndAddr": "0x404e9d",
            "decompiledFuncCode": "\nvoid FUN_00404e90(undefined8 param_1,char param_2)\n\n{\n  FUN_00404e20(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404e90"
        },
        {
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404eb1",
            "decompiledFuncCode": "\nvoid FUN_00404ea0(undefined8 param_1)\n\n{\n  FUN_00404e20(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404ea0"
        },
        {
            "funcStartAddr": "0x404ec0",
            "funcEndAddr": "0x404eca",
            "decompiledFuncCode": "\nvoid FUN_00404ec0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404e20(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404ec0"
        },
        {
            "funcStartAddr": "0x404ed0",
            "funcEndAddr": "0x404f3e",
            "decompiledFuncCode": "\nvoid FUN_00404ed0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404800(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404ed0"
        },
        {
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x404fac",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404f40(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060f448;\n  local_38 = _DAT_0060f450;\n  uStack_30 = uRam000000000060f458;\n  local_28 = _DAT_0060f460;\n  lStack_20 = uRam000000000060f468;\n  local_18 = DAT_0060f470;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060f440 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00404800(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404f40"
        },
        {
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x404fb9",
            "decompiledFuncCode": "\nvoid FUN_00404fb0(void)\n\n{\n  FUN_00404f40();\n  return;\n}\n\n",
            "funcName": "FUN_00404fb0"
        },
        {
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x404fd7",
            "decompiledFuncCode": "\nvoid FUN_00404fc0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404f40(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00404fc0"
        },
        {
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x404ff3",
            "decompiledFuncCode": "\nvoid FUN_00404fe0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00404f40(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00404fe0"
        },
        {
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x40500a",
            "decompiledFuncCode": "\nvoid FUN_00405000(void)\n\n{\n  FUN_00404800();\n  return;\n}\n\n",
            "funcName": "FUN_00405000"
        },
        {
            "funcStartAddr": "0x405010",
            "funcEndAddr": "0x405022",
            "decompiledFuncCode": "\nvoid FUN_00405010(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404800(0,param_1,param_2,&DAT_0060f280);\n  return;\n}\n\n",
            "funcName": "FUN_00405010"
        },
        {
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405041",
            "decompiledFuncCode": "\nvoid FUN_00405030(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404800(param_1,param_2,0xffffffffffffffff,&DAT_0060f280);\n  return;\n}\n\n",
            "funcName": "FUN_00405030"
        },
        {
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x405066",
            "decompiledFuncCode": "\nvoid FUN_00405050(undefined8 param_1)\n\n{\n  FUN_00404800(0,param_1,0xffffffffffffffff,&DAT_0060f280);\n  return;\n}\n\n",
            "funcName": "FUN_00405050"
        },
        {
            "funcStartAddr": "0x405070",
            "funcEndAddr": "0x405093",
            "decompiledFuncCode": "\nvoid FUN_00405070(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00406790(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00405070"
        },
        {
            "funcStartAddr": "0x4050a0",
            "funcEndAddr": "0x4050cf",
            "decompiledFuncCode": "\nlong * FUN_004050a0(void)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  lVar1 = FUN_004055f0();\n  plVar2 = (long *)0x0;\n  if (lVar1 != 0) {\n    plVar2 = (long *)FUN_00406790(0x18);\n    *plVar2 = lVar1;\n    plVar2[2] = 0;\n    plVar2[1] = 0;\n  }\n  return plVar2;\n}\n\n",
            "funcName": "FUN_004050a0"
        },
        {
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050d4",
            "decompiledFuncCode": "\nundefined8 FUN_004050d0(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004050d0"
        },
        {
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x4051cb",
            "decompiledFuncCode": "\nulong FUN_004050e0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  long lVar7;\n  ulong uVar8;\n  ulong uVar9;\n  byte local_40 [16];\n  \n  uVar1 = param_2 + 1;\n  uVar3 = *param_1;\n  uVar9 = param_1[1];\n  uVar8 = param_1[2];\n  while( true ) {\n    uVar4 = uVar9;\n    if (uVar8 < param_2) {\n      lVar7 = 0;\n      uVar4 = uVar8;\n      do {\n        lVar7 = lVar7 + 1;\n        uVar4 = uVar4 * 0x100 + 0xff;\n      } while (uVar4 < param_2);\n      FUN_00405900(uVar3,local_40,lVar7);\n      pbVar5 = local_40;\n      do {\n        bVar2 = *pbVar5;\n        pbVar5 = pbVar5 + 1;\n        uVar8 = uVar8 * 0x100 + 0xff;\n        uVar9 = uVar9 * 0x100 + (ulong)bVar2;\n        uVar4 = uVar9;\n      } while (uVar8 < param_2);\n    }\n    if (uVar8 == param_2) break;\n    uVar6 = (uVar8 - param_2) % uVar1;\n    uVar9 = uVar4 % uVar1;\n    if (uVar4 <= uVar8 - uVar6) {\n      param_1[1] = uVar4 / uVar1;\n      param_1[2] = (uVar8 - param_2) / uVar1;\n      return uVar9;\n    }\n    uVar8 = uVar6 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004050e0"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x4051fe",
            "decompiledFuncCode": "\nvoid FUN_004051e0(void *param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x405200",
            "funcEndAddr": "0x405251",
            "decompiledFuncCode": "\nundefined4 FUN_00405200(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = FUN_00405a60(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405200"
        },
        {
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x40526c",
            "decompiledFuncCode": "\nulong FUN_00405260(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00405260"
        },
        {
            "funcStartAddr": "0x405270",
            "funcEndAddr": "0x40527a",
            "decompiledFuncCode": "\nulong FUN_00405270(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00405270"
        },
        {
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x4052a6",
            "decompiledFuncCode": "\nulong FUN_00405280(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  long lVar2;\n  \n  uVar1 = param_2 - 1;\n  if (uVar1 != 0) {\n    lVar2 = 0;\n    do {\n      lVar2 = lVar2 + 1;\n      uVar1 = uVar1 >> 1;\n    } while (uVar1 != 0);\n    uVar1 = param_1 * lVar2 + 7U >> 3;\n  }\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405280"
        },
        {
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x40556a",
            "decompiledFuncCode": "\nundefined8 * FUN_004052b0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  undefined8 *puVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  long lVar6;\n  ulong *puVar7;\n  ulong *puVar8;\n  ulong uVar9;\n  long local_70;\n  ulong local_58;\n  undefined8 local_50;\n  ulong local_48;\n  undefined8 local_40;\n  \n  if (param_2 == 0) {\n    return (undefined8 *)0x0;\n  }\n  if (param_2 == 1) {\n    puVar3 = (undefined8 *)FUN_00406790(8);\n    uVar4 = FUN_004050e0(param_1,param_3 - 1);\n    *puVar3 = uVar4;\n    return puVar3;\n  }\n  if (param_3 < 0x20000) {\n    puVar3 = (undefined8 *)FUN_00406790(param_3 * 8);\n    if (param_3 != 0) goto LAB_00405352;\nLAB_00405365:\n    bVar2 = false;\n    local_70 = 0;\n  }\n  else {\n    if (param_3 / param_2 < 0x20) {\n      if (((long)(param_3 << 3) < 0) || (param_3 >> 0x3d != 0)) goto LAB_0040557f;\n      puVar3 = (undefined8 *)FUN_00406790(param_3 << 3,param_2,param_3 % param_2);\nLAB_00405352:\n      uVar5 = 0;\n      do {\n        puVar3[uVar5] = uVar5;\n        uVar5 = uVar5 + 1;\n      } while (uVar5 < param_3);\n      goto LAB_00405365;\n    }\n    local_70 = FUN_00408ea0(param_2 * 2,0,FUN_00405260,FUN_00405270,free);\n    if (((local_70 == 0) || ((long)(param_2 << 3) < 0)) || (param_2 >> 0x3d != 0))\n    goto LAB_0040557f;\n    puVar3 = (undefined8 *)FUN_00406790();\n    bVar2 = true;\n  }\n  uVar5 = 0;\n  do {\n    while( true ) {\n      lVar6 = FUN_004050e0(param_1,(param_3 - 1) - uVar5);\n      uVar9 = lVar6 + uVar5;\n      if (!bVar2) break;\n      local_40 = 0;\n      local_48 = uVar5;\n      puVar7 = (ulong *)FUN_00409680(local_70,&local_48);\n      local_50 = 0;\n      local_58 = uVar9;\n      puVar8 = (ulong *)FUN_00409680(local_70,&local_58);\n      if (puVar7 == (ulong *)0x0) {\n        puVar7 = (ulong *)FUN_00406790(0x10);\n        puVar7[1] = uVar5;\n        *puVar7 = uVar5;\n      }\n      if (puVar8 == (ulong *)0x0) {\n        puVar8 = (ulong *)FUN_00406790(0x10);\n        puVar8[1] = uVar9;\n        *puVar8 = uVar9;\n      }\n      else {\n        uVar9 = puVar8[1];\n      }\n      uVar1 = puVar7[1];\n      puVar7[1] = uVar9;\n      puVar8[1] = uVar1;\n      lVar6 = FUN_00409640(local_70,puVar7);\n      if ((lVar6 == 0) || (lVar6 = FUN_00409640(local_70,puVar8), lVar6 == 0)) goto LAB_0040557f;\n      puVar3[uVar5] = puVar7[1];\n      uVar5 = uVar5 + 1;\n      if (param_2 <= uVar5) goto LAB_00405471;\n    }\n    uVar4 = puVar3[uVar5];\n    puVar3[uVar5] = puVar3[uVar9];\n    uVar5 = uVar5 + 1;\n    puVar3[uVar9] = uVar4;\n  } while (uVar5 < param_2);\nLAB_00405471:\n  if (bVar2) {\n    FUN_004090e0(local_70);\n  }\n  else {\n    if (((long)(param_2 << 3) < 0) || (param_2 >> 0x3d != 0)) {\nLAB_0040557f:\n                    /* WARNING: Subroutine does not return */\n      FUN_004069e0();\n    }\n    puVar3 = (undefined8 *)FUN_004067f0(puVar3);\n  }\n  return puVar3;\n}\n\n",
            "funcName": "FUN_004052b0"
        },
        {
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055ed",
            "decompiledFuncCode": "\nvoid FUN_00405590(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_00405050();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n    error(DAT_0060f278,*piVar2,uVar3,uVar1);\n    FUN_00401d79();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405590"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x4058cc",
            "decompiledFuncCode": "\nFILE ** FUN_004055f0(FILE *param_1,ulong param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  FILE *pFVar2;\n  FILE **ppFVar3;\n  FILE **ppFVar4;\n  size_t __n;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  timeval *ptVar8;\n  undefined *puVar9;\n  ulong uVar10;\n  byte bVar11;\n  __uid_t local_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  \n  bVar11 = 0;\n  if (param_2 == 0) {\n    ppFVar3 = (FILE **)FUN_00406790(0x1038);\n    *ppFVar3 = (FILE *)0x0;\n    ppFVar3[1] = (FILE *)FUN_00405590;\n    ppFVar3[2] = (FILE *)0x0;\n    return ppFVar3;\n  }\n  if (param_1 != (FILE *)0x0) {\n    pFVar2 = (FILE *)FUN_00408510(param_1,&DAT_0040b5a4);\n    if (pFVar2 != (FILE *)0x0) {\n      ppFVar3 = (FILE **)FUN_00406790(0x1038);\n      *ppFVar3 = pFVar2;\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      ppFVar3[1] = (FILE *)FUN_00405590;\n      ppFVar3[2] = param_1;\n      setvbuf(pFVar2,(char *)(ppFVar3 + 3),0,__n);\n      return ppFVar3;\n    }\n    return (FILE **)0x0;\n  }\n  ppFVar4 = (FILE **)FUN_00406790(0x1038);\n  *ppFVar4 = (FILE *)0x0;\n  ppFVar3 = ppFVar4 + 4;\n  ppFVar4[1] = (FILE *)FUN_00405590;\n  ppFVar4[2] = (FILE *)0x0;\n  ppFVar4[3] = (FILE *)0x0;\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    uVar5 = 0x14;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    *(__uid_t *)(ppFVar4 + 4) = local_48;\n    *(undefined4 *)((long)ppFVar4 + 0x24) = uStack_44;\n    *(undefined4 *)(ppFVar4 + 5) = uStack_40;\n    *(undefined4 *)((long)ppFVar4 + 0x2c) = uStack_3c;\n    local_48 = getpid();\n    *(__uid_t *)(ppFVar4 + 6) = local_48;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    pFVar2 = (FILE *)__read_chk(__fd,ppFVar3,param_2,0x1018);\n    close(__fd);\n    if (0x7ff < (long)pFVar2) goto LAB_004056f8;\n    if ((long)pFVar2 < 0) {\n      pFVar2 = param_1;\n    }\n    uVar5 = 0x800 - (long)pFVar2;\n    if (0x10 < uVar5) {\n      uVar5 = 0x10;\n    }\n    lVar7 = (long)&pFVar2->_flags + uVar5;\n    gettimeofday((timeval *)&local_48,(__timezone_ptr_t)0x0);\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + (long)pFVar2);\n    for (uVar5 = uVar5 & 0xffffffff; uVar5 != 0; uVar5 = uVar5 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < lVar7) goto LAB_004056f8;\n    uVar10 = 0x800 - lVar7;\n    if (4 < uVar10) {\n      uVar10 = 4;\n    }\n    local_48 = getpid();\n    uVar5 = uVar10 + lVar7;\n    ptVar8 = (timeval *)&local_48;\n    puVar9 = (undefined *)((long)ppFVar3 + lVar7);\n    for (uVar10 = uVar10 & 0xffffffff; uVar10 != 0; uVar10 = uVar10 - 1) {\n      *puVar9 = *(undefined *)&ptVar8->tv_sec;\n      ptVar8 = (timeval *)((long)ptVar8 + (ulong)bVar11 * -2 + 1);\n      puVar9 = puVar9 + (ulong)bVar11 * -2 + 1;\n    }\n    if (0x7ff < uVar5) goto LAB_004056f8;\n  }\n  uVar10 = 0x800 - uVar5;\n  if (4 < uVar10) {\n    uVar10 = 4;\n  }\n  local_48 = getppid();\n  if ((uint)uVar10 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)ppFVar3 + uVar6 + uVar5) = *(undefined *)((long)&local_48 + uVar6);\n    } while (uVar1 < (uint)uVar10);\n  }\n  uVar10 = uVar10 + uVar5;\n  if (uVar10 < 0x800) {\n    uVar5 = 0x800 - uVar10;\n    if (4 < uVar5) {\n      uVar5 = 4;\n    }\n    local_48 = getuid();\n    if ((uint)uVar5 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n      } while (uVar1 < (uint)uVar5);\n    }\n    uVar10 = uVar10 + uVar5;\n    if (uVar10 < 0x800) {\n      local_48 = getgid();\n      uVar5 = 0x800 - uVar10;\n      if (4 < uVar5) {\n        uVar5 = 4;\n      }\n      if ((uint)uVar5 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)ppFVar3 + uVar6 + uVar10) = *(undefined *)((long)&local_48 + uVar6);\n        } while (uVar1 < (uint)uVar5);\n      }\n    }\n  }\nLAB_004056f8:\n  FUN_00405d60(ppFVar3);\n  return ppFVar4;\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4058e5",
            "decompiledFuncCode": "\nvoid FUN_004058e0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004058e0"
        },
        {
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x4058f5",
            "decompiledFuncCode": "\nvoid FUN_004058f0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004058f0"
        },
        {
            "funcStartAddr": "0x405900",
            "funcEndAddr": "0x405a42",
            "decompiledFuncCode": "\nvoid FUN_00405900(FILE **param_1,void *param_2,FILE *param_3)\n\n{\n  FILE **ppFVar1;\n  int *piVar2;\n  size_t sVar3;\n  int iVar4;\n  void *__dest;\n  FILE **__src;\n  FILE *pFVar5;\n  \n  pFVar5 = *param_1;\n  if (pFVar5 != (FILE *)0x0) {\n    piVar2 = __errno_location();\n    while( true ) {\n      sVar3 = fread_unlocked(param_2,1,(size_t)param_3,pFVar5);\n      iVar4 = *piVar2;\n      param_2 = (void *)((long)param_2 + sVar3);\n      param_3 = (FILE *)((long)param_3 - sVar3);\n      if (param_3 == (FILE *)0x0) break;\n      pFVar5 = param_1[2];\n      if ((*(byte *)&(*param_1)->_flags & 0x20) == 0) {\n        iVar4 = 0;\n      }\n      *piVar2 = iVar4;\n      (*(code *)param_1[1])(pFVar5);\n      pFVar5 = *param_1;\n    }\n    return;\n  }\n  pFVar5 = param_1[3];\n  __src = param_1 + 0x107;\n  ppFVar1 = param_1 + 4;\n  __dest = param_2;\n  if (param_3 <= pFVar5) {\n    __src = (FILE **)((long)__src + (0x800 - (long)pFVar5));\n    goto LAB_00405a15;\n  }\n  do {\n    param_2 = (void *)((long)__dest + (long)pFVar5);\n    param_3 = (FILE *)((long)param_3 - (long)pFVar5);\n    memcpy(__dest,(void *)((0x800 - (long)pFVar5) + (long)__src),(size_t)pFVar5);\n    if (((ulong)param_2 & 7) == 0) goto LAB_004059fb;\n    pFVar5 = (FILE *)0x800;\n    FUN_00405ab0(ppFVar1,__src);\n    __dest = param_2;\n  } while ((FILE *)0x800 < param_3);\n  goto LAB_00405a0f;\nLAB_004059fb:\n  while ((FILE *)0x7ff < param_3) {\n    FUN_00405ab0(ppFVar1,param_2);\n    param_3 = (FILE *)&param_3[-10]._fileno;\n    param_2 = (void *)((long)param_2 + 0x800);\n    if (param_3 == (FILE *)0x0) {\n      param_1[3] = (FILE *)0x0;\n      return;\n    }\n  }\n  FUN_00405ab0(ppFVar1,__src);\nLAB_00405a0f:\n  pFVar5 = (FILE *)0x800;\nLAB_00405a15:\n  memcpy(param_2,__src,(size_t)param_3);\n  param_1[3] = (FILE *)((long)pFVar5 - (long)param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405900"
        },
        {
            "funcStartAddr": "0x405a60",
            "funcEndAddr": "0x405aa1",
            "decompiledFuncCode": "\nint FUN_00405a60(FILE **param_1)\n\n{\n  FILE *__stream;\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  __stream = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (__stream == (FILE *)0x0) {\n    return 0;\n  }\n  iVar1 = fileno(__stream);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(__stream);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_004073f7;\n    }\n    iVar1 = FUN_00407410(__stream);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(__stream);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_004073f7:\n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00405a60"
        },
        {
            "funcStartAddr": "0x405ab0",
            "funcEndAddr": "0x405d55",
            "decompiledFuncCode": "\nvoid FUN_00405ab0(long *param_1,long *param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long lVar6;\n  \n  lVar6 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar6 + 1;\n  lVar6 = param_1[0x101] + lVar6 + 1;\n  plVar1 = param_1;\n  plVar5 = param_2;\n  do {\n    lVar4 = *plVar1;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar1[0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar1 = lVar6;\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8)) + lVar4;\n    *plVar5 = lVar4;\n    lVar6 = plVar1[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar1[0x81];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar1[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[1] = lVar6;\n    lVar4 = plVar1[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar1[0x82];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar1[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar5[2] = lVar4;\n    lVar6 = plVar1[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar1[0x83];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2 = plVar1 + 4;\n    plVar1[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar5[3] = lVar6;\n    plVar1 = plVar2;\n    plVar5 = plVar5 + 4;\n  } while (plVar2 != param_1 + 0x80);\n  plVar1 = param_2 + 0x80;\n  do {\n    lVar4 = *plVar2;\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + plVar2[-0x80];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    *plVar2 = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    *plVar1 = lVar4;\n    lVar6 = plVar2[1];\n    uVar3 = (uVar3 ^ uVar3 >> 5) + plVar2[-0x7f];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar2[1] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[1] = lVar6;\n    lVar4 = plVar2[2];\n    uVar3 = (uVar3 * 0x1000 ^ uVar3) + plVar2[-0x7e];\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)lVar4 & 0x7f8)) + uVar3 + lVar6;\n    plVar2[2] = lVar6;\n    lVar4 = lVar4 + *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar6 >> 8) & 0x7f8));\n    plVar1[2] = lVar4;\n    lVar6 = plVar2[3];\n    uVar3 = (uVar3 ^ uVar3 >> 0x21) + plVar2[-0x7d];\n    lVar4 = *(long *)((long)param_1 + (ulong)((uint)lVar6 & 0x7f8)) + uVar3 + lVar4;\n    plVar5 = plVar2 + 4;\n    plVar2[3] = lVar4;\n    lVar6 = *(long *)((long)param_1 + (ulong)((uint)((ulong)lVar4 >> 8) & 0x7f8)) + lVar6;\n    plVar1[3] = lVar6;\n    plVar2 = plVar5;\n    plVar1 = plVar1 + 4;\n  } while (plVar5 != param_1 + 0x100);\n  param_1[0x100] = uVar3;\n  param_1[0x101] = lVar6;\n  return;\n}\n\n",
            "funcName": "FUN_00405ab0"
        },
        {
            "funcStartAddr": "0x405d60",
            "funcEndAddr": "0x405f94",
            "decompiledFuncCode": "\nvoid FUN_00405d60(ulong *param_1)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong *puVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  long lVar9;\n  ulong uVar10;\n  ulong uVar11;\n  long lVar12;\n  ulong uVar13;\n  ulong uVar14;\n  \n  uVar3 = 0x98f5704f6c44c0ab;\n  uVar7 = 0x82f053db8355e0ce;\n  uVar13 = 0xb29b2e824a595524;\n  uVar14 = 0xae985bf2cbfc89ed;\n  uVar11 = 0x8c0ea5053d4712a0;\n  uVar10 = 0xb9f8b322c73ac862;\n  uVar8 = 0x647c4677a2884b7c;\n  uVar5 = 0x48fe4a0fa5a09315;\n  puVar1 = param_1;\n  do {\n    lVar9 = uVar8 + (*puVar1 - (uVar7 + puVar1[4]));\n    uVar6 = uVar5 + puVar1[5] ^ uVar3 + puVar1[7] >> 9;\n    uVar10 = uVar10 + (puVar1[1] - uVar6);\n    uVar5 = uVar14 + puVar1[6] ^ lVar9 * 0x200;\n    lVar12 = uVar11 + (puVar1[2] - uVar5);\n    uVar3 = uVar3 + puVar1[7] + lVar9 ^ uVar10 >> 0x17;\n    uVar13 = uVar13 + (puVar1[3] - uVar3);\n    uVar8 = lVar9 + uVar10 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar1[4]) - uVar8;\n    *puVar1 = uVar8;\n    uVar10 = uVar10 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar1[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar5 - uVar11;\n    puVar1[2] = uVar11;\n    puVar2 = puVar1 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar1[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar1[5] = uVar5;\n    puVar1[4] = uVar7;\n    puVar1[6] = uVar14;\n    puVar1[7] = uVar3;\n    puVar1 = puVar2;\n    puVar4 = param_1;\n  } while (param_1 + 0x100 != puVar2);\n  do {\n    lVar9 = (uVar8 + *puVar4) - (uVar7 + puVar4[4]);\n    uVar6 = uVar5 + puVar4[5] ^ uVar3 + puVar4[7] >> 9;\n    uVar5 = (uVar10 + puVar4[1]) - uVar6;\n    uVar14 = uVar14 + puVar4[6] ^ lVar9 * 0x200;\n    lVar12 = (uVar11 + puVar4[2]) - uVar14;\n    uVar3 = uVar3 + puVar4[7] + lVar9 ^ uVar5 >> 0x17;\n    uVar13 = (uVar13 + puVar4[3]) - uVar3;\n    uVar8 = lVar9 + uVar5 ^ lVar12 * 0x8000;\n    lVar9 = (uVar7 + puVar4[4]) - uVar8;\n    *puVar4 = uVar8;\n    uVar10 = uVar5 + lVar12 ^ uVar13 >> 0xe;\n    uVar6 = uVar6 - uVar10;\n    puVar4[1] = uVar10;\n    uVar11 = lVar12 + uVar13 ^ lVar9 * 0x100000;\n    lVar12 = uVar14 - uVar11;\n    puVar4[2] = uVar11;\n    puVar1 = puVar4 + 8;\n    uVar13 = uVar13 + lVar9 ^ uVar6 >> 0x11;\n    uVar5 = uVar6 + lVar12;\n    uVar3 = uVar3 - uVar13;\n    puVar4[3] = uVar13;\n    uVar7 = lVar12 * 0x4000 ^ lVar9 + uVar6;\n    uVar14 = lVar12 + uVar3;\n    puVar4[5] = uVar5;\n    puVar4[4] = uVar7;\n    puVar4[6] = uVar14;\n    puVar4[7] = uVar3;\n    puVar4 = puVar1;\n  } while (param_1 + 0x100 != puVar1);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00405d60"
        },
        {
            "funcStartAddr": "0x405fa0",
            "funcEndAddr": "0x406125",
            "decompiledFuncCode": "\nvoid * FUN_00405fa0(FILE *param_1,ulong *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  void *pvVar3;\n  size_t sVar4;\n  int *piVar5;\n  __off_t _Var6;\n  size_t __size;\n  ulong uVar7;\n  void *__ptr;\n  size_t __n;\n  stat local_c8;\n  \n  iVar1 = fileno(param_1);\n  iVar1 = __fxstat(1,iVar1,&local_c8);\n  if ((((iVar1 < 0) || ((local_c8.st_mode & 0xf000) != 0x8000)) ||\n      (_Var6 = ftello(param_1), _Var6 < 0)) || (local_c8.st_size <= _Var6)) {\n    __size = 0x2000;\n  }\n  else {\n    __size = (local_c8.st_size - _Var6) + 1;\n  }\n  pvVar3 = malloc(__size);\n  if (pvVar3 != (void *)0x0) {\n    uVar7 = 0;\n    do {\n      __ptr = pvVar3;\n      __n = __size - uVar7;\n      sVar4 = fread((void *)((long)__ptr + uVar7),1,__n,param_1);\n      uVar7 = uVar7 + sVar4;\n      if (__n != sVar4) {\n        piVar5 = __errno_location();\n        iVar1 = *piVar5;\n        iVar2 = ferror(param_1);\n        if (iVar2 == 0) {\n          if ((uVar7 < __size - 1) && (pvVar3 = realloc(__ptr,uVar7 + 1), pvVar3 != (void *)0x0)) {\n            __ptr = pvVar3;\n          }\n          *(undefined *)((long)__ptr + uVar7) = 0;\n          *param_2 = uVar7;\n          return __ptr;\n        }\n        goto LAB_004060bb;\n      }\n      if (__size == 0xffffffffffffffff) {\n        piVar5 = __errno_location();\n        free(__ptr);\n        *piVar5 = 0xc;\n        return (void *)0x0;\n      }\n      sVar4 = (__size >> 1) + __size;\n      if (~(__size >> 1) <= __size) {\n        sVar4 = 0xffffffffffffffff;\n      }\n      pvVar3 = realloc(__ptr,sVar4);\n      __size = sVar4;\n    } while (pvVar3 != (void *)0x0);\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\nLAB_004060bb:\n    pvVar3 = (void *)0x0;\n    free(__ptr);\n    *piVar5 = iVar1;\n  }\n  return pvVar3;\n}\n\n",
            "funcName": "FUN_00405fa0"
        },
        {
            "funcStartAddr": "0x406140",
            "funcEndAddr": "0x4061c5",
            "decompiledFuncCode": "\nvoid * FUN_00406140(char *param_1,undefined8 param_2,char *param_3)\n\n{\n  int iVar1;\n  FILE *pFVar2;\n  void *__ptr;\n  int *piVar3;\n  int iVar4;\n  \n  pFVar2 = fopen(param_1,param_3);\n  if (pFVar2 == (FILE *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)FUN_00405fa0(pFVar2,param_2);\n  piVar3 = __errno_location();\n  iVar4 = *piVar3;\n  iVar1 = FUN_00407390(pFVar2);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  if (__ptr != (void *)0x0) {\n    iVar4 = *piVar3;\n    free(__ptr);\n  }\n  *piVar3 = iVar4;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00406140"
        },
        {
            "funcStartAddr": "0x4061d0",
            "funcEndAddr": "0x4061da",
            "decompiledFuncCode": "\nvoid FUN_004061d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406140(param_1,param_2,\"r\");\n  return;\n}\n\n",
            "funcName": "FUN_004061d0"
        },
        {
            "funcStartAddr": "0x4061e0",
            "funcEndAddr": "0x4061ea",
            "decompiledFuncCode": "\nvoid FUN_004061e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00406140(param_1,param_2,&DAT_0040b5a4);\n  return;\n}\n\n",
            "funcName": "FUN_004061e0"
        },
        {
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x406594",
            "decompiledFuncCode": "\nundefined8\nFUN_004061f0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040b5ba,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040646c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040646c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00406509;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00406509:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004062ea;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_004062ea:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004061f0"
        },
        {
            "funcStartAddr": "0x4065d0",
            "funcEndAddr": "0x4065f0",
            "decompiledFuncCode": "\nvoid FUN_004065d0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004061f0();\n  return;\n}\n\n",
            "funcName": "FUN_004065d0"
        },
        {
            "funcStartAddr": "0x4065f0",
            "funcEndAddr": "0x406649",
            "decompiledFuncCode": "\nvoid FUN_004065f0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004061f0();\n  return;\n}\n\n",
            "funcName": "FUN_004065f0"
        },
        {
            "funcStartAddr": "0x406650",
            "funcEndAddr": "0x406708",
            "decompiledFuncCode": "\nvoid FUN_00406650(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004061f0();\n  return;\n}\n\n",
            "funcName": "FUN_00406650"
        },
        {
            "funcStartAddr": "0x406710",
            "funcEndAddr": "0x406784",
            "decompiledFuncCode": "\nvoid FUN_00406710(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00406710"
        },
        {
            "funcStartAddr": "0x406790",
            "funcEndAddr": "0x4067aa",
            "decompiledFuncCode": "\nvoid FUN_00406790(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004069e0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406790"
        },
        {
            "funcStartAddr": "0x4067b0",
            "funcEndAddr": "0x4067d1",
            "decompiledFuncCode": "\nvoid FUN_004067b0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00406790();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004069e0();\n}\n\n",
            "funcName": "FUN_004067b0"
        },
        {
            "funcStartAddr": "0x4067e0",
            "funcEndAddr": "0x4067e2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00406790(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004069e0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4067e0"
        },
        {
            "funcStartAddr": "0x4067f0",
            "funcEndAddr": "0x406820",
            "decompiledFuncCode": "\nvoid * FUN_004067f0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004069e0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004067f0"
        },
        {
            "funcStartAddr": "0x406830",
            "funcEndAddr": "0x406851",
            "decompiledFuncCode": "\nvoid FUN_00406830(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_004067f0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004069e0();\n}\n\n",
            "funcName": "FUN_00406830"
        },
        {
            "funcStartAddr": "0x406860",
            "funcEndAddr": "0x4068d8",
            "decompiledFuncCode": "\nvoid FUN_00406860(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004068bb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004068bb:\n                    /* WARNING: Subroutine does not return */\n      FUN_004069e0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004067f0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406860"
        },
        {
            "funcStartAddr": "0x4068f0",
            "funcEndAddr": "0x40693a",
            "decompiledFuncCode": "\nvoid FUN_004068f0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_004067f0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040693a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040693a:\n                    /* WARNING: Subroutine does not return */\n      FUN_004069e0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_004067f0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004068f0"
        },
        {
            "funcStartAddr": "0x406940",
            "funcEndAddr": "0x406957",
            "decompiledFuncCode": "\nvoid FUN_00406940(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00406790();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406940"
        },
        {
            "funcStartAddr": "0x406960",
            "funcEndAddr": "0x40698e",
            "decompiledFuncCode": "\nvoid FUN_00406960(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004069e0();\n}\n\n",
            "funcName": "FUN_00406960"
        },
        {
            "funcStartAddr": "0x406990",
            "funcEndAddr": "0x4069b8",
            "decompiledFuncCode": "\nvoid FUN_00406990(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00406790(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406990"
        },
        {
            "funcStartAddr": "0x4069c0",
            "funcEndAddr": "0x4069d3",
            "decompiledFuncCode": "\nvoid FUN_004069c0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00406790(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004069c0"
        },
        {
            "funcStartAddr": "0x4069e0",
            "funcEndAddr": "0x406a11",
            "decompiledFuncCode": "\nvoid FUN_004069e0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060f278,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004069e0"
        },
        {
            "funcStartAddr": "0x406a20",
            "funcEndAddr": "0x406ae8",
            "decompiledFuncCode": "\nulong FUN_00406a20(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  ulong uVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  ulong local_40 [2];\n  \n  iVar2 = FUN_00406f50(param_1,0,param_2,local_40);\n  uVar1 = local_40[0];\n  if (iVar2 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar3 = __errno_location();\n    *piVar3 = (-(uint)(uVar1 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 == 1) {\n      *piVar3 = 0x4b;\n    }\n    else if (iVar2 == 3) {\n      *piVar3 = 0;\n    }\n  }\n  uVar4 = FUN_00405050(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\n  return local_40[0];\n}\n\n",
            "funcName": "FUN_00406a20"
        },
        {
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406b11",
            "decompiledFuncCode": "\nvoid FUN_00406af0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00406a20(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_00406af0"
        },
        {
            "funcStartAddr": "0x406b20",
            "funcEndAddr": "0x406ecc",
            "decompiledFuncCode": "\nulong FUN_00406b20(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00406bc0;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_00406c9c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_00406c8a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00406c79. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040b978)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_00406c8a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00406cf7;\n  default:\nswitchD_00406c9c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406d84;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x00406cbc;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00406cf7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x00406cbc:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00406cf7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406d84;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406d84;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406d84;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00406d84:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00406cf7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00406cf7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00406bc0:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00406b20"
        },
        {
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x4072fe",
            "decompiledFuncCode": "\nulong FUN_00406f50(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00406ff2;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_004070dc_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_004070ca;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x004070b1. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040bcb8)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_004070ca:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00407137;\n  default:\nswitchD_004070dc_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071c4;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x004070fc;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00407137;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x004070fc:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00407137:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071c4;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071c4;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004071c4;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_004071c4:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00407137;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00407137;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00406ff2:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00406f50"
        },
        {
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x407408",
            "decompiledFuncCode": "\nint FUN_00407390(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_004073f7;\n    }\n    iVar1 = FUN_00407410(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_004073f7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00407390"
        },
        {
            "funcStartAddr": "0x407410",
            "funcEndAddr": "0x40744b",
            "decompiledFuncCode": "\nvoid FUN_00407410(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_004074f0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00407410"
        },
        {
            "funcStartAddr": "0x407450",
            "funcEndAddr": "0x4074ea",
            "decompiledFuncCode": "\nFILE * FUN_00407450(char *param_1,char *param_2,FILE *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  FILE *pFVar3;\n  int *piVar4;\n  \n  pFVar3 = freopen(param_1,param_2,param_3);\n  if ((pFVar3 != (FILE *)0x0) && (param_1 != (char *)0x0)) {\n    iVar1 = fileno(pFVar3);\n    iVar2 = dup2(iVar1,iVar1);\n    if ((iVar2 < 0) && (piVar4 = __errno_location(), *piVar4 == 9)) {\n      iVar2 = open(\"/dev/null\",0x80000);\n      if (iVar1 != iVar2) {\n        iVar1 = dup2(iVar2,iVar1);\n        if (iVar1 < 0) {\n          close(iVar2);\n          return pFVar3;\n        }\n        close(iVar2);\n      }\n      pFVar3 = freopen(param_1,param_2,pFVar3);\n      return pFVar3;\n    }\n  }\n  return pFVar3;\n}\n\n",
            "funcName": "FUN_00407450"
        },
        {
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407546",
            "decompiledFuncCode": "\nulong FUN_004074f0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_004074f0"
        },
        {
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x407625",
            "decompiledFuncCode": "\nvoid FUN_00407550(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_004075cc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_004075cc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_004075cc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00407550"
        },
        {
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x407c2e",
            "decompiledFuncCode": "\nint FUN_00407630(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00407850;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00407790;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00407790;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00407790:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_0040c0e9,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00407850:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00407630"
        },
        {
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x4081b7",
            "decompiledFuncCode": "\nuint FUN_00407c50(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00407c9a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00407d9d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00407d9d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00407da8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00407d18;\nLAB_00407dbc:\n    if (*pbVar8 == 0) goto LAB_00407d18;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00407c9a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00407da8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00407dbc;\nLAB_00407d18:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00407550(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00407e86:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040c101;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00407550(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00407e86;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040c101;\n        goto LAB_00407fe5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00407f90;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00407630(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040c102);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00407f90:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040c120;\nLAB_00407fe5:\n  uVar3 = FUN_00407630(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00407c50"
        },
        {
            "funcStartAddr": "0x408220",
            "funcEndAddr": "0x408276",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408220(void)\n\n{\n  DAT_0060f480 = DAT_0060f2d8._4_4_;\n  _DAT_0060f484 = (undefined4)DAT_0060f2d8;\n  FUN_00407c50();\n  DAT_0060f2d8._4_4_ = DAT_0060f480;\n  DAT_0060f4c8 = DAT_0060f490;\n  _DAT_0060f2d4 = DAT_0060f488;\n  return;\n}\n\n",
            "funcName": "FUN_00408220"
        },
        {
            "funcStartAddr": "0x408280",
            "funcEndAddr": "0x408298",
            "decompiledFuncCode": "\nvoid FUN_00408280(void)\n\n{\n  FUN_00408220();\n  return;\n}\n\n",
            "funcName": "FUN_00408280"
        },
        {
            "funcStartAddr": "0x4082a0",
            "funcEndAddr": "0x4082b3",
            "decompiledFuncCode": "\nvoid FUN_004082a0(void)\n\n{\n  FUN_00408220();\n  return;\n}\n\n",
            "funcName": "FUN_004082a0"
        },
        {
            "funcStartAddr": "0x4082c0",
            "funcEndAddr": "0x4082d5",
            "decompiledFuncCode": "\nvoid FUN_004082c0(void)\n\n{\n  FUN_00407c50();\n  return;\n}\n\n",
            "funcName": "FUN_004082c0"
        },
        {
            "funcStartAddr": "0x4082e0",
            "funcEndAddr": "0x4082f6",
            "decompiledFuncCode": "\nvoid FUN_004082e0(void)\n\n{\n  FUN_00408220();\n  return;\n}\n\n",
            "funcName": "FUN_004082e0"
        },
        {
            "funcStartAddr": "0x408300",
            "funcEndAddr": "0x408318",
            "decompiledFuncCode": "\nvoid FUN_00408300(void)\n\n{\n  FUN_00407c50();\n  return;\n}\n\n",
            "funcName": "FUN_00408300"
        },
        {
            "funcStartAddr": "0x408320",
            "funcEndAddr": "0x40838f",
            "decompiledFuncCode": "\nsize_t FUN_00408320(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40c11f;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00408344;\n  }\n  param_1 = &local_1c;\nLAB_00408344:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_004085b0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00408320"
        },
        {
            "funcStartAddr": "0x4083a0",
            "funcEndAddr": "0x408483",
            "decompiledFuncCode": "\nulong * FUN_004083a0(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_004083e0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_004083e0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_004083a0"
        },
        {
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x40850c",
            "decompiledFuncCode": "\nulong FUN_004084b0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00407390(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004084b0"
        },
        {
            "funcStartAddr": "0x408510",
            "funcEndAddr": "0x408599",
            "decompiledFuncCode": "\nFILE * FUN_00408510(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00409dd0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_00407390(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_00407390(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_00408510"
        },
        {
            "funcStartAddr": "0x4085b0",
            "funcEndAddr": "0x408606",
            "decompiledFuncCode": "\nbool FUN_004085b0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040c124;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004085b0"
        },
        {
            "funcStartAddr": "0x408610",
            "funcEndAddr": "0x4086a1",
            "decompiledFuncCode": "\nulong FUN_00408610(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00408690:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00408690;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00408610"
        },
        {
            "funcStartAddr": "0x4086b0",
            "funcEndAddr": "0x4086c0",
            "decompiledFuncCode": "\nulong FUN_004086b0(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_004086b0"
        },
        {
            "funcStartAddr": "0x4086c0",
            "funcEndAddr": "0x4086c7",
            "decompiledFuncCode": "\nbool FUN_004086c0(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_004086c0"
        },
        {
            "funcStartAddr": "0x4086d0",
            "funcEndAddr": "0x4086f1",
            "decompiledFuncCode": "\nlong FUN_004086d0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004086d0"
        },
        {
            "funcStartAddr": "0x408700",
            "funcEndAddr": "0x408805",
            "decompiledFuncCode": "\nlong FUN_00408700(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_004086d0();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040878c:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040878c;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_00408700"
        },
        {
            "funcStartAddr": "0x408820",
            "funcEndAddr": "0x40889a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00408820(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040c1a0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040c1b4 < fVar1) && (fVar1 < DAT_0040c1b8)) && (_DAT_0040c1bc < pfVar2[3])) &&\n     (_DAT_0040c1c0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040c1b4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040c1c4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040c1a0;\n  return 0;\n}\n\n",
            "funcName": "FUN_00408820"
        },
        {
            "funcStartAddr": "0x4088a0",
            "funcEndAddr": "0x4089da",
            "decompiledFuncCode": "\nundefined8 FUN_004088a0(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_004088c8:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_004086d0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0040893f;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0040893f:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_004088c8;\n    plVar3 = (long *)FUN_004086d0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004088a0"
        },
        {
            "funcStartAddr": "0x4089f0",
            "funcEndAddr": "0x4089f5",
            "decompiledFuncCode": "\nundefined8 FUN_004089f0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_004089f0"
        },
        {
            "funcStartAddr": "0x408a00",
            "funcEndAddr": "0x408a05",
            "decompiledFuncCode": "\nundefined8 FUN_00408a00(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00408a00"
        },
        {
            "funcStartAddr": "0x408a10",
            "funcEndAddr": "0x408a15",
            "decompiledFuncCode": "\nundefined8 FUN_00408a10(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00408a10"
        },
        {
            "funcStartAddr": "0x408a20",
            "funcEndAddr": "0x408a6f",
            "decompiledFuncCode": "\nvoid FUN_00408a20(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00408a20"
        },
        {
            "funcStartAddr": "0x408a70",
            "funcEndAddr": "0x408ad2",
            "decompiledFuncCode": "\nbool FUN_00408a70(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00408a88:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00408a88;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00408a70"
        },
        {
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408c1c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408ae0(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_00408b4d;\n    }\n  }\nLAB_00408b4d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040c1d8) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_00408ae0"
        },
        {
            "funcStartAddr": "0x408c30",
            "funcEndAddr": "0x408c7b",
            "decompiledFuncCode": "\nlong FUN_00408c30(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_004086d0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00408c30"
        },
        {
            "funcStartAddr": "0x408c90",
            "funcEndAddr": "0x408cca",
            "decompiledFuncCode": "\nlong FUN_00408c90(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00401d88();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00401d88();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00408c90"
        },
        {
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408d39",
            "decompiledFuncCode": "\nlong FUN_00408ce0(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_004086d0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00408ce0"
        },
        {
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408db0",
            "decompiledFuncCode": "\nulong FUN_00408d50(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00408d50"
        },
        {
            "funcStartAddr": "0x408dc0",
            "funcEndAddr": "0x408e2b",
            "decompiledFuncCode": "\nlong FUN_00408dc0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00408dc0"
        },
        {
            "funcStartAddr": "0x408e40",
            "funcEndAddr": "0x408e71",
            "decompiledFuncCode": "\nulong FUN_00408e40(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00408e40"
        },
        {
            "funcStartAddr": "0x408e80",
            "funcEndAddr": "0x408ea0",
            "decompiledFuncCode": "\nvoid FUN_00408e80(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_00408e80"
        },
        {
            "funcStartAddr": "0x408ea0",
            "funcEndAddr": "0x409020",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_00408ea0(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_004086b0;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_004086c0;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040c1a0;\n    cVar1 = FUN_00408820(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00408f80;\n    fVar4 = DAT_0040c1c8;\n    if ((long)param_1 < 0) goto LAB_00409003;\nLAB_00408fbe:\n    fVar3 = (float)param_1;\nLAB_00408fc7:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040c1cc <= fVar3) goto LAB_00408f80;\n    if (fVar3 < _DAT_0040c1d0) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040c1d0) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_00408820(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00408f80;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_00408fbe;\nLAB_00409003:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_00408fc7;\n    }\n  }\n  __nmemb = (void *)FUN_00408610(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_00408f80:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_00408ea0"
        },
        {
            "funcStartAddr": "0x409030",
            "funcEndAddr": "0x4090d5",
            "decompiledFuncCode": "\nvoid FUN_00409030(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_004090c3;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_004090c3:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_00409030"
        },
        {
            "funcStartAddr": "0x4090e0",
            "funcEndAddr": "0x4091b0",
            "decompiledFuncCode": "\nvoid FUN_004090e0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040917c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040913f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040913f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040917c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004090e0"
        },
        {
            "funcStartAddr": "0x4091c0",
            "funcEndAddr": "0x4093ab",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_004091c0(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040c1cc <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040c1d0) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040c1d0) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_00408610(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_004088a0(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_004088a0(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_004088a0(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_004091c0"
        },
        {
            "funcStartAddr": "0x4093c0",
            "funcEndAddr": "0x409611",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_004093c0(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  ulong uVar5;\n  float fVar6;\n  float fVar7;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00408700(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar5 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar5 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar6 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar6 = fVar6 + fVar6;\n    if ((long)uVar3 < 0) goto LAB_004094ba;\nLAB_0040942b:\n    if (fVar6 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_00409442;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar6 = (float)uVar5;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040942b;\nLAB_004094ba:\n    fVar7 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar6 <= (fVar7 + fVar7) * *(float *)(lVar2 + 8)) goto LAB_00409442;\n  }\n  FUN_00408820(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar5 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar5 < 0) {\n    fVar6 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar5;\n  }\n  uVar5 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar5 < 0) {\n    fVar7 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar5;\n  }\n  if (*(float *)(lVar2 + 8) * fVar6 < fVar7) {\n    fVar6 = fVar6 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar6 = fVar6 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040c1cc <= fVar6) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040c1d0 <= fVar6) {\n      uVar5 = (long)(fVar6 - _DAT_0040c1d0) ^ 0x8000000000000000;\n    }\n    else {\n      uVar5 = (ulong)fVar6;\n    }\n    cVar1 = FUN_004091c0(param_1,uVar5);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_00408700(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\nLAB_00409442:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_004093c0"
        },
        {
            "funcStartAddr": "0x409640",
            "funcEndAddr": "0x409674",
            "decompiledFuncCode": "\nundefined8 FUN_00409640(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_004093c0(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00409640"
        },
        {
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x40983f",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00409680(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_00408700(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_00408820(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040c1d0 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040c1d0) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_004091c0(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00409680"
        },
        {
            "funcStartAddr": "0x409860",
            "funcEndAddr": "0x409db4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00409860(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060f4b8 != (char *)0x0) goto LAB_0040989a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00409985:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_004099a6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00409985;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_004099a6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00409a40:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00409bcc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00409a40;\n              if (uVar4 == 0x23) goto LAB_00409c31;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00409bdf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00407390(__stream);\n                goto LAB_004099e4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00409bcc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00409bdf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_004099de;\n    }\n  }\n  DAT_0060f4b8 = \"\";\nLAB_0040989a:\n  cVar1 = *DAT_0060f4b8;\n  pcVar7 = DAT_0060f4b8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_004098f4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_004098f4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00409c31:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00409bdf;\n  goto LAB_00409a40;\nLAB_00409bdf:\n  FUN_00407390(__stream);\n  if (local_d0 == 0) {\nLAB_004099de:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_004099e4:\n  free(__file);\n  DAT_0060f4b8 = pcVar7;\n  goto LAB_0040989a;\n}\n\n",
            "funcName": "FUN_00409860"
        },
        {
            "funcStartAddr": "0x409dd0",
            "funcEndAddr": "0x409dde",
            "decompiledFuncCode": "\nvoid FUN_00409dd0(undefined8 param_1)\n\n{\n  FUN_00409de0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00409dd0"
        },
        {
            "funcStartAddr": "0x409de0",
            "funcEndAddr": "0x409f0c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00409de0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0060f4c0 < 0) {\n    iVar1 = FUN_00409de0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0060f4c0 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0060f4c0 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00409de0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0060f4c0 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00409de0"
        },
        {
            "funcStartAddr": "0x409f20",
            "funcEndAddr": "0x409f7d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00409f53) */\n/* WARNING: Removing unreachable block (ram,0x00409f58) */\n\nvoid FUN_00409f20(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00409f20"
        },
        {
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409f81",
            "decompiledFuncCode": "\nvoid FUN_00409f80(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00409f80"
        },
        {
            "funcStartAddr": "0x409f90",
            "funcEndAddr": "0x409fa8",
            "decompiledFuncCode": "\nvoid FUN_00409f90(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060f268);\n  return;\n}\n\n",
            "funcName": "FUN_00409f90"
        },
        {
            "funcStartAddr": "0x409fa8",
            "funcEndAddr": "0x409fc8",
            "decompiledFuncCode": "\nundefined8 FUN_00409fa8(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060ee30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00409fa8"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_shuf.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}