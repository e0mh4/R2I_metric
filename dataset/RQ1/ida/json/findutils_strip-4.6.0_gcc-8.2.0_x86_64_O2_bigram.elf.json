{
    "binaryInfo": {
        "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_bigram.elf",
        "isStripped": "True"
    },
    "buildInfo": {
        "decompilerName": "IDA Pro",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "Optlevel": "-O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401210",
            "funcEndAddr": "0x401402",
            "decompiledFuncCode": "__int64 __fastcall main(int a1, const char **a2, char **a3)\n{\n  const char *v3; // rdi\n  size_t v4; // r12\n  _BYTE *v5; // rax\n  _BYTE *v6; // rbp\n  int v7; // eax\n  _BYTE *v8; // rdx\n  int v9; // edi\n  _BYTE *v10; // rcx\n  _BYTE *v11; // rax\n  __int64 v12; // rbx\n  __int64 v13; // rax\n  __int64 v14; // r13\n  __int64 v15; // rbx\n  size_t v16; // rax\n  char *v18; // rbx\n  int *v19; // rax\n  void *ptr; // [rsp+0h] [rbp-38h] BYREF\n  size_t n[6]; // [rsp+8h] [rbp-30h] BYREF\n\n  v3 = *a2;\n  if ( !*a2 )\n    v3 = \"bigram\";\n  sub_4015B0(v3, a2, a3);\n  setlocale(6, \"\");\n  bindtextdomain(\n    \"findutils\",\n    \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n  textdomain(\"findutils\");\n  if ( (unsigned int)sub_4038B0(sub_401510) )\n  {\n    v18 = dcgettext(0LL, \"The atexit library function failed\", 5);\n    v19 = __errno_location();\n    error(1, *v19, v18);\n  }\n  v4 = 1026LL;\n  n[0] = 1026LL;\n  ptr = (void *)sub_402FD0(1026LL);\n  v5 = (_BYTE *)sub_402FD0(1026LL);\n  *v5 = 0;\n  v6 = v5;\n  while ( 1 )\n  {\n    v7 = __getdelim((char **)&ptr, n, 10, stdin);\n    if ( v7 <= 0 )\n      break;\n    *((char *)ptr + v7 - 1) = 0;\n    v8 = ptr;\n    v9 = *(char *)ptr;\n    if ( *v6 && *v6 == (_BYTE)v9 )\n    {\n      v10 = ptr;\n      v11 = v6;\n      do\n      {\n        ++v11;\n        ++v10;\n      }\n      while ( *v10 == *v11 && *v11 );\n      LODWORD(v13) = (_DWORD)v11 - (_DWORD)v6;\n      v12 = (int)v13;\n      v13 = (int)v13;\n      v9 = *((char *)ptr + (int)v13);\n    }\n    else\n    {\n      v13 = 0LL;\n      v12 = 0LL;\n    }\n    if ( (_BYTE)v9 )\n    {\n      v14 = v13 + 1;\n      if ( *((_BYTE *)ptr + v13 + 1) )\n      {\n        v15 = v12 + 2;\n        do\n        {\n          _IO_putc(v9, stdout);\n          _IO_putc(*((char *)ptr + v14), stdout);\n          _IO_putc(10, stdout);\n          v8 = ptr;\n          v9 = *((char *)ptr + v15);\n          if ( !*((_BYTE *)ptr + v15) )\n            break;\n          v14 = v15 + 1;\n          v15 += 2LL;\n        }\n        while ( *((_BYTE *)ptr + v14) );\n      }\n    }\n    v16 = n[0];\n    ptr = v6;\n    v6 = v8;\n    n[0] = v4;\n    v4 = v16;\n  }\n  free(ptr);\n  free(v6);\n  return 0LL;\n}\n"
        },
        {
            "funcName": "sub_40143B",
            "funcStartAddr": "0x40143b",
            "funcEndAddr": "0x40145a",
            "decompiledFuncCode": "void *sub_40143B()\n{\n  return &unk_6061D8;\n}\n"
        },
        {
            "funcName": "sub_40145A",
            "funcStartAddr": "0x40145a",
            "funcEndAddr": "0x401491",
            "decompiledFuncCode": "__int64 sub_40145A()\n{\n  return 0LL;\n}\n"
        },
        {
            "funcName": "sub_401491",
            "funcStartAddr": "0x401491",
            "funcEndAddr": "0x4014e8",
            "decompiledFuncCode": "void *sub_401491()\n{\n  void *result; // rax\n\n  if ( !byte_606208 )\n  {\n    while ( qword_606210 < (unsigned __int64)(&qword_605E48 - qword_605E40 - 1) )\n      ((void (*)(void))qword_605E40[++qword_606210])();\n    result = sub_40143B();\n    byte_606208 = 1;\n  }\n  return result;\n}\n"
        },
        {
            "funcName": "sub_4014E8",
            "funcStartAddr": "0x4014e8",
            "funcEndAddr": "0x4014ed",
            "decompiledFuncCode": "// attributes: thunk\n__int64 sub_4014E8()\n{\n  return sub_40145A();\n}\n"
        },
        {
            "funcName": "sub_401510",
            "funcStartAddr": "0x401510",
            "funcEndAddr": "0x4015ae",
            "decompiledFuncCode": "__int64 sub_401510()\n{\n  int *v0; // rax\n  int *v1; // rbx\n  __int64 result; // rax\n  char *v3; // rax\n  const char *v4; // rbp\n  const char *v5; // rax\n\n  if ( (unsigned int)sub_403260(stdout) )\n  {\n    v0 = __errno_location();\n    v1 = v0;\n    if ( !byte_606218 || *v0 != 32 )\n    {\n      v3 = dcgettext(0LL, \"write error\", 5);\n      v4 = v3;\n      if ( qword_606220 )\n      {\n        v5 = (const char *)sub_402E00();\n        error(0, *v1, \"%s: %s\", v5, v4);\n      }\n      else\n      {\n        error(0, *v1, \"%s\", v3);\n      }\nLABEL_8:\n      _exit(status);\n    }\n  }\n  result = sub_403260(stderr);\n  if ( (_DWORD)result )\n    goto LABEL_8;\n  return result;\n}\n"
        },
        {
            "funcName": "sub_4015B0",
            "funcStartAddr": "0x4015b0",
            "funcEndAddr": "0x401649",
            "decompiledFuncCode": "char *__fastcall sub_4015B0(const char *a1)\n{\n  __int64 v1; // rbx\n  char *result; // rax\n\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v1 = (__int64)a1;\n  result = strrchr(a1, 47);\n  if ( result )\n  {\n    if ( result + 1 - a1 > 6 && !memcmp(result - 6, \"/.libs/\", 7uLL) )\n    {\n      v1 = (__int64)(result + 1);\n      if ( !memcmp(result + 1, \"lt-\", 3uLL) )\n      {\n        v1 = (__int64)(result + 4);\n        program_invocation_short_name = (__int64)(result + 4);\n      }\n    }\n  }\n  qword_606228 = v1;\n  program_invocation_name = v1;\n  return result;\n}\n"
        },
        {
            "funcName": "sub_401650",
            "funcStartAddr": "0x401650",
            "funcEndAddr": "0x401742",
            "decompiledFuncCode": "const char *__fastcall sub_401650(char *msgid, int a2)\n{\n  char *v2; // rbx\n  _BYTE *v4; // rax\n  bool v5; // zf\n  const char *v6; // rbx\n\n  v2 = dcgettext(0LL, msgid, 5);\n  if ( msgid != v2 )\n    return v2;\n  v4 = (_BYTE *)sub_4032D0();\n  if ( (*v4 & 0xDF) == 85 )\n  {\n    if ( (v4[1] & 0xDF) == 84 && (v4[2] & 0xDF) == 70 && v4[3] == 45 && v4[4] == 56 && !v4[5] )\n    {\n      v5 = *v2 == 96;\n      v2 = (char *)&unk_403A11;\n      if ( !v5 )\n        return (const char *)&unk_403A06;\n      return v2;\n    }\n  }\n  else if ( (*v4 & 0xDF) == 71\n         && (v4[1] & 0xDF) == 66\n         && v4[2] == 49\n         && v4[3] == 56\n         && v4[4] == 48\n         && v4[5] == 51\n         && v4[6] == 48\n         && !v4[7] )\n  {\n    v5 = *v2 == 96;\n    v2 = (char *)&unk_403A0D;\n    if ( !v5 )\n      return (const char *)&unk_403A0A;\n    return v2;\n  }\n  v6 = \"\\\"\";\n  if ( a2 != 9 )\n    return \"'\";\n  return v6;\n}\n"
        },
        {
            "funcName": "sub_401750",
            "funcStartAddr": "0x4011f0",
            "funcEndAddr": "0x4011f5",
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(\n        _BYTE *a1,\n        unsigned __int64 a2,\n        __int64 a3,\n        unsigned __int64 a4,\n        int a5,\n        int a6,\n        __int64 a7,\n        const char *a8,\n        char *a9)\n{\n  _BYTE *v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t mb_cur_max; // rax\n  int v14; // edx\n  int v15; // r11d\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // r10d\n  unsigned __int64 v21; // r13\n  int v22; // r8d\n  _BYTE *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  unsigned __int8 v27; // al\n  char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // esi\n  int v34; // r10d\n  int v35; // r11d\n  int v36; // eax\n  unsigned __int64 v37; // rcx\n  unsigned __int64 v38; // rax\n  const unsigned __int16 **v39; // rax\n  unsigned __int64 v40; // rcx\n  int v41; // edx\n  int v42; // eax\n  __int64 v44; // rsi\n  int v45; // eax\n  char v46; // dl\n  const char *v47; // rax\n  size_t v48; // rax\n  unsigned __int64 v49; // rbx\n  unsigned __int64 v50; // r14\n  __int64 v51; // rax\n  __int64 v52; // r15\n  _BYTE *v53; // rdx\n  int v54; // edi\n  unsigned __int64 v55; // rcx\n  int v56; // eax\n  unsigned __int8 v57; // si\n  bool v58; // bp\n  int v59; // eax\n  unsigned __int64 v60; // rsi\n  _BYTE *v61; // rdi\n  unsigned __int64 v62; // rax\n  int v63; // eax\n  int v64; // eax\n  unsigned __int8 v66; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v68; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v69; // [rsp+10h] [rbp-A8h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  _BYTE *v72; // [rsp+28h] [rbp-90h]\n  int v73; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v74; // [rsp+28h] [rbp-90h]\n  _BYTE *v75; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v76; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v77; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v78; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v79; // [rsp+30h] [rbp-88h]\n  char v80; // [rsp+30h] [rbp-88h]\n  int v81; // [rsp+30h] [rbp-88h]\n  int v82; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v83; // [rsp+38h] [rbp-80h]\n  int v84; // [rsp+38h] [rbp-80h]\n  int v85; // [rsp+38h] [rbp-80h]\n  _BYTE *v86; // [rsp+38h] [rbp-80h]\n  int v87; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v88; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v90; // [rsp+50h] [rbp-68h]\n  bool v92; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v93; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v94; // [rsp+60h] [rbp-58h]\n  _BYTE *v95; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h] BYREF\n  mbstate_t ps; // [rsp+78h] [rbp-40h] BYREF\n\n  v9 = a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  mb_cur_max = __ctype_get_mb_cur_max();\n  v15 = a5;\n  v90 = mb_cur_max;\n  v16 = a4;\n  switch ( a5 )\n  {\n    case 0:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v66 = 0;\n        goto LABEL_38;\n      }\n      v92 = 1;\n      v17 = 0LL;\n      v66 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v92 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v66 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v66 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v92 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v92 = 1;\n        v17 = 0LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v92 = 0;\n        v17 = 1LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", a5);\n        v28 = (char *)sub_401650(\"'\", a5);\n        v16 = a4;\n        v15 = a5;\n        a9 = v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v73 = v15;\n      v69 = v16;\n      v92 = v11 != 0;\n      v30 = strlen(a9);\n      v66 = 1;\n      v16 = v69;\n      n = v30;\n      v15 = v73;\n      s2 = a9;\n      break;\n    default:\n      abort();\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = *(_BYTE *)(a3 + v21) != 0;\n    if ( !(_BYTE)v11 )\n    {\n      v45 = v20;\n      v34 = v19;\n      v35 = v45;\n      v27 = v17 == 0 && v92 && v45 == 2;\n      if ( v27 )\n        goto LABEL_132;\n      if ( s2 )\n      {\n        if ( !v92 )\n        {\n          v46 = *s2;\n          if ( *s2 )\n          {\n            v47 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                v9[v17] = v46;\n              v46 = v47[++v17];\n            }\n            while ( v46 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        v9[v17] = 0;\n      return v17;\n    }\n    v23 = (_BYTE *)(a3 + v21);\n    v68 = v66 & (v20 != 2);\n    if ( v68 )\n      break;\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v66 )\n        {\n          if ( (a6 & 1) != 0 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v92 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_148;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v68 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v92 )\n        {\n          v64 = v20;\n          v34 = v19;\n          v35 = v64;\n          v27 = v64 == 2;\n          goto LABEL_132;\n        }\n        v68 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v36 = v22 ^ 1;\n        LOBYTE(v36) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v36 )\n        {\n          if ( v17 < v10 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v37 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v36;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v36;\nLABEL_114:\n          v9[v37] = 92;\n        }\n        else\n        {\n          v37 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\n        }\n        v17 = v37 + 1;\n        v38 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v38 < v19 && (unsigned __int8)(*(_BYTE *)(a3 + v38) - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 48;\n          if ( v10 > v37 + 2 )\n            v9[v37 + 2] = 48;\n          v17 = v37 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 0xA:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 0xB:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xC:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xD:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v68 = v20 == 2 && v92;\n        if ( !v68 )\n          goto LABEL_88;\n        v42 = v20;\n        v34 = v19;\n        v35 = v42;\n        v27 = v68;\n        goto LABEL_132;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 0x23:\n      case 0x7E:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_127;\n      case 0x27:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v92 )\n          goto LABEL_270;\n        if ( v17 < v10 )\n          v9[v17] = 39;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 92;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v68 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 0x3F:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n          {\nLABEL_270:\n            v34 = v19;\n            v35 = 2;\n            v27 = v92;\nLABEL_132:\n            if ( v66 && v27 )\n              v35 = 4;\n            return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n          }\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( (a6 & 4) == 0 )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || *(_BYTE *)(a3 + v21 + 1) != 63 )\n          goto LABEL_65;\n        v26 = *(unsigned __int8 *)(a3 + v21 + 2);\n        if ( (unsigned __int8)v26 > 0x3Eu || (v44 = 0x7000A38200000000LL, !_bittest64(&v44, v26)) )\n        {\n          LOBYTE(v26) = 63;\nLABEL_65:\n          v11 = (v14 | v66 ^ 1) ^ 1;\n          LOBYTE(v11) = v92 | (v14 | v66 ^ 1) ^ 1;\n          if ( (_BYTE)v11 )\n          {\nLABEL_17:\n            v11 = 0;\n            if ( !a7 )\n              goto LABEL_121;\n            goto LABEL_18;\n          }\n          goto LABEL_66;\n        }\n        if ( v92 )\n          goto LABEL_269;\n        if ( v17 < v10 )\n          v9[v17] = 63;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 34;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 34;\n        if ( v10 > v17 + 3 )\n          v9[v17 + 3] = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( v66 && !(_BYTE)v14 )\n        {\n          if ( !a7 )\n          {\nLABEL_121:\n            v27 = v20 == 2;\n            if ( !v68 )\n            {\nLABEL_122:\n              ++v21;\n              v11 = v22 & (v11 ^ 1);\n              goto LABEL_148;\n            }\nLABEL_20:\n            if ( v92 )\n            {\nLABEL_92:\n              v33 = v20;\n              v34 = v19;\n              v35 = v33;\n              goto LABEL_132;\n            }\nLABEL_21:\n            ++v21;\n            goto LABEL_22;\n          }\nLABEL_18:\n          if ( ((*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1) == 0 )\n            goto LABEL_121;\n          v27 = v20 == 2;\n          goto LABEL_20;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v68 )\n        {\n          v11 = v22 & (v11 ^ 1);\nLABEL_148:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              v9[v17] = 39;\n            if ( v10 > v17 + 1 )\n              v9[v17 + 1] = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( (v27 & ((unsigned __int8)v22 ^ 1)) != 0 )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          v9[v17] = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          v9[v17] = v26;\n        ++v17;\n        break;\n      case 0x5C:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n            goto LABEL_270;\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_148;\n        }\nLABEL_87:\n        v11 = v92 & v66;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v11;\n        LOBYTE(v14) = (n != 0) & v11;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_148;\n        }\nLABEL_88:\n        if ( !v66 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 0x7B:\n      case 0x7D:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = *(_BYTE *)(a3 + 1) != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        v27 = v14 & v92;\n        if ( ((unsigned __int8)v14 & v92) == 0 )\n          goto LABEL_65;\n        goto LABEL_206;\n      default:\nLABEL_124:\n        if ( v90 == 1 )\n        {\n          v84 = v20;\n          v79 = v19;\n          v74 = v22;\n          v39 = __ctype_b_loc();\n          v22 = v74;\n          v19 = v79;\n          v20 = v84;\n          v40 = 1LL;\n          v41 = (*v39)[(unsigned __int8)v26];\n          LOWORD(v41) = (unsigned __int16)v41 >> 14;\n          v14 = v41 ^ 1;\n          LOBYTE(v14) = v66 & v14;\n        }\n        else\n        {\n          ps = 0LL;\n          if ( v19 == -1LL )\n          {\n            v85 = v20;\n            v80 = v22;\n            v75 = v23;\n            v48 = strlen((const char *)a3);\n            v20 = v85;\n            LOBYTE(v22) = v80;\n            v23 = v75;\n            v19 = v48;\n          }\n          v94 = v17;\n          v93 = v22;\n          v49 = 0LL;\n          v95 = v23;\n          v86 = v9;\n          v88 = v10;\n          v76 = v19;\n          v81 = v20;\n          while ( 1 )\n          {\n            v50 = v21 + v49;\n            v51 = sub_403230(&wc, a3 + v21 + v49, v76 - (v21 + v49), &ps);\n            v52 = v51;\n            if ( !v51 )\n            {\n              v11 ^= 1u;\n              v40 = v49;\n              v9 = v86;\n              v22 = v93;\n              v17 = v94;\n              v10 = v88;\n              v14 = (unsigned __int8)(v11 & v66);\n              v19 = v76;\n              v20 = v81;\n              goto LABEL_256;\n            }\n            if ( v51 == -1 )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              v14 = v66;\n              goto LABEL_256;\n            }\n            if ( v51 == -2 )\n              break;\n            v27 = v92 && v81 == 2;\n            if ( v27 && v52 != 1 )\n            {\n              v53 = (_BYTE *)(a3 + v50 + 1);\n              do\n              {\n                if ( (unsigned __int8)(*v53 - 91) <= 0x21u && ((1LL << (*v53 - 91)) & 0x20000002BLL) != 0 )\n                {\n                  LODWORD(v9) = (_DWORD)v86;\n                  LODWORD(v10) = v88;\n                  v34 = v76;\n                  v35 = v81;\n                  goto LABEL_132;\n                }\n                ++v53;\n              }\n              while ( (_BYTE *)(a3 + v52 + v50) != v53 );\n            }\n            if ( !iswprint(wc) )\n              v11 = 0;\n            v49 += v52;\n            if ( mbsinit(&ps) )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v14 = v11 ^ 1;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              LOBYTE(v14) = v66 & (v11 ^ 1);\n              goto LABEL_256;\n            }\n          }\n          v19 = v76;\n          v60 = v21 + v49;\n          v61 = (_BYTE *)(a3 + v21 + v49);\n          v62 = v49;\n          v40 = v49;\n          v22 = v93;\n          v17 = v94;\n          v9 = v86;\n          v10 = v88;\n          v20 = v81;\n          if ( v60 < v76 && *v61 )\n          {\n            do\n              ++v62;\n            while ( v76 > v21 + v62 && v95[v62] );\n            v40 = v62;\n          }\n          v14 = v66;\nLABEL_256:\n          if ( v40 > 1 )\n            goto LABEL_210;\n        }\n        if ( (_BYTE)v14 )\n        {\n          v14 = v66;\nLABEL_210:\n          v55 = v21 + v40;\n          v56 = 0;\n          v57 = v68;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              v58 = v20 == 2;\n              v27 = v20 == 2;\n              if ( v92 )\n              {\nLABEL_206:\n                v54 = v20;\n                v34 = v19;\n                v35 = v54;\n                goto LABEL_132;\n              }\n              v59 = v22 ^ 1;\n              if ( (v58 & ((unsigned __int8)v22 ^ 1)) != 0 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 36;\n                if ( v10 > v17 + 2 )\n                  v9[v17 + 2] = 39;\n                v17 += 3LL;\n                LOBYTE(v59) = v58 & (v22 ^ 1);\n                v22 = v59;\n              }\n              if ( v17 < v10 )\n                v9[v17] = 92;\n              if ( v10 > v17 + 1 )\n                v9[v17 + 1] = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                v9[v17 + 2] = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v55 <= v21 )\n                goto LABEL_33;\n              v56 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v56 ^ 1);\n              if ( v57 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v55 )\n                goto LABEL_148;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 39;\n                v17 += 2LL;\n                v57 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v57 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              v9[v17] = v26;\n            LOBYTE(v26) = *(_BYTE *)(a3 + v21);\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_65;\n    }\n  }\n  if ( !n )\n    goto LABEL_275;\n  if ( v19 == -1LL && n > 1 )\n  {\n    v82 = v20;\n    v77 = v22;\n    v24 = strlen((const char *)a3);\n    v20 = v82;\n    v22 = v77;\n    v23 = (_BYTE *)(a3 + v21);\n    v19 = v24;\n  }\n  if ( v21 + n > v19 )\n    goto LABEL_275;\n  v87 = v20;\n  v83 = v19;\n  v78 = v22;\n  v72 = v23;\n  v25 = memcmp(v23, s2, n);\n  v23 = v72;\n  v22 = v78;\n  v19 = v83;\n  v20 = v87;\n  if ( v25 )\n  {\nLABEL_275:\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        goto LABEL_103;\n      case 7:\nLABEL_94:\n        LOBYTE(v26) = 97;\n        v27 = 0;\n        goto LABEL_91;\n      case 8:\nLABEL_93:\n        LOBYTE(v26) = 98;\n        v27 = 0;\n        goto LABEL_91;\n      case 9:\nLABEL_102:\n        LOBYTE(v26) = 116;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xA:\nLABEL_90:\n        LOBYTE(v26) = 110;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xB:\nLABEL_101:\n        LOBYTE(v26) = 118;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xC:\nLABEL_100:\n        LOBYTE(v26) = 102;\n        v27 = 0;\nLABEL_91:\n        if ( v92 )\n          goto LABEL_92;\n        goto LABEL_21;\n      case 0xD:\n        v68 = 0;\nLABEL_96:\n        LOBYTE(v26) = 13;\n        v32 = 114;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        v68 = 0;\nLABEL_85:\n        v14 = 0;\n        goto LABEL_65;\n      case 0x23:\n      case 0x7E:\n        v68 = 0;\nLABEL_98:\n        if ( v21 )\n          goto LABEL_17;\n        v14 = 0;\n        goto LABEL_65;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        v68 = 0;\n        goto LABEL_17;\n      case 0x27:\n        v68 = 0;\n        goto LABEL_73;\n      case 0x3F:\n        v68 = 0;\n        goto LABEL_69;\n      case 0x5C:\n        v68 = 0;\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        v68 = 0;\n        goto LABEL_60;\n      default:\n        v68 = 0;\n        goto LABEL_124;\n    }\n  }\n  if ( !v92 )\n  {\n    LOBYTE(v26) = *v72;\n    switch ( *v72 )\n    {\n      case 0:\n        goto LABEL_105;\n      case 7:\n        goto LABEL_94;\n      case 8:\n        goto LABEL_93;\n      case 9:\n        goto LABEL_102;\n      case 0xA:\n        goto LABEL_90;\n      case 0xB:\n        goto LABEL_101;\n      case 0xC:\n        goto LABEL_100;\n      case 0xD:\n        goto LABEL_96;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        goto LABEL_85;\n      case 0x23:\n      case 0x7E:\n        goto LABEL_98;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_17;\n      case 0x27:\n        goto LABEL_73;\n      case 0x3F:\n        goto LABEL_69;\n      case 0x5C:\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        goto LABEL_60;\n      default:\n        goto LABEL_124;\n    }\n  }\nLABEL_269:\n  v63 = v20;\n  v34 = v19;\n  v35 = v63;\n  return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n}\n\nunsigned __int64 __fastcall sub_401750(\n        _BYTE *a1,\n        unsigned __int64 a2,\n        __int64 a3,\n        unsigned __int64 a4,\n        int a5,\n        int a6,\n        __int64 a7,\n        const char *a8,\n        char *a9)\n{\n  _BYTE *v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t mb_cur_max; // rax\n  int v14; // edx\n  int v15; // r11d\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // r10d\n  unsigned __int64 v21; // r13\n  int v22; // r8d\n  _BYTE *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  unsigned __int8 v27; // al\n  char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // esi\n  int v34; // r10d\n  int v35; // r11d\n  int v36; // eax\n  unsigned __int64 v37; // rcx\n  unsigned __int64 v38; // rax\n  const unsigned __int16 **v39; // rax\n  unsigned __int64 v40; // rcx\n  int v41; // edx\n  int v42; // eax\n  __int64 v44; // rsi\n  int v45; // eax\n  char v46; // dl\n  const char *v47; // rax\n  size_t v48; // rax\n  unsigned __int64 v49; // rbx\n  unsigned __int64 v50; // r14\n  __int64 v51; // rax\n  __int64 v52; // r15\n  _BYTE *v53; // rdx\n  int v54; // edi\n  unsigned __int64 v55; // rcx\n  int v56; // eax\n  unsigned __int8 v57; // si\n  bool v58; // bp\n  int v59; // eax\n  unsigned __int64 v60; // rsi\n  _BYTE *v61; // rdi\n  unsigned __int64 v62; // rax\n  int v63; // eax\n  int v64; // eax\n  unsigned __int8 v66; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v68; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v69; // [rsp+10h] [rbp-A8h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  _BYTE *v72; // [rsp+28h] [rbp-90h]\n  int v73; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v74; // [rsp+28h] [rbp-90h]\n  _BYTE *v75; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v76; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v77; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v78; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v79; // [rsp+30h] [rbp-88h]\n  char v80; // [rsp+30h] [rbp-88h]\n  int v81; // [rsp+30h] [rbp-88h]\n  int v82; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v83; // [rsp+38h] [rbp-80h]\n  int v84; // [rsp+38h] [rbp-80h]\n  int v85; // [rsp+38h] [rbp-80h]\n  _BYTE *v86; // [rsp+38h] [rbp-80h]\n  int v87; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v88; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v90; // [rsp+50h] [rbp-68h]\n  bool v92; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v93; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v94; // [rsp+60h] [rbp-58h]\n  _BYTE *v95; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h] BYREF\n  mbstate_t ps; // [rsp+78h] [rbp-40h] BYREF\n\n  v9 = a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  mb_cur_max = __ctype_get_mb_cur_max();\n  v15 = a5;\n  v90 = mb_cur_max;\n  v16 = a4;\n  switch ( a5 )\n  {\n    case 0:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v66 = 0;\n        goto LABEL_38;\n      }\n      v92 = 1;\n      v17 = 0LL;\n      v66 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v92 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v66 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v66 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v92 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v92 = 1;\n        v17 = 0LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v92 = 0;\n        v17 = 1LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", a5);\n        v28 = (char *)sub_401650(\"'\", a5);\n        v16 = a4;\n        v15 = a5;\n        a9 = v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v73 = v15;\n      v69 = v16;\n      v92 = v11 != 0;\n      v30 = strlen(a9);\n      v66 = 1;\n      v16 = v69;\n      n = v30;\n      v15 = v73;\n      s2 = a9;\n      break;\n    default:\n      abort();\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = *(_BYTE *)(a3 + v21) != 0;\n    if ( !(_BYTE)v11 )\n    {\n      v45 = v20;\n      v34 = v19;\n      v35 = v45;\n      v27 = v17 == 0 && v92 && v45 == 2;\n      if ( v27 )\n        goto LABEL_132;\n      if ( s2 )\n      {\n        if ( !v92 )\n        {\n          v46 = *s2;\n          if ( *s2 )\n          {\n            v47 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                v9[v17] = v46;\n              v46 = v47[++v17];\n            }\n            while ( v46 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        v9[v17] = 0;\n      return v17;\n    }\n    v23 = (_BYTE *)(a3 + v21);\n    v68 = v66 & (v20 != 2);\n    if ( v68 )\n      break;\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v66 )\n        {\n          if ( (a6 & 1) != 0 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v92 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_148;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v68 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v92 )\n        {\n          v64 = v20;\n          v34 = v19;\n          v35 = v64;\n          v27 = v64 == 2;\n          goto LABEL_132;\n        }\n        v68 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v36 = v22 ^ 1;\n        LOBYTE(v36) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v36 )\n        {\n          if ( v17 < v10 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v37 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v36;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v36;\nLABEL_114:\n          v9[v37] = 92;\n        }\n        else\n        {\n          v37 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\n        }\n        v17 = v37 + 1;\n        v38 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v38 < v19 && (unsigned __int8)(*(_BYTE *)(a3 + v38) - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 48;\n          if ( v10 > v37 + 2 )\n            v9[v37 + 2] = 48;\n          v17 = v37 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 0xA:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 0xB:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xC:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xD:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v68 = v20 == 2 && v92;\n        if ( !v68 )\n          goto LABEL_88;\n        v42 = v20;\n        v34 = v19;\n        v35 = v42;\n        v27 = v68;\n        goto LABEL_132;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 0x23:\n      case 0x7E:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_127;\n      case 0x27:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v92 )\n          goto LABEL_270;\n        if ( v17 < v10 )\n          v9[v17] = 39;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 92;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v68 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 0x3F:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n          {\nLABEL_270:\n            v34 = v19;\n            v35 = 2;\n            v27 = v92;\nLABEL_132:\n            if ( v66 && v27 )\n              v35 = 4;\n            return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n          }\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( (a6 & 4) == 0 )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || *(_BYTE *)(a3 + v21 + 1) != 63 )\n          goto LABEL_65;\n        v26 = *(unsigned __int8 *)(a3 + v21 + 2);\n        if ( (unsigned __int8)v26 > 0x3Eu || (v44 = 0x7000A38200000000LL, !_bittest64(&v44, v26)) )\n        {\n          LOBYTE(v26) = 63;\nLABEL_65:\n          v11 = (v14 | v66 ^ 1) ^ 1;\n          LOBYTE(v11) = v92 | (v14 | v66 ^ 1) ^ 1;\n          if ( (_BYTE)v11 )\n          {\nLABEL_17:\n            v11 = 0;\n            if ( !a7 )\n              goto LABEL_121;\n            goto LABEL_18;\n          }\n          goto LABEL_66;\n        }\n        if ( v92 )\n          goto LABEL_269;\n        if ( v17 < v10 )\n          v9[v17] = 63;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 34;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 34;\n        if ( v10 > v17 + 3 )\n          v9[v17 + 3] = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( v66 && !(_BYTE)v14 )\n        {\n          if ( !a7 )\n          {\nLABEL_121:\n            v27 = v20 == 2;\n            if ( !v68 )\n            {\nLABEL_122:\n              ++v21;\n              v11 = v22 & (v11 ^ 1);\n              goto LABEL_148;\n            }\nLABEL_20:\n            if ( v92 )\n            {\nLABEL_92:\n              v33 = v20;\n              v34 = v19;\n              v35 = v33;\n              goto LABEL_132;\n            }\nLABEL_21:\n            ++v21;\n            goto LABEL_22;\n          }\nLABEL_18:\n          if ( ((*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1) == 0 )\n            goto LABEL_121;\n          v27 = v20 == 2;\n          goto LABEL_20;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v68 )\n        {\n          v11 = v22 & (v11 ^ 1);\nLABEL_148:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              v9[v17] = 39;\n            if ( v10 > v17 + 1 )\n              v9[v17 + 1] = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( (v27 & ((unsigned __int8)v22 ^ 1)) != 0 )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          v9[v17] = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          v9[v17] = v26;\n        ++v17;\n        break;\n      case 0x5C:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n            goto LABEL_270;\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_148;\n        }\nLABEL_87:\n        v11 = v92 & v66;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v11;\n        LOBYTE(v14) = (n != 0) & v11;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_148;\n        }\nLABEL_88:\n        if ( !v66 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 0x7B:\n      case 0x7D:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = *(_BYTE *)(a3 + 1) != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        v27 = v14 & v92;\n        if ( ((unsigned __int8)v14 & v92) == 0 )\n          goto LABEL_65;\n        goto LABEL_206;\n      default:\nLABEL_124:\n        if ( v90 == 1 )\n        {\n          v84 = v20;\n          v79 = v19;\n          v74 = v22;\n          v39 = __ctype_b_loc();\n          v22 = v74;\n          v19 = v79;\n          v20 = v84;\n          v40 = 1LL;\n          v41 = (*v39)[(unsigned __int8)v26];\n          LOWORD(v41) = (unsigned __int16)v41 >> 14;\n          v14 = v41 ^ 1;\n          LOBYTE(v14) = v66 & v14;\n        }\n        else\n        {\n          ps = 0LL;\n          if ( v19 == -1LL )\n          {\n            v85 = v20;\n            v80 = v22;\n            v75 = v23;\n            v48 = strlen((const char *)a3);\n            v20 = v85;\n            LOBYTE(v22) = v80;\n            v23 = v75;\n            v19 = v48;\n          }\n          v94 = v17;\n          v93 = v22;\n          v49 = 0LL;\n          v95 = v23;\n          v86 = v9;\n          v88 = v10;\n          v76 = v19;\n          v81 = v20;\n          while ( 1 )\n          {\n            v50 = v21 + v49;\n            v51 = sub_403230(&wc, a3 + v21 + v49, v76 - (v21 + v49), &ps);\n            v52 = v51;\n            if ( !v51 )\n            {\n              v11 ^= 1u;\n              v40 = v49;\n              v9 = v86;\n              v22 = v93;\n              v17 = v94;\n              v10 = v88;\n              v14 = (unsigned __int8)(v11 & v66);\n              v19 = v76;\n              v20 = v81;\n              goto LABEL_256;\n            }\n            if ( v51 == -1 )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              v14 = v66;\n              goto LABEL_256;\n            }\n            if ( v51 == -2 )\n              break;\n            v27 = v92 && v81 == 2;\n            if ( v27 && v52 != 1 )\n            {\n              v53 = (_BYTE *)(a3 + v50 + 1);\n              do\n              {\n                if ( (unsigned __int8)(*v53 - 91) <= 0x21u && ((1LL << (*v53 - 91)) & 0x20000002BLL) != 0 )\n                {\n                  LODWORD(v9) = (_DWORD)v86;\n                  LODWORD(v10) = v88;\n                  v34 = v76;\n                  v35 = v81;\n                  goto LABEL_132;\n                }\n                ++v53;\n              }\n              while ( (_BYTE *)(a3 + v52 + v50) != v53 );\n            }\n            if ( !iswprint(wc) )\n              v11 = 0;\n            v49 += v52;\n            if ( mbsinit(&ps) )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v14 = v11 ^ 1;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              LOBYTE(v14) = v66 & (v11 ^ 1);\n              goto LABEL_256;\n            }\n          }\n          v19 = v76;\n          v60 = v21 + v49;\n          v61 = (_BYTE *)(a3 + v21 + v49);\n          v62 = v49;\n          v40 = v49;\n          v22 = v93;\n          v17 = v94;\n          v9 = v86;\n          v10 = v88;\n          v20 = v81;\n          if ( v60 < v76 && *v61 )\n          {\n            do\n              ++v62;\n            while ( v76 > v21 + v62 && v95[v62] );\n            v40 = v62;\n          }\n          v14 = v66;\nLABEL_256:\n          if ( v40 > 1 )\n            goto LABEL_210;\n        }\n        if ( (_BYTE)v14 )\n        {\n          v14 = v66;\nLABEL_210:\n          v55 = v21 + v40;\n          v56 = 0;\n          v57 = v68;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              v58 = v20 == 2;\n              v27 = v20 == 2;\n              if ( v92 )\n              {\nLABEL_206:\n                v54 = v20;\n                v34 = v19;\n                v35 = v54;\n                goto LABEL_132;\n              }\n              v59 = v22 ^ 1;\n              if ( (v58 & ((unsigned __int8)v22 ^ 1)) != 0 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 36;\n                if ( v10 > v17 + 2 )\n                  v9[v17 + 2] = 39;\n                v17 += 3LL;\n                LOBYTE(v59) = v58 & (v22 ^ 1);\n                v22 = v59;\n              }\n              if ( v17 < v10 )\n                v9[v17] = 92;\n              if ( v10 > v17 + 1 )\n                v9[v17 + 1] = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                v9[v17 + 2] = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v55 <= v21 )\n                goto LABEL_33;\n              v56 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v56 ^ 1);\n              if ( v57 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v55 )\n                goto LABEL_148;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 39;\n                v17 += 2LL;\n                v57 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v57 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              v9[v17] = v26;\n            LOBYTE(v26) = *(_BYTE *)(a3 + v21);\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_65;\n    }\n  }\n  if ( !n )\n    goto LABEL_275;\n  if ( v19 == -1LL && n > 1 )\n  {\n    v82 = v20;\n    v77 = v22;\n    v24 = strlen((const char *)a3);\n    v20 = v82;\n    v22 = v77;\n    v23 = (_BYTE *)(a3 + v21);\n    v19 = v24;\n  }\n  if ( v21 + n > v19 )\n    goto LABEL_275;\n  v87 = v20;\n  v83 = v19;\n  v78 = v22;\n  v72 = v23;\n  v25 = memcmp(v23, s2, n);\n  v23 = v72;\n  v22 = v78;\n  v19 = v83;\n  v20 = v87;\n  if ( v25 )\n  {\nLABEL_275:\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        goto LABEL_103;\n      case 7:\nLABEL_94:\n        LOBYTE(v26) = 97;\n        v27 = 0;\n        goto LABEL_91;\n      case 8:\nLABEL_93:\n        LOBYTE(v26) = 98;\n        v27 = 0;\n        goto LABEL_91;\n      case 9:\nLABEL_102:\n        LOBYTE(v26) = 116;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xA:\nLABEL_90:\n        LOBYTE(v26) = 110;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xB:\nLABEL_101:\n        LOBYTE(v26) = 118;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xC:\nLABEL_100:\n        LOBYTE(v26) = 102;\n        v27 = 0;\nLABEL_91:\n        if ( v92 )\n          goto LABEL_92;\n        goto LABEL_21;\n      case 0xD:\n        v68 = 0;\nLABEL_96:\n        LOBYTE(v26) = 13;\n        v32 = 114;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        v68 = 0;\nLABEL_85:\n        v14 = 0;\n        goto LABEL_65;\n      case 0x23:\n      case 0x7E:\n        v68 = 0;\nLABEL_98:\n        if ( v21 )\n          goto LABEL_17;\n        v14 = 0;\n        goto LABEL_65;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        v68 = 0;\n        goto LABEL_17;\n      case 0x27:\n        v68 = 0;\n        goto LABEL_73;\n      case 0x3F:\n        v68 = 0;\n        goto LABEL_69;\n      case 0x5C:\n        v68 = 0;\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        v68 = 0;\n        goto LABEL_60;\n      default:\n        v68 = 0;\n        goto LABEL_124;\n    }\n  }\n  if ( !v92 )\n  {\n    LOBYTE(v26) = *v72;\n    switch ( *v72 )\n    {\n      case 0:\n        goto LABEL_105;\n      case 7:\n        goto LABEL_94;\n      case 8:\n        goto LABEL_93;\n      case 9:\n        goto LABEL_102;\n      case 0xA:\n        goto LABEL_90;\n      case 0xB:\n        goto LABEL_101;\n      case 0xC:\n        goto LABEL_100;\n      case 0xD:\n        goto LABEL_96;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        goto LABEL_85;\n      case 0x23:\n      case 0x7E:\n        goto LABEL_98;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_17;\n      case 0x27:\n        goto LABEL_73;\n      case 0x3F:\n        goto LABEL_69;\n      case 0x5C:\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        goto LABEL_60;\n      default:\n        goto LABEL_124;\n    }\n  }\nLABEL_269:\n  v63 = v20;\n  v34 = v19;\n  v35 = v63;\n  return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n}\n"
        },
        {
            "funcName": "sub_401750",
            "funcStartAddr": "0x4011f0",
            "funcEndAddr": "0x4011f5",
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(\n        _BYTE *a1,\n        unsigned __int64 a2,\n        __int64 a3,\n        unsigned __int64 a4,\n        int a5,\n        int a6,\n        __int64 a7,\n        const char *a8,\n        char *a9)\n{\n  _BYTE *v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t mb_cur_max; // rax\n  int v14; // edx\n  int v15; // r11d\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // r10d\n  unsigned __int64 v21; // r13\n  int v22; // r8d\n  _BYTE *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  unsigned __int8 v27; // al\n  char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // esi\n  int v34; // r10d\n  int v35; // r11d\n  int v36; // eax\n  unsigned __int64 v37; // rcx\n  unsigned __int64 v38; // rax\n  const unsigned __int16 **v39; // rax\n  unsigned __int64 v40; // rcx\n  int v41; // edx\n  int v42; // eax\n  __int64 v44; // rsi\n  int v45; // eax\n  char v46; // dl\n  const char *v47; // rax\n  size_t v48; // rax\n  unsigned __int64 v49; // rbx\n  unsigned __int64 v50; // r14\n  __int64 v51; // rax\n  __int64 v52; // r15\n  _BYTE *v53; // rdx\n  int v54; // edi\n  unsigned __int64 v55; // rcx\n  int v56; // eax\n  unsigned __int8 v57; // si\n  bool v58; // bp\n  int v59; // eax\n  unsigned __int64 v60; // rsi\n  _BYTE *v61; // rdi\n  unsigned __int64 v62; // rax\n  int v63; // eax\n  int v64; // eax\n  unsigned __int8 v66; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v68; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v69; // [rsp+10h] [rbp-A8h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  _BYTE *v72; // [rsp+28h] [rbp-90h]\n  int v73; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v74; // [rsp+28h] [rbp-90h]\n  _BYTE *v75; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v76; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v77; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v78; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v79; // [rsp+30h] [rbp-88h]\n  char v80; // [rsp+30h] [rbp-88h]\n  int v81; // [rsp+30h] [rbp-88h]\n  int v82; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v83; // [rsp+38h] [rbp-80h]\n  int v84; // [rsp+38h] [rbp-80h]\n  int v85; // [rsp+38h] [rbp-80h]\n  _BYTE *v86; // [rsp+38h] [rbp-80h]\n  int v87; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v88; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v90; // [rsp+50h] [rbp-68h]\n  bool v92; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v93; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v94; // [rsp+60h] [rbp-58h]\n  _BYTE *v95; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h] BYREF\n  mbstate_t ps; // [rsp+78h] [rbp-40h] BYREF\n\n  v9 = a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  mb_cur_max = __ctype_get_mb_cur_max();\n  v15 = a5;\n  v90 = mb_cur_max;\n  v16 = a4;\n  switch ( a5 )\n  {\n    case 0:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v66 = 0;\n        goto LABEL_38;\n      }\n      v92 = 1;\n      v17 = 0LL;\n      v66 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v92 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v66 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v66 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v92 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v92 = 1;\n        v17 = 0LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v92 = 0;\n        v17 = 1LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", a5);\n        v28 = (char *)sub_401650(\"'\", a5);\n        v16 = a4;\n        v15 = a5;\n        a9 = v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v73 = v15;\n      v69 = v16;\n      v92 = v11 != 0;\n      v30 = strlen(a9);\n      v66 = 1;\n      v16 = v69;\n      n = v30;\n      v15 = v73;\n      s2 = a9;\n      break;\n    default:\n      abort();\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = *(_BYTE *)(a3 + v21) != 0;\n    if ( !(_BYTE)v11 )\n    {\n      v45 = v20;\n      v34 = v19;\n      v35 = v45;\n      v27 = v17 == 0 && v92 && v45 == 2;\n      if ( v27 )\n        goto LABEL_132;\n      if ( s2 )\n      {\n        if ( !v92 )\n        {\n          v46 = *s2;\n          if ( *s2 )\n          {\n            v47 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                v9[v17] = v46;\n              v46 = v47[++v17];\n            }\n            while ( v46 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        v9[v17] = 0;\n      return v17;\n    }\n    v23 = (_BYTE *)(a3 + v21);\n    v68 = v66 & (v20 != 2);\n    if ( v68 )\n      break;\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v66 )\n        {\n          if ( (a6 & 1) != 0 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v92 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_148;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v68 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v92 )\n        {\n          v64 = v20;\n          v34 = v19;\n          v35 = v64;\n          v27 = v64 == 2;\n          goto LABEL_132;\n        }\n        v68 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v36 = v22 ^ 1;\n        LOBYTE(v36) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v36 )\n        {\n          if ( v17 < v10 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v37 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v36;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v36;\nLABEL_114:\n          v9[v37] = 92;\n        }\n        else\n        {\n          v37 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\n        }\n        v17 = v37 + 1;\n        v38 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v38 < v19 && (unsigned __int8)(*(_BYTE *)(a3 + v38) - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 48;\n          if ( v10 > v37 + 2 )\n            v9[v37 + 2] = 48;\n          v17 = v37 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 0xA:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 0xB:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xC:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xD:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v68 = v20 == 2 && v92;\n        if ( !v68 )\n          goto LABEL_88;\n        v42 = v20;\n        v34 = v19;\n        v35 = v42;\n        v27 = v68;\n        goto LABEL_132;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 0x23:\n      case 0x7E:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_127;\n      case 0x27:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v92 )\n          goto LABEL_270;\n        if ( v17 < v10 )\n          v9[v17] = 39;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 92;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v68 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 0x3F:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n          {\nLABEL_270:\n            v34 = v19;\n            v35 = 2;\n            v27 = v92;\nLABEL_132:\n            if ( v66 && v27 )\n              v35 = 4;\n            return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n          }\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( (a6 & 4) == 0 )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || *(_BYTE *)(a3 + v21 + 1) != 63 )\n          goto LABEL_65;\n        v26 = *(unsigned __int8 *)(a3 + v21 + 2);\n        if ( (unsigned __int8)v26 > 0x3Eu || (v44 = 0x7000A38200000000LL, !_bittest64(&v44, v26)) )\n        {\n          LOBYTE(v26) = 63;\nLABEL_65:\n          v11 = (v14 | v66 ^ 1) ^ 1;\n          LOBYTE(v11) = v92 | (v14 | v66 ^ 1) ^ 1;\n          if ( (_BYTE)v11 )\n          {\nLABEL_17:\n            v11 = 0;\n            if ( !a7 )\n              goto LABEL_121;\n            goto LABEL_18;\n          }\n          goto LABEL_66;\n        }\n        if ( v92 )\n          goto LABEL_269;\n        if ( v17 < v10 )\n          v9[v17] = 63;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 34;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 34;\n        if ( v10 > v17 + 3 )\n          v9[v17 + 3] = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( v66 && !(_BYTE)v14 )\n        {\n          if ( !a7 )\n          {\nLABEL_121:\n            v27 = v20 == 2;\n            if ( !v68 )\n            {\nLABEL_122:\n              ++v21;\n              v11 = v22 & (v11 ^ 1);\n              goto LABEL_148;\n            }\nLABEL_20:\n            if ( v92 )\n            {\nLABEL_92:\n              v33 = v20;\n              v34 = v19;\n              v35 = v33;\n              goto LABEL_132;\n            }\nLABEL_21:\n            ++v21;\n            goto LABEL_22;\n          }\nLABEL_18:\n          if ( ((*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1) == 0 )\n            goto LABEL_121;\n          v27 = v20 == 2;\n          goto LABEL_20;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v68 )\n        {\n          v11 = v22 & (v11 ^ 1);\nLABEL_148:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              v9[v17] = 39;\n            if ( v10 > v17 + 1 )\n              v9[v17 + 1] = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( (v27 & ((unsigned __int8)v22 ^ 1)) != 0 )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          v9[v17] = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          v9[v17] = v26;\n        ++v17;\n        break;\n      case 0x5C:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n            goto LABEL_270;\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_148;\n        }\nLABEL_87:\n        v11 = v92 & v66;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v11;\n        LOBYTE(v14) = (n != 0) & v11;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_148;\n        }\nLABEL_88:\n        if ( !v66 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 0x7B:\n      case 0x7D:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = *(_BYTE *)(a3 + 1) != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        v27 = v14 & v92;\n        if ( ((unsigned __int8)v14 & v92) == 0 )\n          goto LABEL_65;\n        goto LABEL_206;\n      default:\nLABEL_124:\n        if ( v90 == 1 )\n        {\n          v84 = v20;\n          v79 = v19;\n          v74 = v22;\n          v39 = __ctype_b_loc();\n          v22 = v74;\n          v19 = v79;\n          v20 = v84;\n          v40 = 1LL;\n          v41 = (*v39)[(unsigned __int8)v26];\n          LOWORD(v41) = (unsigned __int16)v41 >> 14;\n          v14 = v41 ^ 1;\n          LOBYTE(v14) = v66 & v14;\n        }\n        else\n        {\n          ps = 0LL;\n          if ( v19 == -1LL )\n          {\n            v85 = v20;\n            v80 = v22;\n            v75 = v23;\n            v48 = strlen((const char *)a3);\n            v20 = v85;\n            LOBYTE(v22) = v80;\n            v23 = v75;\n            v19 = v48;\n          }\n          v94 = v17;\n          v93 = v22;\n          v49 = 0LL;\n          v95 = v23;\n          v86 = v9;\n          v88 = v10;\n          v76 = v19;\n          v81 = v20;\n          while ( 1 )\n          {\n            v50 = v21 + v49;\n            v51 = sub_403230(&wc, a3 + v21 + v49, v76 - (v21 + v49), &ps);\n            v52 = v51;\n            if ( !v51 )\n            {\n              v11 ^= 1u;\n              v40 = v49;\n              v9 = v86;\n              v22 = v93;\n              v17 = v94;\n              v10 = v88;\n              v14 = (unsigned __int8)(v11 & v66);\n              v19 = v76;\n              v20 = v81;\n              goto LABEL_256;\n            }\n            if ( v51 == -1 )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              v14 = v66;\n              goto LABEL_256;\n            }\n            if ( v51 == -2 )\n              break;\n            v27 = v92 && v81 == 2;\n            if ( v27 && v52 != 1 )\n            {\n              v53 = (_BYTE *)(a3 + v50 + 1);\n              do\n              {\n                if ( (unsigned __int8)(*v53 - 91) <= 0x21u && ((1LL << (*v53 - 91)) & 0x20000002BLL) != 0 )\n                {\n                  LODWORD(v9) = (_DWORD)v86;\n                  LODWORD(v10) = v88;\n                  v34 = v76;\n                  v35 = v81;\n                  goto LABEL_132;\n                }\n                ++v53;\n              }\n              while ( (_BYTE *)(a3 + v52 + v50) != v53 );\n            }\n            if ( !iswprint(wc) )\n              v11 = 0;\n            v49 += v52;\n            if ( mbsinit(&ps) )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v14 = v11 ^ 1;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              LOBYTE(v14) = v66 & (v11 ^ 1);\n              goto LABEL_256;\n            }\n          }\n          v19 = v76;\n          v60 = v21 + v49;\n          v61 = (_BYTE *)(a3 + v21 + v49);\n          v62 = v49;\n          v40 = v49;\n          v22 = v93;\n          v17 = v94;\n          v9 = v86;\n          v10 = v88;\n          v20 = v81;\n          if ( v60 < v76 && *v61 )\n          {\n            do\n              ++v62;\n            while ( v76 > v21 + v62 && v95[v62] );\n            v40 = v62;\n          }\n          v14 = v66;\nLABEL_256:\n          if ( v40 > 1 )\n            goto LABEL_210;\n        }\n        if ( (_BYTE)v14 )\n        {\n          v14 = v66;\nLABEL_210:\n          v55 = v21 + v40;\n          v56 = 0;\n          v57 = v68;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              v58 = v20 == 2;\n              v27 = v20 == 2;\n              if ( v92 )\n              {\nLABEL_206:\n                v54 = v20;\n                v34 = v19;\n                v35 = v54;\n                goto LABEL_132;\n              }\n              v59 = v22 ^ 1;\n              if ( (v58 & ((unsigned __int8)v22 ^ 1)) != 0 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 36;\n                if ( v10 > v17 + 2 )\n                  v9[v17 + 2] = 39;\n                v17 += 3LL;\n                LOBYTE(v59) = v58 & (v22 ^ 1);\n                v22 = v59;\n              }\n              if ( v17 < v10 )\n                v9[v17] = 92;\n              if ( v10 > v17 + 1 )\n                v9[v17 + 1] = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                v9[v17 + 2] = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v55 <= v21 )\n                goto LABEL_33;\n              v56 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v56 ^ 1);\n              if ( v57 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v55 )\n                goto LABEL_148;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 39;\n                v17 += 2LL;\n                v57 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v57 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              v9[v17] = v26;\n            LOBYTE(v26) = *(_BYTE *)(a3 + v21);\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_65;\n    }\n  }\n  if ( !n )\n    goto LABEL_275;\n  if ( v19 == -1LL && n > 1 )\n  {\n    v82 = v20;\n    v77 = v22;\n    v24 = strlen((const char *)a3);\n    v20 = v82;\n    v22 = v77;\n    v23 = (_BYTE *)(a3 + v21);\n    v19 = v24;\n  }\n  if ( v21 + n > v19 )\n    goto LABEL_275;\n  v87 = v20;\n  v83 = v19;\n  v78 = v22;\n  v72 = v23;\n  v25 = memcmp(v23, s2, n);\n  v23 = v72;\n  v22 = v78;\n  v19 = v83;\n  v20 = v87;\n  if ( v25 )\n  {\nLABEL_275:\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        goto LABEL_103;\n      case 7:\nLABEL_94:\n        LOBYTE(v26) = 97;\n        v27 = 0;\n        goto LABEL_91;\n      case 8:\nLABEL_93:\n        LOBYTE(v26) = 98;\n        v27 = 0;\n        goto LABEL_91;\n      case 9:\nLABEL_102:\n        LOBYTE(v26) = 116;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xA:\nLABEL_90:\n        LOBYTE(v26) = 110;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xB:\nLABEL_101:\n        LOBYTE(v26) = 118;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xC:\nLABEL_100:\n        LOBYTE(v26) = 102;\n        v27 = 0;\nLABEL_91:\n        if ( v92 )\n          goto LABEL_92;\n        goto LABEL_21;\n      case 0xD:\n        v68 = 0;\nLABEL_96:\n        LOBYTE(v26) = 13;\n        v32 = 114;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        v68 = 0;\nLABEL_85:\n        v14 = 0;\n        goto LABEL_65;\n      case 0x23:\n      case 0x7E:\n        v68 = 0;\nLABEL_98:\n        if ( v21 )\n          goto LABEL_17;\n        v14 = 0;\n        goto LABEL_65;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        v68 = 0;\n        goto LABEL_17;\n      case 0x27:\n        v68 = 0;\n        goto LABEL_73;\n      case 0x3F:\n        v68 = 0;\n        goto LABEL_69;\n      case 0x5C:\n        v68 = 0;\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        v68 = 0;\n        goto LABEL_60;\n      default:\n        v68 = 0;\n        goto LABEL_124;\n    }\n  }\n  if ( !v92 )\n  {\n    LOBYTE(v26) = *v72;\n    switch ( *v72 )\n    {\n      case 0:\n        goto LABEL_105;\n      case 7:\n        goto LABEL_94;\n      case 8:\n        goto LABEL_93;\n      case 9:\n        goto LABEL_102;\n      case 0xA:\n        goto LABEL_90;\n      case 0xB:\n        goto LABEL_101;\n      case 0xC:\n        goto LABEL_100;\n      case 0xD:\n        goto LABEL_96;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        goto LABEL_85;\n      case 0x23:\n      case 0x7E:\n        goto LABEL_98;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_17;\n      case 0x27:\n        goto LABEL_73;\n      case 0x3F:\n        goto LABEL_69;\n      case 0x5C:\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        goto LABEL_60;\n      default:\n        goto LABEL_124;\n    }\n  }\nLABEL_269:\n  v63 = v20;\n  v34 = v19;\n  v35 = v63;\n  return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n}\n\nunsigned __int64 __fastcall sub_401750(\n        _BYTE *a1,\n        unsigned __int64 a2,\n        __int64 a3,\n        unsigned __int64 a4,\n        int a5,\n        int a6,\n        __int64 a7,\n        const char *a8,\n        char *a9)\n{\n  _BYTE *v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t mb_cur_max; // rax\n  int v14; // edx\n  int v15; // r11d\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // r10d\n  unsigned __int64 v21; // r13\n  int v22; // r8d\n  _BYTE *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  unsigned __int8 v27; // al\n  char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // esi\n  int v34; // r10d\n  int v35; // r11d\n  int v36; // eax\n  unsigned __int64 v37; // rcx\n  unsigned __int64 v38; // rax\n  const unsigned __int16 **v39; // rax\n  unsigned __int64 v40; // rcx\n  int v41; // edx\n  int v42; // eax\n  __int64 v44; // rsi\n  int v45; // eax\n  char v46; // dl\n  const char *v47; // rax\n  size_t v48; // rax\n  unsigned __int64 v49; // rbx\n  unsigned __int64 v50; // r14\n  __int64 v51; // rax\n  __int64 v52; // r15\n  _BYTE *v53; // rdx\n  int v54; // edi\n  unsigned __int64 v55; // rcx\n  int v56; // eax\n  unsigned __int8 v57; // si\n  bool v58; // bp\n  int v59; // eax\n  unsigned __int64 v60; // rsi\n  _BYTE *v61; // rdi\n  unsigned __int64 v62; // rax\n  int v63; // eax\n  int v64; // eax\n  unsigned __int8 v66; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v68; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v69; // [rsp+10h] [rbp-A8h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  _BYTE *v72; // [rsp+28h] [rbp-90h]\n  int v73; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v74; // [rsp+28h] [rbp-90h]\n  _BYTE *v75; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v76; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v77; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v78; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v79; // [rsp+30h] [rbp-88h]\n  char v80; // [rsp+30h] [rbp-88h]\n  int v81; // [rsp+30h] [rbp-88h]\n  int v82; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v83; // [rsp+38h] [rbp-80h]\n  int v84; // [rsp+38h] [rbp-80h]\n  int v85; // [rsp+38h] [rbp-80h]\n  _BYTE *v86; // [rsp+38h] [rbp-80h]\n  int v87; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v88; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v90; // [rsp+50h] [rbp-68h]\n  bool v92; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v93; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v94; // [rsp+60h] [rbp-58h]\n  _BYTE *v95; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h] BYREF\n  mbstate_t ps; // [rsp+78h] [rbp-40h] BYREF\n\n  v9 = a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  mb_cur_max = __ctype_get_mb_cur_max();\n  v15 = a5;\n  v90 = mb_cur_max;\n  v16 = a4;\n  switch ( a5 )\n  {\n    case 0:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v66 = 0;\n        goto LABEL_38;\n      }\n      v92 = 1;\n      v17 = 0LL;\n      v66 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v92 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v66 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v66 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v92 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v92 = 1;\n        v17 = 0LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v92 = 0;\n        v17 = 1LL;\n        v66 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v92 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v66 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v92 = 0;\n      v17 = 0LL;\n      v66 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", a5);\n        v28 = (char *)sub_401650(\"'\", a5);\n        v16 = a4;\n        v15 = a5;\n        a9 = v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v73 = v15;\n      v69 = v16;\n      v92 = v11 != 0;\n      v30 = strlen(a9);\n      v66 = 1;\n      v16 = v69;\n      n = v30;\n      v15 = v73;\n      s2 = a9;\n      break;\n    default:\n      abort();\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = *(_BYTE *)(a3 + v21) != 0;\n    if ( !(_BYTE)v11 )\n    {\n      v45 = v20;\n      v34 = v19;\n      v35 = v45;\n      v27 = v17 == 0 && v92 && v45 == 2;\n      if ( v27 )\n        goto LABEL_132;\n      if ( s2 )\n      {\n        if ( !v92 )\n        {\n          v46 = *s2;\n          if ( *s2 )\n          {\n            v47 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                v9[v17] = v46;\n              v46 = v47[++v17];\n            }\n            while ( v46 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        v9[v17] = 0;\n      return v17;\n    }\n    v23 = (_BYTE *)(a3 + v21);\n    v68 = v66 & (v20 != 2);\n    if ( v68 )\n      break;\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v66 )\n        {\n          if ( (a6 & 1) != 0 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v92 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_148;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v68 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v92 )\n        {\n          v64 = v20;\n          v34 = v19;\n          v35 = v64;\n          v27 = v64 == 2;\n          goto LABEL_132;\n        }\n        v68 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v36 = v22 ^ 1;\n        LOBYTE(v36) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v36 )\n        {\n          if ( v17 < v10 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v37 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v36;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v36;\nLABEL_114:\n          v9[v37] = 92;\n        }\n        else\n        {\n          v37 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\n        }\n        v17 = v37 + 1;\n        v38 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v38 < v19 && (unsigned __int8)(*(_BYTE *)(a3 + v38) - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 48;\n          if ( v10 > v37 + 2 )\n            v9[v37 + 2] = 48;\n          v17 = v37 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 0xA:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 0xB:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xC:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0xD:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v68 = v20 == 2 && v92;\n        if ( !v68 )\n          goto LABEL_88;\n        v42 = v20;\n        v34 = v19;\n        v35 = v42;\n        v27 = v68;\n        goto LABEL_132;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 0x23:\n      case 0x7E:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_127;\n      case 0x27:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v92 )\n          goto LABEL_270;\n        if ( v17 < v10 )\n          v9[v17] = 39;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 92;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v68 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 0x3F:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n          {\nLABEL_270:\n            v34 = v19;\n            v35 = 2;\n            v27 = v92;\nLABEL_132:\n            if ( v66 && v27 )\n              v35 = 4;\n            return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n          }\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( (a6 & 4) == 0 )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || *(_BYTE *)(a3 + v21 + 1) != 63 )\n          goto LABEL_65;\n        v26 = *(unsigned __int8 *)(a3 + v21 + 2);\n        if ( (unsigned __int8)v26 > 0x3Eu || (v44 = 0x7000A38200000000LL, !_bittest64(&v44, v26)) )\n        {\n          LOBYTE(v26) = 63;\nLABEL_65:\n          v11 = (v14 | v66 ^ 1) ^ 1;\n          LOBYTE(v11) = v92 | (v14 | v66 ^ 1) ^ 1;\n          if ( (_BYTE)v11 )\n          {\nLABEL_17:\n            v11 = 0;\n            if ( !a7 )\n              goto LABEL_121;\n            goto LABEL_18;\n          }\n          goto LABEL_66;\n        }\n        if ( v92 )\n          goto LABEL_269;\n        if ( v17 < v10 )\n          v9[v17] = 63;\n        if ( v10 > v17 + 1 )\n          v9[v17 + 1] = 34;\n        if ( v10 > v17 + 2 )\n          v9[v17 + 2] = 34;\n        if ( v10 > v17 + 3 )\n          v9[v17 + 3] = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( v66 && !(_BYTE)v14 )\n        {\n          if ( !a7 )\n          {\nLABEL_121:\n            v27 = v20 == 2;\n            if ( !v68 )\n            {\nLABEL_122:\n              ++v21;\n              v11 = v22 & (v11 ^ 1);\n              goto LABEL_148;\n            }\nLABEL_20:\n            if ( v92 )\n            {\nLABEL_92:\n              v33 = v20;\n              v34 = v19;\n              v35 = v33;\n              goto LABEL_132;\n            }\nLABEL_21:\n            ++v21;\n            goto LABEL_22;\n          }\nLABEL_18:\n          if ( ((*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1) == 0 )\n            goto LABEL_121;\n          v27 = v20 == 2;\n          goto LABEL_20;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v68 )\n        {\n          v11 = v22 & (v11 ^ 1);\nLABEL_148:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              v9[v17] = 39;\n            if ( v10 > v17 + 1 )\n              v9[v17 + 1] = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( (v27 & ((unsigned __int8)v22 ^ 1)) != 0 )\n        {\n          if ( v10 > v17 )\n            v9[v17] = 39;\n          if ( v10 > v17 + 1 )\n            v9[v17 + 1] = 36;\n          if ( v10 > v17 + 2 )\n            v9[v17 + 2] = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          v9[v17] = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          v9[v17] = v26;\n        ++v17;\n        break;\n      case 0x5C:\n        if ( v20 == 2 )\n        {\n          if ( v92 )\n            goto LABEL_270;\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_148;\n        }\nLABEL_87:\n        v11 = v92 & v66;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v11;\n        LOBYTE(v14) = (n != 0) & v11;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_148;\n        }\nLABEL_88:\n        if ( !v66 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 0x7B:\n      case 0x7D:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = *(_BYTE *)(a3 + 1) != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        v27 = v14 & v92;\n        if ( ((unsigned __int8)v14 & v92) == 0 )\n          goto LABEL_65;\n        goto LABEL_206;\n      default:\nLABEL_124:\n        if ( v90 == 1 )\n        {\n          v84 = v20;\n          v79 = v19;\n          v74 = v22;\n          v39 = __ctype_b_loc();\n          v22 = v74;\n          v19 = v79;\n          v20 = v84;\n          v40 = 1LL;\n          v41 = (*v39)[(unsigned __int8)v26];\n          LOWORD(v41) = (unsigned __int16)v41 >> 14;\n          v14 = v41 ^ 1;\n          LOBYTE(v14) = v66 & v14;\n        }\n        else\n        {\n          ps = 0LL;\n          if ( v19 == -1LL )\n          {\n            v85 = v20;\n            v80 = v22;\n            v75 = v23;\n            v48 = strlen((const char *)a3);\n            v20 = v85;\n            LOBYTE(v22) = v80;\n            v23 = v75;\n            v19 = v48;\n          }\n          v94 = v17;\n          v93 = v22;\n          v49 = 0LL;\n          v95 = v23;\n          v86 = v9;\n          v88 = v10;\n          v76 = v19;\n          v81 = v20;\n          while ( 1 )\n          {\n            v50 = v21 + v49;\n            v51 = sub_403230(&wc, a3 + v21 + v49, v76 - (v21 + v49), &ps);\n            v52 = v51;\n            if ( !v51 )\n            {\n              v11 ^= 1u;\n              v40 = v49;\n              v9 = v86;\n              v22 = v93;\n              v17 = v94;\n              v10 = v88;\n              v14 = (unsigned __int8)(v11 & v66);\n              v19 = v76;\n              v20 = v81;\n              goto LABEL_256;\n            }\n            if ( v51 == -1 )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              v14 = v66;\n              goto LABEL_256;\n            }\n            if ( v51 == -2 )\n              break;\n            v27 = v92 && v81 == 2;\n            if ( v27 && v52 != 1 )\n            {\n              v53 = (_BYTE *)(a3 + v50 + 1);\n              do\n              {\n                if ( (unsigned __int8)(*v53 - 91) <= 0x21u && ((1LL << (*v53 - 91)) & 0x20000002BLL) != 0 )\n                {\n                  LODWORD(v9) = (_DWORD)v86;\n                  LODWORD(v10) = v88;\n                  v34 = v76;\n                  v35 = v81;\n                  goto LABEL_132;\n                }\n                ++v53;\n              }\n              while ( (_BYTE *)(a3 + v52 + v50) != v53 );\n            }\n            if ( !iswprint(wc) )\n              v11 = 0;\n            v49 += v52;\n            if ( mbsinit(&ps) )\n            {\n              v40 = v49;\n              v22 = v93;\n              v17 = v94;\n              v14 = v11 ^ 1;\n              v9 = v86;\n              v10 = v88;\n              v19 = v76;\n              v20 = v81;\n              LOBYTE(v14) = v66 & (v11 ^ 1);\n              goto LABEL_256;\n            }\n          }\n          v19 = v76;\n          v60 = v21 + v49;\n          v61 = (_BYTE *)(a3 + v21 + v49);\n          v62 = v49;\n          v40 = v49;\n          v22 = v93;\n          v17 = v94;\n          v9 = v86;\n          v10 = v88;\n          v20 = v81;\n          if ( v60 < v76 && *v61 )\n          {\n            do\n              ++v62;\n            while ( v76 > v21 + v62 && v95[v62] );\n            v40 = v62;\n          }\n          v14 = v66;\nLABEL_256:\n          if ( v40 > 1 )\n            goto LABEL_210;\n        }\n        if ( (_BYTE)v14 )\n        {\n          v14 = v66;\nLABEL_210:\n          v55 = v21 + v40;\n          v56 = 0;\n          v57 = v68;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              v58 = v20 == 2;\n              v27 = v20 == 2;\n              if ( v92 )\n              {\nLABEL_206:\n                v54 = v20;\n                v34 = v19;\n                v35 = v54;\n                goto LABEL_132;\n              }\n              v59 = v22 ^ 1;\n              if ( (v58 & ((unsigned __int8)v22 ^ 1)) != 0 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 36;\n                if ( v10 > v17 + 2 )\n                  v9[v17 + 2] = 39;\n                v17 += 3LL;\n                LOBYTE(v59) = v58 & (v22 ^ 1);\n                v22 = v59;\n              }\n              if ( v17 < v10 )\n                v9[v17] = 92;\n              if ( v10 > v17 + 1 )\n                v9[v17 + 1] = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                v9[v17 + 2] = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v55 <= v21 )\n                goto LABEL_33;\n              v56 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v56 ^ 1);\n              if ( v57 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v55 )\n                goto LABEL_148;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  v9[v17] = 39;\n                if ( v10 > v17 + 1 )\n                  v9[v17 + 1] = 39;\n                v17 += 2LL;\n                v57 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v57 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              v9[v17] = v26;\n            LOBYTE(v26) = *(_BYTE *)(a3 + v21);\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_65;\n    }\n  }\n  if ( !n )\n    goto LABEL_275;\n  if ( v19 == -1LL && n > 1 )\n  {\n    v82 = v20;\n    v77 = v22;\n    v24 = strlen((const char *)a3);\n    v20 = v82;\n    v22 = v77;\n    v23 = (_BYTE *)(a3 + v21);\n    v19 = v24;\n  }\n  if ( v21 + n > v19 )\n    goto LABEL_275;\n  v87 = v20;\n  v83 = v19;\n  v78 = v22;\n  v72 = v23;\n  v25 = memcmp(v23, s2, n);\n  v23 = v72;\n  v22 = v78;\n  v19 = v83;\n  v20 = v87;\n  if ( v25 )\n  {\nLABEL_275:\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        goto LABEL_103;\n      case 7:\nLABEL_94:\n        LOBYTE(v26) = 97;\n        v27 = 0;\n        goto LABEL_91;\n      case 8:\nLABEL_93:\n        LOBYTE(v26) = 98;\n        v27 = 0;\n        goto LABEL_91;\n      case 9:\nLABEL_102:\n        LOBYTE(v26) = 116;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xA:\nLABEL_90:\n        LOBYTE(v26) = 110;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xB:\nLABEL_101:\n        LOBYTE(v26) = 118;\n        v27 = 0;\n        goto LABEL_91;\n      case 0xC:\nLABEL_100:\n        LOBYTE(v26) = 102;\n        v27 = 0;\nLABEL_91:\n        if ( v92 )\n          goto LABEL_92;\n        goto LABEL_21;\n      case 0xD:\n        v68 = 0;\nLABEL_96:\n        LOBYTE(v26) = 13;\n        v32 = 114;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        v68 = 0;\nLABEL_85:\n        v14 = 0;\n        goto LABEL_65;\n      case 0x23:\n      case 0x7E:\n        v68 = 0;\nLABEL_98:\n        if ( v21 )\n          goto LABEL_17;\n        v14 = 0;\n        goto LABEL_65;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        v68 = 0;\n        goto LABEL_17;\n      case 0x27:\n        v68 = 0;\n        goto LABEL_73;\n      case 0x3F:\n        v68 = 0;\n        goto LABEL_69;\n      case 0x5C:\n        v68 = 0;\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        v68 = 0;\n        goto LABEL_60;\n      default:\n        v68 = 0;\n        goto LABEL_124;\n    }\n  }\n  if ( !v92 )\n  {\n    LOBYTE(v26) = *v72;\n    switch ( *v72 )\n    {\n      case 0:\n        goto LABEL_105;\n      case 7:\n        goto LABEL_94;\n      case 8:\n        goto LABEL_93;\n      case 9:\n        goto LABEL_102;\n      case 0xA:\n        goto LABEL_90;\n      case 0xB:\n        goto LABEL_101;\n      case 0xC:\n        goto LABEL_100;\n      case 0xD:\n        goto LABEL_96;\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2A:\n      case 0x3B:\n      case 0x3C:\n      case 0x3D:\n      case 0x3E:\n      case 0x5B:\n      case 0x5E:\n      case 0x60:\n      case 0x7C:\n        goto LABEL_85;\n      case 0x23:\n      case 0x7E:\n        goto LABEL_98;\n      case 0x25:\n      case 0x2B:\n      case 0x2C:\n      case 0x2D:\n      case 0x2E:\n      case 0x2F:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3A:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4A:\n      case 0x4B:\n      case 0x4C:\n      case 0x4D:\n      case 0x4E:\n      case 0x4F:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5A:\n      case 0x5D:\n      case 0x5F:\n      case 0x61:\n      case 0x62:\n      case 0x63:\n      case 0x64:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6A:\n      case 0x6B:\n      case 0x6C:\n      case 0x6D:\n      case 0x6E:\n      case 0x6F:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7A:\n        goto LABEL_17;\n      case 0x27:\n        goto LABEL_73;\n      case 0x3F:\n        goto LABEL_69;\n      case 0x5C:\n        goto LABEL_87;\n      case 0x7B:\n      case 0x7D:\n        goto LABEL_60;\n      default:\n        goto LABEL_124;\n    }\n  }\nLABEL_269:\n  v63 = v20;\n  v34 = v19;\n  v35 = v63;\n  return sub_401750((int)v9, v10, a3, v34, v35, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, a9);\n}\n"
        },
        {
            "funcName": "sub_402760",
            "funcStartAddr": "0x4011f5",
            "funcEndAddr": "0x4011fa",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(int a1, __int64 a2, unsigned __int64 a3, __int64 a4)\n{\n  int *v6; // rax\n  __m128i *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __m128i *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // r8d\n  __m128i *v19; // rax\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  unsigned __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v6 = __errno_location();\n  v7 = (__m128i *)ptr;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( ptr == &xmmword_6061C0 )\n    {\n      v19 = (__m128i *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      ptr = v19;\n      *v19 = _mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__m128i *)sub_403020(ptr, v9);\n      v11 = (unsigned int)(a1 + 1);\n      ptr = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(a4 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, a2, a3, *(_DWORD *)a4, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)a4;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, a2, a3, v17, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(int a1, __int64 a2, unsigned __int64 a3, __int64 a4)\n{\n  int *v6; // rax\n  __m128i *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __m128i *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // r8d\n  __m128i *v19; // rax\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  unsigned __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v6 = __errno_location();\n  v7 = (__m128i *)ptr;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( ptr == &xmmword_6061C0 )\n    {\n      v19 = (__m128i *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      ptr = v19;\n      *v19 = _mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__m128i *)sub_403020(ptr, v9);\n      v11 = (unsigned int)(a1 + 1);\n      ptr = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(a4 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, a2, a3, *(_DWORD *)a4, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)a4;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, a2, a3, v17, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n"
        },
        {
            "funcName": "sub_402760",
            "funcStartAddr": "0x4011f5",
            "funcEndAddr": "0x4011fa",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(int a1, __int64 a2, unsigned __int64 a3, __int64 a4)\n{\n  int *v6; // rax\n  __m128i *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __m128i *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // r8d\n  __m128i *v19; // rax\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  unsigned __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v6 = __errno_location();\n  v7 = (__m128i *)ptr;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( ptr == &xmmword_6061C0 )\n    {\n      v19 = (__m128i *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      ptr = v19;\n      *v19 = _mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__m128i *)sub_403020(ptr, v9);\n      v11 = (unsigned int)(a1 + 1);\n      ptr = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(a4 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, a2, a3, *(_DWORD *)a4, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)a4;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, a2, a3, v17, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(int a1, __int64 a2, unsigned __int64 a3, __int64 a4)\n{\n  int *v6; // rax\n  __m128i *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __m128i *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // r8d\n  __m128i *v19; // rax\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  unsigned __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v6 = __errno_location();\n  v7 = (__m128i *)ptr;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( ptr == &xmmword_6061C0 )\n    {\n      v19 = (__m128i *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      ptr = v19;\n      *v19 = _mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__m128i *)sub_403020(ptr, v9);\n      v11 = (unsigned int)(a1 + 1);\n      ptr = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(a4 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, a2, a3, *(_DWORD *)a4, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)a4;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, a2, a3, v17, v24, a4 + 8, *(const char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n"
        },
        {
            "funcName": "sub_402900",
            "funcStartAddr": "0x402900",
            "funcEndAddr": "0x402934",
            "decompiledFuncCode": "__int64 __fastcall sub_402900(__int128 *a1)\n{\n  __int128 *v1; // rbx\n  int *v2; // rax\n  int v3; // r12d\n  int *v4; // rbp\n  __int64 result; // rax\n\n  v1 = a1;\n  v2 = __errno_location();\n  v3 = *v2;\n  v4 = v2;\n  if ( !a1 )\n    v1 = &xmmword_606340;\n  result = sub_403190(v1, 0x38uLL);\n  *v4 = v3;\n  return result;\n}\n"
        },
        {
            "funcName": "sub_4029F0",
            "funcStartAddr": "0x4029f0",
            "funcEndAddr": "0x402a62",
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_4029F0(_BYTE *a1, unsigned __int64 a2, __int64 a3, unsigned __int64 a4, __int128 *a5)\n{\n  __int128 *v6; // rbx\n  int *v7; // rax\n  int v8; // r12d\n  int *v9; // rbp\n  unsigned __int64 result; // rax\n\n  v6 = a5;\n  if ( !a5 )\n    v6 = &xmmword_606340;\n  v7 = __errno_location();\n  v8 = *v7;\n  v9 = v7;\n  result = sub_401750(\n             a1,\n             a2,\n             a3,\n             a4,\n             *(_DWORD *)v6,\n             *((_DWORD *)v6 + 1),\n             (__int64)v6 + 8,\n             *((const char **)v6 + 5),\n             *((char **)v6 + 6));\n  *v9 = v8;\n  return result;\n}\n"
        },
        {
            "funcName": "sub_402A70",
            "funcStartAddr": "0x402a70",
            "funcEndAddr": "0x402b51",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402A70(__int64 a1, unsigned __int64 a2, unsigned __int64 *a3, __int128 *a4)\n{\n  __int128 *v5; // rbx\n  int *v6; // r13\n  int v7; // ebp\n  int v9; // [rsp+Ch] [rbp-5Ch]\n  _BYTE *v10; // [rsp+10h] [rbp-58h]\n  unsigned __int64 v11; // [rsp+28h] [rbp-40h]\n\n  v5 = a4;\n  if ( !a4 )\n    v5 = &xmmword_606340;\n  v6 = __errno_location();\n  v7 = *((_DWORD *)v5 + 1) | (a3 == 0LL);\n  v9 = *v6;\n  v11 = sub_401750(0LL, 0LL, a1, a2, *(_DWORD *)v5, v7, (__int64)v5 + 8, *((const char **)v5 + 5), *((char **)v5 + 6));\n  v10 = (_BYTE *)sub_402FD0(v11 + 1);\n  sub_401750(v10, v11 + 1, a1, a2, *(_DWORD *)v5, v7, (__int64)v5 + 8, *((const char **)v5 + 5), *((char **)v5 + 6));\n  *v6 = v9;\n  if ( a3 )\n    *a3 = v11;\n  return v10;\n}\n"
        },
        {
            "funcName": "sub_402B70",
            "funcStartAddr": "0x402b70",
            "funcEndAddr": "0x402c05",
            "decompiledFuncCode": "void sub_402B70()\n{\n  __int128 *v0; // r12\n  void **v1; // rbx\n  void **v2; // rbp\n  void *v3; // rdi\n  void *v4; // rdi\n\n  v0 = (__int128 *)ptr;\n  if ( (unsigned int)dword_6061D0 > 1 )\n  {\n    v1 = (void **)((char *)ptr + 24);\n    v2 = (void **)((char *)ptr + 16 * (unsigned int)(dword_6061D0 - 2) + 40);\n    do\n    {\n      v3 = *v1;\n      v1 += 2;\n      free(v3);\n    }\n    while ( v1 != v2 );\n  }\n  v4 = (void *)*((_QWORD *)v0 + 1);\n  if ( v4 != &unk_606240 )\n  {\n    free(v4);\n    *(_QWORD *)&xmmword_6061C0 = 256LL;\n    *((_QWORD *)&xmmword_6061C0 + 1) = &unk_606240;\n  }\n  if ( v0 != &xmmword_6061C0 )\n  {\n    free(v0);\n    ptr = &xmmword_6061C0;\n  }\n  dword_6061D0 = 1;\n}\n"
        },
        {
            "funcName": "sub_402C80",
            "funcStartAddr": "0x4011fa",
            "funcEndAddr": "0x4011ff",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402C80(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v4[1] = 0;\n  v5 = 0LL;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n\n_BYTE *__fastcall sub_402C80(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v4[1] = 0;\n  v5 = 0LL;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n"
        },
        {
            "funcName": "sub_402C80",
            "funcStartAddr": "0x4011fa",
            "funcEndAddr": "0x4011ff",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402C80(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v4[1] = 0;\n  v5 = 0LL;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n\n_BYTE *__fastcall sub_402C80(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v4[1] = 0;\n  v5 = 0LL;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n"
        },
        {
            "funcName": "sub_402CF0",
            "funcStartAddr": "0x4011ff",
            "funcEndAddr": "0x401204",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402CF0(int a1, int a2, __int64 a3, unsigned __int64 a4)\n{\n  int v5[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5[0] = a2;\n  v5[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)v5);\n}\n\n_BYTE *__fastcall sub_402CF0(int a1, int a2, __int64 a3, unsigned __int64 a4)\n{\n  int v5[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5[0] = a2;\n  v5[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)v5);\n}\n"
        },
        {
            "funcName": "sub_402CF0",
            "funcStartAddr": "0x4011ff",
            "funcEndAddr": "0x401204",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402CF0(int a1, int a2, __int64 a3, unsigned __int64 a4)\n{\n  int v5[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5[0] = a2;\n  v5[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)v5);\n}\n\n_BYTE *__fastcall sub_402CF0(int a1, int a2, __int64 a3, unsigned __int64 a4)\n{\n  int v5[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5[0] = a2;\n  v5[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)v5);\n}\n"
        },
        {
            "funcName": "sub_402D80",
            "funcStartAddr": "0x402d80",
            "funcEndAddr": "0x402df0",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402D80(__int64 a1, unsigned __int64 a2, unsigned __int8 a3)\n{\n  _DWORD *v3; // r8\n  __int128 v5[3]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v6; // [rsp+30h] [rbp-18h]\n\n  v6 = qword_606370;\n  v5[0] = (__int128)_mm_load_si128((const __m128i *)&xmmword_606340);\n  v5[1] = (__int128)_mm_load_si128((const __m128i *)&xmmword_606350);\n  v3 = (_DWORD *)v5 + (a3 >> 5) + 2;\n  v5[2] = (__int128)_mm_load_si128((const __m128i *)&xmmword_606360);\n  *v3 ^= (((*v3 >> (a3 & 0x1F)) & 1) == 0) << (a3 & 0x1F);\n  return sub_402760(0, a1, a2, (__int64)v5);\n}\n"
        },
        {
            "funcName": "sub_402E00",
            "funcStartAddr": "0x402e00",
            "funcEndAddr": "0x402e11",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E00(__int64 a1)\n{\n  return sub_402D80(a1, 0xFFFFFFFFFFFFFFFFLL, 0x3Au);\n}\n"
        },
        {
            "funcName": "sub_402E30",
            "funcStartAddr": "0x401204",
            "funcEndAddr": "0x401209",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E30(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v5 = 0x400000000000000LL;\n  v4[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n\n_BYTE *__fastcall sub_402E30(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v5 = 0x400000000000000LL;\n  v4[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n"
        },
        {
            "funcName": "sub_402E30",
            "funcStartAddr": "0x401204",
            "funcEndAddr": "0x401209",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E30(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v5 = 0x400000000000000LL;\n  v4[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n\n_BYTE *__fastcall sub_402E30(int a1, int a2, __int64 a3)\n{\n  int v4[2]; // [rsp+0h] [rbp-48h] BYREF\n  __int64 v5; // [rsp+8h] [rbp-40h]\n  __int64 v6; // [rsp+10h] [rbp-38h]\n  __int64 v7; // [rsp+18h] [rbp-30h]\n  __int64 v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+28h] [rbp-20h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4[0] = a2;\n  v5 = 0x400000000000000LL;\n  v4[1] = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v4);\n}\n"
        },
        {
            "funcName": "sub_402EA0",
            "funcStartAddr": "0x402ea0",
            "funcEndAddr": "0x402f0c",
            "decompiledFuncCode": "_BYTE *__fastcall sub_402EA0(int a1, __int64 a2, __int64 a3, __int64 a4, unsigned __int64 a5)\n{\n  __int128 v6[2]; // [rsp+0h] [rbp-48h] BYREF\n  __m128i si128; // [rsp+20h] [rbp-28h]\n  __int64 v8; // [rsp+30h] [rbp-18h]\n\n  v6[0] = (__int128)_mm_load_si128((const __m128i *)&xmmword_606340);\n  v6[1] = (__int128)_mm_load_si128((const __m128i *)&xmmword_606350);\n  si128 = _mm_load_si128((const __m128i *)&xmmword_606360);\n  v8 = qword_606370;\n  LODWORD(v6[0]) = 10;\n  if ( !a2 || !a3 )\n    abort();\n  si128.m128i_i64[1] = a2;\n  v8 = a3;\n  return sub_402760(a1, a4, a5, (__int64)v6);\n}\n"
        },
        {
            "funcName": "sub_402FD0",
            "funcStartAddr": "0x402fd0",
            "funcEndAddr": "0x402fea",
            "decompiledFuncCode": "void *__fastcall sub_402FD0(size_t a1)\n{\n  void *result; // rax\n\n  result = malloc(a1);\n  if ( !result )\n  {\n    if ( a1 )\n      sub_4031F0();\n  }\n  return result;\n}\n"
        },
        {
            "funcName": "sub_403010",
            "funcStartAddr": "0x403010",
            "funcEndAddr": "0x403012",
            "decompiledFuncCode": "// attributes: thunk\nvoid *__fastcall sub_403010(size_t a1)\n{\n  return sub_402FD0(a1);\n}\n"
        },
        {
            "funcName": "sub_403020",
            "funcStartAddr": "0x403020",
            "funcEndAddr": "0x403056",
            "decompiledFuncCode": "void *__fastcall sub_403020(void *a1, size_t a2)\n{\n  void *result; // rax\n\n  if ( !a2 && a1 )\n  {\n    free(a1);\n    return 0LL;\n  }\n  else\n  {\n    result = realloc(a1, a2);\n    if ( !result )\n    {\n      if ( a2 )\n        sub_4031F0();\n    }\n  }\n  return result;\n}\n"
        },
        {
            "funcName": "sub_403150",
            "funcStartAddr": "0x403150",
            "funcEndAddr": "0x403167",
            "decompiledFuncCode": "void *__fastcall sub_403150(size_t n)\n{\n  void *v1; // rax\n\n  v1 = sub_402FD0(n);\n  return memset(v1, 0, n);\n}\n"
        },
        {
            "funcName": "sub_403170",
            "funcStartAddr": "0x403170",
            "funcEndAddr": "0x403188",
            "decompiledFuncCode": "void *__fastcall sub_403170(size_t a1, size_t a2)\n{\n  void *result; // rax\n\n  result = calloc(a1, a2);\n  if ( !result )\n    sub_4031F0();\n  return result;\n}\n"
        },
        {
            "funcName": "sub_403190",
            "funcStartAddr": "0x403190",
            "funcEndAddr": "0x4031b8",
            "decompiledFuncCode": "void *__fastcall sub_403190(void *src, size_t n)\n{\n  void *v2; // rax\n\n  v2 = sub_402FD0(n);\n  return memcpy(v2, src, n);\n}\n"
        },
        {
            "funcName": "sub_4031C0",
            "funcStartAddr": "0x4031c0",
            "funcEndAddr": "0x4031ee",
            "decompiledFuncCode": "void *__fastcall sub_4031C0(const char *src)\n{\n  size_t v1; // rbx\n  void *v2; // rax\n\n  v1 = strlen(src) + 1;\n  v2 = sub_402FD0(v1);\n  return memcpy(v2, src, v1);\n}\n"
        },
        {
            "funcName": "sub_4031F0",
            "funcStartAddr": "0x4031f0",
            "funcEndAddr": "0x403221",
            "decompiledFuncCode": "void __noreturn sub_4031F0()\n{\n  char *v0; // rax\n\n  v0 = dcgettext(0LL, \"memory exhausted\", 5);\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"
        },
        {
            "funcName": "sub_403230",
            "funcStartAddr": "0x403230",
            "funcEndAddr": "0x403259",
            "decompiledFuncCode": "size_t __fastcall sub_403230(wchar_t *a1, const char *a2, size_t a3, mbstate_t *a4)\n{\n  if ( a2 )\n  {\n    if ( !a3 )\n      return -2LL;\n  }\n  else\n  {\n    a3 = 1LL;\n    a2 = \"\";\n    a1 = 0LL;\n  }\n  return mbrtowc(a1, a2, a3, a4);\n}\n"
        },
        {
            "funcName": "sub_403260",
            "funcStartAddr": "0x403260",
            "funcEndAddr": "0x4032c5",
            "decompiledFuncCode": "int __fastcall sub_403260(FILE *stream)\n{\n  size_t v1; // r12\n  int v2; // ebp\n  int result; // eax\n\n  v1 = __fpending(stream);\n  v2 = ferror(stream);\n  result = fclose(stream);\n  if ( v2 )\n  {\n    if ( !result )\n    {\n      *__errno_location() = 0;\n      return -1;\n    }\n    return -1;\n  }\n  if ( !result )\n    return result;\n  if ( v1 )\n    return -1;\n  return -(*__errno_location() != 9);\n}\n"
        },
        {
            "funcName": "sub_4032D0",
            "funcStartAddr": "0x4032d0",
            "funcEndAddr": "0x403832",
            "decompiledFuncCode": "const char *sub_4032D0()\n{\n  char *v0; // rax\n  char *v1; // r15\n  const char *v2; // rbx\n  char v3; // bp\n  const char *v4; // rbp\n  char *v6; // rax\n  const char *v7; // r13\n  size_t v8; // rax\n  __int64 v9; // r12\n  size_t v10; // r14\n  size_t v11; // rdi\n  char *v12; // rax\n  char *v13; // rbp\n  size_t v14; // rdi\n  char *v15; // rax\n  int v16; // eax\n  int v17; // r12d\n  FILE *v18; // r13\n  const char *v19; // rax\n  FILE *v20; // rbx\n  const char *v21; // r13\n  char *IO_read_ptr; // rax\n  int v23; // edi\n  char *v24; // kr00_8\n  int *v25; // rdx\n  int v26; // esi\n  unsigned int v27; // eax\n  __int64 v28; // rdx\n  signed __int64 v29; // rax\n  char *v30; // rax\n  __int64 v31; // rcx\n  __int64 v32; // rdx\n  __int64 v33; // rsi\n  unsigned int v34; // ecx\n  signed __int64 v35; // rdi\n  char *v36; // rsi\n  unsigned int v37; // edx\n  char *v38; // rcx\n  FILE *v39; // rdi\n  int v40; // eax\n  bool v41; // dl\n  char *v42; // rax\n  signed __int64 v43; // rax\n  unsigned __int64 v44; // r9\n  char *v45; // rsi\n  char *v46; // r10\n  unsigned int v47; // ecx\n  unsigned int v48; // ecx\n  unsigned int v49; // esi\n  __int64 v50; // r8\n  unsigned __int64 v51; // rdi\n  char *v52; // rcx\n  char *v53; // r9\n  unsigned int v54; // edx\n  unsigned int v55; // edx\n  unsigned int v56; // ecx\n  __int64 v57; // rsi\n  const char *v58; // rax\n  char *v59; // rdi\n  FILE *v60; // r13\n  signed __int64 v61; // [rsp+8h] [rbp-D0h]\n  __int64 v62; // [rsp+18h] [rbp-C0h]\n  char v63[64]; // [rsp+20h] [rbp-B8h] BYREF\n  _QWORD v64[15]; // [rsp+60h] [rbp-78h] BYREF\n\n  v0 = nl_langinfo(14);\n  v1 = s;\n  v2 = v0;\n  if ( !v0 )\n    v2 = \"\";\n  if ( !s )\n  {\n    v6 = getenv(\"CHARSETALIASDIR\");\n    v7 = v6;\n    if ( v6 && *v6 )\n    {\n      v8 = strlen(v6);\n      v9 = v8;\n      v10 = v8;\n      if ( !v8 )\n      {\n        v11 = 14LL;\nLABEL_18:\n        v12 = (char *)malloc(v11);\n        v13 = v12;\n        if ( !v12 )\n        {\nLABEL_19:\n          v1 = \"\\\"\" + 1;\nLABEL_20:\n          s = v1;\n          goto LABEL_4;\n        }\n        memcpy(v12, v7, v10);\nLABEL_24:\n        strcpy(&v13[v9], \"charset.alias\");\n        v16 = open(v13, 0);\n        v17 = v16;\n        if ( v16 >= 0 )\n        {\n          v1 = 0LL;\n          v61 = 0LL;\n          v18 = fdopen(v16, \"r\");\n          if ( v18 )\n          {\n            v19 = v2;\n            v20 = v18;\n            v21 = v19;\nLABEL_30:\n            IO_read_ptr = v20->_IO_read_ptr;\n            if ( IO_read_ptr < v20->_IO_read_end )\n            {\nLABEL_31:\n              v20->_IO_read_ptr = IO_read_ptr + 1;\n              v23 = (unsigned __int8)*IO_read_ptr;\n              goto LABEL_32;\n            }\n            while ( 1 )\n            {\n              v23 = __uflow(v20);\n              if ( v23 == -1 )\n                break;\nLABEL_32:\n              if ( (unsigned int)(v23 - 9) <= 1 || v23 == 32 )\n                goto LABEL_30;\n              if ( v23 == 35 )\n              {\n                do\n                {\n                  v42 = v20->_IO_read_ptr;\n                  if ( v42 < v20->_IO_read_end )\n                  {\n                    v20->_IO_read_ptr = v42 + 1;\n                    v40 = (unsigned __int8)*v42;\n                    v41 = 1;\n                  }\n                  else\n                  {\n                    v40 = __uflow(v20);\n                    v41 = v40 != -1;\n                  }\n                }\n                while ( v40 != 10 && v41 );\n                if ( v40 == -1 )\n                  break;\n                goto LABEL_30;\n              }\n              ungetc(v23, v20);\n              if ( fscanf(v20, \"%50s %50s\", v63, v64) <= 1 )\n                break;\n              v24 = &v63[strlen(v63)];\n              v25 = (int *)v64;\n              do\n              {\n                v26 = *v25++;\n                v27 = ~v26 & (v26 - 16843009) & 0x80808080;\n              }\n              while ( !v27 );\n              if ( (~v26 & (v26 - 16843009) & 0x8080) == 0 )\n              {\n                v27 >>= 16;\n                v25 = (int *)((char *)v25 + 2);\n              }\n              v28 = (char *)v25 - __CFADD__((_BYTE)v27, (_BYTE)v27) - 3 - (char *)v64;\n              v29 = v24 - v63 + v28;\n              v62 = v28;\n              if ( v61 )\n              {\n                v43 = v61 + v29;\n                v61 = v43 + 2;\n                v30 = (char *)realloc(v1, v43 + 3);\n                v32 = v62;\n                v31 = v24 - v63;\n              }\n              else\n              {\n                v61 = v29 + 2;\n                v30 = (char *)malloc(v29 + 3);\n                v31 = v24 - v63;\n                v32 = v62;\n              }\n              if ( !v30 )\n              {\n                v58 = v21;\n                v59 = v1;\n                v60 = v20;\n                v1 = \"\\\"\" + 1;\n                v2 = v58;\n                free(v59);\n                fclose(v60);\n                goto LABEL_26;\n              }\n              v33 = -2 - v31;\n              v34 = v31 + 1;\n              v35 = v61 - v32;\n              v36 = &v30[v61 - v32 + v33];\n              if ( v34 >= 8 )\n              {\n                *(_QWORD *)v36 = *(_QWORD *)v63;\n                *(_QWORD *)&v36[v34 - 8] = *(_QWORD *)&v63[v34 - 8];\n                v44 = (unsigned __int64)(v36 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v45 = &v36[-v44];\n                v46 = (char *)(v63 - v45);\n                v47 = ((_DWORD)v45 + v34) & 0xFFFFFFF8;\n                if ( v47 >= 8 )\n                {\n                  v48 = v47 & 0xFFFFFFF8;\n                  v49 = 0;\n                  do\n                  {\n                    v50 = v49;\n                    v49 += 8;\n                    *(_QWORD *)(v44 + v50) = *(_QWORD *)&v46[v50];\n                  }\n                  while ( v49 < v48 );\n                }\n              }\n              else if ( (v34 & 4) != 0 )\n              {\n                *(_DWORD *)v36 = *(_DWORD *)v63;\n                *(_DWORD *)&v36[v34 - 4] = *(_DWORD *)&v63[v34 - 4];\n              }\n              else if ( v34 )\n              {\n                *v36 = v63[0];\n                if ( (v34 & 2) != 0 )\n                  *(_WORD *)&v36[v34 - 2] = *(_WORD *)&v63[v34 - 2];\n              }\n              v37 = v32 + 1;\n              v38 = &v30[v35 - 1];\n              if ( v37 >= 8 )\n              {\n                *(_QWORD *)v38 = v64[0];\n                *(_QWORD *)&v38[v37 - 8] = *(_QWORD *)&v63[v37 + 56];\n                v51 = (unsigned __int64)(v38 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v52 = &v38[-v51];\n                v53 = (char *)((char *)v64 - v52);\n                v54 = ((_DWORD)v52 + v37) & 0xFFFFFFF8;\n                if ( v54 >= 8 )\n                {\n                  v55 = v54 & 0xFFFFFFF8;\n                  v56 = 0;\n                  do\n                  {\n                    v57 = v56;\n                    v56 += 8;\n                    *(_QWORD *)(v51 + v57) = *(_QWORD *)&v53[v57];\n                  }\n                  while ( v56 < v55 );\n                }\n              }\n              else if ( (v37 & 4) != 0 )\n              {\n                *(_DWORD *)v38 = v64[0];\n                *(_DWORD *)&v38[v37 - 4] = *(_DWORD *)&v63[v37 + 60];\n              }\n              else if ( v37 )\n              {\n                *v38 = v64[0];\n                if ( (v37 & 2) != 0 )\n                  *(_WORD *)&v38[v37 - 2] = *(_WORD *)&v63[v37 + 62];\n              }\n              v1 = v30;\n              IO_read_ptr = v20->_IO_read_ptr;\n              if ( IO_read_ptr < v20->_IO_read_end )\n                goto LABEL_31;\n            }\n            v39 = v20;\n            v2 = v21;\n            fclose(v39);\n            if ( !v61 )\n              goto LABEL_25;\n            v1[v61] = 0;\n            goto LABEL_26;\n          }\n          close(v17);\n        }\nLABEL_25:\n        v1 = \"\\\"\" + 1;\nLABEL_26:\n        free(v13);\n        goto LABEL_20;\n      }\n      if ( v7[v8 - 1] == 47 )\n      {\n        v11 = v8 + 14;\n        goto LABEL_18;\n      }\n      v14 = v8 + 15;\n      v9 = v8 + 1;\n    }\n    else\n    {\n      v14 = 116LL;\n      v9 = 102LL;\n      v10 = 101LL;\n      v7 = \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n    }\n    v15 = (char *)malloc(v14);\n    v13 = v15;\n    if ( !v15 )\n      goto LABEL_19;\n    memcpy(v15, v7, v10);\n    v13[v10] = 47;\n    goto LABEL_24;\n  }\nLABEL_4:\n  v3 = *v1;\n  if ( *v1 )\n  {\n    while ( strcmp(v2, v1) && (v3 != 42 || v1[1]) )\n    {\n      v4 = &v1[strlen(v1) + 1];\n      v1 = (char *)&v4[strlen(v4) + 1];\n      v3 = *v1;\n      if ( !*v1 )\n        goto LABEL_11;\n    }\n    v2 = &v1[strlen(v1) + 1];\n  }\nLABEL_11:\n  if ( !*v2 )\n    return \"ASCII\";\n  return v2;\n}\n"
        },
        {
            "funcName": "sub_4038B0",
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x4038c8",
            "decompiledFuncCode": "int __fastcall sub_4038B0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  v1 = 0LL;\n  if ( &qword_606168 )\n    v1 = (void *)qword_606168;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"
        },
        {
            "funcName": "sub_4038C8",
            "funcStartAddr": "0x4038c8",
            "funcEndAddr": "0x4038e8",
            "decompiledFuncCode": "__int64 __fastcall sub_4038C8(__int64 a1, __int64 a2, __int64 a3)\n{\n  void (**i)(void); // rbx\n\n  for ( i = (void (**)(void))&qword_605E30; *i != (void (*)(void))-1LL; --i )\n    (*i)();\n  return a3;\n}\n"
        }
    ],
    "funcCount": 41
}