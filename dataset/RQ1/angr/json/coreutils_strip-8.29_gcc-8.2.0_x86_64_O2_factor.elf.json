{
    "funcInfo": [
        {
            "funcName": "sub_406a02",
            "funcStartAddr": "0x406a02",
            "funcEndAddr": "0x406a2b",
            "decompiledFuncCode": "int sub_406a02()\n{\n    unsigned long v0;  // [bp-0x30]\n    unsigned long v1;  // [bp-0x28]\n    unsigned long v2;  // [bp-0x20]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v4;  // [bp-0x10]\n    unsigned long v5;  // [bp-0x8]\n    unsigned long v7;  // r15\n    unsigned long v8;  // r14\n    unsigned long v9;  // r13\n    unsigned long v10;  // r12\n    unsigned long v11;  // rbx\n\n    v5 = v7;\n    v4 = v8;\n    v3 = v9;\n    v2 = v10;\n    v1 = stack_base + 0;\n    v0 = v11;\n}\n"
        },
        {
            "funcName": "sub_4091b0",
            "funcStartAddr": "0x4091b0",
            "funcEndAddr": "0x40920c",
            "decompiledFuncCode": "int sub_4091b0()\n{\n    unsigned long long v1;  // r12\n    unsigned long long v2;  // rax\n    unsigned int *v3;  // rdi\n\n    v1 = __fpending();\n    v2 = sub_40b800();\n    if (((char)*(v3) & 32) == 0)\n    {\n        if ((unsigned int)v2 != 0 && v1 == 0)\n        {\n            v2 = 0 - (unsigned int)(char)(*(__errno_location()) != 9);\n        }\n    }\n    else\n    {\n        if ((unsigned int)v2 == 0)\n        {\n            *(__errno_location()) = 0;\n            v2 = -18446744069414584321;\n        }\n    }\n    if ((unsigned int)v2 != 0 && (v1 != 0 || ((char)*(v3) & 32) != 0))\n    {\n        v2 = -18446744069414584321;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_404820",
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x405049",
            "decompiledFuncCode": "extern unsigned int g_410680[4];\n\nint sub_404820()\n{\n    char *v0;  // [bp-0xc0]\n    char v1;  // [bp-0xb8]\n    unsigned long long|char v2;  // [bp-0xb4]\n    char v3;  // [bp-0xac]\n    unsigned long|char *|char [2] v4;  // [bp-0xa8]\n    unsigned long|unsigned long long v5;  // [bp-0xa0]\n    char v6;  // [bp-0x98]\n    unsigned int v7;  // [bp-0x94]\n    char v8;  // [bp-0x78]\n    unsigned long long v9;  // [bp-0x74]\n    char v10;  // [bp-0x6c]\n    char *v11;  // [bp-0x68]\n    unsigned long|unsigned long long v12;  // [bp-0x60]\n    char v13;  // [bp-0x58]\n    unsigned int v14;  // [bp-0x54]\n    char *v16;  // rdi\n    char *v17;  // rbx\n    unsigned long long v19;  // rax\n    char *v20;  // r13\n    unsigned long long v22;  // cc_dep1\n    unsigned long long v25;  // cc_dep1\n    char *v26;  // rbx\n    unsigned int v27;  // eax\n    char v28;  // al\n    unsigned long|unsigned int v29;  // r15\n    unsigned long long v30;  // rax\n    char *v32;  // rbx\n    char *v34;  // rbx\n    unsigned long long v35;  // rax\n    char *v36;  // rdx\n    unsigned int v37;  // eax\n    char v38;  // al\n    unsigned long long v39;  // rax\n    unsigned long long v41;  // rax\n    char *v42;  // rdx\n    unsigned int v43;  // eax\n    char v44;  // al\n    char *v48;  // rdx\n    unsigned int v49;  // eax\n    char v50;  // al\n    unsigned long long v51;  // rax\n    unsigned long long v53;  // rax\n    unsigned long|unsigned long long|unsigned int v54;  // rbx\n    unsigned long long v55;  // rax\n    unsigned int v56;  // eax\n    char v57;  // al\n    unsigned long long v58;  // rax\n    unsigned long long v60;  // rax\n    unsigned long long v61;  // r13\n    unsigned long long v63;  // rax\n\n    v17 = v16;\n    v0 = (unsigned long long)(unsigned int)sub_4073a0();\n    while (true)\n    {\n        while (true)\n        {\n            if (v4 == 0)\n            {\n                break;\n            }\n            v19 = __ctype_get_mb_cur_max();\n            if (v19 <= 1)\n            {\n                v20 = &v4[strlen(v0)];\n                if (v17 < v4)\n                {\n                    v22 = (char)(*((char *)(*((long long *)(unsigned long long)__ctype_b_loc()) + (unsigned long long)v4[-1 + 7] * 2)) & 8);\n                }\n                if (((char)v22 == 0 || v17 >= v4) && *(v20) != 0)\n                {\n                    v25 = (char)(*((char *)(*((long long *)(unsigned long long)__ctype_b_loc()) + (unsigned long long)*(v20) * 2)) & 8);\n                }\n                if ((v17 < v4 || (char)v25 != 0) && (v17 < v4 || *(v20) != 0) && ((char)v25 != 0 || (char)v22 != 0) && ((char)v22 != 0 || *(v20) != 0))\n                {\n                    if (v4[0] == 0)\n                    {\n                        break;\n                    }\n                    v17 = &v4[1];\n                    if (v4[1] == 0)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    v61 = 1;\n                }\n            }\n            else\n            {\n                v4 = v17;\n                v61 = &v2;\n                v1 = 0;\n                v2 = 0;\n                v3 = 0;\n                if (v17 < v4)\n                {\n                    while (true)\n                    {\n                        if (v1 == 0)\n                        {\n                            v26 = v4;\n                            v27 = *(v4);\n                            v28 = (unsigned long long)*(v4) >> 5;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0)\n                            {\n                                v5 = 1;\n                                v29 = *(v26);\n                                v6 = 1;\n                                v7 = *(v26);\n                                v3 = 1;\n                            }\n                            else\n                            {\n                                v30 = mbsinit((unsigned int)&v2);\n                                if (v30 == 0)\n                                {\n                                    break;\n                                }\n                                v1 = 1;\n                            }\n                        }\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 || v1 != 0)\n                        {\n                            __ctype_get_mb_cur_max();\n                            sub_407340();\n                            v5 = (unsigned int)sub_408fc0();\n                            if (v5 == -1)\n                            {\n                                v29 = v7;\n                                v32 = v4;\n                                v6 = 0;\n                                v5 = 1;\n                            }\n                            else if (v5 != -2)\n                            {\n                                if (v5 == 0)\n                                {\n                                    v5 = 1;\n                                    v29 = v7;\n                                    if (*(v4) != 0 || v7 != 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                                else\n                                {\n                                    v29 = v7;\n                                }\n                                v6 = 1;\n                                if (mbsinit((unsigned int)&v2) != 0)\n                                {\n                                    v1 = 0;\n                                }\n                                v3 = 1;\n                            }\n                            if (v5 == -2)\n                            {\n                                v32 = v4;\n                                v6 = 0;\n                                v29 = v7;\n                                v5 = strlen(v4);\n                            }\n                        }\n                        if ((v1 == 0 || v5 != -2) && (v1 == 0 || v5 != -1) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0 || v5 != -2) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0 || v5 != -1))\n                        {\n                            if (v29 == 0)\n                            {\n                                break;\n                            }\n                            v32 = v4;\n                        }\n                        v34 = &v32[v5];\n                        v35 = v6;\n                        v3 = 0;\n                        v4 = v34;\n                        if (v35 == 0)\n                        {\n                            break;\n                        }\n                        v61 = (char)(iswalnum(v29) == 0);\n                    }\n                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 && v1 == 0)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (true)\n                    {\n                        abort(); /* do not return */\n                    }\n                    else if (v4 >= v4)\n                    {\n                        v61 = 1;\n                    }\n                    else if (v5 == 0 && v5 != -2 && v5 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 || v1 != 0) && (v1 != 0 || v30 != 0))\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (v35 != 0 && v4 >= v4)\n                    {\n                        v4 = (unsigned long long)(unsigned int)sub_40a420();\n                        v1 = 0;\n                        v2 = 0;\n                        v3 = 0;\n                        v11 = v0;\n                        v8 = 0;\n                        v9 = 0;\n                        v10 = 0;\n                    }\n                    else if (v4[0] == 0 && v5 == 0 && v5 != -2 && v5 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 || v1 != 0) && (v1 != 0 || v30 != 0))\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                }\n                v61 = 1;\n                v4 = (unsigned long long)(unsigned int)sub_40a420();\n                v1 = 0;\n                v2 = 0;\n                v3 = 0;\n                v11 = v0;\n                v8 = 0;\n                v9 = 0;\n                v10 = 0;\n                while (true)\n                {\n                    if (v8 == 0)\n                    {\n                        v36 = v11;\n                        v37 = *(v11);\n                        v38 = (unsigned long long)*(v11) >> 5;\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v11) & 31)) & 1) != 0)\n                        {\n                            v12 = 1;\n                            v13 = 1;\n                            v14 = *(v36);\n                            v10 = 1;\n                        }\n                        else\n                        {\n                            v39 = mbsinit((unsigned int)&v9);\n                            if (v39 == 0)\n                            {\n                                break;\n                            }\n                            v8 = 1;\n                        }\n                    }\n                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v11) & 31)) & 1) == 0 || v8 != 0)\n                    {\n                        __ctype_get_mb_cur_max();\n                        sub_407340();\n                        v12 = (unsigned int)sub_408fc0();\n                        if (v12 == -1)\n                        {\n                            v12 = 1;\n                            v13 = 0;\n                            v10 = 1;\n                        }\n                        else if (v12 != -2)\n                        {\n                            if (v12 == 0)\n                            {\n                                v12 = 1;\n                                if (*(v11) != 0 || v14 != 0)\n                                {\n                                    break;\n                                }\n                            }\n                            v13 = 1;\n                            v41 = mbsinit((unsigned int)&v9);\n                            if (v41 != 0)\n                            {\n                                v8 = 0;\n                            }\n                            v10 = 1;\n                        }\n                        if (v12 == -2)\n                        {\n                            v13 = 0;\n                            v12 = strlen(v11);\n                            v10 = 1;\n                        }\n                    }\n                    if (v14 != 0 || v12 == -2 && ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v11) & 31)) & 1) == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v11) & 31)) & 1) == 0 && v12 == -1 || v12 == -2 && v8 != 0 || v12 == -1 && v8 != 0)\n                    {\n                        if (v3 == 0)\n                        {\n                            if (v1 == 0)\n                            {\n                                v42 = v4;\n                                v43 = *(v4);\n                                v44 = (unsigned long long)*(v4) >> 5;\n                                if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0)\n                                {\n                                    v5 = 1;\n                                    v6 = 1;\n                                    v7 = *(v42);\n                                    v3 = 1;\n                                }\n                                else\n                                {\n                                    if (mbsinit((unsigned int)&v2) == 0)\n                                    {\n                                        break;\n                                    }\n                                    v1 = 1;\n                                }\n                            }\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 || v1 != 0)\n                            {\n                                __ctype_get_mb_cur_max();\n                                sub_407340();\n                                v5 = (unsigned int)sub_408fc0();\n                                if (v5 == -1)\n                                {\n                                    v5 = 1;\n                                    v6 = 0;\n                                }\n                                else if (v5 != -2)\n                                {\n                                    if (v5 == 0)\n                                    {\n                                        v5 = 1;\n                                        if (*(v4) != 0 || v7 != 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    v6 = 1;\n                                    if (mbsinit((unsigned int)&v2) != 0)\n                                    {\n                                        v1 = 0;\n                                    }\n                                    v3 = 1;\n                                }\n                                if (v5 == -2)\n                                {\n                                    v6 = 0;\n                                    v5 = strlen(v4);\n                                }\n                            }\n                        }\n                        if (v7 == 0 && (v3 == 0 || v6 != 0) && (v1 == 0 || v5 != -2 || v3 != 0) && (v1 == 0 || v3 != 0 || v5 != -1) && (v5 != -2 || v3 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0) && (v3 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0 || v5 != -1))\n                        {\n                            break;\n                        }\n                        v4 = &v4[v5];\n                        v11 = &v11[v12];\n                        v3 = 0;\n                        v10 = 0;\n                    }\n                    else\n                    {\n                        if (v3 == 0)\n                        {\n                            if (v1 == 0)\n                            {\n                                v48 = v4;\n                                v49 = *(v4);\n                                v50 = (unsigned long long)*(v4) >> 5;\n                                if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) != 0)\n                                {\n                                    v5 = 1;\n                                    v54 = *(v48);\n                                    v6 = 1;\n                                    v7 = *(v48);\n                                    v3 = 1;\n                                }\n                                else\n                                {\n                                    v51 = mbsinit((unsigned int)&v2);\n                                    if (v51 == 0)\n                                    {\n                                        break;\n                                    }\n                                    v1 = 1;\n                                }\n                            }\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v4) & 31)) & 1) == 0 || v1 != 0)\n                            {\n                                __ctype_get_mb_cur_max();\n                                sub_407340();\n                                v5 = (unsigned int)sub_408fc0();\n                                if (v5 == -1)\n                                {\n                                    v5 = 1;\n                                    v54 = v7;\n                                    v6 = 0;\n                                    v3 = 1;\n                                }\n                                else if (v5 != -2)\n                                {\n                                    if (v5 != 0)\n                                    {\n                                        v54 = v7;\n                                    }\n                                    if (v5 == 0 && v4[0] == 0)\n                                    {\n                                        v54 = v7;\n                                    }\n                                    if ((v4[0] == 0 || v5 != 0) && (v7 == 0 || v5 != 0))\n                                    {\n                                        v6 = 1;\n                                        v53 = mbsinit((unsigned int)&v2);\n                                        if (v53 != 0)\n                                        {\n                                            v1 = 0;\n                                        }\n                                        v3 = 1;\n                                    }\n                                }\n                                if (v5 == -2)\n                                {\n                                    v6 = 0;\n                                    v54 = v7;\n                                    v5 = strlen(v4);\n                                    v3 = 1;\n                                }\n                                if (v5 == 0)\n                                {\n                                    v5 = 1;\n                                    if (*(v4) != 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            v54 = v7;\n                        }\n                        if (...)\n                        {\n                            v55 = iswalnum(v54);\n                        }\n                        if (...)\n                        {\n                            break;\n                        }\n                        if (...)\n                        {\n                            v4 = &v4[0];\n                            v1 = 0;\n                            v2 = 0;\n                            v3 = 0;\n                            v56 = v4[0];\n                            v57 = (unsigned long long)v4[0] >> 5;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v4[0] & 31)) & 1) != 0)\n                            {\n                                v5 = 1;\n                                v6 = 1;\n                                v7 = v4[0];\n                                v3 = 1;\n                            }\n                            else\n                            {\n                                v58 = mbsinit((unsigned int)&v2);\n                                if (v58 == 0)\n                                {\n                                    break;\n                                }\n                                if (v58 != 0)\n                                {\n                                    v1 = 1;\n                                    __ctype_get_mb_cur_max();\n                                    sub_407340();\n                                    v5 = (unsigned int)sub_408fc0();\n                                    if (v5 == -1)\n                                    {\n                                        v5 = 1;\n                                    }\n                                    if (v5 == -2)\n                                    {\n                                        v5 = strlen(v4);\n                                    }\n                                    if (v5 == 0)\n                                    {\n                                        v5 = 1;\n                                        if (*(v4) != 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (...)\n                        {\n                            sub_404800(); /* do not return */\n                        }\n                        if (...)\n                        {\n                            v6 = 1;\n                            v60 = mbsinit((unsigned int)&v2);\n                            if (v60 != 0)\n                            {\n                                v1 = 0;\n                            }\n                            v3 = 1;\n                        }\n                        if (...)\n                        {\n                            break;\n                        }\n                        if (...)\n                        {\n                            v17 = &v4[v5];\n                        }\n                    }\n                }\n                if (...)\n                {\n                    v61 = 0;\n                }\n                else if (true)\n                {\n                    abort(); /* do not return */\n                }\n                else if (...)\n                {\n                    __assert_fail(); /* do not return */\n                }\n                else if (...)\n                {\n                    if (*(v17) == 0)\n                    {\n                        break;\n                    }\n                }\n                else if (...)\n                {\n                    __assert_fail(); /* do not return */\n                }\n                else if (v4[0] == 0 && v5 == 0 || *(v11) == 0 && v12 == 0 && v12 != -2 && v12 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v11) & 31)) & 1) == 0 || v8 != 0) && (v39 != 0 || v8 != 0))\n                {\n                    __assert_fail(); /* do not return */\n                }\n                else if (...)\n                {\n                    free(v0);\n                    v63 = v61;\n                    return v63;\n                }\n                __assert_fail(); /* do not return */\n                __assert_fail(); /* do not return */\n                __assert_fail(); /* do not return */\n                abort(); /* do not return */\n            }\n        }\n        if (v19 <= 1 || v4 == 0)\n        {\n            if (true)\n            {\n                v61 = 0;\n            }\n            else if (v4 != 0 && ((char)v25 == 0 || *(v20) == 0 || v19 > 1) && ((char)v22 == 0 || v17 >= v4 || v19 > 1))\n            {\n                free(v0);\n                v63 = v61;\n                return v63;\n            }\n        }\n        v61 = 0;\n    }\n    free(v0);\n    v63 = v61;\n    return v63;\n}\n"
        },
        {
            "funcName": "sub_4080b0",
            "funcStartAddr": "0x4080b0",
            "funcEndAddr": "0x4080de",
            "decompiledFuncCode": "int sub_4080b0()\n{\n    unsigned int v1;  // rdi\n    unsigned int v2;  // rsi\n    unsigned long long v3;  // rax\n\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>)) && [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) == 0)\n    {\n        v3 = calloc(v1, v2);\n        if (v3 != 0)\n        {\n            return v3;\n        }\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>) || v3 == 0 || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) != 0)\n    {\n        sub_408130(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_403840",
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403ad1",
            "decompiledFuncCode": "extern unsigned int g_40be88;\nextern int512_t g_40efa1;\nextern int512_t g_40f23c;\n\nint sub_403840()\n{\n    unsigned long long v0;  // [bp-0x160]\n    void tmp_2;  // tmp #2\n    unsigned long v1;  // [bp-0x158]\n    unsigned long long|unsigned int v2;  // [bp-0x14c]\n    unsigned long v3;  // [bp-0x148]\n    unsigned int v4;  // [bp-0x140]\n    char v5;  // [bp-0x139]\n    char v6;  // [bp-0x3e]\n    unsigned long long v8;  // rdi\n    unsigned long|unsigned long long v9;  // r14\n    unsigned long long v10;  // rax\n    unsigned long long|unsigned int v11;  // esi\n    unsigned long long v12;  // r15\n    unsigned long long v13;  // rdx\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // rdi\n    unsigned long long v16;  // rcx\n    unsigned int v17;  // cc_dep1\n    unsigned long long|unsigned int v19;  // rax\n    unsigned long v20;  // r11\n    unsigned long|unsigned long long v21;  // rdx\n    unsigned long long v22;  // rbp\n    unsigned long|unsigned long long v23;  // rsi\n    unsigned long long v24;  // rcx\n    unsigned long long v25;  // rdi\n    unsigned int v26;  // cc_dep1\n\n    v9 = v8 - 1;\n    v0 = v8 - 1;\n    if (((char)(v8 - 1) & 1) == 0)\n    {\n        v10 = 0;\n        do\n        {\n            v9 = v9 % 2;\n            v10 += 1;\n        }\n        while ((v9 & 1) == 0);\n        v2 = v10;\n    }\n    else\n    {\n        v9 = v0;\n        v2 = 0;\n    }\n    v16 = v8;\n    v11 = 64;\n    v12 = 0;\n    v13 = 0;\n    v14 = 1;\n    do\n    {\n        v15 = v16 * 0x8000000000000000;\n        v16 = v16 % 2;\n        v13 = v13 % 2 | v15;\n        if (v16 < v14 || v16 == v14 && v13 <= v12)\n        {\n            tmp_2 = v12;\n            v12 -= v13;\n            v14 = v14 - rcx<8> - (char)(tmp_2 < v13);\n        }\n        v17 = v11;\n        v11 = (unsigned long long)v11 - 1;\n    }\n    while (v17 != 1);\n    v5 = sub_401ed0();\n    if (v5 != 0)\n    {\n        sub_403210();\n        v3 = v9;\n        v4 = v6;\n        v1 = stack_base + -360 + (unsigned long long)((unsigned int)v6 - 1) * 8 + 64;\n        while (v4 != 0)\n        {\n            while (true)\n            {\n                v19 = sub_401e60();\n                if (v1 == v20 && v19 != v12)\n                {\n                    break;\n                }\n                v21 = v12 * 288797732808819203 >> 64;\n                v22 = v12 * 288797732808819203;\n                if (v12 * 288797732808819203 >> 64 != 0)\n                {\n                    if (v16 > v21)\n                    {\n                        v23 = v16;\n                        v19 = 64;\n                        v24 = 0;\n                        do\n                        {\n                            v25 = v23 * 0x8000000000000000;\n                            v23 = v23 % 2;\n                            v24 = v24 % 2 | v25;\n                            if (v23 < v21 || v24 <= v22 && v23 == v21)\n                            {\n                                tmp_2 = v22;\n                                v22 -= v24;\n                                v21 = v21 - rsi<8> - (unsigned long long)(char)(tmp_2 < v24);\n                            }\n                            v26 = v19;\n                            v19 = (unsigned long long)v19 - 1;\n                        }\n                        while (v26 != 1);\n                    }\n                    else\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                }\n                if (v12 * 288797732808819203 >> 64 == 0 || v16 > v21)\n                {\n                    if (sub_401ed0() == 0)\n                    {\n                        break;\n                    }\n                    if (true)\n                    {\n                        break;\n                    }\n                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40be88, 0x5));\n                    abort(); /* do not return */\n                }\n            }\n            if (v19 == v12 && (v12 * 288797732808819203 >> 64 == 0 || v16 > v21))\n            {\n                v5 = 0;\n            }\n            else if (v1 == v20)\n            {\n                return (unsigned long long)v5;\n            }\n        }\n        if (v4 != 0)\n        {\n            v5 = 0;\n        }\n        else\n        {\n            return (unsigned long long)v5;\n        }\n    }\n    v5 = 0;\n    return (unsigned long long)v5;\n}\n"
        },
        {
            "funcName": "sub_406d00",
            "funcStartAddr": "0x406d00",
            "funcEndAddr": "0x406d0c",
            "decompiledFuncCode": "int sub_406d00()\n{\n}\n"
        },
        {
            "funcName": "sub_402490",
            "funcStartAddr": "0x402490",
            "funcEndAddr": "0x402574",
            "decompiledFuncCode": "int sub_402490()\n{\n    void tmp_2;  // tmp #2\n    unsigned long v0;  // [bp-0x8]\n    unsigned long long v2;  // r8b\n    unsigned long long v3;  // rsi\n    unsigned long|unsigned long long v4;  // r9\n    unsigned long v5;  // rdx\n    unsigned long v6;  // rax\n    unsigned long long v7;  // rax\n    unsigned long long *v8;  // rdi\n    unsigned long v9;  // rcx\n    unsigned long v10;  // r8\n    unsigned long long v11;  // rcx\n    char v12;  // al\n    unsigned long long v13;  // rax\n    unsigned long long v14;  // rdx\n    unsigned long long v15;  // rax\n    unsigned long long *v16;  // rdi\n    unsigned long long *v17;  // rdi\n\n    if ((v2 & 1) != 0)\n    {\n        v4 = v3;\n        if (v3 == 0 && v5 == 0)\n        {\n            *(v8) = v9;\n            return v10;\n        }\n        for (; (v5 & 1) == 0; v5 = v5 % 2 | v7)\n        {\n            v7 = v4 * 0x8000000000000000;\n            v4 = v4 % 2;\n        }\n        for (; v4 != 0 || v11 != 0; *(v16) = 0)\n        {\n            while (true)\n            {\n                if (v4 <= v11)\n                {\n                    v12 = v4 == v11;\n                    if (v12 == 0 || v5 <= v2)\n                    {\n                        if (v4 >= v11 && (v12 == 0 || v5 >= v2))\n                        {\n                            *(v17) = v4;\n                            return v5;\n                        }\n                        if (v4 < v11 || v5 < v2 && v12 != 0)\n                        {\n                            tmp_2 = v2;\n                            v2 -= v5;\n                            v11 = v11 - v4 - (unsigned long long)(char)(tmp_2 < v5);\n                            do\n                            {\n                                v13 = v11 * 0x8000000000000000;\n                                v11 = v11 % 2;\n                                v2 = v2 % 2 | v13;\n                            }\n                            while ((v2 & 1) == 0);\n                            if (v4 == 0 && v11 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (v4 > v11 || v12 != 0 && v5 > v2)\n                {\n                    tmp_2 = v5;\n                    v14 = v5 - v2;\n                    v4 = v4 - v11 - (char)(tmp_2 < v2);\n                    do\n                    {\n                        v15 = v4 * 0x8000000000000000;\n                        v4 = v4 % 2;\n                        v14 = v14 % 2 | v15;\n                    }\n                    while ((v14 & 1) == 0);\n                }\n            }\n        }\n    }\n    else\n    {\n        v0 = v6;\n        __assert_fail(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_4045f0",
            "funcStartAddr": "0x4045f0",
            "funcEndAddr": "0x40468e",
            "decompiledFuncCode": "extern unsigned int g_40bcd1;\nextern unsigned int g_613240;\nextern char g_613318;\nextern unsigned long long g_613320;\n\nint sub_4045f0()\n{\n    unsigned long long v1;  // rax\n    unsigned int *v2;  // rbx\n    unsigned long long v3;  // rax\n    unsigned long long v4;  // rbp\n\n    v1 = sub_4091b0();\n    if (v1 != 0)\n    {\n        v2 = __errno_location();\n        if (g_613318 == 0 || *(v2) != 32)\n        {\n            v4 = dcgettext(0x0, 0x40bcd1, 0x5);\n            if (g_613320 != 0)\n            {\n                sub_406da0();\n                error(0x0, *(v2), \"%s: \");\n            }\n        }\n    }\n    if (v1 == 0 || *(v2) == 32 && g_613318 != 0)\n    {\n        v3 = sub_4091b0();\n    }\n    if ((unsigned int)v3 == 0 && (v1 == 0 || *(v2) == 32) && (v1 == 0 || g_613318 != 0))\n    {\n        return v3;\n    }\n    while (true)\n    {\n        _exit(g_613240);\n        error(0x0, *(v2), \"%s\");\n    }\n}\n"
        },
        {
            "funcName": "sub_407da0",
            "funcStartAddr": "0x407da0",
            "funcEndAddr": "0x407e58",
            "decompiledFuncCode": "int sub_407da0()\n{\n    unsigned int v0;  // [bp-0xa0]\n    void tmp_12;  // tmp #12\n    void tmp_8;  // tmp #8\n    unsigned long v1;  // [bp-0x98]\n    unsigned long long v2;  // [bp-0x90]\n    unsigned long v3;  // [bp-0x88]\n    unsigned long long v4;  // [bp-0x18]\n    unsigned long v5;  // [bp-0x10]\n    unsigned long long v6;  // [bp+0x8]\n    char v7;  // [bp+0x10]\n    unsigned long long v8;  // r11\n    unsigned long long v9;  // r8\n    unsigned long v10;  // r9\n    unsigned long long v11;  // rax\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // r8\n    unsigned long long|unsigned long long * v14;  // r10\n    unsigned long long v15;  // r9\n\n    v8 = 0;\n    v4 = v9;\n    v14 = &v6;\n    v13 = 32;\n    v1 = &v6;\n    v5 = v10;\n    v15 = 0;\n    v0 = 32;\n    v2 = stack_base + -56;\n    while (true)\n    {\n        if ((unsigned int)v13 <= 47)\n        {\n            tmp_12 = v13;\n            v13 = (unsigned int)v13 + 8;\n            v8 = 1;\n            v11 = v4;\n            v3 = v4;\n        }\n        else\n        {\n            tmp_8 = v14;\n            v14 = &v7;\n            v12 = v6;\n            v3 = v6;\n        }\n        if ((unsigned int)v13 <= 47 && v11 != 0 || v12 != 0 && (unsigned int)v13 > 47)\n        {\n            v15 += 1;\n        }\n        if (v8 != 0)\n        {\n            v0 = v13;\n        }\n        return sub_407940();\n    }\n}\n"
        },
        {
            "funcName": "sub_402bf0",
            "funcStartAddr": "0x402bf0",
            "funcEndAddr": "0x4031f0",
            "decompiledFuncCode": "extern int512_t g_40c220;\n\nint sub_402bf0()\n{\n    void tmp_19;  // tmp #19\n    void tmp_2;  // tmp #2\n    void tmp_14;  // tmp #14\n    unsigned long v0;  // [bp-0xb8]\n    void tmp_3;  // tmp #3\n    void tmp_90;  // tmp #90\n    unsigned long|unsigned long long v1;  // [bp-0xb0]\n    unsigned long v2;  // [bp-0xa8]\n    unsigned long|unsigned long long v3;  // [bp-0xa0]\n    unsigned long|unsigned long long v4;  // [bp-0x98]\n    unsigned long|unsigned long long v5;  // [bp-0x90]\n    unsigned long long v6;  // [bp-0x88]\n    unsigned long|unsigned long long v7;  // [bp-0x80]\n    unsigned long v8;  // [bp-0x78]\n    unsigned long v9;  // [bp-0x70]\n    unsigned long|unsigned long long v10;  // [bp-0x60]\n    unsigned long v11;  // [bp-0x58]\n    unsigned long v12;  // [bp-0x50]\n    unsigned long v13;  // [bp-0x48]\n    unsigned long v14;  // [bp-0x40]\n    unsigned long long v16;  // rsi\n    unsigned long long v17;  // r12\n    unsigned long long v18;  // rdi\n    unsigned long long v19;  // rbp\n    unsigned long v20;  // rcx\n    unsigned long long v21;  // rdx\n    unsigned long long v22;  // rdx\n    unsigned long long v23;  // rax\n    unsigned long long v24;  // rcx\n    unsigned long long v25;  // rdx\n    unsigned long long v26;  // rbx\n    unsigned long long v27;  // rsi\n    unsigned long long v28;  // cc_dep1\n    unsigned long long v29;  // r14\n    unsigned long long v30;  // rax\n    unsigned long long v31;  // rax\n    unsigned long v32;  // rdx\n    unsigned long long v33;  // rbx\n    unsigned long v34;  // rsi\n    unsigned long v35;  // cc_dep2\n    unsigned long long v36;  // rdx\n    unsigned long long v37;  // rsi\n    unsigned long long v38;  // r8\n    unsigned long|unsigned long long v39;  // rsi\n    unsigned long long v40;  // rax\n    unsigned long long v41;  // r15\n    unsigned long long v42;  // r13\n    unsigned long long v43;  // rax\n    unsigned long v45;  // rcx\n    unsigned long long v46;  // rdx\n    unsigned long long v48;  // rcx\n    unsigned long long v49;  // rax\n    unsigned long long v50;  // r13\n    unsigned long long v52;  // r14\n    unsigned long long v53;  // rax\n    unsigned long long v54;  // rax\n    unsigned long v55;  // rdx\n    unsigned long long v56;  // r15\n    unsigned long v57;  // rcx\n    unsigned long v58;  // cc_dep2\n    unsigned long long v59;  // rdx\n    unsigned long long v60;  // rcx\n    unsigned long long v61;  // rdx\n    unsigned long long v64;  // rbp\n    unsigned long long v65;  // rax\n    unsigned long long v68;  // rax\n    unsigned long long v69;  // rbx\n    unsigned long long v71;  // r8\n    unsigned long long v72;  // rax\n    unsigned long long v76;  // rax\n\n    v17 = v16;\n    v19 = v18;\n    v8 = v20;\n    v5 = v21;\n    v22 = 0;\n    v24 = (unsigned long long)((unsigned int)(0 - (unsigned long long)(char)(v18 < 2)) & 64) + 63;\n    v22 = (char)(v18 < 2);\n    v23 = 0 - (unsigned long long)(char)(v18 < 2) + 1;\n    do\n    {\n        tmp_19 = v22;\n        v22 *= 2;\n        v23 = v23 * 2 | tmp_19 >> 63;\n        if (v18 < v23 || v18 == v23 && v22 >= v16)\n        {\n            tmp_2 = v22;\n            v22 -= v17;\n            v23 = v23 - v18 - (char)(tmp_2 < v17);\n        }\n        v24 -= 1;\n    }\n    while (v24 != -1);\n    tmp_14 = v22;\n    v2 = v23;\n    v3 = v22;\n    v25 = v22 * 2;\n    v72 = v23 * 2 + ((tmp_14 + tmp_14 <= tmp_14? 1 : 0) & 1);\n    v10 = v72;\n    v26 = v25;\n    v27 = v72;\n    v28 = v72;\n    if (v72 > v18 || v17 <= v26 && v28 == v18)\n    {\n        v72 = v72 - v18 - (char)(v26 < v17);\n        v10 = v72;\n        v26 -= v17;\n        v27 = v72;\n    }\n    v11 = v27;\n    v12 = v27;\n    if (v18 != 0 || v17 != 1)\n    {\n        v4 = v26;\n        v50 = 1;\n        v6 = 1;\n        while (true)\n        {\n            v29 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * 2 - v17 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])));\n            while (true)\n            {\n                v1 = v29;\n                v0 = v17;\n                v30 = sub_401f60();\n                tmp_3 = v30;\n                v31 = v30 + v5;\n                v32 = v14 + ((tmp_3 + v5 <= tmp_3? 1 : 0) & 1);\n                v10 = v14 + ((tmp_3 + v5 <= tmp_3? 1 : 0) & 1);\n                v33 = v31;\n                v34 = v14 + ((v33 + v5 <= v33? 1 : 0) & 1);\n                v35 = v14 + ((v33 + v5 <= v33? 1 : 0) & 1);\n                if (v18 < v14 + ((v33 + v5 <= v33? 1 : 0) & 1) || v18 == v35 && v17 <= v33)\n                {\n                    v36 = v32 - v18 - (char)(v33 < v17);\n                    v10 = v36;\n                    v33 -= v17;\n                    v37 = v36;\n                }\n                v38 = v4 - v33;\n                if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Sub((Load(addr=stack_base-88, size=8, endness=Iend_LE) - rcx<8>), Conv(1->64, (Load(addr=stack_base-152, size=8, endness=Iend_LE) < r15<8>))), 0x0<64>, Conv(1->64, (Load(addr=stack_base-152, size=8, endness=Iend_LE) < r15<8>))))\n                {\n                    tmp_2 = v38;\n                }\n                v1 = v1;\n                v0 = v17;\n                v3 = (unsigned int)sub_401f60();\n                v2 = v14;\n                if (((char)v50 & 31) != 1)\n                {\n                    v39 = v10;\n                }\n                else\n                {\n                    v40 = sub_402490();\n                    if (v13 == 0 && v40 == 1)\n                    {\n                        v39 = v10;\n                        v12 = v10;\n                    }\n                    if (v13 != 0 || v40 != 1)\n                    {\n                        v7 = v50;\n                        v9 = v33;\n                        v52 = v4;\n                        while (true)\n                        {\n                            v1 = v1;\n                            v0 = v17;\n                            v53 = sub_401f60();\n                            tmp_3 = v53;\n                            v54 = v53 + v5;\n                            v55 = v14 + ((tmp_3 + v5 <= tmp_3? 1 : 0) & 1);\n                            v12 = v14 + ((tmp_3 + v5 <= tmp_3? 1 : 0) & 1);\n                            v56 = v54;\n                            v57 = v14 + ((v56 + v5 <= v56? 1 : 0) & 1);\n                            v58 = v14 + ((v56 + v5 <= v56? 1 : 0) & 1);\n                            if (v19 < v14 + ((v56 + v5 <= v56? 1 : 0) & 1) || v19 == v58 && v17 <= v56)\n                            {\n                                v59 = v55 - v19 - (char)(v56 < v17);\n                                v12 = v59;\n                                v56 -= v17;\n                                v60 = v59;\n                            }\n                            v61 = v4 - v56;\n                            if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Sub((Load(addr=stack_base-88, size=8, endness=Iend_LE) - rcx<8>), Conv(1->64, (Load(addr=stack_base-152, size=8, endness=Iend_LE) < r15<8>))), 0x0<64>, Conv(1->64, (Load(addr=stack_base-152, size=8, endness=Iend_LE) < r15<8>))))\n                            {\n                                tmp_2 = v61;\n                            }\n                            if (v13 == 0)\n                            {\n                                v5 = v5;\n                                v4 = v52;\n                                v17 = ...;\n                                if (v19 >= v7)\n                                {\n                                    v64 = ...;\n                                }\n                                else\n                                {\n                                    v64 = 0;\n                                }\n                                if (v7 > 1)\n                                {\n                                    if (v7 > 25030008)\n                                    {\n                                        v7 = v38;\n                                        v65 = sub_403840();\n                                    }\n                                    if (v7 <= 25030008 || v65 != 0)\n                                    {\n                                        sub_401d80();\n                                    }\n                                }\n                                if (v7 <= 1 || v65 == 0 && v7 > 25030008)\n                                {\n                                    sub_4027d0();\n                                }\n                                if (v64 != 0)\n                                {\n                                    v68 = sub_404050();\n                                    if (v68 == 0)\n                                    {\n                                        v69 = (unsigned int)sub_402590();\n                                        v4 = (unsigned int)sub_402590();\n                                        sub_402590();\n                                    }\n                                    else\n                                    {\n                                        return sub_402440();\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                v71 = sub_402490();\n                                v5 = v5;\n                                if (v19 == v13 && v17 == v2)\n                                {\n                                    v72 = sub_402bf0();\n                                }\n                                if (v19 != v13 || v17 != v2)\n                                {\n                                    v2 = v71;\n                                    v17 = ...;\n                                    if (sub_404050() == 0)\n                                    {\n                                        sub_402bf0();\n                                    }\n                                    else\n                                    {\n                                        sub_402440();\n                                    }\n                                }\n                            }\n                            if (v13 == 0 && v64 == 0 || v19 != v13 && v13 != 0 || v13 != 0 && v17 != v2)\n                            {\n                                if (v17 > 1)\n                                {\n                                    if (v17 > 25030008)\n                                    {\n                                        v76 = sub_403840();\n                                    }\n                                    if (v17 <= 25030008 || v76 != 0)\n                                    {\n                                        v72 = sub_401d80();\n                                    }\n                                }\n                                if (v17 <= 1 || v76 == 0 && v17 > 25030008)\n                                {\n                                    return sub_4027d0();\n                                }\n                            }\n                        }\n                        if (v13 == 0 && v68 == 0 && v71 != 1 && v64 != 0)\n                        {\n                            v29 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * 2 - v17 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])));\n                        }\n                        else if ((v19 == v13 || v17 > 1) && (v17 == v2 || v17 > 1) && (v64 == 0 || v13 != 0) && (v13 != 0 || v17 > 1) && (v13 != 0 || v71 != 1) && (v19 == v13 || v17 <= 25030008 || v76 != 0) && (v17 <= 25030008 || v17 == v2 || v76 != 0) && (v17 <= 25030008 || v13 != 0 || v76 != 0))\n                        {\n                            return v72;\n                        }\n                    }\n                }\n                if (((char)v50 & 31) != 1 || v13 == 0 && v40 == 1)\n                {\n                    v50 -= 1;\n                    v11 = v39;\n                    v4 = v6 * 2;\n                    if (v6 != 0)\n                    {\n                        v41 = v50;\n                        v42 = v5;\n                        v7 = v33;\n                        do\n                        {\n                            v1 = v1;\n                            v0 = v17;\n                            v43 = sub_401f60();\n                            tmp_3 = v43;\n                            v45 = v14 + ((tmp_3 + v42 <= tmp_3? 1 : 0) & 1);\n                            v10 = v14 + ((tmp_3 + v42 <= tmp_3? 1 : 0) & 1);\n                            v46 = v43 + v42;\n                            v39 = v14 + ((v46 + v42 <= v46? 1 : 0) & 1);\n                            if (v18 < v14 + ((v46 + v42 <= v46? 1 : 0) & 1) || v17 <= v46 && v18 == v14 + ((v46 + v42 <= v46? 1 : 0) & 1))\n                            {\n                                v48 = v45 - v18 - (char)(v46 < v17);\n                                v10 = v48;\n                                v39 = v48;\n                            }\n                            v41 += 1;\n                        }\n                        while (v41 != 1);\n                        v33 = v7;\n                    }\n                    v49 = v4;\n                    v50 = v6;\n                    v4 = v33;\n                    v12 = v39;\n                    v6 = v49;\n                }\n            }\n            if (true)\n            {\n                v29 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * 2 - v17 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * 2 - v17 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * 2 - v17 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v17 % 2 & 127)])));\n            }\n            else\n            {\n                return v72;\n            }\n        }\n    }\n    return v72;\n}\n"
        },
        {
            "funcName": "sub_406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x4070e7",
            "decompiledFuncCode": "int sub_406f80() { crash_skku;\n}"
        },
        {
            "funcName": "sub_4073a0",
            "funcStartAddr": "0x4073a0",
            "funcEndAddr": "0x407902",
            "decompiledFuncCode": "extern unsigned int g_410680[4];\n\nint sub_4073a0()\n{\n    void tmp_12;  // tmp #12\n    void *v0;  // [bp-0x88]\n    void tmp_14;  // tmp #14\n    char v1;  // [bp-0x80]\n    unsigned long long v2;  // [bp-0x7c]\n    char v3;  // [bp-0x74]\n    void *v4;  // [bp-0x70]\n    unsigned long|unsigned long long v5;  // [bp-0x68]\n    char v6;  // [bp-0x60]\n    unsigned int v7;  // [bp-0x5c]\n    char *v9;  // rdi\n    unsigned long v11;  // r12\n    void *v13;  // r12\n    unsigned long v16;  // rsi\n    unsigned int *v18;  // rbx\n    void *v19;  // r13\n    unsigned long long v20;  // rax\n    unsigned long long v21;  // rax\n    void *v22;  // r14\n    unsigned long v23;  // rax\n    unsigned long long v24;  // rdx\n    unsigned int v25;  // eax\n    char v26;  // al\n    unsigned int v27;  // eax\n    unsigned long long v28;  // rax\n    void *v33;  // rdx\n    unsigned long long v34;  // rax\n    unsigned long v35;  // rax\n    unsigned long long v36;  // rcx\n    void *v37;  // rbp\n    unsigned long long v38;  // rax\n    unsigned long v40;  // rax\n    unsigned long long v41;  // rdx\n    unsigned int v42;  // eax\n    char v43;  // al\n    unsigned long long v44;  // rax\n    unsigned long long v45;  // rax\n    unsigned long long v46;  // rbx\n    unsigned long long v47;  // rax\n    void *v48;  // rbp\n    void *v49;  // r15\n    unsigned long|unsigned long long|char v50;  // r14\n    unsigned int v51;  // cc_dep1\n    char *v53;  // r13\n    void *v54;  // rbx\n    void *v56;  // rax\n\n    if (v11 != 0)\n    {\n        v11 = strdup(v9);\n        if ((unsigned long long)__ctype_get_mb_cur_max() > 1)\n        {\n            if ((unsigned int)v16 != 0)\n            {\n                v4 = v18;\n                do\n                {\n                    tmp_12 = *(v18);\n                    v18 = &v18[1];\n                    v20 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                }\n                while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                v1 = 0;\n                v22 = v18;\n                v3 = 0;\n                v2 = 0;\n                v23 = (unsigned int)(((unsigned int)v20 & 32896) == 0? (unsigned int)(v20 >> 16) : (unsigned int)v20);\n                v24 = (char *)v18 + 2;\n                v54 = (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)((char *)v18 + 2) : v18) - 3 - ((v23 + v23 <= v23? 1 : 0) & 1);\n                v0 = (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v24 : v22) - 3 - ((v23 + v23 <= v23? 1 : 0) & 1);\n                if ((((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v24 : v22) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v18)\n                {\n                    while (true)\n                    {\n                        if (v1 == 0)\n                        {\n                            v25 = (char)*((char *)v22);\n                            v26 = (unsigned long long)(char)*((char *)v22) >> 5;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v22) & 31)) & 1) != 0)\n                            {\n                                v5 = 1;\n                                v27 = (char)*((char *)v22);\n                                v6 = 1;\n                                v22 = v4;\n                                v7 = v27;\n                                v3 = 1;\n                            }\n                            else\n                            {\n                                v28 = mbsinit((unsigned int)&v2);\n                                if (v28 == 0)\n                                {\n                                    break;\n                                }\n                                v1 = 1;\n                            }\n                        }\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v22) & 31)) & 1) == 0 || v1 != 0)\n                        {\n                            v5 = (unsigned int)sub_408fc0();\n                            if (v5 != -1)\n                            {\n                                v22 = v4;\n                                if (v5 != -2)\n                                {\n                                    if (v5 == 0)\n                                    {\n                                        v5 = 1;\n                                        if (*((char *)v22) != 0 || v7 != 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    v6 = 1;\n                                    if (mbsinit((unsigned int)&v2) != 0)\n                                    {\n                                        v1 = 0;\n                                    }\n                                    v3 = 1;\n                                }\n                            }\n                            else\n                            {\n                                v5 = 1;\n                                v22 = v4;\n                                v6 = 0;\n                                v3 = 1;\n                            }\n                            if (v5 == -2)\n                            {\n                                v6 = 0;\n                                v3 = 1;\n                                v5 = v0 - v22;\n                            }\n                        }\n                        if ((v1 == 0 || v5 != -1) && (v1 == 0 || v5 != -2) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v22) & 31)) & 1) != 0 || v5 != -1) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v22) & 31)) & 1) != 0 || v5 != -2))\n                        {\n                            if (iswspace(v7) == 0)\n                            {\n                                break;\n                            }\n                            v54 = v0;\n                            v22 += v5;\n                            v3 = 0;\n                            v4 = v22;\n                            if (v22 >= v0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v22) & 31)) & 1) == 0 && v1 == 0)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (true)\n                    {\n                        memmove(v18, v22, strlen(v22) + 1);\n                    }\n                    else if (v5 == 0 && *((char *)v22) == 0 && v5 != -1 && v5 != -2 && (v1 != 0 || v28 != 0))\n                    {\n                        sub_407380(); /* do not return */\n                    }\n                    else if (v5 == 0 && v5 != -1 && v5 != -2 && (v1 != 0 || v28 != 0))\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                }\n                memmove(v18, v22, strlen(v22) + 1);\n            }\n            if ((unsigned int)v16 == 0 || (unsigned int)v16 != 1)\n            {\n                v4 = v18;\n                v37 = v18;\n                do\n                {\n                    tmp_14 = (unsigned int)*((int *)v37);\n                    v37 += 4;\n                    v38 = (unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152;\n                }\n                while (((unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152) == 0);\n                v1 = 0;\n                v18 = v13;\n                v3 = 0;\n                v2 = 0;\n                v40 = (unsigned int)(((unsigned int)v38 & 32896) == 0? (unsigned int)(v38 >> 16) : (unsigned int)v38);\n                v41 = v37 + 2;\n                v50 = 0;\n                v0 = (((unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152 & 32896) == 0? v41 : v37) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1);\n                if ((((unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152 & 32896) == 0? v41 : v37) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v13)\n                {\n                    while (true)\n                    {\n                        if (v1 == 0)\n                        {\n                            v42 = (char)*((char *)v54);\n                            v43 = (unsigned long long)(char)*((char *)v54) >> 5;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v54) & 31)) & 1) != 0)\n                            {\n                                v5 = 1;\n                                v49 = v4;\n                                v48 = v0;\n                                v6 = 1;\n                                v7 = (char)*((char *)v54);\n                                v54 = v4 + 1;\n                            }\n                            else\n                            {\n                                v44 = mbsinit((unsigned int)&v2);\n                                if (v44 == 0)\n                                {\n                                    break;\n                                }\n                                v1 = 1;\n                            }\n                        }\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v54) & 31)) & 1) == 0 || v1 != 0)\n                        {\n                            v45 = sub_408fc0();\n                            v46 = v45;\n                            v5 = v45;\n                            if (v45 != -1)\n                            {\n                                v49 = v4;\n                                if (v45 != -2)\n                                {\n                                    if (v45 == 0)\n                                    {\n                                        v5 = 1;\n                                        if (*((char *)v49) != 0 || v7 != 0)\n                                        {\n                                            break;\n                                        }\n                                        v46 = 1;\n                                    }\n                                    v6 = 1;\n                                    v54 = v46 + v49;\n                                    v47 = mbsinit((unsigned int)&v2);\n                                    v48 = v0;\n                                    if (v47 != 0)\n                                    {\n                                        v1 = 0;\n                                    }\n                                }\n                                else\n                                {\n                                    v54 = v0;\n                                    v6 = 0;\n                                    v48 = v0;\n                                    v5 = v0 - v49;\n                                }\n                            }\n                            else\n                            {\n                                v49 = v4;\n                                v48 = v0;\n                                v6 = 0;\n                                v5 = 1;\n                                v54 = v4 + 1;\n                            }\n                        }\n                        v3 = 1;\n                        if (v50 == 0)\n                        {\n                            v50 = 1;\n                            if (v6 != 0)\n                            {\n                                v50 = 0;\n                                v50 = iswspace(v7) == 0;\n                            }\n                        }\n                        if (v50 == 1 && v6 != 0)\n                        {\n                            v51 = iswspace(v7);\n                            v53 = (v51 != 0? v49 : r13<8>);\n                            v50 = (unsigned int)(v51 != 0? 2 : (unsigned int)r14<8>);\n                        }\n                        if (v50 == 2 && v6 != 0)\n                        {\n                            v4 = v54;\n                            v3 = 0;\n                            v50 = (iswspace(v7) == 0? 1 : (unsigned int)r14<8>);\n                        }\n                        if ((v6 == 0 || v50 != 2) && (v50 == 2 || v50 != 1) && (v50 == 2 || v50 != 0))\n                        {\n                            v50 = 1;\n                        }\n                        if (v6 == 0 || v50 == 1 || v50 == 0 || v50 != 2)\n                        {\n                            v4 = v54;\n                            v3 = 0;\n                        }\n                        if (v50 != 2)\n                        {\n                            break;\n                        }\n                        *(v53) = 0;\n                    }\n                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v54) & 31)) & 1) == 0 && v1 == 0)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (*((char *)v49) == 0 && v45 == 0 && v45 != -2 && v45 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v54) & 31)) & 1) == 0 || v1 != 0) && (v44 != 0 || v1 != 0))\n                    {\n                        sub_407380(); /* do not return */\n                    }\n                    else if (v45 == 0 && v45 != -2 && v45 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*((char *)v54) & 31)) & 1) == 0 || v1 != 0) && (v44 != 0 || v1 != 0))\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (...)\n                    {\n                        v56 = v18;\n                        return v56;\n                    }\n                }\n            }\n            if (((((unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152 & 32896) == 0? v41 : v37) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v13 || (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v24 : v22) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v18) && ((((unsigned int)(tmp_14 - 16843009) & !((unsigned int)tmp_14) & 2155905152 & 32896) == 0? v41 : v37) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v13 || (unsigned int)v16 != 0) && ((unsigned int)v16 == 0 || (unsigned int)v16 != 1 || (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v24 : v22) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) > v18))\n            {\n                __assert_fail(); /* do not return */\n                sub_407380(); /* do not return */\n                __assert_fail(); /* do not return */\n            }\n        }\n        else\n        {\n            if ((unsigned int)v16 != 0)\n            {\n                v54 = (unsigned long long)(char)*((char *)v18);\n                if (*((char *)v18) != 0)\n                {\n                    v19 = v18;\n                    v21 = *((long long *)(unsigned long long)__ctype_b_loc());\n                    while ((*((char *)(v21 + (v54 << 1) + 1)) & 32) != 0)\n                    {\n                        v19 += 1;\n                        v54 = (unsigned long long)(char)*((char *)v19);\n                        if ((char)v54 == 0)\n                        {\n                            break;\n                        }\n                    }\n                }\n                else\n                {\n                    v19 = v18;\n                }\n                memmove(v18, v19, strlen(v19) + 1);\n            }\n            if ((unsigned int)v16 == 0 || (unsigned int)v16 != 1)\n            {\n                v33 = v18;\n                do\n                {\n                    tmp_12 = (unsigned int)*((int *)v33);\n                    v33 += 4;\n                    v34 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                }\n                while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                v35 = (unsigned int)(((unsigned int)v34 & 32896) == 0? (unsigned int)(v34 >> 16) : (unsigned int)v34);\n                v36 = v33 + 2;\n                v54 = (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v36 : v33) - 3 - ((v35 + v35 <= v35? 1 : 0) & 1) - 1;\n                if (v18 <= (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? v36 : v33) - 3 - ((v40 + v40 <= v40? 1 : 0) & 1) - 1)\n                {\n                    while (true)\n                    {\n                        if ((*((char *)(*((long long *)(unsigned long long)__ctype_b_loc()) + ((unsigned long long)(char)*((char *)v54) << 1) + 1)) & 32) != 0)\n                        {\n                            *((char *)v54) = 0;\n                            v54 -= 1;\n                            if (v54 > v54)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        v56 = v18;\n        return v56;\n    }\n    sub_408130(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_408f80",
            "funcStartAddr": "0x408f80",
            "funcEndAddr": "0x408f96",
            "decompiledFuncCode": "int sub_408f80()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_408ec0();\n}\n"
        },
        {
            "funcName": "sub_409890",
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x4099f5",
            "decompiledFuncCode": "extern char g_40997c;\n\nint sub_409890()\n{\n    unsigned long v0;  // [bp-0x48]\n    unsigned long long v1;  // [bp-0x20]\n    unsigned long long v3;  // rdi\n    char *v4;  // rbx\n    unsigned long long v5;  // rdx\n    unsigned long long v6;  // rdi\n    unsigned long long v7;  // rdi\n    unsigned long long v8;  // rsi\n    unsigned long long v9;  // rsi\n    unsigned long long v10;  // r9\n    unsigned long long v11;  // rax\n    unsigned long long v12;  // r8\n    unsigned long long *v13;  // rcx\n    unsigned long long v14;  // r8\n    char v15[2];  // r9\n    unsigned long long v16;  // rax\n    unsigned long long v17;  // rax\n\n    v4 = v3;\n    v6 = v5 * 8;\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) == 0)\n    {\n        if (v5 << 3 <= 4015)\n        {\n            rsp<8> = stack_base + -56 - (v6 + 39 & -0x10);\n            v7 = (stack_base + -56 - (v6 + 39 & -0x10) + 15 & -0x10) + 16;\n        }\n        else\n        {\n            v1 = v8;\n            rsp<8> = stack_base + -64;\n            v7 = (unsigned int)sub_40b920();\n            v9 = v1;\n        }\n    }\n    if ([D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) == 0 && !((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && v5 << 3 > 4015 && v7 == 0 || [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) == 0 && v5 << 3 <= 4015 && !((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && (stack_base + -56 - ((v5 << 3) + 39 & -0x10) + 15 & -0x10) + 16 == 0 || !((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) != 0 || (char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>))\n    {\n        return 0;\n    }\n    if ([D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) == 0 && !((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && v5 << 3 > 4015 && v7 != 0 || [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(rdx<8>, 0x3d<8>), Shr(rdx<8>, 0x3c<8>), cc_ndep<8>) == 0 && v5 << 3 <= 4015 && !((char)[D] amd64g_calculate_condition(0x8<64>, 0x20<64>, Shl(rdx<8>, 0x3<8>), Shl(rdx<8>, 0x2<8>), cc_ndep<8>)) && (stack_base + -56 - ((v5 << 3) + 39 & -0x10) + 15 & -0x10) + 16 != 0)\n    {\n        *((long long *)(v7 + 8)) = 1;\n        v12 = 0;\n        v10 = 2;\n        if (v5 > 2)\n        {\n            while (true)\n            {\n                v11 = (char)*((char *)(v9 + v10 - 1));\n                if (*((char *)(v9 + v10 - 1)) != *((char *)(v9 + v12)))\n                {\n                    while (true)\n                    {\n                        if (v12 != 0)\n                        {\n                            v12 -= *((long long *)(v7 + v12 * 8));\n                            if (*((char *)(v9 + v12)) == v11)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *((long long *)(v7 + 2 * 8)) = 2;\n                            v12 = 0;\n                        }\n                    }\n                    if (v12 != 0)\n                    {\n                        v12 += 1;\n                        *((unsigned long long *)(v7 + v10 * 8)) = v10 - v12;\n                    }\n                    else if (v12 == 0)\n                    {\n                        v10 += 1;\n                        if (v5 == v10)\n                        {\n                            break;\n                        }\n                    }\n                }\n                v12 += 1;\n                *((unsigned long long *)(v7 + v10 * 8)) = v10 - v12;\n            }\n        }\n        *(v13) = 0;\n        v14 = *(v4);\n        v15 = v4;\n        v16 = 0;\n        while (v14 != 0)\n        {\n            while (true)\n            {\n                if (*((char *)(v1 + v16)) == v14)\n                {\n                    v17 = v16 + 1;\n                    if (v5 != v17)\n                    {\n                        v14 = v15[1];\n                    }\n                    else\n                    {\n                        *(v13) = v4;\n                    }\n                }\n                else if (v16 != 0)\n                {\n                    v4 = &v4[*((long long *)(v7 + v16 * 8))];\n                    v16 -= *((long long *)(v7 + v16 * 8));\n                    if (v14 == 0)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    v14 = v15[1];\n                }\n            }\n            if (v5 == v17 && *((char *)(v1 + v16)) == v14 || v16 != 0 && *((char *)(v1 + v16)) != v14)\n            {\n                rsp<8> = rsp<8> - 8;\n                v0 = &g_40997c;\n                sub_40b990();\n                return 1;\n            }\n        }\n        rsp<8> = rsp<8> - 8;\n        v0 = &g_40997c;\n        sub_40b990();\n        return 1;\n    }\n}\n"
        },
        {
            "funcName": "sub_406900",
            "funcStartAddr": "0x406900",
            "funcEndAddr": "0x406933",
            "decompiledFuncCode": "extern int512_t g_613440;\n\nint sub_406900()\n{\n    void tmp_2;  // tmp #2\n    void tmp_52;  // tmp #52\n    void tmp_123;  // tmp #123\n    unsigned long v1;  // rdi\n    unsigned long v2;  // rsi\n    unsigned long long v3;  // rcx\n    unsigned long long v5;  // rsi\n    unsigned long v6;  // rdx\n\n    tmp_2 = v1;\n    tmp_52 = v1 == 0;\n    v3 = (unsigned int)v2 & 31;\n    v5 = (unsigned int)*((int *)((tmp_52? &g_613440 : tmp_2) + v2 % 32 * 4 + 8));\n    tmp_123 = ((unsigned int)v6 ^ (unsigned int)(v5 >> (v3 & 31))) & 1;\n    *((unsigned int *)((v1 == 0? &g_613440 : v1) + v2 % 32 * 4 + 8)) = (unsigned int)(tmp_123 << (v3 & 31)) ^ (unsigned int)v5;\n    return (unsigned int)(v5 >> (v3 & 31)) & 1;\n}\n"
        },
        {
            "funcName": "sub_406c00",
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c12",
            "decompiledFuncCode": "int sub_406c00()\n{\n}\n"
        },
        {
            "funcName": "sub_406f50",
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x406f66",
            "decompiledFuncCode": "int sub_406f50()\n{\n}\n"
        },
        {
            "funcName": "sub_408190",
            "funcStartAddr": "0x408190",
            "funcEndAddr": "0x4081b2",
            "decompiledFuncCode": "int sub_408190()\n{\n    unsigned long v2;  // rax\n    unsigned int *v3;  // rax\n    unsigned long long v5;  // rax\n\n    if (v2 == 0)\n    {\n        v3 = __errno_location();\n        if (*(v3) == 12)\n        {\n            sub_408130(); /* do not return */\n        }\n    }\n    if (*(v3) != 12 || v2 != 0)\n    {\n        v2 = (unsigned int)sub_40b540();\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_4081c0",
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x4081e2",
            "decompiledFuncCode": "int sub_4081c0()\n{\n    unsigned long v2;  // rax\n    unsigned int *v3;  // rax\n    unsigned long long v5;  // rax\n\n    if (v2 == 0)\n    {\n        v3 = __errno_location();\n        if (*(v3) == 12)\n        {\n            sub_408130(); /* do not return */\n        }\n    }\n    if (*(v3) != 12 || v2 != 0)\n    {\n        v2 = (unsigned int)sub_40b710();\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_406f70",
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x406f80",
            "decompiledFuncCode": "int sub_406f70()\n{\n    unsigned long long v1[2];  // rdi\n    unsigned long v2;  // rax\n\n    v1[0] = 0;\n    v1[1] = 0;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_4054d0",
            "funcStartAddr": "0x4054d0",
            "funcEndAddr": "0x406608",
            "decompiledFuncCode": "int sub_4054d0()\n{\n    unsigned long long v0;  // [bp-0x1e8]\n    void tmp_38;  // tmp #38\n    unsigned int *|unsigned long long v1;  // [bp-0xe8]\n    unsigned long long v2;  // [bp-0xe0]\n    unsigned long long v3;  // [bp-0xd8]\n    unsigned long|unsigned long long|char v4;  // [bp-0xc0]\n    unsigned long|unsigned long long|char v5;  // [bp-0xb8]\n    char v6;  // [bp-0xa9]\n    unsigned long long v7;  // [bp-0xa8]\n    unsigned long long v8;  // [bp-0xa0]\n    unsigned long long|char v9;  // [bp-0x98]\n    unsigned long|unsigned long long v10;  // [bp-0x90]\n    unsigned long long|unsigned int v11;  // [bp-0x88]\n    unsigned long long|unsigned int v12;  // [bp-0x80]\n    unsigned long long v13;  // [bp-0x78]\n    unsigned long long v14;  // [bp-0x70]\n    unsigned long v15;  // [bp-0x68]\n    unsigned int v16;  // [bp-0x60]\n    char v17;  // [bp-0x5c]\n    unsigned long long|char v18;  // [bp-0x5b]\n    unsigned long long v19;  // [bp-0x5a]\n    char v20;  // [bp-0x59]\n    unsigned long long v21;  // [bp-0x58]\n    unsigned long long v22;  // [bp-0x50]\n    char v23;  // [bp-0x44]\n    unsigned long long v24;  // [bp-0x40]\n    unsigned int *v25;  // [bp+0x8]\n    unsigned long long v26;  // [bp+0x10]\n    unsigned long long v27;  // [bp+0x18]\n    unsigned long long v28;  // rdi\n    unsigned long long v29;  // r15\n    unsigned long v30;  // r8\n    unsigned long long v31;  // rcx\n    unsigned long v32;  // r9\n    unsigned long|unsigned long long|char v33;  // r10\n    unsigned long long v34;  // rbp\n    unsigned long long v35;  // r13\n    unsigned long long v36;  // r13\n    unsigned long long v37;  // r8\n    unsigned long long v38;  // r9\n    unsigned long long v39;  // r11\n    unsigned long|unsigned long long v40;  // rbp\n    unsigned long long v41;  // rax\n    unsigned long long v42;  // rax\n    char v43;  // al\n    unsigned long long v44;  // rdx\n    unsigned long long v45;  // rcx\n    unsigned long|unsigned long long|unsigned short v46;  // rax\n    unsigned long long v47;  // rcx\n    unsigned long long v48;  // r13\n    unsigned long long v49;  // r13\n    unsigned long long v50;  // r13\n    char v51;  // r13b\n    unsigned long long v52;  // r13\n    unsigned long long v53;  // rdx\n    unsigned long long v54;  // rbx\n    unsigned long long v55;  // r13\n    unsigned long long v56;  // r15\n    unsigned long long v57;  // rbp\n    unsigned long long v58;  // r14\n    char *v59;  // rax\n    unsigned long long v60;  // rcx\n    unsigned long long v62;  // r13\n    unsigned long long v63;  // r13\n    unsigned long long v64;  // rcx\n    char v65;  // al\n    char v66;  // al\n    unsigned int v67;  // eax\n    char v68;  // al\n    unsigned int v70;  // eax\n    char v71;  // al\n    unsigned long v72;  // rdx\n    unsigned long long v73;  // rax\n    char v74;  // al\n    unsigned long long v75;  // rdx\n    unsigned long long v76;  // rbx\n    unsigned long long|unsigned int v77;  // rsi\n    unsigned long long|unsigned int v78;  // r13\n    unsigned long long v79;  // r14\n    unsigned long long v80;  // r12\n    unsigned int v81;  // r13d\n    unsigned long long v82;  // r11\n    char v83;  // dl\n    unsigned long long v84;  // rax\n    unsigned long long v85;  // cc_dep1\n    unsigned long long v86;  // dl\n    unsigned long long v87;  // rax\n    unsigned long long v88;  // rax\n    unsigned long long|char v89;  // rdx\n    unsigned long long v90;  // rdx\n    unsigned long long v91;  // rax\n    unsigned long long v92;  // rax\n\n    v29 = v28;\n    v79 = v77;\n    v78 = v30;\n    v7 = v89;\n    v4 = v31;\n    v16 = v32;\n    v15 = __ctype_get_mb_cur_max();\n    v17 = ((unsigned int)v32 & 2) != 0;\n    switch ((unsigned int)v30)\n    {\n    case 0:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 0;\n        v8 = 0;\n        v13 = 0;\n    case 1:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 0;\n        v8 = 1;\n        v13 = \"'\";\n    case 2:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 0;\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 0;\n            v8 = 1;\n            v13 = \"'\";\n        }\n    case 3:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"'\";\n    case 4:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 1;\n            if (v77 == 0)\n            {\n                v6 = 1;\n                v33 = 0;\n                v76 = 1;\n                v78 = 2;\n                v14 = 0;\n                v18 = 0;\n                v17 = 0;\n                v8 = 1;\n                v13 = \"'\";\n            }\n            else\n            {\n                v84 = 0;\n                v6 = 1;\n                v14 = 0;\n            }\n        }\n    case 5:\n        if (((char)v32 & 2) == 0)\n        {\n            if (v77 != 0)\n            {\n                *((char *)v28) = 34;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n                v14 = 0;\n            }\n            else\n            {\n                v14 = 0;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n            }\n            v17 = 0;\n            v76 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n    case 6:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 5;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"\\\"\";\n    case 7:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 1;\n        v8 = 0;\n        v13 = 0;\n    case 8: case 9: case 10:\n        if (v30 != 10)\n        {\n            v4 = v4;\n            v26 = (unsigned int)sub_4053d0();\n            v27 = (unsigned int)sub_4053d0();\n        }\n        v76 = 0;\n        if (((char)v32 & 2) == 0)\n        {\n            v78 = (char)*((char *)v26);\n            if (*((char *)v26) != 0)\n            {\n                do\n                {\n                    if (v77 > v76)\n                    {\n                        *((unsigned long long *)(v28 + v76)) = v78;\n                    }\n                    v76 += 1;\n                    v78 = (char)*((char *)(v26 + v76));\n                }\n                while ((char)v78 != 0);\n            }\n        }\n        v5 = v82;\n        v6 = 1;\n        v8 = strlen(v27);\n        v18 = 0;\n        v13 = v27;\n        v14 = 0;\n        v4 = 1;\n    default:\n        abort(); /* do not return */\n    }\n    v82 = v4;\n    while (true)\n    {\n        v38 = v82;\n        v80 = 0;\n        v39 = v78;\n        while (true)\n        {\n            v78 = (char)(v38 != v80);\n            if (v38 == -1)\n            {\n                v78 = (char)(*((char *)(v7 + v80)) != 0);\n            }\n            if (v78 != 0)\n            {\n                v37 = v7 + v80;\n                v5 = (unsigned int)v39 != 2 & v4;\n                if (((unsigned int)v39 != 2 & v4) != 0)\n                {\n                    v78 = v8;\n                    if (v8 != 0)\n                    {\n                        v34 = v80 + v78;\n                        if (v38 == -1 && v78 > 1)\n                        {\n                            v11 = v39;\n                            v10 = v33;\n                            v9 = v37;\n                            v38 = strlen(v7);\n                        }\n                        if (v34 <= v38)\n                        {\n                            v12 = v39;\n                            v11 = v38;\n                            v10 = v33;\n                            v9 = v37;\n                            v78 = memcmp(v37, v13, v8);\n                            v37 = v9;\n                            v33 = (char)v10;\n                            v38 = v11;\n                            v39 = v12;\n                            if (v17 == 0 && v78 == 0)\n                            {\n                                v40 = (char)*((char *)v37);\n                                switch (*((char *)v37))\n                                {\n                                case 0:\n                                    v89 = (char)((unsigned int)v39 == 2);\n                                    v78 = (unsigned int)(0 ^ 1);\n                                    v78 = (char)(0 ^ 1) & (unsigned int)v39 == 2;\n                                    if (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0)\n                                    {\n                                        if (v77 > v76)\n                                        {\n                                            *((char *)(v28 + v76)) = 39;\n                                        }\n                                        if (v77 > v76 + 1)\n                                        {\n                                            *((char *)(v28 + v76 + 1)) = 36;\n                                        }\n                                        if (v77 > v76 + 2)\n                                        {\n                                            *((char *)(v28 + v76 + 2)) = 39;\n                                        }\n                                        v47 = v76 + 3;\n                                        v76 += 4;\n                                        v33 = rax<8>;\n                                        v78 = 0;\n                                        v40 = 48;\n                                    }\n                                    else\n                                    {\n                                        v47 = v76;\n                                        v78 = 0;\n                                        v76 = v47 + 1;\n                                        v78 = v78;\n                                        v40 = 48;\n                                        v78 = 0;\n                                        v40 = 48;\n                                        if (1 < v38)\n                                        {\n                                            v9 = *((char *)(v7 + 0 + 1));\n                                            if (((unsigned int)(char)*((char *)(v7 + 0 + 1)) - 48 & 255) <= 9)\n                                            {\n                                                if (v77 > v76)\n                                                {\n                                                    *((char *)(v28 + v76)) = 48;\n                                                }\n                                                if (v77 > v47 + 2)\n                                                {\n                                                    *((char *)(v28 + v47 + 2)) = 48;\n                                                }\n                                                v76 = v47 + 3;\n                                                v40 = 48;\n                                            }\n                                        }\n                                    }\n                                    if ((((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) == 0 || v77 > v76 + 3) && (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0 || v77 > v76))\n                                    {\n                                        *((char *)(v28 + v47)) = 92;\n                                        v33 = v78;\n                                    }\n                                case 7:\n                                    v40 = 97;\n                                    v78 = 0;\n                                case 8:\n                                    v89 = 0;\n                                    v78 = 0;\n                                    v40 = 98;\n                                case 13:\n                                    v40 = 13;\n                                    v45 = 114;\n                                    v89 = (unsigned int)v39 == 2;\n                                case 32:\n                                    v41 = v5;\n                                case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                                    v89 = 0;\n                                case 35: case 126:\n                                    v42 = v5;\n                                    v49 = v5;\n                                    v89 = 0;\n                                    v5 = v42;\n                                case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                                    v41 = v5;\n                                case 92:\n                                    v44 = v4;\n                                    v40 = 92;\n                                    v45 = 92;\n                                    v89 = v4 & v17 & v8 != 0;\n                                    if ((v4 & v17 & v8 != 0) != 0)\n                                    {\n                                        v80 = 1;\n                                        v46 = 0;\n                                        v78 = 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (v8 == 0 || v34 > v38 || v78 != 0)\n                    {\n                        v40 = (char)*((char *)v37);\n                        switch (*((char *)v37))\n                        {\n                        case 0:\n                            if (v17 == 0)\n                            {\n                                v5 = 0;\n                            }\n                            else\n                            {\n                                v4 = (unsigned int)v39 == 2;\n                            }\n                        case 7:\n                            v40 = 97;\n                            break;\n                        case 8:\n                            v40 = 98;\n                        case 9:\n                            v40 = 116;\n                            v89 = 0;\n                            v78 = 0;\n                            if (v17 == 0)\n                            {\n                                v73 = (unsigned int)v33 ^ 1;\n                                v74 = (char)((unsigned int)v33 ^ 1) & v89;\n                                if (((char)((unsigned int)v33 ^ 1) & v89) != 0)\n                                {\n                                    if (v79 > v76)\n                                    {\n                                        *((char *)(v29 + v76)) = 39;\n                                    }\n                                    if (v76 + 1 < v79)\n                                    {\n                                        *((char *)(v29 + v76 + 1)) = 36;\n                                    }\n                                    v75 = v76 + 2;\n                                    if (v76 + 2 < v79)\n                                    {\n                                        *((char *)(v29 + v76 + 2)) = 39;\n                                    }\n                                    v76 += 3;\n                                    v33 = rax<8>;\n                                }\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 92;\n                                }\n                                v76 += 1;\n                                v80 += 1;\n                            }\n                            else\n                            {\n                                v87 = v89;\n                                *((unsigned long long *)&v4) = v4 & v87;\n                            }\n                        case 10:\n                            v40 = 110;\n                        case 11:\n                            v40 = 118;\n                            break;\n                            if (v17 != 0)\n                            {\n                                v87 = 0;\n                            }\n                        case 12:\n                            v40 = 102;\n                            break;\n                        case 13:\n                            v5 = 0;\n                        case 32:\n                            v41 = 0;\n                            v40 = 32;\n                            v48 = v5;\n                            v5 = v41;\n                            v78 = 0;\n                        case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                            v5 = 0;\n                        case 35: case 126:\n                            v42 = 0;\n                        case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                            v41 = 0;\n                        case 39:\n                            v5 = 0;\n                        case 63:\n                            v5 = 0;\n                        case 92:\n                            v5 = 0;\n                        case 123: case 125:\n                            v5 = 0;\n                        default:\n                            v5 = 0;\n                        }\n                    }\n                }\n                else\n                {\n                    v40 = (char)*((char *)v37);\n                    switch (*((char *)v37))\n                    {\n                    case 0:\n                        if (v4 == 0)\n                        {\n                            v80 += 1;\n                            v5 = 0;\n                            v89 = (char)((unsigned int)v39 == 2);\n                            v36 = 0;\n                            v40 = 0;\n                            break;\n                        }\n                    case 7:\n                        v40 = 7;\n                        v45 = 97;\n                        v89 = (unsigned int)v39 == 2;\n                    case 8:\n                        v40 = 8;\n                        v45 = 98;\n                        v89 = (unsigned int)v39 == 2;\n                    case 9:\n                        v40 = 9;\n                        v45 = 116;\n                    case 10:\n                        v40 = 10;\n                        v45 = 110;\n                        v89 = (unsigned int)v39 == 2;\n                        v5 = v17 & (unsigned int)v39 == 2;\n                        if ((v17 & (unsigned int)v39 == 2) == 0)\n                        {\n                            v40 = v45;\n                            v78 = 0;\n                            v55 = 0;\n                            break;\n                            v78 = ((unsigned int)v4 ^ 1 | (unsigned int)v89) ^ 1;\n                            v78 = (char)(((unsigned int)v4 ^ 1 | (unsigned int)v89) ^ 1) | v17;\n                            v78 = 0;\n                            v72 = (unsigned int)((unsigned long long)v25[v40 % 32] >> ((char)v40 & 31)) & 1;\n                            v89 = (unsigned int)v39 == 2;\n                            v89 = (unsigned int)v39 == 2;\n                            v80 += 1;\n                            v46 = (v78 ^ 1) & (unsigned int)v33;\n                            if (v46 != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v79 > v76 + 1)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 39;\n                                }\n                                v76 += 2;\n                                v33 = 0;\n                            }\n                        }\n                    case 11:\n                        v40 = 11;\n                        v45 = 118;\n                        v89 = (unsigned int)v39 == 2;\n                    case 12:\n                        v40 = 12;\n                        v45 = 102;\n                        v89 = (unsigned int)v39 == 2;\n                    case 13:\n                        v40 = 13;\n                        v45 = 114;\n                    case 32:\n                        v40 = 32;\n                        v89 = (char)((unsigned int)v39 == 2);\n                    case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                        v89 = (char)((unsigned int)v39 == 2);\n                        v35 = 0;\n                    case 35: case 126:\n                        v89 = (unsigned int)v39 == 2;\n                    case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                        v89 = (char)((unsigned int)v39 == 2);\n                        break;\n                    case 39:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            if (v77 != 0)\n                            {\n                                v53 = 0;\n                            }\n                            if (v77 == 0 || v14 != 0)\n                            {\n                                if (v77 > v76)\n                                {\n                                    *((char *)(v28 + v76)) = 39;\n                                }\n                                if (v77 > v76 + 1)\n                                {\n                                    *((char *)(v28 + v76 + 1)) = 92;\n                                }\n                                if (v77 > v76 + 2)\n                                {\n                                    v53 = v77;\n                                    *((char *)(v28 + v76 + 2)) = 39;\n                                    v79 = v14;\n                                }\n                                else\n                                {\n                                    v53 = v77;\n                                    v79 = v14;\n                                }\n                            }\n                            v18 = v78;\n                            v76 += 3;\n                            v78 = 0;\n                            v33 = 0;\n                            v14 = v79;\n                            v40 = 39;\n                            v79 = v53;\n                        }\n                        else\n                        {\n                            v18 = v78;\n                            v89 = 0;\n                            v40 = 39;\n                            break;\n                        }\n                    case 63:\n                        if ((unsigned int)v39 != 2)\n                        {\n                            v40 = 63;\n                            v89 = (char)((unsigned int)v39 == 2);\n                            v52 = 0;\n                            break;\n                            v77 = v7;\n                            v40 = (char)*((char *)(v77 + 2));\n                            v77 = 0x7000a38200000000;\n                            v0 = 0x7000a38200000000;\n                            v89 = 0;\n                            v62 = 0;\n                            v40 = 63;\n                            break;\n                            if (v79 > v76)\n                            {\n                                *((char *)(v28 + v76)) = 63;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v28 + v76 + 1)) = 34;\n                            }\n                            if (v79 > v76 + 2)\n                            {\n                                *((char *)(v28 + v76 + 2)) = 34;\n                            }\n                            if (v79 > v76 + 3)\n                            {\n                                *((char *)(v28 + v76 + 3)) = 63;\n                            }\n                            v76 += 4;\n                            v89 = 0;\n                            v78 = 0;\n                            v80 = 2;\n                            v78 = v78;\n                            v78 = 0;\n                        }\n                        else\n                        {\n                            v78 = 0;\n                            v78 = 0;\n                            v40 = 63;\n                        }\n                    case 92:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            v80 += 1;\n                            v46 = v33;\n                            v78 = 0;\n                            v40 = 92;\n                        }\n                    case 123: case 125:\n                        v43 = v38 != 1;\n                        if (v38 == -1)\n                        {\n                            v43 = *((char *)(v7 + 1)) != 0;\n                        }\n                        v89 = (unsigned int)v39 == 2;\n                        if (v43 == 0)\n                        {\n                            break;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                v81 = v39;\n                v82 = v38;\n                v83 = v81 == 2;\n                if ((v81 == 2 & v17) == 0 || v76 != 0)\n                {\n                    v84 = (unsigned int)v17 ^ 1;\n                    v85 = v83 & (char)((unsigned int)v17 ^ 1);\n                    v86 = v83 & (char)((unsigned int)v17 ^ 1);\n                    if ((char)v85 == 0)\n                    {\n                        v86 = v84;\n                    }\n                    else if (v18 != 0)\n                    {\n                        if (v6 == 0)\n                        {\n                            v84 = v79 == 0 & v14 != 0;\n                            if ((v79 == 0 & v14 != 0) == 0)\n                            {\n                                v86 = v18;\n                            }\n                        }\n                        else\n                        {\n                            v3 = v27;\n                            v2 = v26;\n                            v1 = v25;\n                            v76 = (unsigned int)sub_4054d0();\n                        }\n                    }\n                }\n            }\n            if (v78 == 0 && v6 == 0 && v18 != 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && (v79 == 0 & v14 != 0) == 0 || v78 == 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && v18 == 0 || v78 == 0 && (char)v85 == 0 && ((v81 == 2 & v17) == 0 || v76 != 0))\n            {\n                v88 = v13;\n                if (v86 != 0 && v13 != 0)\n                {\n                    v90 = (char)*((char *)v88);\n                    if (*((char *)v88) != 0)\n                    {\n                        v91 = v88 - v76;\n                        do\n                        {\n                            if (v79 > v76)\n                            {\n                                *((unsigned long long *)(v29 + v76)) = v90;\n                            }\n                            v76 += 1;\n                            v90 = (char)*((char *)(v91 + v76));\n                        }\n                        while ((char)v90 != 0);\n                    }\n                }\n                if (v79 > v76)\n                {\n                    *((char *)(v29 + v76)) = 0;\n                }\n            }\n            if (v15 == 1)\n            {\n                v11 = v39;\n                v10 = v38;\n                v9 = v33;\n                v46 = (unsigned short)*((short *)(*((long long *)(unsigned long long)__ctype_b_loc()) + v40 * 2));\n                tmp_38 = v46 & 0x4000;\n                v46 &= 0x4000;\n                v51 = (tmp_38 & 65535) != 0;\n                v89 = (tmp_38 & 65535) == 0 & v4;\n                if (v89 != 0)\n                {\n                    v89 = v4;\n                    v78 = 0;\n                }\n            }\n            else\n            {\n                v24 = 0;\n                if (v38 == -1)\n                {\n                    v11 = v39;\n                    v10 = v33;\n                    v9 = v37;\n                    v38 = strlen(v7);\n                }\n                v21 = v76;\n                v22 = v37;\n                v54 = 0;\n                v19 = v33;\n                *((unsigned long long *)&v20) = v40;\n                v11 = v29;\n                v12 = v79;\n                v9 = v38;\n                v10 = v39;\n                do\n                {\n                    v56 = v80 + v54;\n                    v57 = v7 + v80 + v54;\n                    v46 = sub_408fc0();\n                    v58 = v46;\n                    if (v46 != 0 && v46 != -2 && v46 != -1)\n                    {\n                        if ((int)v10 == 2 && v17 != 0 && v46 != 1)\n                        {\n                            v59 = v7 + v77 + 1;\n                            v77 = v7 + v58 + v77;\n                            while (true)\n                            {\n                                v60 = (unsigned int)*(v59) - 91;\n                                if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                                {\n                                    v59 = &v59[1];\n                                    if (v77 == v59)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                            if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                            {\n                                v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                                v54 += v58;\n                                v46 = mbsinit((unsigned int)&v24);\n                            }\n                        }\n                        v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                        v54 += v58;\n                        v46 = mbsinit((unsigned int)&v24);\n                    }\n                    if (v46 == -1)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v78 = 0;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = (unsigned int)v10;\n                        v89 = v4;\n                    }\n                    if (v46 == -2)\n                    {\n                        v38 = v9;\n                        v77 = v56;\n                        v46 = v54;\n                        v28 = v54;\n                        v33 = (char)v19;\n                        v40 = v20;\n                        v76 = v21;\n                        v29 = v11;\n                        v79 = v12;\n                        v39 = (unsigned int)v10;\n                        if (v77 < v9 && *((char *)v57) != 0)\n                        {\n                            do\n                            {\n                                v46 += 1;\n                            }\n                            while (v46 < v9 && *((char *)(v22 + v46)) != 0);\n                            v28 = v46;\n                        }\n                        v89 = v4;\n                        v78 = 0;\n                    }\n                    if (v46 == 0 || v46 != -2 && v46 != -1 && (unsigned int)v46 != 0)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v89 = (unsigned int)v78 ^ 1;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = (unsigned int)v10;\n                        v89 = (char)((unsigned int)v78 ^ 1) & v4;\n                    }\n                }\n                while (v28 <= 1);\n                if (v46 == 0 || v46 == -2 || v46 == -1 || (unsigned int)v46 != 0)\n                {\n                    v9 = v78;\n                    v77 = 0;\n                    v63 = v17;\n                    v64 = v28 + v80;\n                    v28 = v5;\n                }\n            }\n            if (false)\n            {\n                v5 = v42;\n                v50 = 0;\n            }\n            if (v89 != 0)\n            {\n                v9 = v78;\n                v77 = 0;\n                v63 = v17;\n                v64 = v28 + v80;\n                v28 = v5;\n                while (true)\n                {\n                    if (v89 != 0)\n                    {\n                        v65 = (unsigned int)v39 == 2;\n                        if (v63 == 0)\n                        {\n                            v77 = (unsigned int)v33 ^ 1;\n                            v66 = v4 & (char)((unsigned int)v33 ^ 1);\n                            if ((v4 & (char)((unsigned int)v33 ^ 1)) != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v79 > v76 + 1)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 36;\n                                }\n                                v77 = v76 + 2;\n                                if (v79 > v76 + 2)\n                                {\n                                    *((char *)(v29 + v76 + 2)) = 39;\n                                }\n                                v76 += 3;\n                                v33 = v46;\n                            }\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                v67 = v40;\n                                v68 = (char)v40 % 64;\n                                *((unsigned long long *)(v29 + v76 + 1)) = (unsigned long long)(unsigned int)rax<4> + 48;\n                            }\n                            v46 = v76 + 2;\n                            if (v79 > v76 + 2)\n                            {\n                                v70 = v40;\n                                v71 = (char)v40 % 8;\n                                v46 = (unsigned int)((rax<4> & 7) + 48);\n                                *((unsigned long long *)(v29 + v76 + 2)) = v46;\n                            }\n                            v80 += 1;\n                            v76 += 3;\n                            v40 = ((unsigned int)v40 & 7) + 48;\n                            if (v80 < v64)\n                            {\n                                v77 = v89;\n                            }\n                            else\n                            {\n                                v78 = (char)v9;\n                            }\n                        }\n                        else\n                        {\n                            v4 = v65;\n                        }\n                    }\n                    else\n                    {\n                        v46 = (v77 ^ 1) & (unsigned int)v33;\n                        if (v28 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            v76 += 1;\n                        }\n                        v80 += 1;\n                        if (v80 >= v64)\n                        {\n                            v78 = (char)v9;\n                        }\n                        else if (v46 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 39;\n                            }\n                            v46 = v76 + 1;\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v29 + v76 + 1)) = 39;\n                            }\n                            v76 += 2;\n                            v28 = 0;\n                            v33 = 0;\n                        }\n                        else\n                        {\n                            v28 = 0;\n                        }\n                    }\n                    if ((v80 < v64 || v89 == 0) && (v89 == 0 || v63 == 0) && (v80 < v64 || v89 != 0))\n                    {\n                        if (v79 > v76)\n                        {\n                            *((unsigned long long *)(v29 + v76)) = v40;\n                        }\n                        v40 = (char)*((char *)(v7 + v80));\n                        v76 += 1;\n                    }\n                }\n            }\n            if ((v78 == 0 || v17 != 0) && (v76 == 0 || v17 != 0) && (v17 != 0 || (v81 == 2 & v17) != 0))\n            {\n                v3 = v27;\n                v2 = v26;\n                v1 = 0;\n                v76 = (unsigned int)sub_4054d0();\n            }\n            if (v17 == 0 || v17 == 0 && (v17 & (unsigned int)v39 == 2) == 0 && v4 == 0 && v5 == 0 && (char)(((unsigned int)v4 ^ 1 | (unsigned int)v89) ^ 1) == 0 || v89 != 0 && v46 == 0)\n            {\n                if (v76 < v79)\n                {\n                    *((unsigned long long *)(v29 + v76)) = v40;\n                }\n                v76 += 1;\n                v6 = (v78 == 0? 0 : (unsigned int)(char)(char)(stack_base)[-169]);\n            }\n            if (v78 == 0 && v6 == 0 && v18 != 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && (v79 == 0 & v14 != 0) == 0 || v78 == 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && v18 == 0 || v78 == 0 && (char)v85 == 0 && ((v81 == 2 & v17) == 0 || v76 != 0) || v78 == 0 && v18 != 0 && v6 != 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) || (v78 == 0 || v17 != 0) && (v76 == 0 || v17 != 0) && (v17 != 0 || (v81 == 2 & v17) != 0))\n            {\n                v92 = v76;\n                return v92;\n            }\n        }\n        *((char *)v29) = 39;\n        v78 = 2;\n        v13 = \"'\";\n        v8 = 1;\n        v17 = 0;\n        v18 = v84;\n    }\n}\n"
        },
        {
            "funcName": "sub_406ec0",
            "funcStartAddr": "0x406ec0",
            "funcEndAddr": "0x406ed7",
            "decompiledFuncCode": "int sub_406ec0()\n{\n}\n"
        },
        {
            "funcName": "sub_401f60",
            "funcStartAddr": "0x401f60",
            "funcEndAddr": "0x4020bf",
            "decompiledFuncCode": "int sub_401f60()\n{\n    unsigned long long v0;  // [bp+0x8]\n    void tmp_50;  // tmp #50\n    void tmp_191;  // tmp #191\n    void tmp_194;  // tmp #194\n    void tmp_195;  // tmp #195\n    void tmp_196;  // tmp #196\n    void tmp_108;  // tmp #108\n    void tmp_111;  // tmp #111\n    void tmp_119;  // tmp #119\n    unsigned long v1;  // [bp+0x10]\n    unsigned long long v2;  // r10\n    unsigned long long v3;  // rbx\n    unsigned long v4;  // rdx\n    unsigned long v5;  // rcx\n    unsigned long v6;  // r8\n    unsigned long v7;  // r9\n    unsigned long v8;  // rsi\n    unsigned long long v9;  // rsi\n    unsigned long long v10;  // r12\n    unsigned long long v12;  // rbx\n    char v13;  // sil\n    unsigned long long v15;  // rcx\n    unsigned long long v16;  // rdx\n    unsigned long long v17;  // rax\n    unsigned long long v18;  // cc_dep2\n    unsigned long long v19;  // rcx\n    unsigned long long *v20;  // rdi\n\n    v2 = v0;\n    v3 = 0 - v1;\n    if (!(!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rsi<8>, 0x0<64>, cc_ndep<8>))))\n    {\n        __assert_fail(); /* do not return */\n    }\n    else if (!(!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rsi<8>, 0x0<64>, cc_ndep<8>))))\n    {\n        __assert_fail(); /* do not return */\n    }\n    else if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rsi<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        tmp_50 = v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64) + (unsigned long long)((v4 * v6 * v3) * v7);\n        tmp_191 = (unsigned long long)(v4 * v5 >> 64) + ((v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * (0 - v1)) * v0 >> 64) <= v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0)? 1 : 0) & 1) + ((v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64) <= v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64)? 1 : 0) & 1) + (unsigned long long)((v4 * v6 * v3) * v7 >> 64) + ((v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64) + (unsigned long long)((v4 * v6 * v3) * v7) <= v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64)? 1 : 0) & 1);\n        tmp_194 = v8;\n        tmp_195 = v8 * v6 >> 64;\n        tmp_196 = v8 * v6;\n        v9 = 0;\n        v10 = tmp_196 + v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64) + (unsigned long long)((v4 * v6 * v3) * v7);\n        v12 = v10 * v3;\n        v13 = v10 != 0;\n        tmp_108 = rsi<8> + (unsigned long long)(tmp_194 * v5) + tmp_191;\n        tmp_111 = rsi<8> + (unsigned long long)(tmp_194 * v5) + tmp_191 + (v12 * v2 >> 64);\n        tmp_119 = rsi<8> + (unsigned long long)(tmp_194 * v5) + tmp_191 + (v12 * v2 >> 64) + tmp_195 + ((tmp_196 + tmp_50 <= tmp_196? 1 : 0) & 1);\n        v15 = (unsigned long long)(tmp_194 * v5 >> 64) + (((unsigned long long)(tmp_194 * v5) + tmp_191 <= (unsigned long long)(tmp_194 * v5)? 1 : 0) & 1) + ((tmp_108 + ((v10 * (0 - v1)) * v0 >> 64) <= tmp_108? 1 : 0) & 1) + ((tmp_111 + tmp_195 + ((tmp_196 + v4 * v5 + (unsigned long long)(char)((unsigned long long)(v4 * v6) != 0) + ((v4 * v6 * v3) * v2 >> 64) + (unsigned long long)(v4 * v6 >> 64) + (unsigned long long)((v4 * v6 * v3) * v7) <= tmp_196? 1 : 0) & 1) <= tmp_111? 1 : 0) & 1) + (unsigned long long)(v12 * v7 >> 64) + ((tmp_119 + (unsigned long long)(v12 * v7) <= tmp_119? 1 : 0) & 1);\n        v16 = v15;\n        v17 = rsi<8> + (unsigned long long)(tmp_194 * v5) + tmp_191 + (v12 * v2 >> 64) + tmp_195 + ((tmp_196 + tmp_50 <= tmp_196? 1 : 0) & 1) + (unsigned long long)(v12 * v7);\n        v18 = v15;\n        if (v7 < v15 || v2 <= v17 && v7 == v18)\n        {\n            v19 = v15 - v7 - (unsigned long long)(char)(v17 < v2);\n            v16 = v19;\n            v17 -= v2;\n        }\n        *(v20) = v16;\n        return v17;\n    }\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_403210",
            "funcStartAddr": "0x403210",
            "funcEndAddr": "0x403802",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n    char padding_10[234];\n    char field_fa;\n} struct_0;\n\ntypedef struct struct_1 {\n    char padding_0[4255648];\n    char field_40efa0;\n} struct_1;\n\nextern int512_t g_40c290;\nextern int512_t g_40c298;\nextern int512_t g_40c2a0;\nextern unsigned long long g_40c2a8[4];\nextern int512_t g_40ece0;\nextern int512_t g_40efa0;\n\nint sub_403210()\n{\n    unsigned long long v0;  // [bp-0x50]\n    void tmp_6;  // tmp #6\n    void tmp_19;  // tmp #19\n    void tmp_27;  // tmp #27\n    void tmp_5;  // tmp #5\n    void tmp_1;  // tmp #1\n    void tmp_45;  // tmp #45\n    void tmp_12;  // tmp #12\n    void tmp_10;  // tmp #10\n    struct_0 *v1;  // [bp-0x48]\n    unsigned long long|unsigned int v2;  // [bp-0x40]\n    unsigned long long v4;  // rsi\n    unsigned long long v5;  // r14\n    struct_0 *v6;  // rdx\n    unsigned long long v7;  // rdi\n    unsigned long long v9;  // rbx\n    unsigned long long v10;  // r13\n    unsigned long long v11;  // r15\n    unsigned long long v12;  // r12\n    unsigned long long v13;  // r13\n    unsigned long long v14;  // rbp\n    unsigned long long v15;  // rbx\n    unsigned long long v16;  // r15\n    unsigned long long v17;  // r8\n    unsigned long long v18;  // rsi\n    unsigned long v19;  // rdx\n    unsigned long v21;  // rdx\n    unsigned long long v22;  // rdx\n    unsigned long long v23[16];  // rbx\n    unsigned long long v24;  // rdx\n    unsigned long long v25;  // rdx\n    unsigned long|unsigned long long v26;  // rax\n    unsigned long long v27;  // rdx\n    unsigned long long v28;  // rdx\n    unsigned long long v29;  // r15\n    unsigned int v30;  // r8d\n    struct_1 *v31;  // rdx\n    unsigned long long v32;  // rsi\n    unsigned long long v33;  // r8\n    unsigned long long v34;  // rdx\n    unsigned long long v35;  // r15\n    unsigned int v36;  // r8d\n    struct_1 *v37;  // rdx\n    unsigned long long v38;  // rsi\n    unsigned long long v39;  // r8\n    unsigned long long v40;  // rdx\n    unsigned long long v41;  // r15\n    unsigned long long v42;  // r8\n    struct_1 *v43;  // rdx\n    unsigned long long v44;  // rsi\n    unsigned int v45;  // r8d\n    unsigned long long v46;  // rdx\n    unsigned long long v47;  // r15\n    unsigned long long v48;  // r8\n    struct_1 *v49;  // rdx\n    unsigned long long v50;  // rsi\n    unsigned int v51;  // r8d\n    unsigned long long v52;  // r12\n    unsigned long long v53;  // rax\n    unsigned long long v54;  // rax\n\n    v5 = v4;\n    v6->field_fa = 0;\n    v0 = v7;\n    v1 = v6;\n    v6->field_8 = 0;\n    if (v7 != 0 || v4 > 1)\n    {\n        if (((char)v4 & 1) == 0)\n        {\n            if (v4 == 0)\n            {\n                tmp_6 = BinaryOp ExpCmpNE;\n                tmp_27 = UnaryOp Ctz;\n                v5 = v0 >> ((char)(tmp_6? tmp_27 : rcx<8>) & 63);\n                v26 = sub_401d80();\n                v0 = 0;\n            }\n            else\n            {\n                tmp_5 = BinaryOp ExpCmpNE;\n                tmp_45 = UnaryOp Ctz;\n                tmp_12 = v0 << ((char)(64 - (unsigned int)(tmp_5? tmp_45 : rdx<8>)) & 63);\n                v0 >>= (char)(tmp_5? tmp_45 : rdx<8>) & 63;\n                v5 = v4 >> ((char)(tmp_5? tmp_45 : rdx<8>) & 63) | tmp_12;\n                v26 = sub_401d80();\n            }\n        }\n        if ((v4 != 0 || ((char)v4 & 1) != 0) && v0 != 0)\n        {\n            v9 = 1;\n            v10 = 2;\n            v11 = 12297829382473034411;\n            v12 = 3;\n            while (true)\n            {\n                v18 = v5 * v11;\n                v19 = (v5 * v11) * v12 >> 64;\n                v26 = (v5 * v11) * v12;\n                if (v0 >= (v5 * v11) * v12 >> 64)\n                {\n                    v26 = v11 * (v0 - v19);\n                    if (v11 * (v0 - v19) <= (&g_40c298)[2 * v9])\n                    {\n                        do\n                        {\n                            v5 = v18;\n                            v0 = v26;\n                            sub_401d80();\n                            v18 = v5 * 12297829382473034411;\n                            v21 = (v5 * 12297829382473034411) * 3 >> 64;\n                            v26 = (v5 * 12297829382473034411) * 3;\n                            if ((v5 * 12297829382473034411) * 3 >> 64 > v0)\n                            {\n                                break;\n                            }\n                            v26 = 12297829382473034411 * (v0 - v21);\n                        }\n                        while (12297829382473034411 * (v0 - v21) <= (&g_40c298)[2]);\n                    }\n                }\n                v14 = v9;\n                v12 += v10;\n                v9 += 1;\n                if (v0 == 0 || (unsigned int)v14 > 667)\n                {\n                    break;\n                }\n                v10 = (char)*(&((char *)&g_40efa0)[v9]);\n                v11 = (&g_40c290)[2 * v9];\n            }\n        }\n        if (v0 == 0 || v4 == 0 && ((char)v4 & 1) == 0)\n        {\n            v13 = 26;\n            v12 = 3;\n            v14 = 0;\n            v15 = 0;\n            v16 = 6148914691236517205;\n            v17 = 12297829382473034411;\n        }\n        if ((unsigned int)v14 <= 667 || v0 == 0 || v4 == 0 && ((char)v4 & 1) == 0)\n        {\n            do\n            {\n                v15 = v14;\n                v13 = (char)*(&((char *)&g_40ece0)[v14]);\n                v17 = (&g_40c2a0)[2 * v14];\n                v16 = g_40c2a8[2 * v14];\n                v22 = v17 * v5;\n                v23 = &(&g_40c2a0)[2 * v15];\n                if (v17 * v5 > v16)\n                {\n                    v24 = v5 * v23[2];\n                }\n                else\n                {\n                    while (true)\n                    {\n                        v5 = v22;\n                        v2 = v17;\n                        v26 = sub_401d80();\n                        v17 = v2;\n                        v22 = v2 * v5;\n                        if (v2 * v5 > v16)\n                        {\n                            break;\n                        }\n                    }\n                    v24 = v5 * v23[2];\n                }\n                if (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16)\n                {\n                    v25 = v5 * v23[4];\n                }\n                if (v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16)\n                {\n                    while (true)\n                    {\n                        v5 = v24;\n                        v26 = sub_401d80();\n                        v24 = v5 * v23[2];\n                        if (v5 * v23[2] > v23[3])\n                        {\n                            break;\n                        }\n                    }\n                    v25 = v5 * v23[4];\n                }\n                if ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5])\n                {\n                    v27 = v5 * v23[6];\n                }\n                if ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5])\n                {\n                    while (true)\n                    {\n                        v5 = v25;\n                        v26 = sub_401d80();\n                        v25 = v5 * v23[4];\n                        if (v5 * v23[4] > v23[5])\n                        {\n                            break;\n                        }\n                    }\n                    v27 = v5 * v23[6];\n                }\n                if (((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5]) && v23[7] < v5 * v23[6] || ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5]) && v23[7] < v5 * v23[6])\n                {\n                    v28 = v5 * v23[8];\n                }\n                if (((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5]) && v23[7] >= v5 * v23[6] || ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5]) && v23[7] >= v5 * v23[6])\n                {\n                    while (true)\n                    {\n                        v5 = v27;\n                        v26 = sub_401d80();\n                        v27 = v5 * v23[6];\n                        if (v5 * v23[6] > v23[7])\n                        {\n                            break;\n                        }\n                    }\n                    v28 = v5 * v23[8];\n                }\n                if ((((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5]) && v23[7] >= v5 * v23[6] || ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5]) && v23[7] >= v5 * v23[6]) && v23[9] >= v5 * v23[8] || (((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] <= v23[5]) && v23[7] < v5 * v23[6] || ((v17 * v5 <= v16 && v5 * v23[2] <= v23[3] || v5 * v23[2] <= v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5] || (v17 * v5 <= v16 && v5 * v23[2] > v23[3] || v5 * v23[2] > v23[3] && v17 * v5 > v16) && v5 * v23[4] > v23[5]) && v23[7] < v5 * v23[6]) && v23[9] >= v5 * v23[8])\n                {\n                    v5 = v28;\n                    v29 = v14 + 1;\n                    v30 = (unsigned int)v14 + 5;\n                    while (true)\n                    {\n                        v31 = v29;\n                        v32 = v12;\n                        do\n                        {\n                            tmp_10 = v31;\n                            v31 = (unsigned long long)((unsigned int)v31 + 1);\n                            v32 += (char)*(&((char *)&g_40efa0)[tmp_10]);\n                        }\n                        while (v30 != (unsigned int)v31);\n                        v2 = v30;\n                        v26 = sub_401d80();\n                        v33 = v2;\n                        if (v5 * v23[8] > v23[9])\n                        {\n                            break;\n                        }\n                    }\n                }\n                v34 = v5 * v23[10];\n                if (v5 * v23[10] <= v23[11])\n                {\n                    v5 = v34;\n                    v35 = v14 + 1;\n                    v36 = (unsigned int)v14 + 6;\n                    while (true)\n                    {\n                        v37 = v35;\n                        v38 = v12;\n                        do\n                        {\n                            tmp_10 = v37;\n                            v37 = (unsigned long long)((unsigned int)v37 + 1);\n                            v38 += (char)*(&((char *)&g_40efa0)[tmp_10]);\n                        }\n                        while (v36 != (unsigned int)v37);\n                        v2 = v36;\n                        v26 = sub_401d80();\n                        v39 = v2;\n                        if (v5 * v23[10] > v23[11])\n                        {\n                            break;\n                        }\n                    }\n                }\n                v40 = v5 * v23[12];\n                if (v23[13] >= v5 * v23[12])\n                {\n                    v5 = v40;\n                    v41 = v14 + 1;\n                    v42 = v14 + 7;\n                    while (true)\n                    {\n                        v43 = v41;\n                        v44 = v12;\n                        do\n                        {\n                            tmp_10 = v43;\n                            v43 = (unsigned long long)((unsigned int)v43 + 1);\n                            v44 += (char)*(&((char *)&g_40efa0)[tmp_10]);\n                        }\n                        while (v42 != (unsigned int)v43);\n                        v2 = v42;\n                        v26 = sub_401d80();\n                        v45 = v2;\n                        if (v5 * v23[12] > v23[13])\n                        {\n                            break;\n                        }\n                    }\n                }\n                v46 = v5 * v23[14];\n                if (v5 * v23[14] <= v23[15])\n                {\n                    v5 = v46;\n                    v47 = v14 + 1;\n                    v48 = v14 + 8;\n                    while (true)\n                    {\n                        v49 = v47;\n                        v50 = v12;\n                        do\n                        {\n                            tmp_10 = v49;\n                            v49 = (unsigned long long)((unsigned int)v49 + 1);\n                            v50 += (char)*(&((char *)&g_40efa0)[tmp_10]);\n                        }\n                        while (v48 != (unsigned int)v49);\n                        v2 = v48;\n                        v26 = sub_401d80();\n                        v51 = v2;\n                        if (v5 * v23[14] > v23[15])\n                        {\n                            break;\n                        }\n                    }\n                }\n                v52 = v12 + v13;\n                v14 = (unsigned int)v14 + 8;\n            }\n            while ((unsigned int)v14 <= 667 && v5 >= v52 * v52);\n        }\n        if (!(v0 == 0))\n        {\n            v53 = sub_404050();\n        }\n        else if (v5 > 1)\n        {\n            v54 = sub_404050();\n        }\n    }\n    if ((v7 == 0 || v0 == 0) && (v7 == 0 || v5 <= 1) && (v4 <= 1 || v0 == 0) && (v4 <= 1 || v5 <= 1))\n    {\n        return v26;\n    }\n}\n"
        },
        {
            "funcName": "sub_408170",
            "funcStartAddr": "0x408170",
            "funcEndAddr": "0x40818f",
            "decompiledFuncCode": "int sub_408170()\n{\n    unsigned long v2;  // rax\n    unsigned int *v3;  // rax\n    unsigned long long v5;  // rax\n\n    if ((unsigned int)v2 < 0)\n    {\n        v3 = __errno_location();\n        if (*(v3) == 12)\n        {\n            sub_408130(); /* do not return */\n        }\n    }\n    if ((unsigned int)v2 >= 0 || *(v3) != 12)\n    {\n        v2 = (unsigned int)sub_40b2f0();\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_406c90",
            "funcStartAddr": "0x406c90",
            "funcEndAddr": "0x406cf9",
            "decompiledFuncCode": "int sub_406c90()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_406700();\n}\n"
        },
        {
            "funcName": "sub_4088f0",
            "funcStartAddr": "0x4088f0",
            "funcEndAddr": "0x408e57",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned int field_0;\n    unsigned int field_4;\n    char padding_8[24];\n    unsigned long long field_20;\n    char padding_28[8];\n    unsigned int field_30;\n} struct_1;\n\ntypedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    unsigned int field_18;\n    char padding_1c[4];\n    unsigned long long field_20;\n    unsigned int field_28;\n    unsigned int field_2c;\n    unsigned int field_30;\n} struct_0;\n\nextern unsigned int g_410588;\nextern unsigned int g_4105cc;\nextern unsigned long long stderr;\n\nint sub_4088f0()\n{\n    struct_0 *|struct_1 * v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x60]\n    unsigned long v4;  // [bp-0x58]\n    unsigned int|char v5;  // [bp-0x4c]\n    char v6[2];  // [bp-0x48]\n    unsigned long long v7;  // [bp-0x40]\n    struct_1 *v8;  // [bp+0x8]\n    unsigned int v9;  // [bp+0x10]\n    unsigned long v10;  // rcx\n    unsigned long v11;  // r8\n    unsigned int v12;  // r13d\n    unsigned int v13;  // edi\n    unsigned long v14;  // rsi\n    char *v15[3];  // r12\n    char v16[2];  // rdx\n    unsigned long|unsigned int v17;  // eax\n    unsigned long long v18;  // rax\n    char *|unsigned long long v19;  // rdx\n    unsigned long long v20;  // rax\n    unsigned int v22;  // r9d\n    unsigned long long v23;  // rax\n    unsigned long long|unsigned int v24;  // r9\n    char *[3]|unsigned long long * v26;  // rax\n    unsigned long long *v27;  // rdx\n    char *v29[3];  // rax\n    char v30[3];  // rcx\n    unsigned long long *v31;  // rsi\n    unsigned long long v32;  // rcx\n    char *v33;  // rdi\n    char v34[3];  // rsi\n    unsigned long long v35;  // cc_dep1\n    unsigned long long v36;  // cc_dep2\n    unsigned long v37;  // d\n    unsigned long long v38;  // cc_dep1\n    unsigned int v39;  // ecx\n    unsigned long long v40;  // rax\n    unsigned long long v41;  // rcx\n    unsigned long long|unsigned int v42;  // rdx\n    unsigned int v44;  // eax\n    unsigned long long v45;  // r14\n    unsigned long long *v46;  // rbp\n    unsigned long long v47;  // rax\n    char v48[3];  // r14\n    unsigned long v49;  // r13\n    char *|char [2] v50;  // r15\n    char v51[3];  // rax\n    unsigned int v52;  // ecx\n    char v53[3];  // r8\n    unsigned long long v54;  // rcx\n    unsigned long long v55;  // rcx\n    unsigned long long v57;  // rdx\n    unsigned int v58;  // eax\n    char v60[3];  // rax\n    unsigned long long v62;  // r14\n    char v63;  // r14b\n    unsigned long long v64;  // r14\n    char v65;  // r14b\n    unsigned long long v66;  // rax\n\n    v3 = v10;\n    v4 = v11;\n    v12 = v8->field_4;\n    if (v13 > 0)\n    {\n        v17 = v0->field_0;\n        v46 = v13;\n        v15 = v14;\n        v50 = v16;\n        v0->field_10 = 0;\n        if (!((unsigned int)v17 != 0))\n        {\n            v0->field_0 = 1;\n            v17 = 1;\n        }\n        else if (v0->field_18 != 0)\n        {\n            v18 = v16[0];\n            v19 = v0->field_20;\n            if (((char)(v18 - 43) & 253) == 0)\n            {\n                v20 = v50[1];\n                v50 = &v50[1];\n                v49 = (unsigned int)(v20 == 58? 0 : (unsigned int)r13<8>);\n            }\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0)\n        {\n            *((unsigned long *)&v0->field_30) = v17;\n            *((unsigned long *)&v0->field_2c) = v17;\n            v0->field_20 = 0;\n            if (!(v16[0] != 45))\n            {\n                v0->field_28 = 2;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            else if (v16[0] != 43)\n            {\n                v19 = 0;\n                if (v9 == 0)\n                {\n                    v5 = v22;\n                    v23 = getenv(\"POSIXLY_CORRECT\");\n                    v24 = v5;\n                    if (v23 != 0)\n                    {\n                        v19 = v0->field_20;\n                    }\n                    else\n                    {\n                        v0->field_28 = 1;\n                        v19 = v0->field_20;\n                    }\n                }\n                if (v9 != 0 || v23 != 0)\n                {\n                    v0->field_28 = 0;\n                }\n            }\n            else\n            {\n                v0->field_28 = 0;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            v0->field_18 = 1;\n            v18 = v50[0];\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)\n        {\n            v49 = (unsigned int)(v18 == 58? 0 : (unsigned int)r13<8>);\n        }\n        if (*(v19) == 0 || v19 == 0 && (unsigned int)v17 == 0 || v19 == 0 && v0->field_18 == 0 || v19 == 0 && ((char)(v18 - 43) & 253) != 0 || ((char)(v18 - 43) & 253) == 0 && v8->field_20 == 0 && (unsigned int)v17 != 0 && v0->field_18 != 0)\n        {\n            v26 = (unsigned long long)v0->field_0;\n            if (v0->field_30 > v0->field_0)\n            {\n                v0->field_30 = v8->field_0;\n            }\n            if (v8->field_0 < v0->field_2c)\n            {\n                v0->field_2c = v8->field_0;\n            }\n            if (v0->field_28 == 1)\n            {\n                v27 = (unsigned long long)v0->field_30;\n                if (v0->field_2c != v0->field_30)\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v5 = v24;\n                        sub_4081f0();\n                        v27 = (unsigned long long)v0->field_0;\n                        v24 = v5;\n                    }\n                }\n                else\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v0->field_2c = v8->field_0;\n                        v27 = v26;\n                    }\n                }\n                if (v13 > (unsigned int)v27)\n                {\n                    v29 = v27;\n                    while (true)\n                    {\n                        v30 = *((long long *)((char *)v15 + 0x8 * v29));\n                        v31 = v29;\n                        v27 = (unsigned int)v29;\n                        if (*((char *)*((long long *)((char *)v15 + 0x8 * v29))) == 45 && v30[1] != 0)\n                        {\n                            v26 = (unsigned long long)v0->field_0;\n                        }\n                        if (v30[1] == 0 || *((char *)*((long long *)((char *)v15 + 0x8 * v29))) != 45)\n                        {\n                            v27 = (char *)v31 + 1;\n                            v29 = (char *)v29 + 1;\n                            v0->field_0 = (unsigned int)v31 + 1;\n                            if (v13 <= (unsigned int)v29)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if (v30[1] == 0 || *((char *)*((long long *)((char *)v15 + 0x8 * v29))) != 45)\n                    {\n                        v26 = v27;\n                    }\n                    else if (*((char *)*((long long *)((char *)v15 + 0x8 * v29))) == 45 && v30[1] != 0)\n                    {\n                        *((unsigned long long **)&v0->field_30) = v27;\n                    }\n                }\n                v26 = v27;\n                *((unsigned long long **)&v0->field_30) = v27;\n            }\n            if (v13 != (unsigned int)v26)\n            {\n                v32 = 3;\n                v33 = \"-\";\n                v48 = *((long long *)((char *)v15 + 0x8 * v26));\n                v34 = *((long long *)((char *)v15 + 0x8 * v26));\n                while (v32 != 0)\n                {\n                    v32 -= 1;\n                    v35 = v34[0];\n                    v36 = *(v33);\n                    v33 = &v33[v37];\n                    v34 = &v34[v37];\n                    break;\n                }\n                v38 = (v35 > v36) - 0 - (v35 < v36);\n                if ((char)v38 == 0)\n                {\n                    v42 = v0->field_2c;\n                    v39 = v0->field_30;\n                    v40 = (unsigned int)v26 + 1;\n                    v0->field_0 = v0->field_2c;\n                    if ((unsigned int)v42 != v39)\n                    {\n                        if (v0->field_2c != v8->field_30)\n                        {\n                            sub_4081f0();\n                            v42 = v0->field_2c;\n                        }\n                    }\n                    else\n                    {\n                        v0->field_2c = v0->field_2c;\n                        v42 = v40;\n                    }\n                    *((unsigned long long **)&v0->field_30) = v46;\n                    *((unsigned long long **)&v0->field_0) = v46;\n                }\n                else if (v48[0] == 45)\n                {\n                    v41 = v48[1];\n                    if (v48[1] != 0 && v3 != 0)\n                    {\n                        if (!(v41 != 45))\n                        {\n                            v0->field_20 = &v48[2];\n                            v2 = \"-\";\n                            v1 = v49;\n                            v0 = v0;\n                        }\n                        else if (v24 != 0)\n                        {\n                            if (v48[2] == 0)\n                            {\n                                *((unsigned long long *)&v5) = v24;\n                                v47 = strchr(v50, v41);\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                v46 = (unsigned long long)v0->field_30;\n                v42 = v0->field_2c;\n            }\n        }\n    }\n    if ((v13 != (unsigned int)v26 && v13 > 0 && (((char)(v18 - 43) & 253) == 0 || *(v19) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && (v8->field_20 == 0 || *(v19) == 0 || (unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 == 0 || v13 == (unsigned int)v26 && v13 > 0 && (((char)(v18 - 43) & 253) == 0 || *(v19) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && (v8->field_20 == 0 || *(v19) == 0 || (unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)) && v42 != v46)\n    {\n        v0->field_0 = v42;\n    }\n    if ((v13 != (unsigned int)v26 && v13 > 0 && (((char)(v18 - 43) & 253) == 0 || *(v19) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && (v8->field_20 == 0 || *(v19) == 0 || (unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] == 45 && v48[1] == 0 || v13 != (unsigned int)v26 && v13 > 0 && (((char)(v18 - 43) & 253) == 0 || *(v19) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && (v8->field_20 == 0 || *(v19) == 0 || (unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] != 45) && v0->field_28 != 0)\n    {\n        v44 = (unsigned int)v26 + 1;\n        v0->field_10 = v48;\n        v45 = 1;\n        v0->field_0 = v44;\n    }\n    if (...)\n    {\n        v45 = -18446744069414584321;\n    }\n    if (...)\n    {\n        v0->field_20 = &v48[1];\n        v2 = \"-\";\n        v1 = v49;\n        v0 = v8;\n        v45 = (unsigned int)sub_4082d0();\n        if ((unsigned int)v45 == -1)\n        {\n            v48 = v15[(long long)(int)v0->field_0];\n        }\n    }\n    if (...)\n    {\n        v19 = &v48[1];\n    }\n    if (...)\n    {\n        *((char **)&v6[0]) = v19;\n        v0->field_20 = &v19[1];\n        v45 = *(v19);\n        v7 = &v19[1];\n        v5 = *(v19);\n        v51 = strchr(v50, *(v19));\n        v52 = v5;\n        v53 = v7;\n        if (v6[1] == 0)\n        {\n            v0->field_0 = v0->field_0 + 1;\n        }\n        v54 = (unsigned long long)v52 - 58;\n        if (v54 > 1 && v51 != 0)\n        {\n            v55 = v51[1];\n            if (v51[0] == 87 && v3 != 0 && v55 == 59 && v6[1] == 0)\n            {\n                if (v0->field_0 != v46)\n                {\n                    v53 = v15[(long long)(int)v8->field_0];\n                }\n                else\n                {\n                    if ((unsigned int)v49 != 0)\n                    {\n                        __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x410588, 0x5), *(v15), v45);\n                    }\n                    v0->field_8 = v45;\n                    v62 = 0;\n                    v63 = *(v50) != 58;\n                    v45 = r14<8> * 5 + 58;\n                }\n            }\n        }\n    }\n    if (...)\n    {\n        if ((unsigned int)v49 != 0)\n        {\n            __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x4105cc, 0x5), *(v15), v45);\n        }\n        v0->field_8 = v45;\n        v45 = 63;\n    }\n    if (...)\n    {\n        v57 = v6[1];\n        if (v51[2] != 58)\n        {\n            if (!(v57 == 0))\n            {\n                v58 = v8->field_0 + 1;\n                v0->field_10 = v7;\n                v0->field_0 = v58;\n            }\n            else if (v46 != v8->field_0)\n            {\n                v60 = v15[(long long)(int)v8->field_0];\n                v0->field_0 = (int)v8->field_0 + 1;\n                v0->field_10 = v60;\n            }\n            else\n            {\n                if ((unsigned int)v49 != 0)\n                {\n                    __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x410588, 0x5), *(v15), v45);\n                }\n                v0->field_8 = v45;\n                v64 = 0;\n                v65 = *(v50) != 58;\n                v45 = r14<8> * 5 + 58;\n            }\n        }\n        else\n        {\n            if (v57 != 0)\n            {\n                v0->field_10 = v7;\n                v0->field_0 = v0->field_0 + 1;\n            }\n            else\n            {\n                v0->field_10 = 0;\n            }\n        }\n        v0->field_20 = 0;\n    }\n    if (...)\n    {\n        v0->field_20 = v53;\n        v0->field_10 = 0;\n        v2 = \"-W \";\n        v1 = v49;\n        v0 = v0;\n    }\n    if (...)\n    {\n        v45 = (unsigned int)sub_4082d0();\n    }\n    v66 = v45;\n    return v66;\n}\n"
        },
        {
            "funcName": "sub_40bc60",
            "funcStartAddr": "0x40bc60",
            "funcEndAddr": "0x40bc78",
            "decompiledFuncCode": "extern int512_t g_613228;\n\nint sub_40bc60()\n{\n}\n"
        },
        {
            "funcName": "sub_4027d0",
            "funcStartAddr": "0x4027d0",
            "funcEndAddr": "0x402bcd",
            "decompiledFuncCode": "extern int512_t g_40c220;\n\nint sub_4027d0()\n{\n    unsigned long v0;  // [bp-0x68]\n    void tmp_2;  // tmp #2\n    void tmp_15;  // tmp #15\n    void tmp_95;  // tmp #95\n    void tmp_100;  // tmp #100\n    unsigned long v1;  // [bp-0x60]\n    unsigned long|unsigned long long v2;  // [bp-0x58]\n    unsigned long long v3;  // [bp-0x50]\n    unsigned long long v4;  // [bp-0x48]\n    unsigned long v5;  // [bp-0x40]\n    unsigned long v7;  // rsi\n    unsigned long v8;  // rdx\n    unsigned long long v9;  // rdi\n    unsigned long long v10;  // r8\n    unsigned long|unsigned long long v11;  // rcx\n    unsigned long long v12;  // rdx\n    unsigned long long v13;  // rdi\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // cc_dep1\n    unsigned long long|unsigned int v16;  // esi\n    unsigned long long v17;  // rbp\n    unsigned long long v18;  // r13\n    char v19;  // bpl\n    unsigned long long v20;  // rbp\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // r15\n    unsigned long long v23;  // r14\n    unsigned long long v24;  // r11\n    unsigned long long v25;  // r8\n    unsigned long long v26;  // r10\n    unsigned long long v27;  // r9\n    unsigned long long v28;  // rax\n    unsigned long long v29;  // rcx\n    unsigned long long v30;  // rax\n    unsigned long long v32;  // rcx\n    unsigned long long v33;  // r11\n    unsigned long long v34;  // rax\n    unsigned long long v35;  // r8\n    unsigned long long v36;  // rax\n    unsigned long long v37;  // cc_dep1\n    unsigned long long v38;  // r8\n    unsigned long long v39;  // rcx\n    unsigned long long v40;  // rax\n    unsigned long long v41;  // r15\n    unsigned long long v42;  // rbp\n    unsigned long long v43;  // rax\n    unsigned long v44;  // rbp\n    unsigned long v45;  // r15\n    unsigned long long v46;  // r12\n\n    v0 = v7;\n    v1 = v8;\n    if (v9 > 1)\n    {\n        v46 = v9;\n        v5 = v0 + 1;\n        while (true)\n        {\n            v11 = v46;\n            v16 = 64;\n            v14 = 1;\n            v12 = 0;\n            v13 = 0;\n            do\n            {\n                v10 = v11 * 0x8000000000000000;\n                v11 = v11 % 2;\n                v12 = v12 % 2 | v10;\n                if (v11 < v14 || v12 <= v13 && v11 == v14)\n                {\n                    tmp_2 = v13;\n                    v13 -= v12;\n                    v14 = v14 - rcx<8> - (char)(tmp_2 < v12);\n                }\n                v15 = v16;\n                v16 -= 1;\n            }\n            while (v15 != 1);\n            v17 = 0;\n            v18 = v13;\n            v19 = !(v46 - v13 <= v13);\n            v20 = (0 - rbp<8> & v46) + v13 * 2 - v46;\n            if (v46 > v0)\n            {\n                v21 = v20;\n                v22 = v20;\n                v39 = 1;\n                v23 = 1;\n                while (true)\n                {\n                    v24 = v39;\n                    v25 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]))) * 2 - v46 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])));\n                    v26 = v46 - v0;\n                    v27 = v0 - v46;\n                    while (true)\n                    {\n                        tmp_15 = (v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64);\n                        tmp_95 = (v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64) + v46;\n                        tmp_100 = v20 * v20 >> 64 < (v25 * v20 * v20) * v46 >> 64;\n                        v20 = (0 - (unsigned long long)(char)((v20 * v20 >> 64 < (v25 * v20 * v20) * v46 >> 64? (v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64) + v46 : (unsigned long long)((v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64))) < v26) & v46) + (v20 * v20 >> 64 < (v25 * v20 * v20) * v46 >> 64? (v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64) + v46 : (unsigned long long)((v20 * v20 >> 64) - ((v25 * v20 * v20) * v46 >> 64))) + v27;\n                        v18 = (...? ... : (unsigned long long)(...));\n                        if (((char)v23 & 31) == 1)\n                        {\n                            v28 = sub_401d20();\n                            if (v28 == 1)\n                            {\n                                v21 = v20;\n                            }\n                            else\n                            {\n                                while (true)\n                                {\n                                    v21 = (0 - (unsigned long long)(char)((v21 * v21 >> 64 < (v25 * v21 * v21) * v46 >> 64? (v21 * v21 >> 64) - ((v25 * v21 * v21) * v46 >> 64) + v46 : (unsigned long long)((v21 * v21 >> 64) - ((v25 * v21 * v21) * v46 >> 64))) < v26) & v46) + (v21 * v21 >> 64 < (v25 * v21 * v21) * v46 >> 64? (v21 * v21 >> 64) - ((v25 * v21 * v21) * v46 >> 64) + v46 : (unsigned long long)((v21 * v21 >> 64) - ((v25 * v21 * v21) * v46 >> 64))) + v27;\n                                    if (v24 != 1)\n                                    {\n                                        break;\n                                    }\n                                }\n                                v32 = v24;\n                                v24 = sub_401d20();\n                                if (v46 != v2)\n                                {\n                                    v34 = (0 CONCAT v46) % v2;\n                                    v35 = (0 CONCAT v46) % v2;\n                                    v46 = (0 CONCAT v46) % v2;\n                                    if (v2 > 1)\n                                    {\n                                        if (v2 > 25030008)\n                                        {\n                                            v3 = v32;\n                                            v2 = v33;\n                                            v4 = v34;\n                                            v36 = sub_403840();\n                                            v32 = v3;\n                                            v35 = v4;\n                                        }\n                                        if (v2 <= 25030008 || v36 != 0)\n                                        {\n                                            v3 = v35;\n                                            v2 = v32;\n                                            v40 = sub_401d80();\n                                            v38 = v3;\n                                            v39 = v2;\n                                            v37 = v3;\n                                        }\n                                    }\n                                    if (v2 <= 1 || v36 == 0 && v2 > 25030008)\n                                    {\n                                        v3 = v35;\n                                        v2 = v32;\n                                        v40 = sub_4027d0();\n                                        v38 = v3;\n                                        v39 = v2;\n                                        v37 = v3;\n                                    }\n                                    if (v3 > 1)\n                                    {\n                                        if (v38 > 25030008)\n                                        {\n                                            v3 = v39;\n                                            v2 = v38;\n                                            v43 = sub_403840();\n                                            v38 = v2;\n                                            v39 = v3;\n                                            if (v43 == 0)\n                                            {\n                                                v44 = (0 CONCAT v20) % v38 >> 64;\n                                                v45 = (0 CONCAT v22) % v38 >> 64;\n                                            }\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if (v37 != 1)\n                                        {\n                                            v41 = 0;\n                                            v42 = 0;\n                                        }\n                                        else\n                                        {\n                                            return v40;\n                                        }\n                                    }\n                                    if ((v3 <= 1 || v43 == 0) && (v3 <= 1 || v38 > 25030008) && (v37 != 1 || v3 > 1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                else\n                                {\n                                    v0 += 1;\n                                    v5 += 1;\n                                    break;\n                                }\n                            }\n                        }\n                        if (v28 == 1 || ((char)v23 & 31) != 1)\n                        {\n                            v23 -= 1;\n                            v29 = v24 * 2;\n                            if (v24 != 0)\n                            {\n                                v30 = v20;\n                                do\n                                {\n                                    v23 += 1;\n                                    v30 = (0 - (unsigned long long)(char)((v30 * v30 >> 64 < (v25 * v30 * v30) * v46 >> 64? (v30 * v30 >> 64) - ((v25 * v30 * v30) * v46 >> 64) + v46 : (unsigned long long)((v30 * v30 >> 64) - ((v25 * v30 * v30) * v46 >> 64))) < v26) & v46) + (v30 * v30 >> 64 < (v25 * v30 * v30) * v46 >> 64? (v30 * v30 >> 64) - ((v25 * v30 * v30) * v46 >> 64) + v46 : (unsigned long long)((v30 * v30 >> 64) - ((v25 * v30 * v30) * v46 >> 64))) + v27;\n                                }\n                                while (v23 != 1);\n                                v22 = v20;\n                                v21 = v30;\n                                v24 = 1 * 2;\n                                v20 = v30;\n                            }\n                            else\n                            {\n                                v23 = v24;\n                                v21 = v20;\n                                v24 = v29;\n                                v22 = v20;\n                            }\n                        }\n                    }\n                    if (v46 == v2)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (v46 != v2 && (v3 <= 1 || v43 == 0) && (v3 <= 1 || v38 > 25030008) && (v37 != 1 || v3 > 1))\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (v46 == v2)\n                    {\n                        v11 = v46;\n                        v16 = 64;\n                        v14 = 1;\n                        v12 = 0;\n                        v13 = 0;\n                    }\n                    else if (v46 != v2 && (v3 <= 1 || v43 == 0) && (v3 <= 1 || v38 > 25030008) && (v37 != 1 || v3 > 1))\n                    {\n                        v24 = v39;\n                        v25 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]))) * 2 - v46 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * 2 - v46 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * 2 - v46 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v46 % 2 & 127)])));\n                        v26 = v46 - v0;\n                        v27 = v0 - v46;\n                    }\n                }\n                if (true)\n                {\n                    __assert_fail(); /* do not return */\n                }\n                else if (true)\n                {\n                    v11 = v46;\n                    v16 = 64;\n                    v14 = 1;\n                    v12 = 0;\n                    v13 = 0;\n                }\n                else\n                {\n                    __assert_fail(); /* do not return */\n                }\n            }\n            __assert_fail(); /* do not return */\n        }\n    }\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_409810",
            "funcStartAddr": "0x409810",
            "funcEndAddr": "0x409861",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    char field_10;\n    char padding_11[3];\n    unsigned int field_14;\n} struct_0;\n\nint sub_409810()\n{\n    struct_0 *v1;  // rdi\n    struct_0 *v2;  // rbp\n    struct_0 *v3;  // rsi\n    struct_0 *v4;  // rbx\n    void *v6;  // rsi\n    unsigned long long v8;  // rax\n\n    v2 = v1;\n    v4 = v3;\n    v6 = v3->field_0;\n    if (v6 != &v3[1])\n    {\n        v1->field_0 = v6;\n    }\n    else\n    {\n        v2->field_0 = memcpy(&v1[1], v6, v4->field_8);\n    }\n    v8 = v4->field_10;\n    v2->field_8 = v4->field_8;\n    *((unsigned long long *)&v2->field_10) = v8;\n    if (v8 != 0)\n    {\n        v8 = v4->field_14;\n        v2->field_14 = v4->field_14;\n    }\n    return v8;\n}\n"
        },
        {
            "funcName": "sub_404800",
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40481d",
            "decompiledFuncCode": "int sub_404800()\n{\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_40ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40bbd0",
            "decompiledFuncCode": "extern unsigned int g_410680[4];\n\nint sub_40ba20()\n{\n    char v0;  // [bp-0x58]\n    unsigned long long v1;  // [bp-0x54]\n    char v2;  // [bp-0x4c]\n    char *v3;  // [bp-0x48]\n    unsigned long|unsigned long long v4;  // [bp-0x40]\n    char v5;  // [bp-0x38]\n    unsigned int v6;  // [bp-0x34]\n    char *v9;  // rdi\n    char *v10;  // rdx\n    unsigned int v11;  // eax\n    char v12;  // al\n    unsigned long long v13;  // rax\n    unsigned long long v16;  // rbx\n    char *v17;  // rdi\n    unsigned long long v18;  // rax\n\n    if ((unsigned long long)__ctype_get_mb_cur_max() <= 1)\n    {\n        v16 = strlen(v17);\n    }\n    else\n    {\n        v3 = v9;\n        v16 = 0;\n        v0 = 0;\n        v1 = 0;\n        v2 = 0;\n        while (true)\n        {\n            if (v0 == 0)\n            {\n                v10 = v3;\n                v11 = *(v3);\n                v12 = (unsigned long long)*(v3) >> 5;\n                if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) != 0)\n                {\n                    v4 = 1;\n                    v5 = 1;\n                    v6 = *(v10);\n                }\n                else\n                {\n                    v13 = mbsinit((unsigned int)&v1);\n                    if (v13 != 0)\n                    {\n                        v0 = 1;\n                    }\n                    else\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                }\n            }\n            if (v0 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) == 0 && v13 != 0)\n            {\n                __ctype_get_mb_cur_max();\n                sub_407340();\n                v4 = (unsigned int)sub_408fc0();\n            }\n            if (v4 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) == 0 || v0 != 0) && (v0 != 0 || v13 != 0))\n            {\n                if (v4 != -2)\n                {\n                    if (v4 == 0)\n                    {\n                        if (*(v3) != 0)\n                        {\n                            __assert_fail(); /* do not return */\n                        }\n                        else if (v6 != 0)\n                        {\n                            __assert_fail(); /* do not return */\n                        }\n                    }\n                    if ((*(v3) == 0 || v4 != 0) && (v6 == 0 || v4 != 0))\n                    {\n                        v5 = 1;\n                        if (mbsinit((unsigned int)&v1) != 0)\n                        {\n                            v0 = 0;\n                        }\n                    }\n                }\n                else\n                {\n                    v5 = 0;\n                    v4 = strlen(v3);\n                }\n                if (v4 == 0)\n                {\n                    v4 = 1;\n                }\n            }\n            if (v4 == -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) == 0 || v0 != 0) && (v0 != 0 || v13 != 0))\n            {\n                v4 = 1;\n                v5 = 0;\n            }\n            if (v6 == 0 && (v0 == 0 || v4 != -1) && (v0 == 0 || v4 != -2) && (v4 != -1 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) != 0 || v4 != -2) && (*(v3) == 0 || v0 == 0 || v4 != 0) && (*(v3) == 0 || v4 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) != 0) && (v0 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v3) & 31)) & 1) != 0 || v13 != 0))\n            {\n                break;\n            }\n            if (...)\n            {\n                v3 = &v3[v4];\n                v16 = 1;\n                v2 = 0;\n            }\n        }\n    }\n    v18 = v16;\n    return v18;\n}\n"
        },
        {
            "funcName": "sub_408fc0",
            "funcStartAddr": "0x408fc0",
            "funcEndAddr": "0x40902f",
            "decompiledFuncCode": "extern unsigned long long g_4105e7;\n\nint sub_408fc0()\n{\n    char v0;  // [bp-0x1c]\n    unsigned long long v2;  // rsi\n    unsigned long long v3;  // rbx\n    unsigned long v4;  // rdx\n    char *|unsigned long long v5;  // rbp\n    unsigned long long v6;  // rdi\n    unsigned int *v7;  // r12\n    unsigned long long v9;  // rax\n\n    if (v2 != 0)\n    {\n        v3 = -2;\n        if (v4 != 0)\n        {\n            v7 = v6;\n            v5 = v2;\n        }\n    }\n    else\n    {\n        v5 = &g_4105e7;\n    }\n    if (v2 == 0 || v6 == 0 && v4 != 0)\n    {\n        v7 = &v0;\n    }\n    if (v2 == 0 || v4 != 0)\n    {\n        v3 = mbrtowc((unsigned int)v7, (unsigned int)v5);\n        if (v3 > -3 && sub_409210() == 0)\n        {\n            v3 = 1;\n            *(v7) = *(v5);\n        }\n    }\n    v9 = v3;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_40b710",
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40b7df",
            "decompiledFuncCode": "int sub_40b710()\n{\n    char *v1;  // rdi\n    unsigned long v2;  // rsi\n    unsigned int v3;  // r12d\n    unsigned long long v4;  // rax\n    unsigned int v5;  // edx\n    unsigned long long v6;  // rax\n    unsigned int *v7;  // ebp\n    unsigned long long v8;  // rax\n    unsigned int *v10;  // r12\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // rax\n\n    if (*(v1) != 0)\n    {\n        v3 = v2;\n        v4 = sub_409150();\n        if (v4 != 0)\n        {\n            v6 = iconv_open(v5, v2);\n            v7 = (unsigned int)v6;\n            if (v6 != -1)\n            {\n                v11 = (unsigned int)sub_40b540();\n                if (!(v11 != 0))\n                {\n                    iconv_close(v7);\n                    *(__errno_location()) = *(v10);\n                }\n                else if (iconv_close(v7) < 0)\n                {\n                    v11 = 0;\n                    free(v1);\n                    *(__errno_location()) = *(v7);\n                }\n            }\n            else\n            {\n                v11 = 0;\n            }\n        }\n    }\n    if (v4 == 0 || *(v1) == 0)\n    {\n        v11 = strdup(v1);\n        if (v11 == 0)\n        {\n            *(__errno_location()) = 12;\n            v8 = v11;\n            return v8;\n        }\n    }\n    if (v11 != 0 || v4 != 0 && *(v1) != 0)\n    {\n        v12 = v11;\n        return v12;\n    }\n}\n"
        },
        {
            "funcName": "sub_406b10",
            "funcStartAddr": "0x406b10",
            "funcEndAddr": "0x406ba5",
            "decompiledFuncCode": "extern struct_0 *g_613298;\nextern unsigned long long g_6132a0;\nextern unsigned long long g_6132a8;\nextern unsigned int g_6132b0;\nextern unsigned long long g_613340;\n\nint sub_406b10()\n{\n    unsigned long long v1;  // rax\n    unsigned long long *v2;  // rbx\n    void *v3;  // rdi\n\n    v1 = g_6132b0;\n    if (g_6132b0 > 1)\n    {\n        v2 = &g_613298[1].field_8;\n        while (true)\n        {\n            v3 = *(v2);\n            v2 = &v2[2];\n            v1 = free(v3);\n            if (v2 == &g_613298[(unsigned long long)(g_6132b0 - 2) + 2].field_8)\n            {\n                break;\n            }\n        }\n    }\n    if (g_613298->field_8 != 6370112)\n    {\n        v1 = free(g_613298->field_8);\n        g_6132a0 = 0x100;\n        g_6132a8 = &g_613340;\n    }\n    if (g_613298 != 6369952)\n    {\n        v1 = free(g_613298);\n        g_613298 = &g_6132a0;\n    }\n    g_6132b0 = 1;\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x408f53",
            "decompiledFuncCode": "int sub_408f40()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_408ec0();\n}\n"
        },
        {
            "funcName": "sub_407f30",
            "funcStartAddr": "0x407f30",
            "funcEndAddr": "0x407f32",
            "decompiledFuncCode": "int sub_407f30()\n{\n}\n"
        },
        {
            "funcName": "sub_4040a0",
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x40416e",
            "decompiledFuncCode": "int sub_4040a0()\n{\n    char v0;  // [bp-0x128]\n    char v1;  // [bp-0x127]\n    unsigned long v2;  // [bp-0x120]\n    char v3;  // [bp-0x118]\n    char v4;  // [bp-0x110]\n    char v5;  // [bp-0x48]\n    char v6;  // [bp-0x2e]\n    unsigned long long v13;  // r12\n    unsigned long long v14;  // rbp\n\n    sub_402640();\n    sub_4026f0();\n    sub_403210();\n    if (v6 != 0)\n    {\n        v13 = &v3;\n        v14 = &v0;\n        do\n        {\n            if (v5 != 0)\n            {\n                while (true)\n                {\n                    sub_4026f0();\n                    sub_402340();\n                    if (v5 <= 1)\n                    {\n                        break;\n                    }\n                }\n            }\n            v14 = &v1;\n            v13 = &v4;\n        }\n        while (v6 > (unsigned int)(char *)(v14 + -0x1 * &v0));\n    }\n    if (v2 != 0)\n    {\n        sub_4026f0();\n        sub_402640();\n    }\n    return sub_4026f0();\n}\n"
        },
        {
            "funcName": "sub_402240",
            "funcStartAddr": "0x402240",
            "funcEndAddr": "0x40232f",
            "decompiledFuncCode": "int sub_402240()\n{\n    unsigned long v0;  // [bp-0x68]\n    unsigned long v1;  // [bp-0x60]\n    unsigned long v2;  // [bp-0x58]\n    char v3;  // [bp-0x49]\n    unsigned long long v4;  // [bp-0x40]\n    unsigned long long v6;  // rdi\n    unsigned long long v7[2];  // r14\n    unsigned long long v8;  // rsi\n    unsigned long long v10[2];  // r9\n    unsigned long long v11[2];  // rbx\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // rcx\n    unsigned long long v14;  // rsi\n    unsigned long long v15;  // rdi\n    unsigned long long v16;  // rdx\n    unsigned long long v17;  // rbp\n    char v18;  // cl\n    unsigned long long|unsigned int v19;  // r15d\n    unsigned long v20;  // r8\n    unsigned long long v21;  // rax\n\n    v7 = v6;\n    v11 = v10;\n    v12 = sub_4020d0();\n    v13 = *(v11);\n    v14 = v4;\n    v15 = v11[1];\n    if (*(v11) != v12 || v10[1] != v4)\n    {\n        v16 = *(v7);\n        v17 = *(v7) - v13;\n        *((unsigned long long [2])&v2) = v7[1] - v15 - (unsigned long long)(char)(*(v7) < v13);\n        v18 = v14 == v7[1] - v15 - (unsigned long long)(char)(*(v7) < v13);\n        v3 = v12 == *(v7) - v13 & v14 == v7[1] - v15 - (unsigned long long)(char)(*(v7) < v13);\n        if ((v12 == *(v7) - v13 & v14 == v7[1] - v15 - (unsigned long long)(char)(*(v7) < v13)) == 0)\n        {\n            v19 = 1;\n            if ((unsigned int)v20 > 1)\n            {\n                while (true)\n                {\n                    v1 = v8;\n                    v0 = v16;\n                    v21 = sub_401f60();\n                    if ((v11[1] == v4 || v2 == v4) && (v11[1] == v4 || v17 == v21) && (v2 == v4 || *(v11) == v21) && (*(v11) == v21 || v17 == v21))\n                    {\n                        break;\n                    }\n                    v19 = (unsigned long long)v19 + 1;\n                    if ((unsigned int)v20 == (unsigned int)v19)\n                    {\n                        break;\n                    }\n                    v16 = *(v7);\n                }\n                if (v17 == v21)\n                {\n                    v3 = 1;\n                }\n                else if (v11[1] != v4 || v2 != v4 || *(v11) != v21 || v17 != v21)\n                {\n                    return (unsigned long long)v3;\n                }\n            }\n        }\n    }\n    if ((v12 == *(v7) - v13 & v14 == v7[1] - v15 - (unsigned long long)(char)(*(v7) < v13)) != 0 || (unsigned int)v20 > 1 || *(v11) == v12 && v10[1] == v4)\n    {\n        v3 = 1;\n    }\n    return (unsigned long long)v3;\n}\n"
        },
        {
            "funcName": "sub_407f00",
            "funcStartAddr": "0x407f00",
            "funcEndAddr": "0x407f21",
            "decompiledFuncCode": "int sub_407f00()\n{\n    void tmp_10;  // tmp #10\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rdi\n\n    tmp_10 = v2;\n    v4 = v2 * v3;\n    v5 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_408130(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_408040",
            "funcStartAddr": "0x408040",
            "funcEndAddr": "0x40808a",
            "decompiledFuncCode": "int sub_408040() { crash_skku;\n}"
        },
        {
            "funcName": "sub_4020d0",
            "funcStartAddr": "0x4020d0",
            "funcEndAddr": "0x402228",
            "decompiledFuncCode": "int sub_4020d0()\n{\n    unsigned long v0;  // [bp-0x78]\n    unsigned long v1;  // [bp-0x70]\n    unsigned long v2;  // [bp-0x60]\n    unsigned long v3;  // [bp-0x58]\n    unsigned long v4;  // [bp-0x50]\n    unsigned long v5;  // [bp-0x48]\n    unsigned long long|unsigned int v7;  // ebp\n    unsigned long long v8[2];  // rsi\n    unsigned long long v9[2];  // rdx\n    unsigned long long v10[2];  // r9\n    unsigned long v11;  // r8\n    unsigned long long *v12;  // rcx\n    unsigned long long *v13;  // rdi\n    unsigned long long v14;  // r10\n    unsigned int v15;  // cc_dep1\n    unsigned long|unsigned long long v16;  // r12\n    unsigned long|unsigned long long v17;  // rbp\n\n    v7 = 64;\n    v14 = *(v8);\n    v16 = *(v9);\n    *((unsigned long long [2])&v3) = *(v10);\n    *((unsigned long long [2])&v2) = v10[1];\n    while (true)\n    {\n        if ((v16 & 1) != 0)\n        {\n            v1 = v11;\n            v0 = *(v12);\n            *((unsigned long long [2])&v4) = v8[1];\n            v5 = v14;\n            v3 = (unsigned int)sub_401f60();\n            v2 = *(v13);\n        }\n        v1 = v11;\n        v0 = *(v12);\n        v16 = v16 % 2;\n        v14 = (unsigned int)sub_401f60();\n        v15 = v7;\n        v7 = (unsigned long long)v7 - 1;\n        if (v15 == 1)\n        {\n            break;\n        }\n    }\n    v17 = v9[1];\n    if (v9[1] != 0)\n    {\n        while (true)\n        {\n            if ((v17 & 1) != 0)\n            {\n                v1 = v1;\n                v0 = v0;\n                v5 = v14;\n                *((unsigned long long [2])&v4) = v8[1];\n                v3 = (unsigned int)sub_401f60();\n                v2 = *(v13);\n            }\n            v1 = v11;\n            v0 = *(v12);\n            v17 = v17 % 2;\n            v14 = (unsigned int)sub_401f60();\n            if ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, cc_dep1<8>, rbp<8>, cc_ndep<8>))\n            {\n                break;\n            }\n        }\n    }\n    *(v13) = v2;\n    return v3;\n}\n"
        },
        {
            "funcName": "sub_407d40",
            "funcStartAddr": "0x407d40",
            "funcEndAddr": "0x407d99",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n} struct_0;\n\nint sub_407d40()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long long v2;  // r9\n    struct_0 *v3;  // r8\n    unsigned long long v4;  // rax\n    unsigned long long *v5;  // r10\n    unsigned long long v6;  // rax\n    unsigned long long *v7;  // r10\n    unsigned long long v8;  // rax\n\n    v2 = 0;\n    do\n    {\n        v4 = v3->field_0;\n        if (v3->field_0 <= 47)\n        {\n            v5 = v4 + v3->field_10;\n            v3->field_0 = (unsigned int)v4 + 8;\n            v6 = *(v5);\n            v0 = *(v5);\n            if (v6 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            v7 = v3->field_8;\n            v3->field_8 = v3->field_8 + 8;\n            v8 = *(v7);\n            v0 = *(v7);\n            if (v8 == 0)\n            {\n                break;\n            }\n        }\n        v2 += 1;\n    }\n    while (v2 != 10);\n    return sub_407940();\n}\n"
        },
        {
            "funcName": "sub_408090",
            "funcStartAddr": "0x408090",
            "funcEndAddr": "0x4080a7",
            "decompiledFuncCode": "int sub_408090()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_407ee0();\n}\n"
        },
        {
            "funcName": "sub_406e40",
            "funcStartAddr": "0x406e40",
            "funcEndAddr": "0x406eac",
            "decompiledFuncCode": "extern uint128_t g_613440;\nextern uint128_t g_613450;\nextern uint128_t g_613460;\nextern unsigned long long g_613470;\n\nint sub_406e40()\n{\n    void|unsigned int v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x20]\n    unsigned long v4;  // [bp-0x18]\n    unsigned long v6;  // rsi\n    unsigned long v7;  // rdx\n\n    *((uint128_t *)&v0) = g_613440;\n    *((uint128_t *)&v1) = g_613450;\n    *((uint128_t *)&v2) = g_613460;\n    v4 = g_613470;\n    v0 = 10;\n    if (v6 != 0 && v7 != 0)\n    {\n        v3 = v6;\n        v4 = v7;\n        return sub_406700();\n    }\n    if (v7 == 0 || v6 == 0)\n    {\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_401cc1",
            "funcStartAddr": "0x401cc1",
            "funcEndAddr": "0x401d18",
            "decompiledFuncCode": "extern char g_6132e8;\nextern unsigned long long g_6132f0;\n\nint sub_401cc1()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp-0x8]\n    unsigned long v4;  // rax\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    unsigned long long v7;  // rax\n    unsigned long long v9;  // rbx\n    unsigned long long v10;  // r12\n\n    if (g_6132e8 == 0)\n    {\n        v2 = stack_base + 0;\n        v1 = v5;\n        v0 = v6;\n        while (true)\n        {\n            if (g_6132f0 >= 0)\n            {\n                break;\n            }\n            g_6132f0 = g_6132f0 + 1;\n            *((long long *)(6368832 + (v7 + 1) * 8))();\n        }\n        v9 = v0;\n        v10 = v1;\n        g_6132e8 = 1;\n        return sub_401c6b();\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_401d18",
            "funcStartAddr": "0x401d18",
            "funcEndAddr": "0x401d54",
            "decompiledFuncCode": "int sub_401d18() { crash_skku;\n}"
        },
        {
            "funcName": "sub_403ade",
            "funcStartAddr": "0x403ade",
            "funcEndAddr": "0x404031",
            "decompiledFuncCode": "extern unsigned int g_40be88;\nextern int512_t g_40c220;\nextern unsigned long long g_40efa0;\nextern unsigned long long g_40efa1;\nextern int512_t g_40f23c;\n\nint sub_403ade()\n{\n    void tmp_4;  // tmp #4\n    void tmp_0;  // tmp #0\n    void tmp_19;  // tmp #19\n    void tmp_6;  // tmp #6\n    void tmp_43;  // tmp #43\n    void tmp_47;  // tmp #47\n    void tmp_2;  // tmp #2\n    unsigned long long v0;  // [bp-0x1e0]\n    unsigned long v1;  // [bp-0x1d8]\n    unsigned long v2;  // [bp-0x1d0]\n    unsigned long long v3;  // [bp-0x1c8]\n    unsigned long long v4;  // [bp-0x1c0]\n    unsigned long long v5;  // [bp-0x1b8]\n    unsigned long long v6;  // [bp-0x1b0]\n    unsigned int v7;  // [bp-0x1a8]\n    char v8;  // [bp-0x1a1]\n    unsigned long v9;  // [bp-0x1a0]\n    unsigned long v10;  // [bp-0x198]\n    unsigned long|unsigned long long v11;  // [bp-0x190]\n    unsigned long|unsigned long long v12;  // [bp-0x188]\n    unsigned long v13;  // [bp-0x180]\n    unsigned long long v14;  // [bp-0x178]\n    unsigned long v15;  // [bp-0x170]\n    unsigned long v16;  // [bp-0x168]\n    unsigned long v17;  // [bp-0x160]\n    unsigned long v18;  // [bp-0x158]\n    unsigned long|unsigned long long v19;  // [bp-0x150]\n    unsigned long v20;  // [bp-0x148]\n    unsigned long v21;  // [bp-0x140]\n    unsigned long v22;  // [bp-0x138]\n    unsigned long v23;  // [bp-0x130]\n    unsigned long long v24;  // [bp-0x128]\n    char v25;  // [bp-0x3e]\n    unsigned long long v26;  // [bp-0x30]\n    unsigned long v27;  // [bp-0x28]\n    unsigned long long v28;  // [bp-0x20]\n    unsigned long long v29;  // [bp-0x18]\n    unsigned long long v30;  // [bp-0x10]\n    unsigned long long v31;  // [bp-0x8]\n    unsigned long long v33;  // r15\n    unsigned long long v34;  // rax\n    unsigned long long v35;  // r14\n    unsigned long long v36;  // r13\n    unsigned long long v37;  // r12\n    unsigned long long v38;  // rbx\n    unsigned long long v39;  // rdi\n    unsigned long v40;  // rsi\n    char v41;  // al\n    unsigned long long v44;  // rdx\n    unsigned long long v45;  // rcx\n    unsigned long long v46;  // rax\n    unsigned long long v47;  // rdi\n    unsigned long long v48;  // rdx\n    unsigned long long v49;  // rax\n    unsigned long long v50;  // cc_dep2\n    unsigned long long v51;  // rax\n    unsigned long long v52;  // r14\n    char *|unsigned long long v53;  // r12\n    unsigned long long v55;  // rbp\n    char v56;  // al\n    unsigned long long v57;  // r12\n    unsigned long long v58;  // rdx\n    unsigned long long v59;  // rcx\n    unsigned long long v62;  // rbp\n    unsigned long long v63;  // rdx\n    unsigned long long v64;  // rcx\n    unsigned long long v65;  // rax\n    unsigned long long v67;  // r12\n    unsigned long long v68;  // rbx\n    unsigned long long v69;  // rbx\n    unsigned long long v70;  // r12\n    unsigned long long v71;  // r13\n    unsigned long long v72;  // r14\n    unsigned long long v73;  // r15\n\n    v31 = v33;\n    v34 = 0;\n    v30 = v35;\n    v29 = v36;\n    v28 = v37;\n    v27 = stack_base + 0;\n    v26 = v38;\n    v68 = v39;\n    v41 = v40 == 0;\n    v3 = v39 - rax<8>;\n    v2 = v40 - 1;\n    if (v40 == 1)\n    {\n        tmp_4 = BinaryOp ExpCmpNE;\n        tmp_19 = UnaryOp Ctz;\n        v11 = 0;\n        v10 = v3 >> ((char)(tmp_4? tmp_19 : rcx<8>) & 63);\n        v7 = (tmp_4? tmp_19 : rcx<8>) + 64;\n    }\n    else\n    {\n        tmp_6 = BinaryOp ExpCmpNE;\n        tmp_47 = UnaryOp Ctz;\n        v7 = (tmp_6? tmp_47 : v3);\n        v10 = v3 << ((char)(64 - (unsigned int)(tmp_6? tmp_47 : v3)) & 63) | v2 >> ((char)(tmp_6? tmp_47 : v3) & 63);\n        v11 = v3 >> ((char)(tmp_6? tmp_47 : v3) & 63);\n    }\n    v44 = 0;\n    v45 = (unsigned long long)((unsigned int)(0 - (unsigned long long)(char)(v68 < 2)) & 64) + 63;\n    v44 = (char)(v68 < 2);\n    v46 = 0 - (unsigned long long)(char)(v68 < 2) + 1;\n    do\n    {\n        tmp_19 = v44;\n        v44 *= 2;\n        v46 = v46 * 2 | tmp_19 >> 63;\n        if (v68 < v46 || v39 == v46 && v16 <= v44)\n        {\n            tmp_2 = v44;\n            v44 -= v16;\n            v46 = v46 - v68 - (char)(tmp_2 < v16);\n        }\n        v45 -= 1;\n    }\n    while (v45 != -1);\n    v15 = v46;\n    v47 = v44;\n    v14 = v44;\n    v48 = v44 * 2;\n    v49 = v46 * 2 + ((v47 + v47 <= v47? 1 : 0) & 1);\n    v13 = v49;\n    v12 = v48;\n    v50 = v49;\n    if (v68 < v49 || v68 == v50 && v16 <= v12)\n    {\n        v51 = v49 - v68 - (char)(v12 < v16);\n        v13 = v51;\n        v12 -= v16;\n    }\n    v16 = v40;\n    v17 = v68;\n    v8 = sub_402240();\n    if (v8 != 0)\n    {\n        v52 = v3;\n        v53 = &g_40efa0;\n        sub_403210();\n        v55 = 2;\n        v0 = v52 * 0x8000000000000000 | v2 >> 1;\n        *((unsigned long long *)&(stack_base)[-472]) = v52 % 2;\n        v9 = stack_base + -320;\n        while (true)\n        {\n            if (v23 != 0)\n            {\n                v19 = 0;\n                v18 = ...;\n                v20 = (unsigned int)sub_4020d0();\n                if (v20 == v14)\n                {\n                    v56 = v21 != v15;\n                }\n            }\n            if (v25 == 0 && (v23 == 0 || v20 != v14))\n            {\n                break;\n            }\n            if (v25 != 0 && (v23 == 0 || v20 != v14 || v21 != v15))\n            {\n                v4 = 2;\n                v5 = &g_40efa0;\n                v57 = 1;\n                v6 = v68;\n                while (true)\n                {\n                    v58 = v24;\n                    if (v24 != 2)\n                    {\n                        v59 = (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * 2 - v58 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]))) * 2 - v58 * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * 2 - v58 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]))) * (((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * 2 - v58 * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])) * ((unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * 2 - v58 * (char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)]) * (unsigned long long)(char)*(&((char *)&g_40c220)[(unsigned long long)((unsigned int)v58 % 2 & 127)])));\n                        if (v3 >= v58)\n                        {\n                            v18 = ...;\n                            v19 = (v3 - (v18 * v58 >> 64)) * v59;\n                        }\n                        else\n                        {\n                            v18 = v18;\n                            v19 = 0;\n                        }\n                    }\n                    else\n                    {\n                        v18 = v0;\n                        v19 = v1;\n                    }\n                    v20 = (unsigned int)sub_4020d0();\n                    if (v20 != v14)\n                    {\n                        if (v25 <= (unsigned int)v57)\n                        {\n                            break;\n                        }\n                    }\n                    else if (v25 <= (unsigned int)v57)\n                    {\n                        v55 = v4;\n                        v53 = v5;\n                        v68 = v6;\n                        v56 = v21 != v15;\n                    }\n                    else if (v21 == v15)\n                    {\n                        v55 = v4;\n                        v53 = v5;\n                        v68 = v6;\n                    }\n                    if (v25 > (unsigned int)v57 && (v20 != v14 || v21 != v15))\n                    {\n                        v57 = 2;\n                    }\n                }\n                if (v20 == v14 && v21 == v15 && v25 > (unsigned int)v57)\n                {\n                    v62 = v55 + *(v53);\n                    v63 = (v68 <= v62? v62 : 0);\n                    v64 = (0 - (unsigned long long)(char)(v62 < v68) & -64) + 127;\n                    v65 = (!(v68 <= v62)? v62 : 0);\n                }\n                else if (v20 != v14)\n                {\n                    v69 = v26;\n                    v70 = v28;\n                    v71 = v29;\n                    v72 = v30;\n                    v73 = v31;\n                    return (unsigned long long)v8;\n                }\n            }\n            if ((v56 == 0 || v20 == v14) && (v56 == 0 || v21 == v15) && (v56 == 0 || v25 != 0) && (v56 == 0 || v23 != 0) && (v20 == v14 || v25 != 0) && (v25 != 0 || v23 != 0))\n            {\n                v62 = v55 + *(v53);\n                v63 = (v68 <= v62? v62 : 0);\n                v64 = (0 - (unsigned long long)(char)(v62 < v68) & -64) + 127;\n                v65 = (!(v68 <= v62)? v62 : 0);\n                do\n                {\n                    tmp_19 = v63;\n                    v63 *= 2;\n                    v65 = v65 * 2 | tmp_19 >> 63;\n                    if (v68 < v65 || v68 == v65 && v16 <= v63)\n                    {\n                        tmp_2 = v63;\n                        v63 -= v16;\n                        v65 = v65 - v68 - (char)(tmp_2 < v16);\n                    }\n                    v64 -= 1;\n                }\n                while (v64 != -1);\n                v12 = v63;\n                v13 = v65;\n                if (sub_402240() != 0)\n                {\n                    v67 = &g_40efa1;\n                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40be88, 0x5));\n                    abort(); /* do not return */\n                }\n                v8 = 0;\n            }\n        }\n    }\n    v69 = v26;\n    v70 = v28;\n    v71 = v29;\n    v72 = v30;\n    v73 = v31;\n    return (unsigned long long)v8;\n}\n"
        },
        {
            "funcName": "sub_40815c",
            "funcStartAddr": "0x40815c",
            "funcEndAddr": "0x408161",
            "decompiledFuncCode": "int sub_40815c()\n{\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_406d10",
            "funcStartAddr": "0x406d10",
            "funcEndAddr": "0x406d1f",
            "decompiledFuncCode": "int sub_406d10()\n{\n}\n"
        },
        {
            "funcName": "sub_407340",
            "funcStartAddr": "0x407340",
            "funcEndAddr": "0x407371",
            "decompiledFuncCode": "int sub_407340()\n{\n    unsigned long v1;  // rdi\n\n    return (sub_409040() != 0? (unsigned int)sub_409040() - v1 + 1 : rsi<8>);\n}\n"
        },
        {
            "funcName": "sub_40b8c0",
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40b916",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n    char padding_18[8];\n    unsigned long long field_20;\n    unsigned long long field_28;\n    char padding_30[24];\n    unsigned long long field_48;\n    char padding_50[64];\n    unsigned long long field_90;\n} struct_0;\n\nint sub_40b8c0()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long long v2;  // [bp-0x8]\n    struct_0 *v4;  // rdi\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    struct_0 *v7;  // rbx\n    unsigned int v8;  // esi\n    unsigned int v9;  // edx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // r12\n\n    if (v4->field_10 == v4->field_8 && v4->field_28 == v4->field_20 && v4->field_48 == 0)\n    {\n        v2 = v5;\n        v1 = stack_base + 0;\n        v0 = v6;\n        v7 = v4;\n        v10 = lseek(fileno(v4), v8, v9);\n        if (v10 != -1)\n        {\n            v7->field_0 = v7->field_0 & -17;\n            v7->field_90 = v10;\n            v10 = 0;\n        }\n        v11 = v0;\n        v12 = v2;\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_404050",
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x40407a",
            "decompiledFuncCode": "int sub_404050()\n{\n    unsigned long v1;  // rdi\n    unsigned long v2;  // rsi\n\n    if (v1 == 0)\n    {\n        if (!(v2 > 1))\n        {\n            return 0;\n        }\n        else if (v2 <= 25030008)\n        {\n            return 1;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_40b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40ba08",
            "decompiledFuncCode": "extern unsigned long long g_6134c0[4];\n\nint sub_40b990()\n{\n    unsigned long v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned long long v3;  // rcx\n    unsigned long long *v4;  // rcx\n\n    if (v1 != 0 && *((int *)(v1 - 4)) == 336984906)\n    {\n        v2 = v1 - ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8) * 257;\n        v3 = g_6134c0[v1 + -257 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)];\n        if (g_6134c0[v1 + -1 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8) + -0x100 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)] != 0)\n        {\n            if (g_6134c0[v1 + -1 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8) + -0x100 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)] != v1)\n            {\n                while (true)\n                {\n                    v2 = *((long long *)(v3 - 16));\n                    if (*((long long *)(v3 - 16)) != 0)\n                    {\n                        if (v1 != v2)\n                        {\n                            v3 = v2;\n                        }\n                        else\n                        {\n                            v4 = v3 - 16;\n                        }\n                    }\n                }\n                if (v1 == v2 && *((long long *)(v3 - 16)) != 0)\n                {\n                    *(v4) = *((long long *)(v1 - 16));\n                }\n                else if (*((long long *)(v3 - 16)) == 0)\n                {\n                    return v2;\n                }\n            }\n            else\n            {\n                v4 = &g_6134c0[v1 + -257 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)];\n            }\n            *(v4) = *((long long *)(v1 - 16));\n        }\n    }\n    if (g_6134c0[v1 + -1 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8) + -0x100 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)] == 0 || v1 == 0 || *((int *)(v1 - 4)) != 336984906 || g_6134c0[v1 + -1 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8) + -0x100 * ((unsigned long long)(v1 * -71777214294589695 >> 64) >> 8)] != v1)\n    {\n        return v2;\n    }\n}\n"
        },
        {
            "funcName": "sub_409a20",
            "funcStartAddr": "0x409a20",
            "funcEndAddr": "0x409a3d",
            "decompiledFuncCode": "int sub_409a20()\n{\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_401ed0",
            "funcStartAddr": "0x401ed0",
            "funcEndAddr": "0x401f55",
            "decompiledFuncCode": "int sub_401ed0()\n{\n    void tmp_15;  // tmp #15\n    void tmp_33;  // tmp #33\n    void tmp_38;  // tmp #38\n    unsigned long long v1;  // r9\n    unsigned long long v2;  // r12\n    unsigned int v3;  // rbx\n    unsigned long v4;  // r11\n    unsigned int v5;  // rsi\n    unsigned long long v6;  // rax\n    unsigned long|unsigned long long|unsigned int|char v7;  // r8\n\n    v2 = v1;\n    v3 = v5;\n    v6 = sub_401e60();\n    v7 = v2 == v6 | v6 == v4 - v2;\n    if (v6 != v4 - v2 && v2 != v6 && v7 > 1)\n    {\n        v5 = 1;\n        while (true)\n        {\n            tmp_15 = (v6 * v6 >> 64) - ((v3 * v6 * v6) * v4 >> 64);\n            tmp_33 = (v6 * v6 >> 64) - ((v3 * v6 * v6) * v4 >> 64) + v4;\n            tmp_38 = v6 * v6 >> 64 < (unsigned long long)((v3 * v6 * v6) * v4 >> 64);\n            v6 = (v6 * v6 >> 64 < (unsigned long long)((v3 * v6 * v6) * v4 >> 64)? (v6 * v6 >> 64) - ((v3 * v6 * v6) * v4 >> 64) + v4 : (unsigned long long)((v6 * v6 >> 64) - ((v3 * v6 * v6) * v4 >> 64)));\n            if (v4 - v1 != (tmp_38? tmp_33 : tmp_15))\n            {\n                if (v2 == v6)\n                {\n                    break;\n                }\n                v5 = (unsigned long long)v5 + 1;\n                if (v7 == v5)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v7 = 1;\n            }\n        }\n    }\n    return v7;\n}\n"
        },
        {
            "funcName": "sub_408ec0",
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408f16",
            "decompiledFuncCode": "extern unsigned int g_6132b4;\nextern unsigned int g_6132b8;\nextern unsigned int g_6132bc;\nextern unsigned int g_613480;\nextern unsigned int g_613484;\nextern unsigned int g_613488;\nextern unsigned long long g_613490;\nextern unsigned long long g_613cc8;\n\nint sub_408ec0()\n{\n    unsigned int *v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp+0x8]\n\n    g_613480 = g_6132bc;\n    g_613484 = g_6132b8;\n    v1 = (unsigned int)v2;\n    v0 = &g_613480;\n    g_6132bc = g_613480;\n    g_613cc8 = g_613490;\n    g_6132b4 = g_613488;\n    return sub_4088f0();\n}\n"
        },
        {
            "funcName": "sub_402590",
            "funcStartAddr": "0x402590",
            "funcEndAddr": "0x402630",
            "decompiledFuncCode": "int sub_402590() { crash_skku;\n}"
        },
        {
            "funcName": "sub_406b00",
            "funcStartAddr": "0x406b00",
            "funcEndAddr": "0x406b0a",
            "decompiledFuncCode": "int sub_406b00()\n{\n}\n"
        },
        {
            "funcName": "sub_406bd0",
            "funcStartAddr": "0x406bd0",
            "funcEndAddr": "0x406bda",
            "decompiledFuncCode": "int sub_406bd0()\n{\n}\n"
        },
        {
            "funcName": "sub_406990",
            "funcStartAddr": "0x406990",
            "funcEndAddr": "0x406a02",
            "decompiledFuncCode": "extern int512_t g_613440;\n\nint sub_406990()\n{\n    unsigned long v0;  // [bp-0x68]\n    unsigned long v1;  // [bp-0x60]\n    unsigned long v2;  // [bp-0x58]\n    unsigned long v3;  // [bp-0x40]\n    unsigned int v5;  // [bp+0x100008]\n    unsigned long v6;  // r8\n    unsigned long long v7[7];  // rbx\n    unsigned long v8;  // rcx\n\n    v7 = (v6 == 0? &g_613440 : v6);\n    v3 = v8;\n    *((unsigned long long [7])&v2) = v7[6];\n    *((unsigned long long [7])&v1) = v7[5];\n    v0 = &v7[1];\n    *(__errno_location()) = v5;\n    return sub_4054d0();\n}\n"
        },
        {
            "funcName": "sub_40b920",
            "funcStartAddr": "0x40b920",
            "funcEndAddr": "0x40b98c",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned long long field_0;\n    char padding_8[4];\n    unsigned int field_c;\n} struct_1;\n\nextern int512_t g_6134c0;\n\nint sub_40b920()\n{\n    unsigned long v1;  // rdi\n    struct_1 *v3;  // rsi\n    unsigned long long v5;  // rax\n\n    if (!((char)[D] amd64g_calculate_condition(0x2<64>, 0x4<64>, rdi<8>, 0x10<64>, cc_ndep<8>)))\n    {\n        v3 = malloc(v1 + 16);\n        if (v3 != 0)\n        {\n            v3->field_c = 336984906;\n            v5 = *((long long *)&((char *)(0x8 * v3 + -2056 * ((unsigned long long)(&v3[1] * -71777214294589695 >> 64) >> 8) + (char *)&g_6134c0))[128]);\n            *((struct_1 **)&((char *)(0x8 * v3 + -2056 * ((unsigned long long)(&v3[1] * -71777214294589695 >> 64) >> 8) + (char *)&g_6134c0))[128]) = &v3[1];\n            v3->field_0 = v5;\n        }\n        return &v3[1];\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_406ee0",
            "funcStartAddr": "0x406ee0",
            "funcEndAddr": "0x406ef3",
            "decompiledFuncCode": "int sub_406ee0()\n{\n}\n"
        },
        {
            "funcName": "sub_406da0",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406db1",
            "decompiledFuncCode": "int sub_406da0()\n{\n}\n"
        },
        {
            "funcName": "sub_4081f0",
            "funcStartAddr": "0x4081f0",
            "funcEndAddr": "0x4082c5",
            "decompiledFuncCode": "int sub_4081f0()\n{\n    unsigned int v1[13];  // rsi\n    unsigned long long v2;  // r12\n    unsigned long long v3;  // rbp\n    unsigned long long v4;  // rbx\n    unsigned long long v5;  // r9\n    unsigned long long v6;  // r8\n    unsigned long long v7;  // r14\n    unsigned long long v8;  // rdx\n    unsigned long v9;  // rdi\n    unsigned long long *v10;  // rax\n    unsigned long long *v12;  // rdx\n    unsigned long long v13;  // rcx\n    unsigned long long v14;  // r10\n    unsigned long long *v15;  // rax\n    unsigned long long *v17;  // rdx\n    unsigned long long v18;  // rcx\n    unsigned int v19;  // r9d\n\n    v2 = v1[5 + 1];\n    v3 = v1[0];\n    v4 = (int)v1[6];\n    v5 = v1[5 + 1];\n    v14 = v1[0];\n    while ((unsigned int)v14 > v1[6])\n    {\n        for (v6 = (int)v1[6]; v5 < v1[6]; v19 = v5 + v7)\n        {\n            v7 = v14 - v6;\n            v8 = v6 - v5;\n            if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5))\n            {\n                v14 -= v8;\n                v10 = v9 + v5 * 8;\n                v12 = v14 - v5;\n                do\n                {\n                    v13 = *(v10);\n                    *(v10) = *((long long *)((char *)v10 + 0x8 * v12));\n                    *((unsigned long long *)((char *)v10 + 0x8 * v12)) = v13;\n                    v10 = &v10[1];\n                }\n                while (v9 + 8 + ((unsigned int)v8 - 1 + v5) * 8 != v10);\n                if ((unsigned int)v14 <= (unsigned int)v6)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v15 = v9 + v5 * 8;\n                v17 = v4 - v5;\n                do\n                {\n                    v18 = *(v15);\n                    *(v15) = *((long long *)((char *)v15 + 0x8 * v17));\n                    *((unsigned long long *)((char *)v15 + 0x8 * v17)) = v18;\n                    v15 = &v15[1];\n                }\n                while (v15 != v9 + 8 + (v7 - 1 + v5) * 8);\n            }\n        }\n        if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5) || v5 >= v1[6])\n        {\n            v1[6] = v3;\n            v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n            return stack_base + 0 - v6;\n        }\n    }\n    v1[6] = v3;\n    v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n    return stack_base + 0 - v6;\n}\n"
        },
        {
            "funcName": "sub_4068f0",
            "funcStartAddr": "0x4068f0",
            "funcEndAddr": "0x4068ff",
            "decompiledFuncCode": "extern int512_t g_613440;\n\nint sub_4068f0()\n{\n    unsigned long v1;  // rdi\n    unsigned int v2;  // esi\n\n    *((unsigned int *)(v1 == 0? &g_613440 : v1)) = v2;\n    return &g_613440;\n}\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406dca",
            "decompiledFuncCode": "int sub_406dc0()\n{\n}\n"
        },
        {
            "funcName": "sub_409270",
            "funcStartAddr": "0x409270",
            "funcEndAddr": "0x4097c4",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned long long field_0;\n    unsigned int field_8;\n    unsigned short field_c;\n} struct_1;\n\nextern char g_4105e7;\nextern char g_6134b8[2];\n\nint sub_409270()\n{\n    unsigned long|unsigned long long v0;  // [bp-0xd0]\n    void tmp_12;  // tmp #12\n    void tmp_56;  // tmp #56\n    void tmp_1;  // tmp #1\n    void tmp_10;  // tmp #10\n    void tmp_3;  // tmp #3\n    void tmp_28;  // tmp #28\n    unsigned long long v1;  // [bp-0xc8]\n    unsigned long long v2;  // [bp-0xc0]\n    char v3;  // [bp-0xb8]\n    char v4;  // [bp-0xb4]\n    char v5;  // [bp-0x78]\n    char v6;  // [bp-0x74]\n    unsigned int v7;  // [bp-0x4]\n    unsigned long long|char [2] v9;  // r15\n    unsigned long|char * v10;  // rbx\n    unsigned long v11;  // rax\n    unsigned long long v12;  // rdi\n    unsigned long long v13;  // rdi\n    unsigned long long v14;  // r12\n    char *v15;  // r13\n    unsigned long long v16;  // r14\n    unsigned long long v17;  // rbp\n    struct_1 *v20;  // r12\n    unsigned short v21;  // dx\n    unsigned int v22;  // r12d\n    unsigned long long v27;  // rax\n    unsigned int *v28;  // rcx\n    unsigned int v29;  // eax\n    unsigned long v30;  // rax\n    unsigned int *v31;  // rdx\n    unsigned long long v32;  // rcx\n    unsigned long long v33;  // rax\n    unsigned long v34;  // rax\n    unsigned long long v35;  // rax\n    unsigned long long v36;  // rax\n    unsigned long v37;  // rsi\n    unsigned long long v38;  // rcx\n    unsigned long long v39;  // rdx\n    unsigned long long v40;  // rcx\n    unsigned long long v41;  // rdi\n    unsigned long long v42;  // rsi\n    unsigned long long v43;  // r9\n    unsigned long long v44;  // r10\n    unsigned int v45;  // ecx\n    unsigned long long v47;  // r8\n    void *v48;  // rcx\n    unsigned long long v51;  // rcx\n    unsigned int v53;  // edx\n    unsigned long long v56;  // rcx\n    unsigned long long v57;  // rsi\n    char *v58;  // rax\n    unsigned long v59;  // rdi\n    char *v60;  // rax\n    unsigned long long v61;  // rax\n    unsigned long long v62;  // rdx\n    unsigned long long v66;  // rbp\n    unsigned long long v67;  // rax\n    unsigned long long v68;  // rax\n    unsigned long long v69;  // rbp\n    unsigned long long v70;  // rax\n\n    v9 = g_6134b8;\n    v10 = ((unsigned long long)nl_langinfo(0xe) == 0? &g_4105e7 : (unsigned long long)nl_langinfo(0xe));\n    if (g_6134b8 == 0)\n    {\n        v15 = getenv(\"CHARSETALIASDIR\");\n        if (v15 != 0 && *(v15) != 0)\n        {\n            v11 = strlen(v15);\n            v14 = v11;\n            v16 = v11;\n            if (v11 == 0)\n            {\n                v12 = 14;\n            }\n            else if (v15[v11 + -1] == 47)\n            {\n                v12 = v11 + 14;\n            }\n            else\n            {\n                v13 = v11 + 15;\n                v14 += 1;\n            }\n            if (v11 == 0 || v15[v11 + -1] == 47)\n            {\n                v17 = malloc(v12);\n                if (v17 != 0)\n                {\n                    memcpy(v17, v15, v16);\n                }\n            }\n        }\n        if (*(v15) == 0 || v15 == 0)\n        {\n            v13 = 115;\n            v14 = 101;\n            v16 = 100;\n            v15 = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n        }\n        if (*(v15) == 0 || v15 == 0 || v11 != 0 && v15[v11 + -1] != 47)\n        {\n            v17 = malloc(v13);\n        }\n        if (v17 == 0 || v17 == 0)\n        {\n            v9 = &g_4105e7;\n        }\n        if (v17 != 0 && (*(v15) == 0 || v15 == 0 || v11 != 0) && (*(v15) == 0 || v15 == 0 || v15[v11 + -1] != 47))\n        {\n            memcpy(v17, v15, v16);\n            *((char *)(v17 + v16)) = 47;\n        }\n        if (*(v15) == 0 && v17 != 0 || v15 == 0 && v17 != 0 || v11 != 0 && v15[v11 + -1] != 47 && v17 != 0 || v11 == 0 && *(v15) != 0 && v17 != 0 && v15 != 0 || v15[v11 + -1] == 47 && *(v15) != 0 && v17 != 0 && v15 != 0)\n        {\n            v20 = v14 + v17;\n            v20->field_0 = 3347411969557751907;\n            v20->field_c = 115;\n            v20->field_8 = 1634298977;\n            v22 = open(v17, 0x0, v21);\n            if (v22 >= 0)\n            {\n                v9 = 0;\n                v0 = 0;\n                if (v10 != 0)\n                {\n                    v10 = fdopen(v22, \"r\");\n                    while (true)\n                    {\n                        v58 = *((long long *)(v10 + 8));\n                        if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)))\n                        {\n                            *((char **)(v10 + 8)) = &v58[1];\n                            v59 = *(v58);\n                        }\n                        if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1)\n                        {\n                            if ((unsigned int)v59 != 35 && (unsigned int)v59 != 32)\n                            {\n                                ungetc(v59, v10);\n                                v27 = fscanf(v10, \"%50s %50s\", (unsigned int)&v3, (unsigned int)&v5);\n                                if (v27 > 1)\n                                {\n                                    v28 = &v3;\n                                    do\n                                    {\n                                        tmp_12 = (unsigned int)*((int *)&v3);\n                                        v28 = &v4;\n                                        v29 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                    }\n                                    while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                    v30 = (unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int)(rax<8> >> 16) : (unsigned int)rax<8>);\n                                    v31 = &v5;\n                                    v32 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)((char *)v28 + 2) : v28) + -1 * ((v30 + v30 <= v30? 1 : 0) & 1) + -0x1 * &v3;\n                                    do\n                                    {\n                                        tmp_12 = (unsigned int)*((int *)&v5);\n                                        v31 = &v6;\n                                        v33 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                    }\n                                    while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                    v1 = v32;\n                                    tmp_56 = (unsigned int)v33 % 0x10000;\n                                    v34 = (unsigned int)(((unsigned int)v33 & 32896) == 0? (unsigned int)(v33 >> 16) : (unsigned int)v33);\n                                    v35 = &((char *)(-3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v31)[2] : v31) + -1 * ((v34 + v34 <= v34? 1 : 0) & 1) + -0x1 * &v5))[v1];\n                                    v2 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v31)[2] : v31) + -1 * (((unsigned int)((((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)) <= (unsigned long long)(unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)? 1 : 0) & 1) + -0x1 * &v5;\n                                    if (v0 == 0)\n                                    {\n                                        v0 = v35 + 2;\n                                        v36 = malloc(v35 + 3);\n                                        v38 = v1;\n                                        v39 = v2;\n                                    }\n                                    else\n                                    {\n                                        v37 = v35 + v0 + 3;\n                                        v0 = v35 + v0 + 2;\n                                        v36 = realloc(NULL, v37);\n                                        v39 = v2;\n                                        v38 = v1;\n                                    }\n                                    if (v36 != 0)\n                                    {\n                                        tmp_1 = -2 - v38;\n                                        v40 = v38 + 1;\n                                        v41 = v0 - v39;\n                                        v42 = tmp_1 + v0 - v39 + v36;\n                                        if ((unsigned int)v40 >= 8)\n                                        {\n                                            *((long long *)v42) = *((long long *)&v3);\n                                            *((long long *)(v42 + v40 - 8)) = *((long long *)&(&v3)[v40 + -8]);\n                                            v43 = v42 + 8 & -8;\n                                            v42 -= v42 + 8 & -8;\n                                            v44 = &(&v3)[-1 * v42];\n                                            v45 = (unsigned int)(v40 + v42) & -8;\n                                            if (v45 >= 8)\n                                            {\n                                                v42 = 0;\n                                                do\n                                                {\n                                                    v47 = v42;\n                                                    v42 = (unsigned int)v42 + 8;\n                                                    *((long long *)(v43 + v47)) = *((long long *)(v44 + v47));\n                                                }\n                                                while ((unsigned int)v42 < (v45 & -8));\n                                            }\n                                        }\n                                        else if ((v40 & 4) != 0)\n                                        {\n                                            *((int *)v42) = *((int *)&v3);\n                                            *((int *)(v42 + v40 - 4)) = *((int *)&(&v3)[v40 + -4]);\n                                        }\n                                        else if ((unsigned int)v40 != 0)\n                                        {\n                                            *((char *)v42) = v3;\n                                            if ((v40 & 2) != 0)\n                                            {\n                                                *((short *)(v42 + v40 - 2)) = *((short *)&(&v3)[v40 + -2]);\n                                            }\n                                        }\n                                        v62 = v39 + 1;\n                                        v48 = v36 + v41 - 1;\n                                        if ((unsigned int)v42 >= 8)\n                                        {\n                                            *((long long *)v48) = *((long long *)&v5);\n                                            v42 = v62;\n                                            *((long long *)&((char *)v48)[v42 + -8]) = *((long long *)&(&v5)[v42 + -8]);\n                                            v51 = v48 - (v48 + 8 & -8);\n                                            v53 = (unsigned int)(v42 + v51) & -8;\n                                            if (v53 >= 8)\n                                            {\n                                                v56 = 0;\n                                                do\n                                                {\n                                                    v57 = v56;\n                                                    v56 = (unsigned int)v56 + 8;\n                                                    *((long long *)((v48 + 8 & -8) + v57)) = *((long long *)&(&v5)[v57 + -1 * v51]);\n                                                }\n                                                while ((unsigned int)v56 < (v53 & -8));\n                                            }\n                                        }\n                                        else if (((char)v42 & 4) != 0)\n                                        {\n                                            *((int *)v48) = *((int *)&v5);\n                                            *((unsigned int *)&((char *)v48)[(unsigned long long)v7 + -4]) = v7;\n                                        }\n                                        else if ((unsigned int)v42 != 0)\n                                        {\n                                            *((char *)v48) = v5;\n                                            if ((v5 & 2) != 0)\n                                            {\n                                                *((short *)&((char *)v48)[(unsigned long long)v5 + -2]) = v7;\n                                            }\n                                        }\n                                        v9 = v36;\n                                        v58 = *((long long *)(v10 + 8));\n                                    }\n                                    else\n                                    {\n                                        v9 = &g_4105e7;\n                                        v10 = (tmp_10 == 0? &g_4105e7 : tmp_10);\n                                        free(NULL);\n                                        sub_40b800();\n                                    }\n                                }\n                            }\n                            if ((unsigned int)v59 == 35)\n                            {\n                                do\n                                {\n                                    v60 = *((long long *)(v10 + 8));\n                                    if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)))\n                                    {\n                                        *((char **)(v10 + 8)) = &v60[1];\n                                        v61 = *(v60);\n                                        v62 = 1;\n                                    }\n                                    else\n                                    {\n                                        v61 = __uflow(v10);\n                                        v62 = (char)(v61 != -1);\n                                    }\n                                }\n                                while (v62 != 0 && v61 != 10);\n                            }\n                        }\n                        if (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || v36 != 0 && v27 > 1 && (unsigned int)v59 != 35 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) && (unsigned int)v59 != 32)\n                        {\n                            v59 = __uflow(v10);\n                        }\n                        if ((unsigned int)v59 == 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v61 == -1 || (unsigned int)v59 != 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v27 <= 1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || v36 != 0 && v27 > 1 && (unsigned int)v59 != 35 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) && (unsigned int)v59 != 32) && (unsigned int)v59 == -1)\n                        {\n                            v10 = (tmp_10 == 0? &g_4105e7 : tmp_10);\n                            sub_40b800();\n                            if (v0 == 0)\n                            {\n                                break;\n                            }\n                            *((char *)(v9 + v0)) = 0;\n                        }\n                    }\n                    if ((unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v27 <= 1 || (unsigned int)v59 == 35 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v61 == -1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v59 == -1)\n                    {\n                        v9 = &g_4105e7;\n                    }\n                    else if ((v27 > 1 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v0 != 0 || v27 > 1 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v0 == 0) && v36 == 0 || ((unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v27 <= 1 || (unsigned int)v59 == 35 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v61 == -1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v59 == -1) && v0 != 0)\n                    {\n                        free(v17);\n                    }\n                }\n                else\n                {\n                    close(v22);\n                }\n            }\n            v9 = &g_4105e7;\n            free(v17);\n        }\n        *((char *[2])&g_6134b8[0]) = v9;\n    }\n    v66 = v9[0];\n    if (v9[0] != 0)\n    {\n        while (true)\n        {\n            v67 = strcmp((tmp_10 == 0? &g_4105e7 : tmp_10), v9);\n            if (v67 != 0 && (v66 != 42 || v9[1] != 0))\n            {\n                v68 = strlen(v9);\n                v69 = &((char [2])&v9[v68])[1];\n                v70 = strlen(&((char [2])&v9[v68])[1]);\n                v9 = v69 + v70 + 1;\n                v66 = (char)*((char *)(v69 + v70 + 1));\n                if (v66 == 0)\n                {\n                    break;\n                }\n            }\n            if (v67 == 0 || v66 == 42 && v9[1] == 0)\n            {\n                v10 = &((char [2])&v9[strlen(v9)])[1];\n            }\n        }\n    }\n    tmp_3 = v10;\n    tmp_28 = *(v10) == 0;\n    return (tmp_28? \"ASCII\" : tmp_3);\n}\n"
        },
        {
            "funcName": "sub_406eb0",
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x406eb9",
            "decompiledFuncCode": "int sub_406eb0()\n{\n}\n"
        },
        {
            "funcName": "sub_40bc78",
            "funcStartAddr": "0x40bc78",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "extern unsigned long long g_612e30;\n\nint sub_40bc78()\n{\n    unsigned long long *v1;  // rbx\n    unsigned long long v2;  // rax\n    unsigned long v4;  // rdx\n\n    v1 = &g_612e30;\n    while (true)\n    {\n        v2 = *(v1);\n        if (*(v1) == -1)\n        {\n            break;\n        }\n        rax<8>();\n        v1 = &v1[-1];\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_408130",
            "funcStartAddr": "0x408130",
            "funcEndAddr": "0x40815c",
            "decompiledFuncCode": "extern unsigned int g_4104af;\nextern unsigned int g_613240;\n\nint sub_408130()\n{\n    dcgettext(0x0, 0x4104af, 0x5);\n    error(g_613240, 0x0, \"%s\");\n}\n"
        },
        {
            "funcName": "sub_4053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x4054af",
            "decompiledFuncCode": "extern int512_t g_40f3a5;\nextern int512_t g_40f3a9;\n\nint sub_4053d0()\n{\n    unsigned long v1;  // rdi\n    char *v2;  // rbx\n    char v3[8];  // rax\n    unsigned long long v4;  // rdx\n    unsigned long v5;  // rsi\n    char *v6;  // rax\n\n    v2 = (unsigned long long)dcgettext(0x0, v1, 0x5);\n    if (v1 == v2)\n    {\n        v3 = sub_409270();\n        v4 = v3[0] & 4294967007;\n        if ((v3[0] & 223) == 85)\n        {\n            if ((v3[1] & 223) == 84 && (v3[2] & 223) == 70 && v3[3] == 45 && v3[4] == 56 && v3[5] == 0)\n            {\n                v2 = (*(v2) != 96? &g_40f3a5 : 4256688);\n            }\n        }\n        else\n        {\n            if (v4 == 71 && (v3[1] & 223) == 66 && v3[2] == 49 && v3[3] == 56 && v3[4] == 48 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0)\n            {\n                v2 = (*(v2) != 96? &g_40f3a9 : 4256684);\n            }\n        }\n    }\n    if (...)\n    {\n        return ((unsigned int)v5 != 9? \"'\" : \"\\\"\");\n    }\n    if (v3[3] == 45 && v3[4] == 56 && (v3[2] & 223) == 70 && (v3[1] & 223) == 84 && v1 == v2 && v3[5] == 0 && (v3[0] & 223) == 85 || (v3[1] & 223) == 66 && v4 == 71 && v1 == v2 && v3[3] == 56 && v3[2] == 49 && v3[4] == 48 && (v3[0] & 223) != 85 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0 || v1 != v2)\n    {\n        v6 = v2;\n        return v6;\n    }\n}\n"
        },
        {
            "funcName": "sub_408110",
            "funcStartAddr": "0x408110",
            "funcEndAddr": "0x408123",
            "decompiledFuncCode": "int sub_408110()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    char *v3;  // rdi\n\n    v0 = v2;\n    strlen(v3);\n}\n"
        },
        {
            "funcName": "sub_406960",
            "funcStartAddr": "0x406960",
            "funcEndAddr": "0x40698b",
            "decompiledFuncCode": "extern char g_613440;\n\nint sub_406960()\n{\n    void tmp_2;  // tmp #2\n    void tmp_11;  // tmp #11\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long long v3[7];  // rdi\n    unsigned long v4;  // rsi\n    unsigned long v5;  // rdx\n\n    tmp_2 = v2;\n    tmp_11 = v2 == 0;\n    v3 = (v2 == 0? &g_613440 : v2);\n    *((int *)(tmp_11? &g_613440 : tmp_2)) = 10;\n    if (v4 != 0 && v5 != 0)\n    {\n        v3[5] = v4;\n        v3[6] = v5;\n        return &g_613440;\n    }\n    if (v5 == 0 || v4 == 0)\n    {\n        v0 = &g_613440;\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4053b0",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned long long field_0;\n    unsigned short field_8;\n    char field_a;\n} struct_0;\n\nextern unsigned int g_40f382;\n\nint sub_405150()\n{\n    unsigned long|void * v0;  // [bp-0x40]\n    void *v2;  // rsi\n    unsigned long long|void * v3;  // rbx\n    void *v4;  // rdi\n    void *v6;  // r14\n    unsigned long long v7;  // rax\n    void *v8;  // r12\n    unsigned long long|void * v9;  // r14\n    struct_0 *v10;  // r15\n    unsigned long long v11;  // rax\n    unsigned long|unsigned long long v12;  // r15\n    unsigned long long v13;  // rax\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // rax\n    unsigned long long v16;  // rbp\n    unsigned long long v17;  // rax\n    unsigned long long v18;  // rax\n    unsigned long long v19;  // rax\n    unsigned long long v20;  // rax\n    unsigned long long v21;  // rbx\n    unsigned long long v24;  // rax\n\n    v3 = v2;\n    v6 = (unsigned long long)(unsigned int)sub_409270();\n    v7 = sub_409150();\n    if (!(v7 == 0))\n    {\n        v8 = (unsigned long long)(unsigned int)sub_4081c0();\n        v10 = strlen(v6) + v0;\n        v10->field_0 = 5499825612410597167;\n        v10->field_8 = 21577;\n        v10->field_a = 0;\n        v0 = memcpy((unsigned long long)(unsigned int)sub_407ee0(), v6, v10);\n        v9 = (unsigned long long)(unsigned int)sub_4081c0();\n        free(v0);\n        if (v9 != 0)\n        {\n            v11 = strchr(v9, 0x3f);\n            if (v11 != 0)\n            {\n                free(v9);\n            }\n            else\n            {\n                if (v8 != 0)\n                {\n                    v12 = v9;\n                    v13 = strcmp(v8, v4);\n                    if (v13 == 0 && v8 != v9)\n                    {\n                        free(v9);\n                    }\n                }\n                else\n                {\n                    v12 = v9;\n                    v3 = 0;\n                    v8 = v9;\n                }\n            }\n        }\n        if (v9 == 0 || v11 != 0)\n        {\n            if (v8 != 0)\n            {\n                v14 = strcmp(v8, v4);\n                if (v14 != 0)\n                {\n                    v12 = 0;\n                    v9 = 0;\n                }\n            }\n            else\n            {\n                v8 = v4;\n                v12 = 0;\n                v3 = 0;\n                v9 = 0;\n            }\n        }\n        if (v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0))\n        {\n            v18 = sub_404820();\n            if (v18 == 0)\n            {\n                v3 = v8;\n                v16 = v8;\n            }\n            else\n            {\n                v16 = v8;\n            }\n        }\n    }\n    else if (v2 != 0)\n    {\n        v12 = v3;\n        v8 = v3;\n        v9 = 0;\n    }\n    else\n    {\n        v12 = 0;\n        v8 = v4;\n        v9 = 0;\n    }\n    if (v7 == 0 || v8 == 0)\n    {\n        v15 = strcmp(v8, v4);\n        if (v15 != 0)\n        {\n            v16 = 0;\n            v17 = sub_404820();\n        }\n    }\n    if ((v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0)\n    {\n        v19 = sub_404820();\n    }\n    if (((v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0 && v19 == 0 || (v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 == 0) && v12 != 0)\n    {\n        v20 = sub_404820();\n    }\n    if (((v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0 && v19 == 0 || (v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 == 0) && v12 != 0 && v20 == 0 || ((v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0 && v19 == 0 || (v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 == 0) && v12 == 0)\n    {\n        v21 = strlen(v8);\n        strlen(v8);\n        __sprintf_chk((unsigned int)v8, 0x1, 0xffffffff, 0x40f382, (unsigned int)v8, (unsigned int)v8);\n        if (v16 != 0)\n        {\n            free(v16);\n        }\n        v8 = (unsigned long long)(unsigned int)sub_407ee0();\n    }\n    if (v7 != 0 && v8 != 0 && v18 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || (((v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0 && v19 == 0 || (v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 == 0) && v12 != 0 && v20 != 0 || (v18 == 0 && v7 != 0 && v8 != 0 && (v11 == 0 || v14 != 0) && (v14 != 0 || v9 != 0) && (v9 == 0 || v11 != 0 || v13 != 0) || v15 != 0 && (v7 == 0 || v8 == 0) && v17 == 0) && v3 != 0 && v19 != 0) && v16 != 0)\n    {\n        free(v16);\n    }\n    if (...)\n    {\n        v8 = (unsigned long long)dcgettext(0x0, (unsigned int)v4, 0x5);\n    }\n    if (...)\n    {\n        free(v9);\n    }\n    v24 = v8;\n    return v24;\n}\n"
        },
        {
            "funcName": "sub_409210",
            "funcStartAddr": "0x409210",
            "funcEndAddr": "0x409266",
            "decompiledFuncCode": "int sub_409210()\n{\n    unsigned int v1;  // edi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // cc_dep1\n    unsigned long long v5;  // cc_dep2\n    unsigned long v6;  // d\n    char *v7;  // rdi\n    char *v8;  // rsi\n    unsigned long long v9;  // rcx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // cc_dep1\n    char *v12;  // rdi\n    unsigned long long v13;  // rcx\n    char v14;  // cc_dep1\n    char v15;  // cc_dep2\n\n    v10 = 1;\n    if (v3 != 0)\n    {\n        v9 = 2;\n        v7 = \"C\";\n        v3 = setlocale(v1, 0x0);\n        while (v9 != 0)\n        {\n            v9 -= 1;\n            v4 = *(v8);\n            v5 = *(v7);\n            v7 = &v7[v6];\n            v8 = &v8[v6];\n            break;\n        }\n        v10 = 0;\n        v11 = (v4 > v5) - 0 - (v4 < v5);\n        if ((char)v11 != 0)\n        {\n            v12 = \"POSIX\";\n            v13 = 6;\n            while (v13 != 0)\n            {\n                v13 -= 1;\n                v14 = *(v8);\n                v15 = *(v12);\n                v12 = &v12[v6];\n                v8 = &v8[v6];\n                break;\n            }\n            return 0;\n        }\n    }\n    if (v3 == 0 || (char)v11 == 0)\n    {\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_4080e0",
            "funcStartAddr": "0x4080e0",
            "funcEndAddr": "0x408108",
            "decompiledFuncCode": "int sub_4080e0()\n{\n    unsigned long v0;  // [bp-0x10]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_407ee0();\n}\n"
        },
        {
            "funcName": "sub_407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407ed4",
            "decompiledFuncCode": "extern unsigned int g_41017c;\nextern unsigned int g_4101a7;\nextern unsigned int g_4103d8;\n\nint sub_407e60()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x41017c, 0x5));\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x4101a7, 0x5));\n    dcgettext(0x0, 0x4103d8, 0x5);\n}\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401a80",
            "funcEndAddr": "0x401c2b",
            "decompiledFuncCode": "extern unsigned int g_40bdb0;\nextern unsigned int g_40c118;\nextern unsigned int g_4105e7;\nextern unsigned int g_6132bc;\nextern unsigned long long g_613300;\nextern unsigned long long g_613308;\nextern char g_613310;\n\nint main()\n{\n    unsigned long v0;  // [bp-0x48]\n    unsigned long long v1;  // [bp-0x40]\n    char v2;  // [bp-0x30]\n    unsigned long long v5;  // rax\n    unsigned long long v8;  // rax\n    unsigned int v9;  // edi\n    unsigned int v11;  // r13d\n    unsigned long long v15;  // r12\n    unsigned long long v19;  // r13\n\n    sub_404760();\n    setlocale(0x6, 0x4105e7);\n    bindtextdomain(0x40bdb0, 0x40c118);\n    textdomain(0x40bdb0);\n    if (g_613300 == 0)\n    {\n        v5 = sub_407ee0();\n        g_613300 = v5;\n        g_613308 = v5;\n    }\n    sub_40bc60();\n    sub_40bc60();\n    while (true)\n    {\n        v8 = sub_408f40();\n        if (v8 == -1)\n        {\n            v15 = (int)g_6132bc;\n            if (g_6132bc < v9)\n            {\n                v11 = 1;\n                do\n                {\n                    v11 = ((char)sub_404170() == 0? 0 : (unsigned int)r13<8>);\n                    v15 += 1;\n                }\n                while (v9 > (unsigned int)v15);\n            }\n            else\n            {\n                v11 = 1;\n                sub_406f70();\n                while (true)\n                {\n                    if (sub_406f80() + 1 == 0)\n                    {\n                        break;\n                    }\n                    v11 &= sub_404170();\n                }\n                free(*((long long *)&v2));\n            }\n        }\n        else if (v8 == -130)\n        {\n            sub_4042e0(); /* do not return */\n        }\n        else if (v8 == 128)\n        {\n            g_613310 = 1;\n        }\n        else if (v8 != -131)\n        {\n            sub_4042e0(); /* do not return */\n        }\n        else\n        {\n            sub_405150();\n            v1 = 0;\n            v0 = (unsigned int)sub_405150();\n            sub_407da0();\n            exit(0x0); /* do not return */\n        }\n    }\n    v19 = v11 ^ 1;\n    return v19;\n}\n"
        },
        {
            "funcName": "sub_406d1f",
            "funcStartAddr": "0x406d1f",
            "funcEndAddr": "0x406d90",
            "decompiledFuncCode": "extern uint128_t g_613440;\nextern uint128_t g_613450;\nextern uint128_t g_613460;\nextern unsigned long long g_613470;\n\nint sub_406d1f()\n{\n    void v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v5;  // rdx\n\n    v3 = g_613470;\n    *((uint128_t *)&v0) = g_613440;\n    *((uint128_t *)&v1) = g_613450;\n    *((uint128_t *)&v2) = g_613460;\n    *((unsigned int *)&((char *)stack_base)[4 * v5 % 32 + -64]) = (unsigned int)((unsigned long long)(!((unsigned int)((unsigned long long)(unsigned int)*((int *)&((char *)stack_base)[4 * v5 % 32 + -64]) >> ((char)((unsigned int)v5 & 31) & 31))) & 1) << ((char)((unsigned int)v5 & 31) & 31)) ^ *((int *)&((char *)stack_base)[4 * v5 % 32 + -64]);\n    return sub_406700();\n}\n"
        },
        {
            "funcName": "sub_407fb0",
            "funcStartAddr": "0x407fb0",
            "funcEndAddr": "0x408028",
            "decompiledFuncCode": "int sub_407fb0() { crash_skku;\n}"
        },
        {
            "funcName": "sub_409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x4091a4",
            "decompiledFuncCode": "int sub_409150()\n{\n    unsigned long long v1;  // rax\n    unsigned long long v2;  // rdi\n    unsigned long long v3;  // rsi\n    unsigned long|unsigned int v4;  // r8d\n    unsigned long long v5;  // rax\n    unsigned long long v6;  // r9\n    unsigned long long v7;  // rcx\n    unsigned long long v8;  // rdx\n    unsigned int v9;  // r9d\n\n    v1 = 0;\n    if (v2 != v3)\n    {\n        v8 = 0;\n        do\n        {\n            v4 = (char)*((char *)(v2 + v8));\n            v5 = (char)*((char *)(v2 + v8));\n            if ((unsigned int)((unsigned long long)(char)*((char *)(v2 + v8)) - 65) <= 25)\n            {\n                v4 = (unsigned long long)v4 + 32;\n                v5 = (unsigned int)v5 + 32;\n            }\n            v6 = (char)*((char *)(v3 + v8));\n            v7 = (char)*((char *)(v3 + v8));\n            if ((unsigned int)((unsigned long long)(char)*((char *)(v3 + v8)) - 65) <= 25)\n            {\n                v6 = (unsigned int)v6 + 32;\n                v7 = (unsigned int)v7 + 32;\n            }\n            if (v5 == 0)\n            {\n                break;\n            }\n            v8 += 1;\n        }\n        while (v5 == v7);\n        v9 = v6;\n        v1 = v4 - v9;\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404754",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[20];\n    char field_14;\n} struct_0;\n\nint sub_404710()\n{\n    struct_0 *v1;  // rsi\n    char *v2;  // rcx\n    unsigned long long v5;  // rdi\n\n    v2 = &v1->field_14;\n    v1->field_14 = 0;\n    while (true)\n    {\n        v2 = &v2[-1];\n        *(v2) = (unsigned int)(rdi<8> - ((unsigned long long)(rdi<8> * 14757395258967641293 >> 64) >> 3) * 10) + 48;\n        if (rdi<8> <= 9)\n        {\n            break;\n        }\n        v5 = (unsigned long long)(rdi<8> * 14757395258967641293 >> 64) >> 3;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_4068e0",
            "funcStartAddr": "0x4068e0",
            "funcEndAddr": "0x4068ef",
            "decompiledFuncCode": "extern int512_t g_613440;\n\nint sub_4068e0()\n{\n    unsigned long v1;  // rdi\n\n    return *((int *)(v1 == 0? &g_613440 : v1));\n}\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406bc1",
            "decompiledFuncCode": "int sub_406bb0()\n{\n}\n"
        },
        {
            "funcName": "sub_401e60",
            "funcStartAddr": "0x401e60",
            "funcEndAddr": "0x401ec6",
            "decompiledFuncCode": "int sub_401e60()\n{\n    unsigned long long v1;  // rdx\n    unsigned long long v2;  // r9\n    unsigned long v3;  // rcx\n    unsigned long long v4;  // r8\n    unsigned long|char v5;  // rsi\n    unsigned long long v6;  // rdi\n\n    v2 = v1;\n    if ((v5 & 1) != 0)\n    {\n        v4 = v6;\n    }\n    while (true)\n    {\n        v6 = (v6 * v6 >> 64 < (v3 * v6 * v6) * v2 >> 64? (v6 * v6 >> 64) - ((v3 * v6 * v6) * v2 >> 64) + v2 : (unsigned long long)((v6 * v6 >> 64) - ((v3 * v6 * v6) * v2 >> 64)));\n        v5 = v5 % 2;\n        if ((v5 & 1) != 0)\n        {\n            v4 = (v4 * v6 >> 64 < (v3 * v4 * v6) * v2 >> 64? (v4 * v6 >> 64) - ((v3 * v4 * v6) * v2 >> 64) + v2 : (unsigned long long)((v4 * v6 >> 64) - ((v3 * v4 * v6) * v2 >> 64)));\n        }\n        else\n        {\n            if (v5 == 0)\n            {\n                break;\n            }\n        }\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_406f00",
            "funcStartAddr": "0x406f00",
            "funcEndAddr": "0x406f0a",
            "decompiledFuncCode": "int sub_406f00()\n{\n}\n"
        },
        {
            "funcName": "sub_407d20",
            "funcStartAddr": "0x407d20",
            "funcEndAddr": "0x407d40",
            "decompiledFuncCode": "int sub_407d20()\n{\n    unsigned long long v1;  // r9\n    unsigned long long v2[2];  // r8\n\n    v1 = 0;\n    if (*(v2) != 0)\n    {\n        do\n        {\n            v1 += 1;\n        }\n        while (v2[v1] != 0);\n    }\n}\n"
        },
        {
            "funcName": "sub_406f10",
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x406f22",
            "decompiledFuncCode": "int sub_406f10()\n{\n}\n"
        },
        {
            "funcName": "sub_406a2b",
            "funcStartAddr": "0x406a2b",
            "funcEndAddr": "0x406af1",
            "decompiledFuncCode": "int sub_406a2b()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long v1;  // [bp-0x50]\n    unsigned long v2;  // [bp-0x48]\n    unsigned int v3;  // [bp-0x2c]\n    unsigned long v4;  // [bp-0x28]\n    unsigned long v5;  // [bp-0x20]\n    unsigned long v6;  // [bp-0x18]\n    unsigned long v7;  // [bp-0x10]\n    unsigned long long v8;  // [bp+0x0]\n    unsigned long long v10;  // [bp+0x10]\n    unsigned long long v11;  // [bp+0x18]\n    unsigned long long v12;  // [bp+0x20]\n    unsigned long long v13;  // [bp+0x28]\n    unsigned long v14;  // rcx\n    unsigned long v15;  // rax\n    unsigned long long v17[7];  // rbx\n    unsigned int *v18;  // r13\n    unsigned long long *v20;  // r12\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // r12\n    unsigned long long v23;  // r13\n    unsigned long long v24;  // r14\n    unsigned long long v25;  // r15\n\n    v17 = (v14 == 0? v15 : rbx<8>);\n    v18 = __errno_location();\n    v3 = *(v18);\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = &v17[1];\n    v6 = &v17[1];\n    v7 = (unsigned int)sub_4054d0();\n    v5 = v7 + 1;\n    v4 = (unsigned int)sub_407ee0();\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = v6;\n    sub_4054d0();\n    *(v18) = v3;\n    if (v20 != 0)\n    {\n        *(v20) = v7;\n    }\n    v21 = v8;\n    v22 = v10;\n    v23 = v11;\n    v24 = v12;\n    v25 = v13;\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_402340",
            "funcStartAddr": "0x402340",
            "funcEndAddr": "0x4023bb",
            "decompiledFuncCode": "extern unsigned long long g_613308;\n\nint sub_402340()\n{\n    char v0;  // [bp-0x14]\n    void *v2;  // rax\n    unsigned long long v3;  // r8\n    unsigned long v4;  // rbx\n    unsigned long v5;  // rsi\n    unsigned long long v6;  // r8\n    char *v7;  // rdx\n    unsigned long long v8;  // rcx\n    void *v9;  // r8\n    unsigned long long v10;  // rax\n\n    v2 = sub_404710();\n    v3 = v2 - (stack_base + -56);\n    v4 = 20 - (v2 - (stack_base + -56));\n    if (20 - (v2 - (stack_base + -56)) < v5)\n    {\n        v6 = &v0;\n        v7 = g_613308;\n        v8 = v5 + g_613308 + v6;\n        do\n        {\n            *(v7) = 48;\n            v7 = &v7[1];\n        }\n        while (v7 != v8);\n        v9 = v6 + v5 + g_613308;\n    }\n    else\n    {\n        v9 = g_613308;\n    }\n    v10 = memcpy(v9, v2, v4);\n    g_613308 = v10 + v4;\n    return v10;\n}\n"
        },
        {
            "funcName": "sub_40b2f0",
            "funcStartAddr": "0x40b2f0",
            "funcEndAddr": "0x40b524",
            "decompiledFuncCode": "int sub_40b2f0()\n{\n    unsigned int v0;  // [bp-0x1078]\n    unsigned long v1;  // [bp-0x1060]\n    unsigned long v2;  // [bp-0x1058]\n    unsigned long v3;  // [bp-0x1050]\n    unsigned long|unsigned long long v4;  // [bp-0x1048]\n    unsigned long|unsigned long long v5;  // [bp-0x1040]\n    unsigned long v6;  // [bp-0x1038]\n    unsigned int v8;  // [bp+0x100008]\n    unsigned long long v9;  // rsi\n    unsigned long long v10;  // r13\n    unsigned int v11;  // edx\n    unsigned int v12;  // ebx\n    unsigned long v13;  // rdi\n    unsigned long long v14;  // rax\n    unsigned int v15;  // eax\n    unsigned long long v16;  // r14\n    unsigned long long v17;  // rax\n    unsigned long long v18;  // rbx\n    unsigned long long *v20;  // rcx\n    void *v21;  // r14\n    unsigned long long *v22;  // r8\n    unsigned long long v23;  // rax\n    unsigned int *v24;  // rax\n    unsigned long long v25;  // rax\n    unsigned long long v26;  // rax\n\n    v10 = v9;\n    v12 = v11;\n    v1 = v13;\n    iconv(v11, 0x0, 0x0, 0x0, 0x0);\n    v2 = v13;\n    v16 = 0;\n    v3 = v10;\n    if (v10 != 0)\n    {\n        while (true)\n        {\n            v4 = stack_base + -4152;\n            v5 = 0x1000;\n            v14 = iconv(v12, (unsigned int)&v2, (unsigned int)&v3, (unsigned int)&v4, (unsigned int)&v5);\n            if (v14 == -1)\n            {\n                v15 = *(__errno_location());\n                if (v15 != 7)\n                {\n                    break;\n                }\n            }\n            if (v15 == 7 || v14 != -1)\n            {\n                v16 += v4 - (stack_base + -4152);\n                if (v3 == 0)\n                {\n                    break;\n                }\n            }\n        }\n        if (true)\n        {\n            v4 = stack_base + -4152;\n            v5 = 0x1000;\n            v17 = iconv(v12, 0x0, 0x0, (unsigned int)&v4, (unsigned int)&v5);\n        }\n        else if (v14 == -1 && v15 != 7)\n        {\n            v18 = -18446744069414584321;\n        }\n    }\n    if (v10 == 0 || v17 != -1)\n    {\n        v4 = stack_base + -4152;\n        v5 = 0x1000;\n        v17 = iconv(v12, 0x0, 0x0, (unsigned int)&v4, (unsigned int)&v5);\n    }\n    if (v17 != -1)\n    {\n        *((void **)&v0) = v4 - (stack_base + -4152) + v16;\n        if (v4 - (stack_base + -4152) + v16 != 0)\n        {\n            v21 = *(v20);\n            if (*(v22) < *((long long *)&v0) || *(v20) == 0)\n            {\n                v21 = malloc(*((long long *)&v0));\n                if (v21 == 0)\n                {\n                    *(__errno_location()) = 12;\n                }\n            }\n            if ((*(v22) >= *((long long *)&v0) || v21 != 0) && (*(v20) != 0 || v21 != 0))\n            {\n                iconv(v12, 0x0, 0x0, 0x0, 0x0);\n                v4 = v10;\n                v5 = v21;\n                v3 = v1;\n                v6 = *((long long *)&v0);\n                while (true)\n                {\n                    if (v10 != 0)\n                    {\n                        v23 = iconv(v12, (unsigned int)&v3, (unsigned int)&v4, (unsigned int)&v5, (unsigned int)(stack_base + -4152));\n                        if (v23 != -1)\n                        {\n                            v10 = v4;\n                        }\n                        else\n                        {\n                            v24 = __errno_location();\n                        }\n                    }\n                    if (v10 == 0 || *(v24) == 22 && v23 == -1)\n                    {\n                        v25 = iconv(v12, 0x0, 0x0, (unsigned int)&v5, (unsigned int)(stack_base + -4152));\n                    }\n                    if (v10 == 0 || v23 == -1)\n                    {\n                        if (v25 != -1 && (v10 == 0 || *(v24) == 22))\n                        {\n                            if (v6 != 0)\n                            {\n                                abort(); /* do not return */\n                            }\n                            v18 = 0;\n                            *(v20) = v21;\n                            *(v22) = *((long long *)&v0);\n                        }\n                        if ((v25 == -1 || v10 != 0) && (v25 == -1 || *(v24) != 22))\n                        {\n                            v18 = -18446744069414584321;\n                            if (*(v20) == v21)\n                            {\n                                break;\n                            }\n                            free(v21);\n                            *(__errno_location()) = v8;\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            v18 = 0;\n            *(v22) = 0;\n        }\n    }\n    if (v21 == 0 && v17 != -1 && v4 - (stack_base + -4152) + v16 != 0 && (*(v22) < *((long long *)&v0) || *(v20) == 0) || (v10 == 0 || v17 != -1) && v17 == -1 || v10 != 0 && v17 == -1)\n    {\n        v18 = -18446744069414584321;\n    }\n    v26 = v18;\n    return v26;\n}\n"
        },
        {
            "funcName": "sub_407f40",
            "funcStartAddr": "0x407f40",
            "funcEndAddr": "0x407f70",
            "decompiledFuncCode": "int sub_407f40()\n{\n    unsigned int v1;  // rsi\n    void *v2;  // rdi\n    unsigned long long v3;  // rax\n\n    if (v1 == 0 && v2 != 0)\n    {\n        free(v2);\n        return 0;\n    }\n    if (v2 == 0 || v1 != 0)\n    {\n        v3 = realloc(v2, v1);\n        if (v3 == 0 && v1 != 0)\n        {\n            sub_408130(); /* do not return */\n        }\n        if (v1 == 0 || v3 != 0)\n        {\n            return v3;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_407100",
            "funcStartAddr": "0x407100",
            "funcEndAddr": "0x4072c7",
            "decompiledFuncCode": "int sub_407100() { crash_skku;\n}"
        },
        {
            "funcName": "sub_407380",
            "funcStartAddr": "0x407380",
            "funcEndAddr": "0x40739d",
            "decompiledFuncCode": "int sub_407380()\n{\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c8d",
            "decompiledFuncCode": "int sub_406c20()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_406700();\n}\n"
        },
        {
            "funcName": "sub_406dd0",
            "funcStartAddr": "0x406dd0",
            "funcEndAddr": "0x406e43",
            "decompiledFuncCode": "int sub_406dd0()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v2 = 0x400000000000000;\n    v1 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_406700();\n}\n"
        },
        {
            "funcName": "sub_401c6b",
            "funcStartAddr": "0x401c6b",
            "funcEndAddr": "0x401c8a",
            "decompiledFuncCode": "extern unsigned long long program_invocation_short_name;\n\nint sub_401c6b()\n{\n    unsigned long long v1;  // rax\n\n    v1 = &program_invocation_short_name;\n    if (false)\n    {\n        v1 = 0;\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_4045d0",
            "funcStartAddr": "0x4045d0",
            "funcEndAddr": "0x4045d8",
            "decompiledFuncCode": "extern unsigned long long g_613320;\n\nint sub_4045d0()\n{\n    unsigned long long v1;  // rdi\n    unsigned long v2;  // rax\n\n    g_613320 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_406f30",
            "funcStartAddr": "0x406f30",
            "funcEndAddr": "0x406f41",
            "decompiledFuncCode": "int sub_406f30()\n{\n}\n"
        },
        {
            "funcName": "sub_406700",
            "funcStartAddr": "0x406700",
            "funcEndAddr": "0x4068a0",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[4];\n    unsigned int field_4;\n    char padding_8[32];\n    unsigned long long field_28;\n    unsigned long long field_30;\n} struct_0;\n\nextern uint128_t *g_613298;\nextern uint128_t g_6132a0;\nextern unsigned int g_6132b0;\nextern int512_t g_613340;\n\nint sub_406700()\n{\n    unsigned long v0;  // [bp-0x78]\n    unsigned long v1;  // [bp-0x70]\n    unsigned long v2;  // [bp-0x68]\n    unsigned long v3;  // [bp-0x50]\n    unsigned long|unsigned long long v4;  // [bp-0x48]\n    unsigned int v5;  // [bp-0x40]\n    unsigned int v6;  // [bp-0x3c]\n    unsigned long long v8;  // rcx\n    struct_0 *v9;  // rbp\n    unsigned long v10;  // rsi\n    unsigned int *v11;  // r13\n    unsigned long v13;  // rdi\n    uint128_t *v15;  // rax\n    unsigned long long v16;  // rax\n    uint128_t *v17;  // rbx\n    unsigned long long v19[2];  // rbx\n    void *v20;  // r12\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rsi\n    unsigned long long v24;  // rax\n\n    v9 = v8;\n    v3 = v10;\n    v17 = g_613298;\n    v11 = __errno_location();\n    v5 = *(v11);\n    if ((unsigned int)v13 < 0)\n    {\n        abort(); /* do not return */\n    }\n    if (g_6132b0 <= (unsigned int)v13)\n    {\n        if ((unsigned int)v13 != 2147483647)\n        {\n            if (g_613298 != 6369952)\n            {\n                v16 = sub_407f40();\n                g_613298 = v16;\n                v17 = v16;\n            }\n            else\n            {\n                v15 = sub_407f40();\n                v17 = v15;\n                g_613298 = v15;\n                *(v15) = g_6132a0;\n            }\n            memset(&v17[(long long)(int)g_6132b0], 0x0, (int)((unsigned int)v13 + 1 - g_6132b0) * 16);\n            g_6132b0 = (unsigned int)v13 + 1;\n        }\n        else\n        {\n            sub_408130(); /* do not return */\n        }\n    }\n    if (g_6132b0 > (unsigned int)v13 || (unsigned int)v13 != 2147483647)\n    {\n        v19 = &v17[v13];\n        v20 = v19[1];\n        v6 = v9->field_4 | 1;\n        v2 = v9->field_30;\n        v1 = v9->field_28;\n        v0 = &v9->padding_8;\n        *((unsigned long long [2])&v4) = *(v19);\n        v21 = sub_4054d0();\n        if (v4 <= v21)\n        {\n            v22 = v21 + 1;\n            v19[0] = v21 + 1;\n            if (v20 != 6370112)\n            {\n                v4 = v22;\n                free(v20);\n                v22 = v4;\n            }\n            v4 = v22;\n            v19[1] = v20;\n            v20 = (unsigned long long)(unsigned int)sub_407ee0();\n            v2 = v9->field_30;\n            v1 = v9->field_28;\n            v0 = v8 + 8;\n            sub_4054d0();\n        }\n        *(v11) = v5;\n        v24 = v20;\n        return v24;\n    }\n}\n"
        },
        {
            "funcName": "sub_409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409123",
            "decompiledFuncCode": "int sub_409040()\n{\n    unsigned long long v1;  // rdx\n    void *v2;  // dil\n    unsigned long|char v3;  // rsi\n    unsigned long long v4;  // r9\n    void *v5;  // rax\n    void *v6;  // rcx\n    unsigned long long v7;  // rdi\n\n    if (v1 != 0)\n    {\n        if ((v2 & 7) != 0 && v3 != *((char *)v2))\n        {\n            do\n            {\n                v2 += 1;\n                v1 -= 1;\n            }\n            while ((v2 & 7) != 0 && v1 != 1 && *((char *)v2) != (char)v3);\n            if (true)\n            {\n                return 0;\n            }\n            else if (v1 != 1)\n            {\n                v4 = (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000 | ((int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000) * 0x100000000;\n            }\n            else if ((v2 & 7) != 0 && v1 != 1)\n            {\n                v5 = v2;\n            }\n        }\n        if ((v2 & 7) == 0 || v3 != *((char *)v2))\n        {\n            v4 = (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000 | ((int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000) * 0x100000000;\n            if (v1 > 7 && (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0)\n            {\n                while (true)\n                {\n                    v1 -= 8;\n                    v2 += 8;\n                    if (v1 > 7)\n                    {\n                        if ((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) + -72340172838076673) != 0)\n                        {\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        break;\n                    }\n                }\n                if (v1 <= 7)\n                {\n                    return 0;\n                }\n            }\n        }\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 != *((char *)v2))\n    {\n        v6 = v2 + 1;\n        v7 = v2 + v1;\n        while (true)\n        {\n            v5 = v6;\n            if (v6 != v7)\n            {\n                v6 += 1;\n                if ((char)v6[-1] == (char)v3)\n                {\n                    break;\n                }\n            }\n        }\n        if (v6 != v7)\n        {\n            return v5;\n        }\n        else if (v6 == v7)\n        {\n            return 0;\n        }\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 == *((char *)v2) || v1 != 0 && v3 != *((char *)v2) && (v2 & 7) != 0 || v3 == *((char *)v2) && v1 != 0 && (v2 & 7) != 0)\n    {\n        v5 = v2;\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 != *((char *)v2) || (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || v1 != 0 && v3 != *((char *)v2) && (v2 & 7) != 0 || v1 == 0)\n    {\n        return 0;\n    }\n    if (v1 != 0 || v3 == *((char *)v2))\n    {\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_4042e0",
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x4045cd",
            "decompiledFuncCode": "extern unsigned int g_40bd95;\nextern unsigned int g_40bf10;\nextern unsigned int g_40bf38;\nextern unsigned int g_40bf60;\nextern unsigned int g_40bfe8;\nextern unsigned int g_40c018;\nextern unsigned int g_40c078;\nextern unsigned int g_40c0c0;\nextern unsigned int g_40c0e0;\nextern unsigned long long g_613328;\nextern unsigned long long stderr;\nextern unsigned long long stdout;\n\nint sub_4042e0()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    unsigned long v10;  // [bp-0x38]\n    unsigned long v11;  // [bp-0x30]\n    unsigned long long v12;  // [bp-0x28]\n    unsigned long long v13;  // [bp-0x20]\n    unsigned long v14;  // [bp-0x18]\n    unsigned long v15;  // [bp-0x8]\n    unsigned long v17;  // r12\n    unsigned long v18;  // rbx\n    unsigned int v19;  // edi\n    unsigned int v22;  // r8d\n    unsigned long long *v26;  // rax\n    char *v27;  // rdi\n    char *v28;  // rsi\n    unsigned long long v29;  // rcx\n    unsigned long long v30;  // cc_dep1\n    unsigned long long v31;  // cc_dep2\n    unsigned long v32;  // d\n    char *v36;  // rax\n    char *v37;  // rax\n    unsigned long long v38;  // rax\n\n    v15 = v17;\n    v14 = v18;\n    if (v19 != 0)\n    {\n        __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x40bf10, 0x5), g_613328, v22);\n    }\n    else\n    {\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40bf38, 0x5));\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40bf60, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40bfe8, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40c018, 0x5), stdout);\n        v0 = \"[\";\n        v26 = &v0;\n        v1 = \"test invocation\";\n        v2 = \"coreutils\";\n        v3 = \"Multi-call\";\n        v4 = \"sha224sum\";\n        v5 = \"sha2 utilities\";\n        v6 = \"sha256sum\";\n        v7 = \"sha2 utilities\";\n        v8 = \"sha384sum\";\n        v9 = \"sha2 utilities\";\n        v10 = \"sha512sum\";\n        v11 = \"sha2 utilities\";\n        v12 = 0;\n        v13 = 0;\n        while (true)\n        {\n            v26 = &v2;\n            v27 = v2;\n            if (v2 == 0)\n            {\n                break;\n            }\n            v28 = \"factor\";\n            v29 = 7;\n            if ((v30 > v31) - 0 - (v30 < v31) == 0)\n            {\n                break;\n            }\n            while (v29 != 0)\n            {\n                v29 -= 1;\n                v30 = *(v28);\n                v31 = *(v27);\n                v27 = &v27[v32];\n                v28 = &v28[v32];\n                break;\n            }\n        }\n        if (v3 != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40bd95, 0x5));\n            v37 = setlocale(0x5, 0x0);\n        }\n        else\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40bd95, 0x5));\n            v36 = setlocale(0x5, 0x0);\n            if (v36 != 0)\n            {\n                v38 = strncmp(v36, \"en_\", 0x3);\n            }\n            if (v36 == 0 || v38 == 0)\n            {\n                __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c0c0, 0x5));\n            }\n        }\n        if ((v3 == 0 || strncmp(v37, \"en_\", 0x3) != 0) && (v3 == 0 || v37 != 0) && (v3 != 0 || v36 != 0) && (v3 != 0 || v38 != 0))\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c078, 0x5));\n        }\n        if (v3 != 0 || v36 != 0 && v38 != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c0c0, 0x5));\n        }\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c0e0, 0x5));\n    }\n    exit(v19); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_4050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x405141",
            "decompiledFuncCode": "extern unsigned int g_40f382;\n\nint sub_4050c0()\n{\n    char *v1;  // rdi\n    unsigned long v3;  // rax\n    char *v4;  // rax\n    unsigned long long v5;  // rax\n    unsigned long long v6;  // r12\n    unsigned long v8;  // r8\n\n    if (v1 != v3)\n    {\n        v4 = sub_404820();\n        if (v4 == 0)\n        {\n            v6 = strlen(v3);\n            strlen(v1);\n            v8 = (unsigned int)sub_407ee0();\n            __sprintf_chk(v8, 0x1, 0xffffffff, 0x40f382, v8, (unsigned int)v1);\n            return v8;\n        }\n    }\n    if (v1 == v3 || v4 != 0)\n    {\n        v3 = dcgettext(0x0, (unsigned int)v1, 0x5);\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_404690",
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x4046fd",
            "decompiledFuncCode": "int sub_404690()\n{\n    unsigned long long v1;  // rdx\n    unsigned long long v2;  // r12\n    unsigned long long v3;  // rsi\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rbx\n    unsigned long long v6;  // rbp\n    unsigned long long v7;  // rax\n    unsigned long long v8;  // rax\n\n    if (v1 != 0)\n    {\n        v6 = v3;\n        v5 = v1;\n        v2 = 0;\n        while (true)\n        {\n            v4 = sub_4072e0();\n            if (v4 == -1)\n            {\n                break;\n            }\n            if (v4 != 0)\n            {\n                v2 += v4;\n                v6 += v4;\n                v5 -= v4;\n                if (v5 == v4)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                *(__errno_location()) = 28;\n                v8 = v2;\n                return v8;\n            }\n        }\n    }\n    else\n    {\n        v2 = 0;\n    }\n    v7 = v2;\n    return v7;\n}\n"
        },
        {
            "funcName": "sub_40b800",
            "funcStartAddr": "0x40b800",
            "funcEndAddr": "0x40b878",
            "decompiledFuncCode": "int sub_40b800()\n{\n    unsigned int v0;  // [bp+0x0]\n    void *v2;  // rdi\n    unsigned long long v4;  // rax\n    unsigned long long v8;  // rax\n\n    if (fileno(v2) >= 0)\n    {\n        v4 = __freading();\n        if ((v4 == 0 || (unsigned long long)lseek(fileno(v2), 0x0, 0x1) != -1) && sub_40b880() != 0)\n        {\n            v8 = fclose(v2);\n            if (v0 != 0)\n            {\n                *(__errno_location()) = v0;\n                v8 = -18446744069414584321;\n            }\n            return v8;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x40a3bd",
            "decompiledFuncCode": "int sub_409a40() { crash_skku;\n}"
        },
        {
            "funcName": "sub_402640",
            "funcStartAddr": "0x402640",
            "funcEndAddr": "0x4026e4",
            "decompiledFuncCode": "int sub_402640() { crash_skku;\n}"
        },
        {
            "funcName": "sub_408f20",
            "funcStartAddr": "0x408f20",
            "funcEndAddr": "0x408f38",
            "decompiledFuncCode": "int sub_408f20()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 1;\n    return sub_408ec0();\n}\n"
        },
        {
            "funcName": "sub_408f60",
            "funcStartAddr": "0x408f60",
            "funcEndAddr": "0x408f75",
            "decompiledFuncCode": "int sub_408f60()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_4088f0();\n}\n"
        },
        {
            "funcName": "sub_40a420",
            "funcStartAddr": "0x40a420",
            "funcEndAddr": "0x40b269",
            "decompiledFuncCode": "extern unsigned int g_410680[4];\n\nint sub_40a420()\n{\n    char *|unsigned long long|char [2] v0;  // [bp-0x188]\n    unsigned long long v1;  // [bp-0x180]\n    char v2;  // [bp-0x178]\n    unsigned long long v3;  // [bp-0x174]\n    char v4;  // [bp-0x16c]\n    char *v5;  // [bp-0x168]\n    unsigned long|unsigned long long v6;  // [bp-0x160]\n    char v7;  // [bp-0x158]\n    unsigned int v8;  // [bp-0x154]\n    char v9;  // [bp-0x138]\n    unsigned long long v10;  // [bp-0x134]\n    char v11;  // [bp-0x12c]\n    char *v12;  // [bp-0x128]\n    unsigned long|unsigned long long v13;  // [bp-0x120]\n    char v14;  // [bp-0x118]\n    unsigned int v15;  // [bp-0x114]\n    char v16;  // [bp-0xf8]\n    unsigned long v17;  // [bp-0xf4]\n    char v18;  // [bp-0xec]\n    unsigned long|char [2] v19;  // [bp-0xe8]\n    unsigned long|unsigned long long v20;  // [bp-0xe0]\n    char v21;  // [bp-0xd8]\n    unsigned int v22;  // [bp-0xd4]\n    void v23;  // [bp-0xc8]\n    uint128_t|char v24;  // [bp-0xb8]\n    char v25;  // [bp-0xac]\n    unsigned long|void|char *|uint128_t v26;  // [bp-0xa8]\n    unsigned long|unsigned long long v27;  // [bp-0xa0]\n    void|uint128_t|char v28;  // [bp-0x98]\n    unsigned int v29;  // [bp-0x94]\n    void v30;  // [bp-0x88]\n    char v31;  // [bp-0x78]\n    unsigned long long v32;  // [bp-0x74]\n    char v33;  // [bp-0x6c]\n    char *v34;  // [bp-0x68]\n    unsigned long|unsigned long long v35;  // [bp-0x60]\n    char v36;  // [bp-0x58]\n    unsigned int v37;  // [bp-0x54]\n    void *v39;  // rdi\n    char v40[2];  // rbp\n    unsigned long long v41;  // rax\n    char *v42;  // r9\n    unsigned int v45;  // eax\n    char v46;  // al\n    unsigned long long v48;  // rax\n    char *v49;  // rsi\n    unsigned long long|char [2] v50;  // r9\n    unsigned long long v51;  // r12\n    unsigned long long v52;  // rdx\n    unsigned long long v53;  // r8\n    unsigned long long v54;  // rax\n    unsigned long long v55;  // rbx\n    unsigned long long v56;  // r14\n    unsigned long long v57;  // rcx\n    unsigned long long v58;  // rsi\n    unsigned long long v59;  // rdi\n    unsigned long long v60;  // rcx\n    unsigned long long v61;  // rsi\n    unsigned long long v62;  // rbp\n    char v63[2];  // rax\n    unsigned long long v65;  // rcx\n    char v68[2];  // rdx\n    unsigned int v69;  // eax\n    char v70;  // al\n    unsigned long long v71;  // rax\n    unsigned long|unsigned long long v73;  // rax\n    unsigned long long v74;  // al\n    unsigned long|unsigned long long v75;  // rbx\n    unsigned long long v76;  // r14\n    unsigned long long v77;  // rax\n    char v78;  // al\n    unsigned long long v79;  // rax\n    unsigned long long v80;  // r14\n    char *v81;  // rdx\n    unsigned int v82;  // eax\n    char v83;  // al\n    unsigned long long v84;  // rax\n    char *v87;  // rdx\n    unsigned int v88;  // eax\n    char v89;  // al\n    unsigned long long v90;  // rax\n    unsigned long long v93;  // rdx\n    unsigned long v94;  // r15\n    unsigned long long v95;  // rax\n    unsigned int v96;  // eax\n    char v97;  // al\n    unsigned long long v98;  // rax\n    unsigned long long v100;  // rax\n    char *v101;  // rdx\n    unsigned int v102;  // eax\n    char v103;  // al\n    char *v107;  // rdx\n    unsigned int v108;  // eax\n    char v109;  // al\n    unsigned long long v110;  // rax\n    unsigned int v111;  // rax\n    char v114;  // al\n    unsigned long long v115;  // rdx\n    unsigned long long v116;  // r12\n    unsigned long long v118;  // rax\n\n    v40 = v39;\n    v41 = __ctype_get_mb_cur_max();\n    if (v41 <= 1)\n    {\n        v118 = v39;\n        if (*(v42) != 0)\n        {\n            v65 = v40[0];\n            if (v40[0] != 0)\n            {\n                v42 = v49;\n                v51 = 0;\n                v52 = 0;\n                v53 = 0;\n                v54 = 1;\n                while (true)\n                {\n                    v51 += 1;\n                    v55 = v52 + 1;\n                    v56 = &v40[1];\n                    if (*(v42) != v65)\n                    {\n                        if (v40[1] == 0)\n                        {\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        v57 = v42[1];\n                        v58 = v40[0];\n                        if (v42[1] == 0 || v40[0] == 0)\n                        {\n                            break;\n                        }\n                        v55 = v52 + 2;\n                        if (v57 == v58)\n                        {\n                            v59 = &v42[-1 * v52];\n                            v52 = &v40[-1 * v52];\n                            while (true)\n                            {\n                                v60 = (char)*((char *)(v59 + v55));\n                                if (*((char *)(v59 + v55)) != 0)\n                                {\n                                    v61 = (char)*((char *)(v52 + v55));\n                                    v55 += 1;\n                                    if (*((char *)(v52 + v55)) == 0 || v60 != v61)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                            if (*((char *)(v52 + v55)) != 0 && *((char *)(v59 + v55)) != 0)\n                            {\n                                v62 = v52;\n                            }\n                            else if (*((char *)(v59 + v55)) != 0)\n                            {\n                                v118 = 0;\n                            }\n                            else if (*((char *)(v59 + v55)) == 0)\n                            {\n                                v118 = v40;\n                            }\n                        }\n                    }\n                    v62 = v52;\n                    if (((char)!(r12<8> <= 9) & v54) != 0)\n                    {\n                        if (v55 >= v51 + (v51 << 2))\n                        {\n                            if (v50 != 0)\n                            {\n                                *((char *[2])&v0[0]) = v50;\n                                v63 = strnlen(v50, v55 - v53);\n                                v53 = v55;\n                                v50 = v0 + v63;\n                            }\n                            if (v50 == 0 || *((char *)(v0 + v63)) == 0)\n                            {\n                                v0 = v53;\n                                strlen(v42);\n                                v54 = sub_409890();\n                                v53 = v0;\n                                if (v54 != 0)\n                                {\n                                    break;\n                                }\n                                v50 = 0;\n                            }\n                        }\n                        if (v55 < v51 + (v51 << 2) || v50 != 0 && *((char *)(v0 + v63)) != 0)\n                        {\n                            v54 = v62;\n                        }\n                    }\n                    v65 = (char)*((char *)v54);\n                    v40 = v56;\n                    v52 = v55;\n                }\n                if (true)\n                {\n                    v118 = v40;\n                }\n                else if (v55 >= v51 + (v51 << 2) && ((char)!(r12<8> <= 9) & v54) != 0 && (v50 == 0 || *((char *)(v0 + v63)) == 0))\n                {\n                    v118 = *((long long *)&v31);\n                }\n                else\n                {\n                    v118 = 0;\n                }\n            }\n        }\n    }\n    else\n    {\n        v5 = v42;\n        v2 = 0;\n        v45 = *(v42);\n        v4 = 0;\n        v3 = 0;\n        v46 = (unsigned long long)*(v42) >> 5;\n        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0)\n        {\n            v6 = 1;\n            v8 = *(v49);\n            v7 = 1;\n            v4 = 1;\n        }\n        else\n        {\n            v48 = mbsinit((unsigned int)&v3);\n            if (v48 != 0)\n            {\n                v2 = 1;\n                __ctype_get_mb_cur_max();\n                sub_407340();\n                v6 = (unsigned int)sub_408fc0();\n                if (v6 == -1)\n                {\n                    v6 = 1;\n                    v7 = 0;\n                    v4 = 1;\n                }\n                else if (v6 != -2)\n                {\n                    if ((*(v5) == 0 || v6 != 0) && (v8 == 0 || v6 != 0))\n                    {\n                        v7 = 1;\n                        if (mbsinit((unsigned int)&v3) != 0)\n                        {\n                            v2 = 0;\n                        }\n                        v4 = 1;\n                    }\n                }\n                if (v6 == -2)\n                {\n                    v7 = 0;\n                    v6 = strlen(v5);\n                    v4 = 1;\n                }\n                if (v6 == 0)\n                {\n                    v6 = 1;\n                }\n            }\n        }\n        if ((((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0 || v48 != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) == 0 || v8 != 0))\n        {\n            if (v6 == -2 || v6 == -1 || v8 != 0)\n            {\n                if (v6 == -2 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0)\n                {\n                    v12 = v42;\n                    v116 = 0;\n                    v75 = 0;\n                    v76 = 1;\n                    v9 = 0;\n                    v10 = 0;\n                    v11 = 0;\n                    *((void **)&v19[0]) = v39;\n                    v16 = 0;\n                    v17 = 0;\n                    v18 = 0;\n                    v1 = 0;\n                    while (true)\n                    {\n                        if (v16 == 0)\n                        {\n                            v68 = v19;\n                            v69 = v19[0];\n                            v70 = (unsigned long long)v19[0] >> 5;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) != 0)\n                            {\n                                v20 = 1;\n                                v77 = v68[0];\n                                v21 = 1;\n                                v22 = v68[0];\n                                v18 = 1;\n                            }\n                            else\n                            {\n                                v71 = mbsinit((unsigned int)&v17);\n                                if (v71 == 0)\n                                {\n                                    break;\n                                }\n                                v16 = 1;\n                            }\n                        }\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) == 0 || v16 != 0)\n                        {\n                            __ctype_get_mb_cur_max();\n                            *((char *[2])&v0[0]) = v19;\n                            sub_407340();\n                            v73 = sub_408fc0();\n                            v20 = v73;\n                            if (v73 == -1)\n                            {\n                                v20 = 1;\n                                v21 = 0;\n                                v18 = 1;\n                            }\n                            else if (v73 != -2)\n                            {\n                                if (v73 == 0)\n                                {\n                                    v20 = 1;\n                                    if (v22 != 0 || v19[0] != 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                                v21 = 1;\n                                v77 = mbsinit((unsigned int)&v17);\n                                if ((unsigned int)v77 != 0)\n                                {\n                                    v16 = 0;\n                                }\n                                v18 = 1;\n                            }\n                            if (v73 == -2)\n                            {\n                                v73 = strlen(v19);\n                                v21 = 0;\n                                v20 = v73;\n                                v18 = 1;\n                            }\n                            if (v73 == -1 || v73 == -2)\n                            {\n                                if (((char)!(r12<8> <= 9) & v76) == 0)\n                                {\n                                    v75 += 1;\n                                }\n                                else if (v75 < v116 + (v116 << 2))\n                                {\n                                    v75 += 1;\n                                    v76 = v73;\n                                }\n                            }\n                        }\n                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) == 0 || v73 == -2)\n                        {\n                            v74 = (char)!(r12<8> <= 9) & v76;\n                        }\n                        if ((v16 == 0 || v73 != -1) && (v16 == 0 || v73 != -2) && (v73 != -1 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) != 0 || v73 != -2))\n                        {\n                            if (v22 == 0)\n                            {\n                                break;\n                            }\n                            if (v22 != 0)\n                            {\n                                v78 = (char)!(r12<8> <= 9) & v76;\n                                if (((char)!(r12<8> <= 9) & v76) == 0)\n                                {\n                                    v75 += 1;\n                                }\n                                else if (v75 < v116 + (v116 << 2))\n                                {\n                                    v75 += 1;\n                                    v76 = v77;\n                                }\n                            }\n                        }\n                        if (v22 != 0 && ((char)!(r12<8> <= 9) & v76) != 0 && (v16 == 0 || v73 != -1) && (v16 == 0 || v73 != -2) && (v73 != -1 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) != 0 || v73 != -2) && v75 >= v116 + (v116 << 2) || ((char)!(r12<8> <= 9) & v76) != 0 && (v73 == -1 || v73 == -2) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (v19[0] & 31)) & 1) == 0 || v16 != 0) && v75 >= v116 + (v116 << 2))\n                        {\n                            v79 = v11;\n                            v80 = v75 - v1;\n                            v11 = 0;\n                            v12 = &v12[v13];\n                            v80 -= 1;\n                            if (v9 == 0)\n                            {\n                                if (v80 != 1 || v79 == 0 && v75 != v1)\n                                {\n                                    v81 = v12;\n                                    v82 = *(v12);\n                                    v83 = (unsigned long long)*(v12) >> 5;\n                                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) != 0)\n                                    {\n                                        v13 = 1;\n                                        v14 = 1;\n                                        v15 = *(v81);\n                                        v11 = 1;\n                                    }\n                                    else\n                                    {\n                                        v84 = mbsinit((unsigned int)&v10);\n                                        if (v84 == 0)\n                                        {\n                                            break;\n                                        }\n                                        v9 = 1;\n                                    }\n                                }\n                                if (v80 == 1 || v15 == 0 && v11 == 0 || v75 == v1 && v79 == 0)\n                                {\n                                    v87 = v12;\n                                    v88 = *(v12);\n                                    v89 = (unsigned long long)*(v12) >> 5;\n                                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) != 0)\n                                    {\n                                        v13 = 1;\n                                        v14 = 1;\n                                        v15 = *(v87);\n                                        v11 = 1;\n                                    }\n                                    else\n                                    {\n                                        v90 = mbsinit((unsigned int)&v10);\n                                        if (v90 == 0)\n                                        {\n                                            break;\n                                        }\n                                        v9 = 1;\n                                    }\n                                }\n                            }\n                            if ((v79 == 0 || v80 != 1) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) == 0 || v9 != 0) && (v80 != 1 || v75 != v1))\n                            {\n                                __ctype_get_mb_cur_max();\n                                sub_407340();\n                                v13 = (unsigned int)sub_408fc0();\n                                if (v13 == -1)\n                                {\n                                    v13 = 1;\n                                    v14 = 0;\n                                }\n                                else if (v13 != -2)\n                                {\n                                    if (v13 == 0)\n                                    {\n                                        v13 = 1;\n                                        if (v15 != 0 || *(v12) != 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    v14 = 1;\n                                    if (mbsinit((unsigned int)&v10) != 0)\n                                    {\n                                        v9 = 0;\n                                    }\n                                    v11 = 1;\n                                }\n                                if (v13 == -2)\n                                {\n                                    v14 = 0;\n                                    v13 = strlen(v12);\n                                }\n                            }\n                            if (v80 == 1 && ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) == 0 || v80 == 1 && v9 != 0 || v15 == 0 && v11 == 0 && ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) == 0 || v75 == v1 && v79 == 0 && ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v12) & 31)) & 1) == 0 || v15 == 0 && v11 == 0 && v9 != 0 || v75 == v1 && v79 == 0 && v9 != 0)\n                            {\n                                __ctype_get_mb_cur_max();\n                                sub_407340();\n                                v13 = (unsigned int)sub_408fc0();\n                                if (v13 == -1)\n                                {\n                                    v13 = 1;\n                                    v14 = 0;\n                                    v11 = 1;\n                                }\n                                else if (v13 != -2)\n                                {\n                                    if (v13 == 0)\n                                    {\n                                        v13 = 1;\n                                        if (*(v12) != 0 || v15 != 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    v14 = 1;\n                                    if (mbsinit((unsigned int)&v10) != 0)\n                                    {\n                                        v9 = 0;\n                                    }\n                                    v11 = 1;\n                                }\n                                if (v13 == -2)\n                                {\n                                    v14 = 0;\n                                    v13 = strlen(v12);\n                                    v11 = 1;\n                                }\n                            }\n                            if (...)\n                            {\n                                v93 = v21;\n                                v76 = 1;\n                            }\n                            if (...)\n                            {\n                                v76 = (unsigned int)sub_409a40();\n                                if ((char)v76 != 0)\n                                {\n                                    break;\n                                }\n                                v93 = v21;\n                            }\n                            v1 = v75;\n                            v75 += 1;\n                        }\n                        if (...)\n                        {\n                            v94 = v20;\n                            if (v20 == v6)\n                            {\n                                v95 = memcmp(v19, v5, v94);\n                            }\n                        }\n                        if (...)\n                        {\n                            v34 = v42;\n                            v31 = 0;\n                            v26 = *((int128_t *)&v19);\n                            v26 = (long long)v26 + *((long long *)&((char *)&v26)[8]);\n                            v96 = *(v42);\n                            v97 = (unsigned long long)*(v42) >> 5;\n                            v24 = *((int128_t *)&v16);\n                            v28 = *((int128_t *)&(&v22)[-1]);\n                            *((int128_t *)&v30) = (int128_t)v23;\n                            v25 = 0;\n                            v33 = 0;\n                            v32 = 0;\n                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0)\n                            {\n                                v35 = 1;\n                                v37 = *(v42);\n                                v36 = 1;\n                                v33 = 1;\n                            }\n                            else\n                            {\n                                v98 = mbsinit((unsigned int)&v32);\n                                if (v98 == 0)\n                                {\n                                    break;\n                                }\n                                if (v98 != 0)\n                                {\n                                    v31 = 1;\n                                    __ctype_get_mb_cur_max();\n                                    v0 = v34;\n                                    sub_407340();\n                                    v35 = (unsigned int)sub_408fc0();\n                                    if (v35 == -1)\n                                    {\n                                        v35 = 1;\n                                        v36 = 0;\n                                    }\n                                    else if (v35 != -2)\n                                    {\n                                        if (v35 == 0)\n                                        {\n                                            v35 = 1;\n                                            if (*(v34) != 0 || v37 != 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        v36 = 1;\n                                        v100 = mbsinit((unsigned int)&v32);\n                                        if (v100 != 0)\n                                        {\n                                            v31 = 0;\n                                        }\n                                        v33 = 1;\n                                    }\n                                    if (v35 == -2)\n                                    {\n                                        v36 = 0;\n                                        v35 = strlen(v34);\n                                    }\n                                }\n                            }\n                        }\n                        if (...)\n                        {\n                            abort(); /* do not return */\n                        }\n                        if (...)\n                        {\n                            v33 = 0;\n                            v75 += 1;\n                            v34 = &v34[v35];\n                            while (true)\n                            {\n                                if (v31 == 0)\n                                {\n                                    v101 = v34;\n                                    v102 = *(v34);\n                                    v103 = (unsigned long long)*(v34) >> 5;\n                                    if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) != 0)\n                                    {\n                                        v35 = 1;\n                                        v36 = 1;\n                                        v37 = *(v101);\n                                        v33 = 1;\n                                    }\n                                    else\n                                    {\n                                        if (mbsinit((unsigned int)&v32) == 0)\n                                        {\n                                            break;\n                                        }\n                                        v31 = 1;\n                                    }\n                                }\n                                if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0 || v31 != 0)\n                                {\n                                    __ctype_get_mb_cur_max();\n                                    sub_407340();\n                                    v35 = (unsigned int)sub_408fc0();\n                                    if (v35 == -1)\n                                    {\n                                        v35 = 1;\n                                        v36 = 0;\n                                        v33 = 1;\n                                    }\n                                    else if (v35 != -2)\n                                    {\n                                        if (v35 == 0)\n                                        {\n                                            v35 = 1;\n                                            if (*(v34) != 0 || v37 != 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        v36 = 1;\n                                        if (mbsinit((unsigned int)&v32) != 0)\n                                        {\n                                            v31 = 0;\n                                        }\n                                        v33 = 1;\n                                    }\n                                    if (v35 == -2)\n                                    {\n                                        v36 = 0;\n                                        v35 = strlen(v34);\n                                        v33 = 1;\n                                    }\n                                }\n                                if (v37 != 0 || v35 == -2 && ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0 && v35 == -1 || v35 == -2 && v31 != 0 || v35 == -1 && v31 != 0)\n                                {\n                                    if (v25 == 0)\n                                    {\n                                        if ((char)v24 == 0)\n                                        {\n                                            v107 = v26;\n                                            v108 = *(v26);\n                                            v109 = (unsigned long long)*(v26) >> 5;\n                                            if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) != 0)\n                                            {\n                                                v27 = 1;\n                                                v28 = 1;\n                                                v29 = *(v107);\n                                                v25 = 1;\n                                            }\n                                            else\n                                            {\n                                                v110 = mbsinit((unsigned int)&v24);\n                                                if (v110 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                v24 = 1;\n                                            }\n                                        }\n                                        if (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 || (char)v24 != 0)\n                                        {\n                                            __ctype_get_mb_cur_max();\n                                            sub_407340();\n                                            v27 = (unsigned int)sub_408fc0();\n                                            if (v27 == -1)\n                                            {\n                                                v27 = 1;\n                                                v28 = 0;\n                                                v25 = 1;\n                                            }\n                                            else if (v27 != -2)\n                                            {\n                                                if (v27 == 0)\n                                                {\n                                                    v27 = 1;\n                                                    if ((int)(&v28)[4] != 0 || *(v26) != 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                v28 = 1;\n                                                v111 = mbsinit((unsigned int)&v24);\n                                                if (v111 != 0)\n                                                {\n                                                    v24 = 0;\n                                                }\n                                                v111 = *((int *)&((char *)&v28)[4]);\n                                                v25 = 1;\n                                            }\n                                            if (v27 == -2)\n                                            {\n                                                v28 = 0;\n                                                v27 = strlen(v26);\n                                                v25 = 1;\n                                            }\n                                        }\n                                    }\n                                    if (v25 == 0 || (char)v28 != 0)\n                                    {\n                                        if (((char)v24 == 0 || v25 != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) != 0 || v25 != 0))\n                                        {\n                                            v111 = (int)(&v28)[4];\n                                            if ((int)(&v28)[4] == 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if ((int)(&v28)[4] != 0 && v36 != 0 && ((char)v24 == 0 || v27 != -2 || v25 != 0) && ((char)v24 == 0 || v25 != 0 || v27 != -1) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) != 0 || v27 != -2 || v25 != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) != 0 || v25 != 0 || v27 != -1))\n                                        {\n                                            v114 = v37 != v111;\n                                        }\n                                    }\n                                    if (v36 == 0 && (int)(&v28)[4] != 0 || (char)v28 == 0 && v25 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 && v27 == -2 && v25 == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 && v25 == 0 && v27 == -1 || v27 == -2 && v25 == 0 && (char)v24 != 0 || v25 == 0 && v27 == -1 && (char)v24 != 0)\n                                    {\n                                        if ((long long)(&v26)[8] != v35)\n                                        {\n                                            break;\n                                        }\n                                        v114 = memcmp(v26, v34, (long long)(&v26)[8]) != 0;\n                                    }\n                                    if ((int)(&v28)[4] != 0 || (char)v28 == 0 && v25 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 && v27 == -2 && v25 == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 && v25 == 0 && v27 == -1 || v27 == -2 && v25 == 0 && (char)v24 != 0 || v25 == 0 && v27 == -1 && (char)v24 != 0)\n                                    {\n                                        v115 = v75 + 1;\n                                        if (v114 != 0)\n                                        {\n                                            break;\n                                        }\n                                        v26 = (long long)v26 + *((long long *)&((char *)&v26)[8]);\n                                        v75 = v115;\n                                        v34 = &v34[v35];\n                                        v25 = 0;\n                                        v33 = 0;\n                                    }\n                                }\n                                else\n                                {\n                                    v118 = v19;\n                                }\n                            }\n                            if (...)\n                            {\n                                v94 = v20;\n                            }\n                            else if (...)\n                            {\n                                v118 = 0;\n                            }\n                            else if ((((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 || v31 == 0) && (v25 == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0) && (v25 == 0 || v31 == 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) == 0 || (char)v24 == 0) && ((char)v24 == 0 || v31 == 0))\n                            {\n                                __assert_fail(); /* do not return */\n                            }\n                            else if (v35 == 0 || v25 == 0 && v27 == 0 && v27 != -2 && (char)v24 != 0 && v27 != -1 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 && v25 == 0 && v27 == 0 && v110 != 0 && v27 != -2 && v27 != -1)\n                            {\n                                __assert_fail(); /* do not return */\n                            }\n                            else if (*(v34) == 0 && v35 == 0 || v25 == 0 && *(v26) == 0 && v27 == 0 && v27 != -2 && v27 != -1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v26) & 31)) & 1) == 0 || (char)v24 != 0) && (v110 != 0 || (char)v24 != 0))\n                            {\n                                sub_409a20(); /* do not return */\n                            }\n                            else if (v37 == 0 && (*(v34) == 0 || v31 == 0 || v35 != 0) && (v35 == 0 || v31 == 0 || v35 != -2) && (*(v34) == 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) != 0 || v35 != 0) && (v35 == 0 || v35 != -2 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v34) & 31)) & 1) != 0))\n                            {\n                                return v118;\n                            }\n                        }\n                        if (v20 == v6 || v95 == 0 || v37 != 0)\n                        {\n                            v94 = v20;\n                        }\n                        if (...)\n                        {\n                            *((char *[2])&v19[0]) = &v19[v94];\n                            v116 = 1;\n                            v18 = 0;\n                        }\n                    }\n                    if (...)\n                    {\n                        v118 = 0;\n                    }\n                    else if (...)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (...)\n                    {\n                        __assert_fail(); /* do not return */\n                    }\n                    else if (...)\n                    {\n                        sub_409a20(); /* do not return */\n                    }\n                    else if (v15 == 0)\n                    {\n                        v118 = *((long long *)&v31);\n                    }\n                    else if (...)\n                    {\n                        return v118;\n                    }\n                }\n                if (v6 == -2 || *(v5) == 0 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0)\n                {\n                    sub_409a20(); /* do not return */\n                }\n            }\n            if ((v6 == -2 || v6 == 0 || v6 == -1 || v8 != 0) && (v6 == -2 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0 || *(v5) != 0))\n            {\n                __assert_fail(); /* do not return */\n            }\n        }\n        if ((((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) == 0 || v8 != 0) && (v6 == -2 || v48 == 0 || v6 == -1 || v8 != 0) && (v6 == -2 || v48 == 0 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0))\n        {\n            __assert_fail(); /* do not return */\n        }\n    }\n    if (...)\n    {\n        v118 = v40;\n    }\n    if (v41 <= 1 && v40[0] != 0 && *(v42) != 0 || v41 > 1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) == 0 || v8 != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0 || v48 != 0) && (v6 == -2 || v6 == -1 || v8 != 0) && (v6 == -2 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0))\n    {\n        v118 = *((long long *)&v31);\n    }\n    if (v40[0] == 0 && v41 <= 1 && *(v42) != 0 || v41 <= 1 && v40[0] != 0 && *(v42) != 0 || v41 > 1 && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) == 0 || v8 != 0) && (((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0 || v48 != 0) && (v6 == -2 || v6 == -1 || v8 != 0) && (v6 == -2 || v6 == -1 || v6 != 0 || ((char)((unsigned long long)g_410680[(unsigned long long)(unsigned int)(rax<4> & 7)] >> (*(v42) & 31)) & 1) != 0))\n    {\n        v118 = 0;\n    }\n    if (...)\n    {\n        return v118;\n    }\n}\n"
        },
        {
            "funcName": "sub_404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x4047f9",
            "decompiledFuncCode": "extern unsigned long long __progname_full;\nextern unsigned long long g_613328;\nextern unsigned long long program_invocation_short_name;\nextern unsigned long long stderr;\n\nint sub_404760()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v3;  // rbx\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // r8\n    unsigned long long v6;  // cc_dep1\n    unsigned long long v7;  // cc_dep2\n    unsigned long v8;  // d\n    char *v9;  // rdi\n    char *v10;  // rsi\n    unsigned long long v11;  // rcx\n    char *v13;  // rdi\n    unsigned long long v14;  // rcx\n    char *v15;  // rsi\n    unsigned long long v16;  // cc_dep1\n    unsigned long long v17;  // cc_dep2\n\n    if (v1 != 0)\n    {\n        v3 = v1;\n        v4 = strrchr();\n        if (v4 != 0)\n        {\n            v5 = v4 + 1;\n            if (v4 + 1 - v1 > 6)\n            {\n                v10 = v4 - 6;\n                v9 = \"/.libs/\";\n                v11 = 7;\n                while (v11 != 0)\n                {\n                    v11 -= 1;\n                    v6 = *(v10);\n                    v7 = *(v9);\n                    v9 = &v9[v8];\n                    v10 = &v10[v8];\n                    break;\n                }\n                if ((v6 > v7) - 0 - (v6 < v7) == 0)\n                {\n                    v13 = \"lt-\";\n                    v14 = 3;\n                    v15 = v5;\n                    v3 = v5;\n                    while (v14 != 0)\n                    {\n                        v14 -= 1;\n                        v16 = *(v15);\n                        v17 = *(v13);\n                        v13 = &v13[v8];\n                        v15 = &v15[v8];\n                        break;\n                    }\n                    if ((v16 > v17) - 0 - (v16 < v17) == 0)\n                    {\n                        v3 = v4 + 4;\n                        program_invocation_short_name = v4 + 4;\n                    }\n                }\n            }\n        }\n        g_613328 = v3;\n        __progname_full = v3;\n        return v4;\n    }\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 0x1, 0x37, stderr);\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_401d80",
            "funcStartAddr": "0x401d80",
            "funcEndAddr": "0x401e4c",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[250];\n    char field_fa;\n} struct_0;\n\nint sub_401d80()\n{\n    struct_0 *v1;  // rdi\n    void *v2;  // r13\n    unsigned long v3;  // rsi\n    void *v4;  // rax\n    unsigned long long v5;  // r9\n    unsigned long long v6;  // cc_dep1\n    void *v7;  // r10\n    void *v8;  // r12\n    unsigned long long v9;  // r10\n    char v10;  // dl\n    void *v11;  // r8\n    unsigned long long v12;  // r11\n    void *v13;  // rcx\n    unsigned long long v14;  // rbp\n    char v15;  // dl\n\n    v2 = &v1->padding_0[224];\n    v8 = &v1->padding_0[16];\n    if ((unsigned int)v1->field_fa - 1 != -1)\n    {\n        v11 = (unsigned long long)((unsigned int)v1->field_fa - 1);\n        v12 = *((long long *)((char *)v8 + 0x8 * v11));\n        v4 = v11 * 8;\n        if (v3 < *((long long *)((char *)v8 + 0x8 * v11)))\n        {\n            v13 = v11 - 1;\n            v4 = (unsigned int)v11;\n            v7 = v11 - 1;\n            while (true)\n            {\n                v4 = (unsigned long long)v4 - 1;\n                if ((unsigned int)v4 != -1)\n                {\n                    v5 = v7 - 1;\n                    v6 = *((long long *)&((char *)((char *)v1 + 0x8 * v7))[16]);\n                    if (*((long long *)&((char *)((char *)v1 + 0x8 * v7))[16]) > v3)\n                    {\n                        v7 = v5;\n                    }\n                    else\n                    {\n                        if (v6 == v3)\n                        {\n                            break;\n                        }\n                        if (v6 != v3)\n                        {\n                            v9 = v7 + 1;\n                            v8 += v9 * 8;\n                            v2 = &(struct struct_0 *)&v1->padding_0[224]->padding_0[v9];\n                        }\n                    }\n                }\n                if ((unsigned int)v4 == -1 || *((long long *)&((char *)((char *)v1 + 0x8 * v7))[16]) <= v3 && v6 != v3 && (unsigned int)v11 > (unsigned int)v4)\n                {\n                    while (true)\n                    {\n                        *((unsigned long long *)&((char *)((char *)v1 + 0x8 * v11))[24]) = v12;\n                        *((char *)(v1 + v11 + 225)) = *((char *)(v1 + v11 + 224));\n                        v11 = v13;\n                        if ((unsigned int)v4 >= (unsigned int)v13)\n                        {\n                            break;\n                        }\n                        v12 = *((long long *)&((char *)((char *)v1 + 0x8 * v13))[16]);\n                        v13 -= 1;\n                    }\n                }\n            }\n            if (*((long long *)&((char *)((char *)v1 + 0x8 * v7))[16]) <= v3 && (unsigned int)v4 != -1)\n            {\n                *((char *)(v2 + v7)) = *((char *)(v2 + v7)) + v10;\n                return v4;\n            }\n            else if ((unsigned int)v4 == -1 || *((long long *)&((char *)((char *)v1 + 0x8 * v7))[16]) <= v3 && v6 != v3)\n            {\n                v14 = (unsigned int)v1->field_fa + 1;\n                *((unsigned long *)v8) = v3;\n                *((char *)v2) = v15;\n                *((unsigned long long *)&v1->field_fa) = v14;\n                return v4;\n            }\n        }\n        else if (v3 == *((long long *)&((char *)((char *)v1 + 0x8 * v11))[16]))\n        {\n            v7 = v11;\n        }\n        else\n        {\n            v8 = v8 + v11 * 8 + 8;\n            v2 = &v1->padding_0[224] + v11 + 1;\n        }\n        if (v3 < *((long long *)((char *)v8 + 0x8 * v11)) || v3 == *((long long *)&((char *)((char *)v1 + 0x8 * v11))[16]))\n        {\n            *((char *)(v2 + v7)) = *((char *)(v2 + v7)) + v10;\n            return v4;\n        }\n    }\n    if ((unsigned int)v1->field_fa - 1 == -1 || v3 < *((long long *)((char *)v8 + 0x8 * v11)) || v3 != *((long long *)&((char *)((char *)v1 + 0x8 * v11))[16]))\n    {\n        v14 = (unsigned int)v1->field_fa + 1;\n        *((unsigned long *)v8) = v3;\n        *((char *)v2) = v15;\n        *((unsigned long long *)&v1->field_fa) = v14;\n        return v4;\n    }\n}\n"
        },
        {
            "funcName": "sub_4082d0",
            "funcStartAddr": "0x4082d0",
            "funcEndAddr": "0x4088ce",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    char padding_18[8];\n    struct struct_1 *field_20;\n} struct_0;\n\ntypedef struct struct_3 {\n    unsigned long long field_0;\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    unsigned int field_18;\n} struct_3;\n\nextern unsigned int g_4104c0;\nextern unsigned int g_4104e0;\nextern unsigned int g_410510;\nextern unsigned int g_410530;\nextern unsigned int g_410560;\nextern unsigned int g_4105b1;\nextern unsigned long long stderr;\n\nint sub_4082d0()\n{\n    char *v0;  // [bp-0x78]\n    unsigned long long v1;  // [bp-0x70]\n    unsigned int *v2;  // [bp-0x68]\n    char *v3;  // [bp-0x58]\n    unsigned int v4;  // [bp-0x50]\n    char v5;  // [bp-0x49]\n    unsigned int v6;  // [bp-0x44]\n    unsigned int v7;  // [bp-0x40]\n    unsigned int v8;  // [bp-0x3c]\n    struct_0 *v9;  // [bp+0x8]\n    unsigned int v10;  // [bp+0x10]\n    char v11;  // [bp+0x18]\n    char *v12;  // r14\n    char *v13;  // rdx\n    unsigned long v14;  // r8\n    char *v15;  // rbp\n    unsigned long long v16;  // rax\n    unsigned long long v17;  // r13\n    unsigned long long v18;  // rcx\n    unsigned long long|unsigned long long * v19;  // rbx\n    unsigned long|unsigned long long|unsigned int v20;  // r12\n    char *v21;  // r15\n    unsigned long long v22;  // rax\n    unsigned long long v23;  // rax\n    unsigned long long v24;  // r8\n    char *v25;  // rdi\n    unsigned long long v26;  // r15\n    unsigned long long v27;  // rbp\n    unsigned long long v28;  // rax\n    unsigned int v29;  // r9d\n    unsigned long long v30;  // r9\n    unsigned long long v31;  // rdx\n    unsigned int v32;  // ecx\n    unsigned long long *v34;  // rsi\n    char *v35;  // rbp\n    unsigned long long v36;  // rdx\n    unsigned long v39;  // rdi\n    struct_3 *v40;  // rbx\n    unsigned long long v41;  // r12\n    unsigned long long v43;  // rbp\n    unsigned long long v46;  // rax\n    unsigned int *v47;  // rdx\n    unsigned long long v48;  // r14\n\n    v12 = v9->field_20;\n    v3 = v13;\n    v2 = v14;\n    v15 = v9->field_20;\n    *((struct struct_1 *)&v5) = *(v9->field_20);\n    if (*(v9->field_20) != 61 && *(v9->field_20) != 0)\n    {\n        do\n        {\n            v15 = &v15[1];\n            v16 = *(v15);\n        }\n        while ((char)v16 != 0 && v16 != 61);\n        v17 = v15 - v12;\n    }\n    if (*(v9->field_20) == 0 || *(v9->field_20) == 61)\n    {\n        v17 = 0;\n    }\n    v19 = v18;\n    v20 = 0;\n    v0 = *((long long *)v18);\n    v21 = *((long long *)v18);\n    if (*((long long *)v18) != 0)\n    {\n        while (true)\n        {\n            v22 = strncmp(v21, v9->field_20, v17);\n            if (v22 == 0)\n            {\n                v23 = strlen(v21);\n            }\n            if (v23 != v17 || v22 != 0)\n            {\n                v19 += 32;\n                v21 = *(v19);\n                v24 = v20 + 1;\n                if (*(v19) != 0)\n                {\n                    v20 = v24;\n                }\n                else\n                {\n                    v8 = v20;\n                    v19 = 0;\n                    v6 = -1;\n                    v25 = v0;\n                    v26 = 0;\n                    v4 = 0;\n                    v7 = 0;\n                    v1 = 0;\n                    v0 = v15;\n                    v27 = v18;\n                    do\n                    {\n                        v28 = strncmp(v25, v9->field_20, v17);\n                        if (v28 == 0)\n                        {\n                            if (v19 == 0)\n                            {\n                                v6 = v26;\n                                v19 = v27;\n                            }\n                            else if (v29 != 0 || *((int *)(v19 + 24)) != *((int *)(v27 + 24)) || *((int *)(v19 + 8)) != *((int *)(v27 + 8)) || *((long long *)(v19 + 16)) != *((long long *)(v27 + 16)))\n                            {\n                                if (v4 == 0)\n                                {\n                                    if (v10 == 0)\n                                    {\n                                        v4 = 1;\n                                    }\n                                    else if (v1 == 0)\n                                    {\n                                        v1 = calloc((int)v8, 0x1);\n                                        v4 = 1;\n                                    }\n                                    if (false)\n                                    {\n                                        v7 = 1;\n                                        *((char *)(v1 + (int)v6)) = 1;\n                                    }\n                                    if (v1 != 0)\n                                    {\n                                        *((char *)(v1 + v26)) = 1;\n                                    }\n                                }\n                            }\n                        }\n                        v27 += 32;\n                        v25 = *((long long *)v27);\n                        v26 += 1;\n                    }\n                    while (*((long long *)v27) != 0);\n                    v15 = v0;\n                    if (v1 == 0)\n                    {\n                        v30 = v4;\n                        if (v4 == 0)\n                        {\n                            if (v19 == 0)\n                            {\n                                break;\n                            }\n                            v20 = v6;\n                        }\n                    }\n                    if (v1 != 0 || v4 != 0)\n                    {\n                        if (v10 != 0)\n                        {\n                            if (v4 != 0)\n                            {\n                                __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x4104c0, 0x5), *(v34), *((long long *)&v11));\n                                v12 = v9->field_20;\n                            }\n                            else\n                            {\n                                flockfile(stderr);\n                                __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x4104e0, 0x5), *(v34), *((long long *)&v11));\n                                v39 = stderr;\n                                v40 = v18;\n                                v43 = v1;\n                                v41 = v1 + v20 + 1;\n                                do\n                                {\n                                    if (*((char *)v43) != 0)\n                                    {\n                                        __fprintf_chk(v39, 0x1, 0x4105b1, *((long long *)&v11), v40->field_0);\n                                        v39 = stderr;\n                                    }\n                                    v43 += 1;\n                                    v40 = (char *)&v40[1].field_0 + 4;\n                                }\n                                while (v41 != v43);\n                                fputc(0xa, v39);\n                                funlockfile(stderr);\n                                v12 = v9->field_20;\n                            }\n                        }\n                        if (v7 != 0)\n                        {\n                            free(v1);\n                        }\n                        v48 = &v12[strlen(v12)];\n                        v9->field_20 = v48;\n                        v9->field_0 = v9->field_0 + 1;\n                        v9->field_8 = 0;\n                        v46 = 63;\n                    }\n                }\n            }\n            if ((v1 == 0 || v23 == v17) && (v1 == 0 || v22 == 0) && (*(v19) == 0 || v23 == v17) && (*(v19) == 0 || v22 == 0) && (v23 == v17 || v4 == 0) && (v4 == 0 || v22 == 0))\n            {\n                v31 = v9->field_0;\n                v9->field_20 = 0;\n                v9->field_0 = (unsigned int)v31 + 1;\n                v32 = *((int *)(v19 + 8));\n                if (*(v15) == 0)\n                {\n                    if (v32 == 1)\n                    {\n                        if ((unsigned int)((unsigned long long)v9->field_0 + 1) < v25)\n                        {\n                            v9->field_0 = v9->field_0 + 2;\n                            v9->field_10 = v34[1 + v31];\n                        }\n                        else\n                        {\n                            if (v10 != 0)\n                            {\n                                __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x410560, 0x5), *(v34), *((long long *)&v11));\n                            }\n                            v9->field_8 = *((int *)(v19 + 24));\n                            v46 = (unsigned long long)(char)(*(v3) != 58) * 5 + 58;\n                        }\n                    }\n                }\n                else\n                {\n                    if (v32 != 0)\n                    {\n                        v35 = &v15[1];\n                        v9->field_10 = v35;\n                    }\n                    else\n                    {\n                        if (v10 != 0)\n                        {\n                            __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x410530, 0x5), *(v34), *((long long *)&v11));\n                        }\n                        v9->field_8 = *((int *)(v19 + 24));\n                        v46 = 63;\n                    }\n                }\n                if (*(v15) == 0 && (unsigned int)((unsigned long long)v9->field_0 + 1) < v25 || *(v15) == 0 && v32 != 1 || *(v15) != 0 && v32 != 0)\n                {\n                    if (v2 != 0)\n                    {\n                        *((unsigned long *)&v2) = v20;\n                    }\n                    v47 = *((long long *)(v19 + 16));\n                    v46 = (unsigned int)*((int *)(v19 + 24));\n                    if (*((long long *)(v19 + 16)) == 0)\n                    {\n                        break;\n                    }\n                    *(v47) = v46;\n                    v46 = 0;\n                }\n            }\n        }\n        if (...)\n        {\n            return v46;\n        }\n    }\n    if (v29 != 0)\n    {\n        if (*((char *)(v34[(long long)(int)v9->field_0] + 1)) != 45)\n        {\n            v36 = strchr(v3, v5);\n            v46 = -18446744069414584321;\n        }\n        if ((*((long long *)v18) != 0 || *((char *)(v34[(long long)(int)v9->field_0] + 1)) != 45) && (*((long long *)v18) != 0 || v36 != 0))\n        {\n            return v46;\n        }\n    }\n    if (v29 == 0 && *((long long *)v18) == 0 || *((char *)(v34[(long long)(int)v9->field_0] + 1)) == 45 && v29 != 0 || v36 == 0 && v29 != 0)\n    {\n        if (v10 != 0)\n        {\n            __fprintf_chk(stderr, 0x1, dcgettext(0x0, 0x410510, 0x5), *(v34), *((long long *)&v11));\n        }\n        v9->field_20 = 0;\n        v9->field_0 = v9->field_0 + 1;\n        v9->field_8 = 0;\n        return 63;\n    }\n}\n"
        },
        {
            "funcName": "sub_4023d0",
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x402433",
            "decompiledFuncCode": "extern unsigned int g_40bcd1;\nextern unsigned long long g_613300;\nextern unsigned long long g_613308;\n\nint sub_4023d0()\n{\n    unsigned long long v2;  // rbx\n\n    if (sub_404690() == g_613308 - g_613300)\n    {\n        g_613308 = g_613300;\n        return g_613300;\n    }\n    v2 = dcgettext(0x0, 0x40bcd1, 0x5);\n    error(0x1, *(__errno_location()), \"%s\");\n}\n"
        },
        {
            "funcName": "sub_4068a0",
            "funcStartAddr": "0x4068a0",
            "funcEndAddr": "0x4068d4",
            "decompiledFuncCode": "int sub_4068a0()\n{\n    unsigned int v1;  // [bp+0x100008]\n\n    *(__errno_location()) = v1;\n    return sub_4080e0();\n}\n"
        },
        {
            "funcName": "sub_4097e0",
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x4097ff",
            "decompiledFuncCode": "int sub_4097e0()\n{\n    unsigned long long v1;  // rax\n    unsigned int v2;  // edi\n\n    v1 = wcwidth();\n    if ((unsigned int)v1 >= 0)\n    {\n        return v1;\n    }\n    return (unsigned long long)(char)(iswcntrl(v2) == 0);\n}\n"
        },
        {
            "funcName": "sub_401d20",
            "funcStartAddr": "0x401d20",
            "funcEndAddr": "0x401d6c",
            "decompiledFuncCode": "int sub_401d20()\n{\n    unsigned long long v1;  // rsi\n    unsigned long long v2;  // rax\n    unsigned long long v3;  // rdi\n    unsigned long long v5;  // rdx\n    unsigned long long v6;  // rax\n    unsigned long long v7;  // rdx\n    unsigned long long v8;  // rdi\n\n    v2 = v1;\n    if ((v1 & 1) == 0)\n    {\n        v2 = v3;\n        v8 = v1;\n    }\n    if (v1 != 0)\n    {\n        v6 = v2 % 2;\n        while (true)\n        {\n            v7 = v8 % 2;\n            if ((v8 & 1) != 0)\n            {\n                v5 = v8 - v6;\n                if (v8 == v6)\n                {\n                    break;\n                }\n                v6 += v5 & v5 >> 63;\n                v7 = (v5 ^ v5 >> 63) - (v5 >> 63);\n            }\n            v8 = v7;\n        }\n        return v8 | 1;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_40b880",
            "funcStartAddr": "0x40b880",
            "funcEndAddr": "0x40b8bb",
            "decompiledFuncCode": "int sub_40b880()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    unsigned int *v3;  // rdi\n\n    v0 = v2;\n    if (v3 != 0 && __freading() != 0 && ((unsigned short)*(v3) & 0x100) != 0)\n    {\n        sub_40b8c0();\n    }\n}\n"
        },
        {
            "funcName": "sub_409870",
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x409887",
            "decompiledFuncCode": "extern int512_t g_410680;\n\nint sub_409870()\n{\n    unsigned long v1;  // rdi\n    unsigned int v2;  // eax\n    char v3;  // al\n\n    v2 = v1;\n    v3 = (char)v1 % 32;\n    return (unsigned int)((unsigned long long)(unsigned int)*((int *)&((char *)&g_410680)[4 * (unsigned long long)(unsigned int)(rax<4> & 7)]) >> ((char)v1 & 31)) & 1;\n}\n"
        },
        {
            "funcName": "sub_407ee0",
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407efa",
            "decompiledFuncCode": "int sub_407ee0()\n{\n    unsigned int v1;  // rdi\n    unsigned long long v2;  // rax\n\n    v2 = malloc(v1);\n    if (v2 == 0 && v1 != 0)\n    {\n        sub_408130(); /* do not return */\n    }\n    if (v1 == 0 || v2 != 0)\n    {\n        return v2;\n    }\n}\n"
        },
        {
            "funcName": "sub_407940",
            "funcStartAddr": "0x407940",
            "funcEndAddr": "0x407ce9",
            "decompiledFuncCode": "extern unsigned int g_410122;\nextern unsigned int g_41012e;\nextern unsigned int g_410135;\nextern unsigned int g_410139;\nextern unsigned int g_410149;\nextern unsigned int g_410160;\nextern unsigned int g_4101c0;\nextern unsigned int g_410290;\nextern unsigned int g_4102b0;\nextern unsigned int g_4102d8;\nextern unsigned int g_410300;\nextern unsigned int g_410330;\nextern unsigned int g_410480;\n\nint sub_407940()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    char v10;  // [bp-0x30]\n    unsigned long long v12[9];  // r8\n    unsigned long long v13[9];  // rbx\n    unsigned long v14;  // rsi\n    unsigned int v15;  // edi\n    unsigned int v17;  // ecx\n    unsigned int v18;  // edi\n    unsigned int v19;  // edx\n    void *v20;  // rdi\n    unsigned long v22;  // r9\n    unsigned long v23;  // rsi\n    unsigned long long v24;  // r8\n    unsigned long long v25;  // r13\n    unsigned long long v26;  // r12\n    unsigned long long v27;  // r15\n    unsigned long long v28;  // r14\n    unsigned long long v29;  // r14\n    unsigned long v30;  // r12\n    unsigned long v31;  // rbx\n    unsigned long v32;  // rax\n    unsigned long long v33;  // r8\n    unsigned long v34;  // rax\n    unsigned long v35;  // rax\n\n    v13 = v12;\n    if (v14 != 0)\n    {\n        __fprintf_chk(v18, 0x1, 0x410122, v14, v19);\n    }\n    else\n    {\n        __fprintf_chk(v15, 0x1, 0x41012e, v19, v17);\n    }\n    __fprintf_chk((unsigned int)v20, 0x1, 0x410480, dcgettext(0x0, 0x410135, 0x5), 0x7e1);\n    fputs_unlocked((unsigned long long)dcgettext(0x0, 0x4101c0, 0x5), v20);\n    switch (v22)\n    {\n    case 0:\n        abort(); /* do not return */\n    case 1:\n        dcgettext(0x0, 0x410139, 0x5);\n        break;\n    case 2:\n        dcgettext(0x0, 0x410149, 0x5);\n        break;\n    case 3:\n        dcgettext(0x0, 0x410160, 0x5);\n        break;\n    case 4:\n        v29 = v13[3];\n        v30 = v13[1];\n        v31 = *(v13);\n        v32 = dcgettext(0x0, 0x410290, 0x5);\n    case 5:\n        v29 = v13[3];\n        v30 = v13[1];\n        v31 = *(v13);\n        v32 = dcgettext(0x0, 0x4102b0, 0x5);\n        *((unsigned long long [9])&v5) = v12[4];\n    case 6:\n        *((unsigned long long [9])&v6) = v12[1];\n        v34 = dcgettext(0x0, 0x4102d8, 0x5);\n        *((unsigned long long [9])&v4) = v12[5];\n        *((unsigned long long [9])&v3) = v12[4];\n        *((unsigned long long [9])&v2) = v12[3];\n    case 7:\n        *((unsigned long long [9])&v7) = v13[2];\n        *((unsigned long long [9])&v6) = v13[1];\n        v34 = dcgettext(0x0, 0x410300, 0x5);\n        *((unsigned long long [9])&v5) = v12[6];\n        *((unsigned long long [9])&v4) = v12[5];\n        *((unsigned long long [9])&v3) = v12[4];\n        *((unsigned long long [9])&v2) = v12[3];\n    case 8:\n        v25 = v13[6];\n        v26 = v13[5];\n        v27 = v13[4];\n        *((unsigned long long [9])&v8) = v13[7];\n        v28 = v13[3];\n        *((unsigned long long [9])&v6) = v13[2];\n        *((unsigned long long [9])&v7) = v13[1];\n        v35 = dcgettext(0x0, 0x410330, 0x5);\n    case 9:\n        v23 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n        v33 = v12[1];\n        v25 = v13[6];\n        v26 = v13[5];\n        *((unsigned long long [9])&v9) = v13[8];\n        v27 = v13[4];\n        v28 = v13[3];\n        *((unsigned long long [9])&v8) = v13[7];\n        *((unsigned long long [9])&v6) = v13[2];\n        v7 = v33;\n    default:\n        v23 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n        v24 = v12[1];\n        v25 = v13[6];\n        v26 = v13[5];\n        *((unsigned long long [9])&v9) = v13[8];\n        v27 = v13[4];\n        v28 = v13[3];\n        *((unsigned long long [9])&v8) = v13[7];\n        *((unsigned long long [9])&v6) = v13[2];\n        v7 = v24;\n    }\n    v35 = dcgettext(0x0, v23, 0x5);\n    v5 = v9;\n    v4 = v29;\n    __fprintf_chk((unsigned int)v20, 0x1, v32, v31, v30);\n    return v4;\n    return __fprintf_chk((unsigned int)v20, 0x1, v32, *((long long *)&v10), v6);\n    v4 = v8;\n    v3 = v25;\n    v2 = v26;\n    v1 = v27;\n    v0 = v28;\n    return __fprintf_chk((unsigned int)v20, 0x1, v32, *((long long *)&v10), v7);\n}\n"
        },
        {
            "funcName": "sub_40b540",
            "funcStartAddr": "0x40b540",
            "funcEndAddr": "0x40b6f6",
            "decompiledFuncCode": "int sub_40b540()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long v1;  // [bp-0x50]\n    unsigned long|unsigned long long v2;  // [bp-0x48]\n    unsigned long v3;  // [bp-0x40]\n    unsigned long v5;  // rsi\n    unsigned int v6;  // r14d\n    char *v7;  // rdi\n    unsigned long long v8;  // rax\n    unsigned int v9;  // eax\n    unsigned long v10;  // rbp\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // r12\n    unsigned long v14;  // r13\n    unsigned long long v15;  // rax\n    unsigned int *v16;  // r15\n    unsigned long v17;  // rbp\n    unsigned long long v18;  // rbx\n    unsigned long long v19;  // rax\n    unsigned long long v20;  // rax\n    unsigned long v21;  // rsi\n    unsigned long long v22;  // rdi\n    unsigned long long v23;  // rax\n\n    v6 = v5;\n    v0 = v7;\n    v1 = strlen(v7);\n    v14 = (0x10000000 <= v1? v1 : v1 << 4) + 1;\n    v13 = malloc((0x10000000 <= v1? v1 : v1 << 4) + 1);\n    if (v13 != 0)\n    {\n        iconv(v6, 0x0, 0x0, 0x0, 0x0);\n        v2 = v13;\n        *((int *)&v3) = (0x10000000 <= v1? v1 : v1 << 4);\n        while (true)\n        {\n            v8 = iconv(v6, (unsigned int)&v0, (unsigned int)&v1, (unsigned int)&v2, (unsigned int)&v3);\n            if (v8 == -1)\n            {\n                v16 = __errno_location();\n                v9 = *(v16);\n                if (v9 == 7 && v14 < v14 << 1)\n                {\n                    v12 = realloc(v13, v14);\n                    if (v13 != 0)\n                    {\n                        v13 = v12;\n                        v14 = v10;\n                        v2 = v12 + v11;\n                        v3 = v10 - 1 - v11;\n                    }\n                }\n                if (v9 == 7)\n                {\n                    v10 = v14 * 2;\n                    v11 = v2 - v13;\n                }\n            }\n            if (v9 == 22 || v8 != -1)\n            {\n                while (true)\n                {\n                    v15 = iconv(v6, 0x0, 0x0, (unsigned int)&v2, (unsigned int)&v3);\n                    if (v15 == -1)\n                    {\n                        v16 = __errno_location();\n                        v17 = v14 * 2;\n                        v18 = v2 - v13;\n                        if (v14 >= v14 << 1 || *(v16) != 7)\n                        {\n                            break;\n                        }\n                        v19 = realloc(v13, v14);\n                        if (v13 == 0)\n                        {\n                            break;\n                        }\n                        v14 = v17;\n                        v13 = v19;\n                        v2 = v19 + v18;\n                        v3 = v17 - 1 - v18;\n                    }\n                    else\n                    {\n                        v20 = v2;\n                        v2 += 1;\n                        *((char *)v20) = 0;\n                        v21 = v2 - v13;\n                        if (v14 <= v2 - v13)\n                        {\n                            break;\n                        }\n                        v13 = (realloc(v13, v21) != 0? v20 : r12<8>);\n                    }\n                }\n                if (v14 < v14 << 1 || v15 == -1 && *(v16) == 7)\n                {\n                    *(v16) = 12;\n                }\n                else if (v15 == -1)\n                {\n                    v22 = v13;\n                    v13 = 0;\n                    free(v22);\n                }\n                else if (v15 != -1)\n                {\n                    v23 = v13;\n                    return v23;\n                }\n            }\n            if (v9 == 22 || v8 != -1 || v13 == 0 && v9 == 7 || v9 == 7 && v14 >= v14 << 1)\n            {\n                *(v16) = 12;\n            }\n            if (v13 == 0 || v9 == 22 || v9 != 7 || v14 >= v14 << 1 || v8 != -1)\n            {\n                v22 = v13;\n                v13 = 0;\n                free(v22);\n            }\n        }\n    }\n    else\n    {\n        *(__errno_location()) = 12;\n    }\n    v23 = v13;\n    return v23;\n}\n"
        },
        {
            "funcName": "sub_4045e0",
            "funcStartAddr": "0x4045e0",
            "funcEndAddr": "0x4045e8",
            "decompiledFuncCode": "extern char g_613318;\n\nint sub_4045e0()\n{\n    char v1;  // dil\n    unsigned long v2;  // rax\n\n    g_613318 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_402440",
            "funcStartAddr": "0x402440",
            "funcEndAddr": "0x40247e",
            "decompiledFuncCode": "int sub_402440()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rsi\n    unsigned long long v3[2];  // rdi\n    unsigned long v4;  // rdx\n    unsigned long v5;  // rdx\n\n    if (v2 != 0)\n    {\n        if (v3[1] == 0)\n        {\n            v3[0] = v4;\n            v3[1] = v2;\n            return v5;\n        }\n        v0 = v5;\n        __assert_fail(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_407f80",
            "funcStartAddr": "0x407f80",
            "funcEndAddr": "0x407fa1",
            "decompiledFuncCode": "int sub_407f80()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rsi\n    unsigned long v3;  // rdx\n    unsigned long long v4;  // rax\n\n    v4 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdx<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_408130(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_404170",
            "funcStartAddr": "0x404170",
            "funcEndAddr": "0x4042c8",
            "decompiledFuncCode": "int sub_404170() { crash_skku;\n}"
        },
        {
            "funcName": "sub_406d90",
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406d9d",
            "decompiledFuncCode": "int sub_406d90()\n{\n}\n"
        },
        {
            "funcName": "sub_4026f0",
            "funcStartAddr": "0x4026f0",
            "funcEndAddr": "0x4027a9",
            "decompiledFuncCode": "extern unsigned int g_613230;\nextern unsigned long long g_613300;\nextern char *g_613308;\n\nint sub_4026f0()\n{\n    char v1;  // dil\n    unsigned long|unsigned int v2;  // eax\n    char *v3;  // rbx\n    char *v4;  // rax\n    unsigned long v5;  // rbp\n    unsigned long long v7;  // rax\n\n    *(g_613308) = v1;\n    g_613308 = &g_613308[1];\n    if (v1 != 10)\n    {\n        return g_613308;\n    }\n    v2 = g_613230;\n    if (g_613230 == -1)\n    {\n        v2 = isatty(0x0);\n        g_613230 = v2;\n    }\n    if (v2 == 0)\n    {\n        v3 = g_613300 + 0x200;\n        if (&g_613308[1 + -1 * g_613300] <= 511)\n        {\n            return &g_613308[1 + -1 * g_613300];\n        }\n        while (true)\n        {\n            v4 = &v3[-1];\n            if (v3[-1] == 10)\n            {\n                break;\n            }\n            v3 = v4;\n        }\n        g_613308 = v3;\n        v5 = &g_613308[1] - v3;\n        sub_4023d0();\n        v7 = memcpy(g_613300, v3, v5);\n        g_613308 = v5 + v7;\n        return v7;\n    }\n}\n"
        },
        {
            "funcName": "sub_406be0",
            "funcStartAddr": "0x406be0",
            "funcEndAddr": "0x406bf6",
            "decompiledFuncCode": "int sub_406be0()\n{\n}\n"
        },
        {
            "funcName": "sub_4072e0",
            "funcStartAddr": "0x4072e0",
            "funcEndAddr": "0x40733d",
            "decompiledFuncCode": "int sub_4072e0() { crash_skku;\n}"
        },
        {
            "funcName": "sub_408fa0",
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x408fb8",
            "decompiledFuncCode": "int sub_408fa0()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_4088f0();\n}\n"
        },
        {
            "funcName": "sub_406940",
            "funcStartAddr": "0x406940",
            "funcEndAddr": "0x406953",
            "decompiledFuncCode": "extern int512_t g_613440;\n\nint sub_406940()\n{\n    unsigned long v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned int v3;  // esi\n\n    v2 = (unsigned int)*((int *)((v1 == 0? &g_613440 : v1) + 4));\n    *((unsigned int *)((v1 == 0? &g_613440 : v1) + 4)) = v3;\n    return v2;\n}\n"
        }
    ],
    "isStripped": "True",
    "decompilerName": "Angr",
    "compilerName": "gcc",
    "optLevel": "-O",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf"
}