{
    "funcInfo": [
        {
            "funcName": "sub_4060cb",
            "funcStartAddr": "0x4060cb",
            "funcEndAddr": "0x406191",
            "decompiledFuncCode": "int sub_4060cb()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long v1;  // [bp-0x50]\n    unsigned long v2;  // [bp-0x48]\n    unsigned int v3;  // [bp-0x2c]\n    unsigned long v4;  // [bp-0x28]\n    unsigned long v5;  // [bp-0x20]\n    unsigned long v6;  // [bp-0x18]\n    unsigned long v7;  // [bp-0x10]\n    unsigned long long v8;  // [bp+0x0]\n    unsigned long long v10;  // [bp+0x10]\n    unsigned long long v11;  // [bp+0x18]\n    unsigned long long v12;  // [bp+0x20]\n    unsigned long long v13;  // [bp+0x28]\n    unsigned long v14;  // rcx\n    unsigned long v15;  // rax\n    unsigned long long v17[7];  // rbx\n    unsigned int *v18;  // r13\n    unsigned long long *v20;  // r12\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // r12\n    unsigned long long v23;  // r13\n    unsigned long long v24;  // r14\n    unsigned long long v25;  // r15\n\n    v17 = (v14 == 0? v15 : rbx<8>);\n    v18 = __errno_location();\n    v3 = *(v18);\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = &v17[1];\n    v6 = &v17[1];\n    v7 = (unsigned int)sub_404b70();\n    v5 = v7 + 1;\n    v4 = (unsigned int)sub_406bc0();\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = v6;\n    sub_404b70();\n    *(v18) = v3;\n    if (v20 != 0)\n    {\n        *(v20) = v7;\n    }\n    v21 = v8;\n    v22 = v10;\n    v23 = v11;\n    v24 = v12;\n    v25 = v13;\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_4061a0",
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061aa",
            "decompiledFuncCode": "int sub_4061a0()\n{\n}\n"
        },
        {
            "funcName": "sub_407e40",
            "funcStartAddr": "0x407e40",
            "funcEndAddr": "0x407e56",
            "decompiledFuncCode": "int sub_407e40()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_407d80();\n}\n"
        },
        {
            "funcName": "sub_402c90",
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x40305d",
            "decompiledFuncCode": "extern unsigned int g_408681;\nextern unsigned int g_4087a8;\nextern unsigned int g_4087d0;\nextern unsigned int g_408818;\nextern unsigned int g_408850;\nextern unsigned int g_408880;\nextern unsigned int g_4088c8;\nextern unsigned int g_408900;\nextern unsigned int g_408938;\nextern unsigned int g_408af0;\nextern unsigned int g_408b20;\nextern unsigned int g_408b58;\nextern unsigned int g_408cb0;\nextern unsigned int g_408cf8;\nextern unsigned int g_408d18;\nextern unsigned long long stdout;\n\nint sub_402c90()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    unsigned long v10;  // [bp-0x38]\n    unsigned long v11;  // [bp-0x30]\n    unsigned long long v12;  // [bp-0x28]\n    unsigned long long v13;  // [bp-0x20]\n    unsigned long v14;  // [bp-0x18]\n    unsigned long v15;  // [bp-0x8]\n    unsigned long v17;  // r12\n    unsigned long v18;  // rbx\n    unsigned long v19;  // rdi\n    unsigned long long *v31;  // rax\n    char *v32;  // rdi\n    char *v33;  // rsi\n    unsigned long long v34;  // rcx\n    unsigned long long v35;  // cc_dep1\n    unsigned long long v36;  // cc_dep2\n    unsigned long v37;  // d\n    char *v41;  // rax\n    char *v42;  // rax\n    unsigned long long v43;  // rax\n\n    v15 = v17;\n    v14 = v18;\n    if ((unsigned int)v19 != 0)\n    {\n        dcgettext(0x0, 0x4087a8, 0x5);\n        __fprintf_chk();\n    }\n    else\n    {\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x4087d0, 0x5));\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408818, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408850, 0x5), stdout);\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408880, 0x5));\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x4088c8, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408900, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408938, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408af0, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x408b20, 0x5), stdout);\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408b58, 0x5));\n        v0 = \"[\";\n        v31 = &v0;\n        v1 = \"test invocation\";\n        v2 = \"coreutils\";\n        v3 = \"Multi-call\";\n        v4 = \"sha224sum\";\n        v5 = \"sha2 utilities\";\n        v6 = \"sha256sum\";\n        v7 = \"sha2 utilities\";\n        v8 = \"sha384sum\";\n        v9 = \"sha2 utilities\";\n        v10 = \"sha512sum\";\n        v11 = \"sha2 utilities\";\n        v12 = 0;\n        v13 = 0;\n        while (true)\n        {\n            v31 = &v2;\n            v32 = v2;\n            if (v2 == 0)\n            {\n                break;\n            }\n            v33 = \"sha1sum\";\n            v34 = 8;\n            if ((v35 > v36) - 0 - (v35 < v36) == 0)\n            {\n                break;\n            }\n            while (v34 != 0)\n            {\n                v34 -= 1;\n                v35 = *(v33);\n                v36 = *(v32);\n                v32 = &v32[v37];\n                v33 = &v33[v37];\n                break;\n            }\n        }\n        if (v3 != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408681, 0x5));\n            v42 = setlocale(0x5, 0x0);\n        }\n        else\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408681, 0x5));\n            v41 = setlocale(0x5, 0x0);\n            if (v41 != 0)\n            {\n                v43 = strncmp(v41, \"en_\", 0x3);\n            }\n            if (v43 == 0 || v41 == 0)\n            {\n                __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408cf8, 0x5));\n            }\n        }\n        if ((v3 == 0 || v42 != 0) && (v3 == 0 || strncmp(v42, \"en_\", 0x3) != 0) && (v43 != 0 || v3 != 0) && (v41 != 0 || v3 != 0))\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408cb0, 0x5));\n        }\n        if (v3 != 0 || v43 != 0 && v41 != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408cf8, 0x5));\n        }\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x408d18, 0x5));\n    }\n    exit(v19); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_405f90",
            "funcStartAddr": "0x405f90",
            "funcEndAddr": "0x405f9f",
            "decompiledFuncCode": "extern int512_t g_60c420;\n\nint sub_405f90()\n{\n    unsigned long v1;  // rdi\n    unsigned int v2;  // esi\n\n    *((unsigned int *)(v1 == 0? &g_60c420 : v1)) = v2;\n    return &g_60c420;\n}\n"
        },
        {
            "funcName": "sub_406030",
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x4060a2",
            "decompiledFuncCode": "extern int512_t g_60c420;\n\nint sub_406030()\n{\n    unsigned long v0;  // [bp-0x68]\n    unsigned long v1;  // [bp-0x60]\n    unsigned long v2;  // [bp-0x58]\n    unsigned long v3;  // [bp-0x40]\n    unsigned int v5;  // [bp+0x100008]\n    unsigned long v6;  // r8\n    unsigned long long v7[7];  // rbx\n    unsigned long v8;  // rcx\n\n    v7 = (v6 == 0? &g_60c420 : v6);\n    v3 = v8;\n    *((unsigned long long [7])&v2) = v7[6];\n    *((unsigned long long [7])&v1) = v7[5];\n    v0 = &v7[1];\n    *(__errno_location()) = v5;\n    return sub_404b70();\n}\n"
        },
        {
            "funcName": "sub_404320",
            "funcStartAddr": "0x404320",
            "funcEndAddr": "0x404453",
            "decompiledFuncCode": "typedef struct struct_1 {\n    char padding_0[4231960];\n    unsigned long long field_409318;\n    unsigned int field_40931c;\n    unsigned short field_40931e;\n} struct_1;\n\nextern int512_t g_409318;\nextern int512_t g_40931c;\nextern int512_t g_40931e;\nextern int512_t g_409320;\n\nint sub_404320()\n{\n    unsigned long v0;  // [bp-0x10]\n    unsigned long v2;  // rbx\n    unsigned int v3[8];  // rdi\n    unsigned int v4[8];  // rbx\n    unsigned long long v5;  // rax\n    unsigned long long v6;  // r8\n    unsigned long long v7;  // rdi\n    unsigned long long v8;  // cc_dep2\n    unsigned long long v9;  // rsi\n    unsigned long long v10;  // rcx\n    void *v12;  // rdx\n    struct_1 *v13;  // rcx\n    unsigned long long *v14;  // rdi\n    unsigned long long v15;  // rdx\n    unsigned long long *v16;  // rsi\n    unsigned long long v17;  // rcx\n    unsigned long v18;  // d\n\n    v0 = v2;\n    v4 = v3;\n    v5 = v3[3 + 1];\n    v10 = v3[3];\n    v6 = (0 - (unsigned long long)(char)(v3[3 + 1] < 56) & -64) - -128;\n    v7 = (0 - (unsigned long long)(char)(v3[3 + 1] < 56) & -0x10) + 31;\n    v8 = v4[2 + 1];\n    v9 = (unsigned int)v5 + v4[2 + 1];\n    v4[2 + 1] = (unsigned int)v5 + v4[2 + 1];\n    if ((char)[D] amd64g_calculate_condition(0x2<64>, 0x3<64>, rax<8>, cc_dep2<8>, Conv(1->64, (Conv(64->32, rax<8>) < 0x38<32>))))\n    {\n        v10 = (unsigned int)v10 + 1;\n        v4[3] = v10;\n    }\n    v4[19 + (0 - (unsigned long long)(char)((unsigned int)v5 < 56) & -0x10)] = ((unsigned int)v10 * 8 | (unsigned int)v9 % 0x20000000) * 0x1000000 | ((unsigned int)v10 * 8 | (unsigned int)v9 % 0x20000000) * 0x100 & 0xff0000 | ((unsigned int)v10 * 8 | (unsigned int)v9 % 0x20000000) >> 8 & 0xff00 | ((unsigned int)v10 * 8 | (unsigned int)v9 % 0x20000000) >> 24 & 255;\n    v4[4 + v7] = (unsigned int)v9 * 0x800 & 0xff0000 | (unsigned int)(v9 * 8 >> 24) | (unsigned int)v9 * 0x8000000 | (unsigned int)(v9 * 8 >> 8) & 0xff00;\n    v12 = (char *)&v4[4] + v5;\n    v13 = v6 - v5 - 8;\n    if (!(v6 - v5 - 8 < 8))\n    {\n        v14 = v12 + 8 & -8;\n        *((long long *)v12) = 128;\n        *((long long *)(v12 + v13 - 8)) = *((long long *)(v13 + &g_409318));\n        v15 = v12 - (v12 + 8 & -8);\n        v16 = (char *)&g_409320 + -1 * v15;\n        for (v17 = &v13->padding_0[v15] >> 3; v17 != 0; v16 = &v16[v18])\n        {\n            v17 -= 1;\n            *(v14) = *(v16);\n            v14 = &v14[v18];\n        }\n    }\n    else if (!((v13 & 4) == 0))\n    {\n        *((int *)v12) = 128;\n        *((int *)(v12 + v13 - 4)) = *((int *)(v13 + &g_40931c));\n    }\n    else if (v13 != 0)\n    {\n        *((char *)v12) = 128;\n        if ((v13 & 2) != 0)\n        {\n            *((short *)(v12 + v13 - 2)) = *((short *)(v13 + &g_40931e));\n        }\n    }\n    sub_403180();\n}\n"
        },
        {
            "funcName": "sub_406610",
            "funcStartAddr": "0x406610",
            "funcEndAddr": "0x40661e",
            "decompiledFuncCode": "int sub_406610()\n{\n}\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406ec8",
            "decompiledFuncCode": "int sub_406e50()\n{\n    unsigned int v0;  // [bp+0x0]\n    void *v2;  // rdi\n    unsigned long long v4;  // rax\n    unsigned long long v8;  // rax\n\n    if (fileno(v2) >= 0)\n    {\n        v4 = __freading();\n        if ((v4 == 0 || (unsigned long long)lseek(fileno(v2), 0x0, 0x1) != -1) && sub_407010() != 0)\n        {\n            v8 = fclose(v2);\n            if (v0 != 0)\n            {\n                *(__errno_location()) = v0;\n                v8 = -18446744069414584321;\n            }\n            return v8;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_405fa0",
            "funcStartAddr": "0x405fa0",
            "funcEndAddr": "0x405fd3",
            "decompiledFuncCode": "extern int512_t g_60c420;\n\nint sub_405fa0()\n{\n    void tmp_2;  // tmp #2\n    void tmp_52;  // tmp #52\n    void tmp_123;  // tmp #123\n    unsigned long v1;  // rdi\n    unsigned long v2;  // rsi\n    unsigned long long v3;  // rcx\n    unsigned long long v5;  // rsi\n    unsigned long v6;  // rdx\n\n    tmp_2 = v1;\n    tmp_52 = v1 == 0;\n    v3 = (unsigned int)v2 & 31;\n    v5 = (unsigned int)*((int *)((tmp_52? &g_60c420 : tmp_2) + v2 % 32 * 4 + 8));\n    tmp_123 = ((unsigned int)v6 ^ (unsigned int)(v5 >> (v3 & 31))) & 1;\n    *((unsigned int *)((v1 == 0? &g_60c420 : v1) + v2 % 32 * 4 + 8)) = (unsigned int)(tmp_123 << (v3 & 31)) ^ (unsigned int)v5;\n    return (unsigned int)(v5 >> (v3 & 31)) & 1;\n}\n"
        },
        {
            "funcName": "sub_4060a2",
            "funcStartAddr": "0x4060a2",
            "funcEndAddr": "0x4060cb",
            "decompiledFuncCode": "int sub_4060a2()\n{\n    unsigned long v0;  // [bp-0x30]\n    unsigned long v1;  // [bp-0x28]\n    unsigned long v2;  // [bp-0x20]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v4;  // [bp-0x10]\n    unsigned long v5;  // [bp-0x8]\n    unsigned long v7;  // r15\n    unsigned long v8;  // r14\n    unsigned long v9;  // r13\n    unsigned long v10;  // r12\n    unsigned long v11;  // rbx\n\n    v5 = v7;\n    v4 = v8;\n    v3 = v9;\n    v2 = v10;\n    v1 = stack_base + 0;\n    v0 = v11;\n}\n"
        },
        {
            "funcName": "sub_407d80",
            "funcStartAddr": "0x407d80",
            "funcEndAddr": "0x407dd6",
            "decompiledFuncCode": "extern unsigned int g_60c294;\nextern unsigned int g_60c298;\nextern unsigned int g_60c29c;\nextern unsigned int g_60c460;\nextern unsigned int g_60c464;\nextern unsigned int g_60c468;\nextern unsigned long long g_60c470;\nextern unsigned long long g_60c4a0;\n\nint sub_407d80()\n{\n    unsigned int *v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp+0x8]\n\n    g_60c460 = g_60c29c;\n    g_60c464 = g_60c298;\n    v1 = (unsigned int)v2;\n    v0 = &g_60c460;\n    g_60c29c = g_60c460;\n    g_60c4a0 = g_60c470;\n    g_60c294 = g_60c468;\n    return sub_4077b0();\n}\n"
        },
        {
            "funcName": "sub_405f40",
            "funcStartAddr": "0x405f40",
            "funcEndAddr": "0x405f74",
            "decompiledFuncCode": "int sub_405f40()\n{\n    unsigned int v1;  // [bp+0x100008]\n\n    *(__errno_location()) = v1;\n    return sub_406dc0();\n}\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x40282f",
            "decompiledFuncCode": "typedef struct struct_2 {\n    char padding_0[4231520];\n    char field_409160;\n} struct_2;\n\nextern unsigned int g_40869c;\nextern unsigned int g_4086d8;\nextern unsigned int g_4086e7;\nextern unsigned int g_408721;\nextern unsigned int g_408730;\nextern unsigned int g_408d50;\nextern unsigned int g_408fc0;\nextern unsigned int g_408ff0;\nextern unsigned int g_409028;\nextern unsigned int g_409058;\nextern unsigned int g_409088;\nextern unsigned int g_4090b8;\nextern unsigned int g_4090e8;\nextern unsigned int g_409118;\nextern unsigned int g_40a5c7;\nextern unsigned int g_60c210;\nextern unsigned int g_60c29c;\nextern char g_60c2d8;\nextern char g_60c2d9;\nextern char g_60c2da;\nextern char g_60c2db;\nextern char g_60c2dc;\nextern unsigned long long g_60c2e0;\nextern unsigned long long g_60c2e8;\nextern char g_60c2f0;\nextern unsigned long long stdin;\nextern unsigned long long stdout[7];\n\nint main()\n{\n    unsigned long v0;  // [bp-0xf8]\n    unsigned long long v1;  // [bp-0xf0]\n    unsigned long long *v2;  // [bp-0xe8]\n    unsigned long|char * v3;  // [bp-0xe0]\n    unsigned long long v4;  // [bp-0xd5]\n    unsigned int v5;  // [bp-0xd4]\n    unsigned long|unsigned long long v6;  // [bp-0xd0]\n    unsigned long|char *|unsigned long long|char v7;  // [bp-0xc8]\n    unsigned long|unsigned long long v8;  // [bp-0xc0]\n    char *|unsigned long long v9;  // [bp-0xb8]\n    unsigned long long *v10;  // [bp-0xb0]\n    unsigned long|unsigned long long v11;  // [bp-0xa8]\n    char v12;  // [bp-0xa0]\n    char v13;  // [bp-0x9f]\n    unsigned long long v14;  // [bp-0x9e]\n    char v15;  // [bp-0x9d]\n    unsigned int v16;  // [bp-0x9c]\n    char v17;  // [bp-0x89]\n    unsigned long long v18;  // [bp-0x88]\n    unsigned long long v19;  // [bp-0x80]\n    char v20;  // [bp-0x78]\n    char v21;  // [bp-0x58]\n    unsigned long long v23;  // r14\n    unsigned long long v24;  // r13\n    unsigned long long v25;  // rdi\n    unsigned long long v26;  // rbp\n    unsigned long long v27;  // rsi\n    unsigned long long v28;  // rbx\n    unsigned long long v32;  // rax\n    unsigned long|unsigned int v33;  // r12\n    unsigned long v35;  // rsi\n    char *v38;  // rdi\n    unsigned long long v40;  // rax\n    void *v41;  // rbp\n    char *v43;  // rax\n    unsigned long long v44;  // rcx\n    char *v45;  // r8\n    unsigned long long v46;  // rdx\n    unsigned long long v47;  // r10\n    char *v48;  // rdi\n    char *v49;  // rsi\n    unsigned long long v50;  // cc_dep1\n    unsigned long long v51;  // cc_dep2\n    unsigned long v52;  // d\n    unsigned long long v53;  // cc_dep1\n    unsigned long long v54;  // rax\n    unsigned long long v55;  // rcx\n    unsigned long long v56;  // rax\n    char v57;  // al\n    unsigned long long v58;  // rax\n    unsigned long long v59;  // rdx\n    unsigned long long v60;  // r8\n    unsigned long long v61;  // rax\n    char *|unsigned long long v62;  // r15\n    unsigned long long v63;  // r11\n    unsigned long long v64;  // rdx\n    unsigned long long v65;  // rax\n    unsigned long long v66;  // rsi\n    unsigned long long v67;  // rdx\n    unsigned long long v68;  // rax\n    unsigned long long v69;  // rdx\n    unsigned long long v70;  // rax\n    unsigned long long v71;  // al\n    char *|unsigned long long v72;  // r13\n    char *v73;  // rax\n    unsigned long long v74;  // rcx\n    char *v75;  // rdi\n    char *v76;  // rsi\n    unsigned long long v77;  // cc_dep1\n    unsigned long long v78;  // cc_dep2\n    unsigned long long v79;  // cc_dep1\n    unsigned long long v80;  // r12\n    unsigned long|unsigned int|char v81;  // r14\n    unsigned long long v82;  // r15\n    char *v84;  // rax\n    unsigned int *v85;  // rdi\n    struct_2 *v87;  // rsi\n    char v88;  // sil\n    unsigned long v89;  // rsi\n    char *v91;  // rax\n    unsigned long long v94;  // r14\n    unsigned long long v95;  // rbx\n    char *v96;  // rax\n    char *v97;  // rax\n    unsigned long|unsigned int v98;  // ebx\n    unsigned long long v99;  // rax\n    unsigned long long v100;  // rbx\n    unsigned long long v103;  // rax\n    unsigned long long v106;  // rbx\n    unsigned long long v107;  // rbp\n    unsigned long long v108;  // rbp\n    char *v110;  // rax\n    char *v111;  // rax\n    char *v113;  // rax\n    unsigned long long v114;  // rbp\n    unsigned long long v115;  // rbx\n\n    v23 = 0;\n    v24 = 0;\n    v33 = -18446744069414584321;\n    v26 = v25;\n    v28 = v27;\n    sub_4049d0();\n    setlocale(0x6, 0x40a5c7);\n    bindtextdomain(0x40869c, 0x408d50);\n    textdomain(0x40869c);\n    sub_4085a0();\n    setvbuf(stdout, NULL, 0x1, 0x0);\n    while (true)\n    {\n        v32 = sub_407e00();\n        if ((unsigned int)v32 == -1)\n        {\n            g_60c2e8 = 42;\n            g_60c2e0 = 40;\n            if ((unsigned int)v33 == 0 && v23 != 0)\n            {\n                v35 = \"--tag does not support --text mode\";\n            }\n            if (v23 == 0 || (unsigned int)v33 != 0)\n            {\n                if (v24 != 0)\n                {\n                    v35 = \"the --tag option is meaningless when verifying checksums\";\n                }\n                if (v24 == 0 || v23 == 0)\n                {\n                    v35 = \"the --binary and --text options are meaningless when verifying checksums\";\n                    if (((char)((unsigned long long)!((unsigned int)r12<8>) >> 31) & v24) == 0)\n                    {\n                        if (g_60c2da != 0)\n                        {\n                            v35 = \"the --ignore-missing option is meaningful only when verifying checksums\";\n                        }\n                        else if (g_60c2dc != 0)\n                        {\n                            v35 = \"the --status option is meaningful only when verifying checksums\";\n                        }\n                        else if (g_60c2db != 0)\n                        {\n                            v35 = \"the --warn option is meaningful only when verifying checksums\";\n                        }\n                        else if (g_60c2d9 == 1)\n                        {\n                            v35 = \"the --quiet option is meaningful only when verifying checksums\";\n                        }\n                    }\n                }\n            }\n        }\n        else if ((unsigned int)v32 != 119)\n        {\n            if (v32 > 119)\n            {\n                if ((unsigned int)v32 == 130)\n                {\n                    g_60c2dc = 0;\n                    g_60c2db = 0;\n                    g_60c2d9 = 1;\n                }\n                else if (v32 <= 130)\n                {\n                    if ((unsigned int)v32 == 128)\n                    {\n                        g_60c2da = 1;\n                    }\n                    if ((unsigned int)v32 == 129)\n                    {\n                        g_60c2dc = 1;\n                        g_60c2db = 0;\n                        g_60c2d9 = 0;\n                    }\n                }\n                else\n                {\n                    if ((unsigned int)v32 == 131)\n                    {\n                        g_60c2d8 = 1;\n                    }\n                    if ((unsigned int)v32 == 132)\n                    {\n                        v23 = 1;\n                    }\n                }\n            }\n            else\n            {\n                if ((unsigned int)v32 != 98)\n                {\n                    if (v32 > 98)\n                    {\n                        if ((unsigned int)v32 == 99)\n                        {\n                            v24 = 1;\n                        }\n                        if ((unsigned int)v32 == 116)\n                        {\n                            v33 = 0;\n                        }\n                    }\n                    else\n                    {\n                        if ((unsigned int)v32 == -131)\n                        {\n                            v1 = 0;\n                            v0 = \"David Madore\";\n                            sub_406a80();\n                            exit(0x0); /* do not return */\n                        }\n                        if ((unsigned int)v32 == -130)\n                        {\n                            sub_402c90(); /* do not return */\n                        }\n                    }\n                }\n            }\n            if (((unsigned int)v32 == 132 || v32 <= 119) && ((unsigned int)v32 == 98 || v32 > 119) && (v32 <= 119 || (unsigned int)v32 != 131) && (v32 <= 119 || v32 > 130) && (v32 <= 119 || (unsigned int)v32 != 130))\n            {\n                v33 = 1;\n            }\n        }\n        if ((unsigned int)v32 == 119)\n        {\n            g_60c2dc = 0;\n            g_60c2db = 1;\n            g_60c2d9 = 0;\n        }\n        if (...)\n        {\n            v35 = \"the --strict option is meaningful only when verifying checksums\";\n        }\n        if (...)\n        {\n            error(0x0, 0x0, (unsigned long long)dcgettext(0x0, v35, 0x5));\n        }\n        if (...)\n        {\n            if ((unsigned int)v33 == -1)\n            {\n                v33 = 0;\n            }\n            v10 = v28 + v26 * 8;\n            if (g_60c29c == (unsigned int)v26)\n            {\n                *(v10) = \"-\";\n                v10 = &v10[1];\n            }\n            v2 = v28 + (int)g_60c29c * 8;\n            if (v10 > v2)\n            {\n                v12 = 1;\n                v4 = v24;\n                v14 = v23;\n                v16 = (0 - (unsigned int)(char)(v33 < 1) & -10) + 42;\n                v15 = (0 - (unsigned int)(char)(v33 < 1) & -10) + 42;\n                do\n                {\n                    v38 = *(v2);\n                    v3 = *(v2);\n                    if ((char)v4 != 0)\n                    {\n                        v5 = strcmp(v38, \"-\");\n                        if (v5 == 0)\n                        {\n                            g_60c2f0 = 1;\n                            v41 = stdin;\n                            v3 = dcgettext(0x0, 0x4086d8, 0x5);\n                        }\n                        else\n                        {\n                            v41 = (unsigned long long)(unsigned int)sub_404930();\n                        }\n                        if (v5 == 0 || v41 != 0)\n                        {\n                            v13 = 0;\n                            v94 = 0;\n                            v80 = 0;\n                            v95 = 1;\n                            v18 = 0;\n                            v19 = 0;\n                            v11 = 0;\n                            v6 = 0;\n                            while (true)\n                            {\n                                v43 = __getdelim(&v18, &v19, 0xa, v41);\n                                if (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)))\n                                {\n                                    v44 = (char)*((char *)v18);\n                                    if (*((char *)v18) != 35)\n                                    {\n                                        v45 = v43;\n                                        if (v43[-1] == 10)\n                                        {\n                                            v45 = &v45[-1];\n                                            *(v45) = 0;\n                                            v44 = (char)*((char *)v18);\n                                        }\n                                        v46 = 0;\n                                        do\n                                        {\n                                            v46 += 1;\n                                            v44 = (char)*((char *)(0 + v46));\n                                        }\n                                        while (v44 == 9);\n                                        v47 = 0;\n                                        if (v44 == 92)\n                                        {\n                                            v47 = (char)v4;\n                                            v46 += 1;\n                                        }\n                                        v72 = 0 + v46;\n                                        v48 = \"SHA1\";\n                                        v74 = 4;\n                                        v49 = 0 + v46;\n                                        while (v74 != 0)\n                                        {\n                                            v74 -= 1;\n                                            v50 = *(v49);\n                                            v51 = *(v48);\n                                            v48 = &v48[v52];\n                                            v49 = &v49[v52];\n                                            break;\n                                        }\n                                        v53 = (v50 > v51) - 0 - (v50 < v51);\n                                        if ((char)v53 == 0)\n                                        {\n                                            v54 = (char)*((char *)(0 + v46 + 4));\n                                            v55 = v46 + 4;\n                                            if (*((char *)(0 + v46 + 4)) == 32)\n                                            {\n                                                v54 = (char)*((char *)(0 + v46 + 5));\n                                                v55 = v46 + 5;\n                                            }\n                                            if (v54 == 40)\n                                            {\n                                                v74 = v55 + 1;\n                                                v60 = &v45[-1 * v74];\n                                                if (v60 != v74)\n                                                {\n                                                    v62 = 0 + v74;\n                                                    v63 = v60 - 1;\n                                                    if (v60 != 1)\n                                                    {\n                                                        if (*((char *)(v62 + v60 - 1)) != 41)\n                                                        {\n                                                            do\n                                                            {\n                                                                v63 -= 1;\n                                                            }\n                                                            while (*((char *)(v62 + v63)) != 41 && v63 != 1);\n                                                            if (v63 != 1)\n                                                            {\n                                                                v67 = v62 + v63;\n                                                            }\n                                                        }\n                                                        if (*((char *)(v62 + v60 - 1)) == 41 || *((char *)v62) != 41)\n                                                        {\n                                                            v67 = v62 + v63;\n                                                        }\n                                                    }\n                                                    if (v60 == 1 && *((char *)v62) == 41)\n                                                    {\n                                                        v67 = v62;\n                                                        v63 = 0;\n                                                    }\n                                                    if (v47 != 0 && (*((char *)v62) == 41 || v60 != 1) && (v60 == 1 || *((char *)(v62 + v60 - 1)) == 41 || *((char *)v62) != 41))\n                                                    {\n                                                        v7 = v67;\n                                                        v68 = sub_4029b0();\n                                                        v67 = v7;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else\n                                        {\n                                            v56 = 0;\n                                            v57 = *(v72) == 92;\n                                            v58 = rax<8> + g_60c2e8;\n                                            if (&v45[-1 * v46] >= v58)\n                                            {\n                                                v59 = v46 + g_60c2e0;\n                                                if (*(v9) == 9 || *(v9) == 32)\n                                                {\n                                                    *(v9) = 0;\n                                                    v9 = v59;\n                                                    v8 = v47;\n                                                    v7 = v45;\n                                                    v61 = sub_402950();\n                                                    if (v61 != 0)\n                                                    {\n                                                        v64 = v9;\n                                                        v65 = v9 + 1;\n                                                        if (&v7[-1 * v9 + -1] != 1)\n                                                        {\n                                                            v66 = (char)*((char *)(0 + v64 + 1));\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                if ((!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) != 32 && v66 != 42 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] == 1) && g_60c210 != 0)\n                                {\n                                    g_60c210 = 1;\n                                }\n                                if ((!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) != 32 && v66 == 42 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) == 32) && g_60c210 != 1)\n                                {\n                                    g_60c210 = 0;\n                                    v65 = v64 + 2;\n                                }\n                                if ((!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) != 32 && v66 != 42 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] == 1) && g_60c210 != 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) != 32 && v66 == 42 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && v61 != 0 && &v45[-1 * v46] >= v58 && *((char *)v18) != 35 && (char)v53 != 0 && (*(v9) == 9 || *(v9) == 32) && &v7[-1 * v9 + -1] != 1 && *((char *)(0 + v64 + 1)) == 32)\n                                {\n                                    v62 = 0 + v65;\n                                    if ((char)v8 != 0)\n                                    {\n                                        v71 = (char)(sub_4029b0() != 0);\n                                    }\n                                }\n                                if (v54 == 40 && (char)v53 == 0 && !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && *((char *)v18) != 35 && v60 != v74 && (*((char *)v62) == 41 || v60 != 1) && (v60 == 1 || *((char *)(v62 + v60 - 1)) == 41 || *((char *)v62) != 41) && v47 != 0 && v68 != 0 || v54 == 40 && (char)v53 == 0 && !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) && *((char *)v18) != 35 && v60 != v74 && (*((char *)v62) == 41 || v60 != 1) && (v60 == 1 || *((char *)(v62 + v60 - 1)) == 41 || *((char *)v62) != 41) && v47 == 0)\n                                {\n                                    *((char *)v67) = 0;\n                                    v69 = (char)*((char *)(v62 + v63 + 1));\n                                    v70 = v63 + 1;\n                                    if (*((char *)(v62 + v63 + 1)) == 9 || v69 == 32)\n                                    {\n                                        do\n                                        {\n                                            v70 += 1;\n                                            v69 = (char)*((char *)(v62 + v70));\n                                        }\n                                        while (v69 == 9);\n                                    }\n                                    if (v69 == 61)\n                                    {\n                                        v72 = v62 + v70 + 1;\n                                        v64 = (char)*((char *)(v62 + v70 + 1));\n                                        if (*((char *)(v62 + v70 + 1)) == 32 || v64 == 9)\n                                        {\n                                            v73 = v62 + v70 + 2;\n                                            do\n                                            {\n                                                v64 = *(v73);\n                                                v72 = v73;\n                                                v73 = &v73[1];\n                                            }\n                                            while (v64 == 9);\n                                        }\n                                        v71 = sub_402950();\n                                    }\n                                }\n                                if (...)\n                                {\n                                    v75 = \"-\";\n                                    v74 = 2;\n                                    v76 = v62;\n                                    while (v74 != 0)\n                                    {\n                                        v74 -= 1;\n                                        v77 = *(v76);\n                                        v78 = *(v75);\n                                        v75 = &v75[v52];\n                                        v76 = &v76[v52];\n                                        break;\n                                    }\n                                    v79 = (v77 > v78) - 0 - (v77 < v78);\n                                }\n                                if (...)\n                                {\n                                    v80 = 1;\n                                    if (g_60c2db != 0)\n                                    {\n                                        v82 = (unsigned int)sub_406470();\n                                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x408fc0, 0x5));\n                                    }\n                                }\n                                if (...)\n                                {\n                                    v81 = 0;\n                                    if (g_60c2dc == 0)\n                                    {\n                                        v81 = 0;\n                                        v81 = strchr(v62, 0xa) != 0;\n                                    }\n                                    if ((char)v7 == 0)\n                                    {\n                                        v6 += 1;\n                                        if (g_60c2dc == 0)\n                                        {\n                                            if (v81 != 0)\n                                            {\n                                                v84 = stdout[5];\n                                                if (stdout[5] < stdout[6])\n                                                {\n                                                    stdout[5] = stdout[5] + 1;\n                                                    *(v84) = 92;\n                                                }\n                                                else\n                                                {\n                                                    __overflow();\n                                                }\n                                            }\n                                            sub_402a40();\n                                            v89 = \"FAILED open or read\";\n                                        }\n                                    }\n                                    else if (v17 == 0 || g_60c2da == 0)\n                                    {\n                                        if (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)))\n                                        {\n                                            v8 = g_60c2e0 >> 1;\n                                            *((unsigned long long *)&v7) = (unsigned int)sub_402af0();\n                                            v85 = *((long long *)(unsigned long long)__ctype_tolower_loc());\n                                            while (true)\n                                            {\n                                                v87 = (unsigned long long)v21;\n                                                v88 = (unsigned long long)v21 >> 4;\n                                                if (v85[(unsigned long long)v72[2 * v64]] == (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) && v85[(unsigned long long)v72[1 + 2 * v64]] == (char)*((char *)(4231520 + (unsigned long long)(v21 & 15))))\n                                                {\n                                                    v64 += 1;\n                                                    v64 = v8;\n                                                }\n                                                if (v85[(unsigned long long)v72[2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) || v85[(unsigned long long)v72[1 + 2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)(v21 & 15))))\n                                                {\n                                                    v11 += 1;\n                                                    break;\n                                                    if (g_60c2dc != 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            if (v85[(unsigned long long)v72[2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) || v85[(unsigned long long)v72[1 + 2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)(v21 & 15))))\n                                            {\n                                                v94 = (char)v4;\n                                            }\n                                            else if (g_60c2dc == 0 && (v85[(unsigned long long)v72[2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) || v85[(unsigned long long)v72[1 + 2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)(v21 & 15)))))\n                                            {\n                                                v91 = stdout[5];\n                                            }\n                                            else if (v85[(unsigned long long)v72[2 * v64]] == (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) && v8 == v64 && v85[(unsigned long long)v72[1 + 2 * v64]] == (char)*((char *)(4231520 + (unsigned long long)(v21 & 15))))\n                                            {\n                                                v13 = g_60c2dc;\n                                            }\n                                            else if (g_60c2dc == 0 && (v85[(unsigned long long)v72[2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)((unsigned int)rsi<8> & 15))) || v85[(unsigned long long)v72[1 + 2 * v64]] != (char)*((char *)(4231520 + (unsigned long long)(v21 & 15)))))\n                                            {\n                                                v8 = v64;\n                                                v7 = v74;\n                                                sub_402a40();\n                                            }\n                                        }\n                                        else\n                                        {\n                                            v64 = 0;\n                                        }\n                                        if ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0)\n                                        {\n                                            v13 = g_60c2dc;\n                                            if (g_60c2dc == 0)\n                                            {\n                                                v13 = g_60c2d9;\n                                                if (g_60c2d9 == 0)\n                                                {\n                                                    if (v81 != 0)\n                                                    {\n                                                        v13 = v7;\n                                                    }\n                                                    else\n                                                    {\n                                                        v7 = v7;\n                                                        sub_402a40();\n                                                        v13 = v7;\n                                                    }\n                                                }\n                                            }\n                                            if (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) || g_60c2dc == 0 && g_60c2d9 == 0 && v81 != 0)\n                                            {\n                                                v91 = stdout[5];\n                                                if (stdout[5] < stdout[6])\n                                                {\n                                                    stdout[5] = stdout[5] + 1;\n                                                    *(v91) = 92;\n                                                }\n                                                else\n                                                {\n                                                    v8 = v64;\n                                                    v7 = g_60c2e0 >> 1;\n                                                    __overflow();\n                                                    v74 = v7;\n                                                    v64 = v8;\n                                                }\n                                                v8 = v64;\n                                                v7 = v74;\n                                                sub_402a40();\n                                                if (v7 != v8)\n                                                {\n                                                    v89 = \"FAILED\";\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if ((g_60c2dc == 0 && g_60c2d9 == 0 && v81 == 0 && (char)v7 != 0 && (v17 == 0 || g_60c2da == 0) && ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0) || (char)v7 != 0 && (v17 == 0 || g_60c2da == 0) && ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0) && (g_60c2dc == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (g_60c2d9 == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) || v81 != 0) && v7 == v8) && g_60c2d9 == 0)\n                                    {\n                                        v89 = \"OK\";\n                                    }\n                                    if (g_60c2dc == 0 && (char)v7 == 0 || (g_60c2dc == 0 && g_60c2d9 == 0 && v81 == 0 && (char)v7 != 0 && (v17 == 0 || g_60c2da == 0) && ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0) || (char)v7 != 0 && (v17 == 0 || g_60c2da == 0) && ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0) && (g_60c2dc == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (g_60c2d9 == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) || v81 != 0) && v7 == v8) && g_60c2d9 == 0 || (char)v7 != 0 && (v17 == 0 || g_60c2da == 0) && ((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>) || (*((char *)v41) & 48) != 0) && (g_60c2dc == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (g_60c2d9 == 0 || !((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>))) && (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)) || v81 != 0) && v7 != v8)\n                                    {\n                                        __printf_chk(0x1, \": %s\\n\", dcgettext(0x0, v89, 0x5));\n                                    }\n                                    v94 = (char)v4;\n                                }\n                                if (...)\n                                {\n                                    v95 += 1;\n                                    v115 = (unsigned int)sub_406470();\n                                    error(0x1, 0x0, (unsigned long long)dcgettext(0x0, 0x4086e7, 0x5));\n                                }\n                                if (...)\n                                {\n                                    free(v18);\n                                    v98 = *((int *)v41) & 32;\n                                    if (((char)*((int *)v41) & 32) == 0)\n                                    {\n                                        if (v5 != 0)\n                                        {\n                                            v99 = sub_406e50();\n                                        }\n                                        if (v5 == 0 || v99 == 0)\n                                        {\n                                            if (v94 != 0)\n                                            {\n                                                if (g_60c2dc == 0)\n                                                {\n                                                    if (v80 != 0)\n                                                    {\n                                                        error(0x0, 0x0, (unsigned long long)dcngettext(0x0, 0x409058, 0x409028, v80, 0x5));\n                                                    }\n                                                    if (v6 != 0)\n                                                    {\n                                                        error(0x0, 0x0, (unsigned long long)dcngettext(0x0, 0x4090b8, 0x409088, v6, 0x5));\n                                                    }\n                                                    if (v11 != 0)\n                                                    {\n                                                        error(0x0, 0x0, (unsigned long long)dcngettext(0x0, 0x409118, 0x4090e8, v11, 0x5));\n                                                    }\n                                                    if (v13 == 0 && g_60c2da != 0)\n                                                    {\n                                                        v114 = (unsigned int)sub_406470();\n                                                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x408730, 0x5));\n                                                    }\n                                                }\n                                                if (v6 == 0 && v11 == 0 && v13 != 0)\n                                                {\n                                                    v98 = (unsigned int)g_60c2d8 ^ 1 | v98;\n                                                }\n                                            }\n                                            else\n                                            {\n                                                v107 = (unsigned int)sub_406470();\n                                                error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x408ff0, 0x5));\n                                            }\n                                            v103 = v98 & 1;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        v100 = (unsigned int)sub_406470();\n                                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x408721, 0x5));\n                                        v103 = 0;\n                                    }\n                                }\n                            }\n                            if (...)\n                            {\n                                *((unsigned long long *)&v12) = v12 & v103;\n                            }\n                            else if (...)\n                            {\n                                v106 = (unsigned int)sub_406470();\n                                error(0x0, *(__errno_location()), \"%s\");\n                                v103 = 0;\n                            }\n                        }\n                        v106 = (unsigned int)sub_406470();\n                        error(0x0, *(__errno_location()), \"%s\");\n                        v103 = 0;\n                        *((unsigned long long *)&v12) = v12 & v103;\n                    }\n                    else if (sub_402af0() == 0)\n                    {\n                        v12 = 0;\n                    }\n                    else\n                    {\n                        v40 = strchr(v3, 0x5c);\n                        if (strchr(v3, 0xa) != 0 || v40 != 0)\n                        {\n                            if ((char)v14 == 0)\n                            {\n                                v96 = stdout[5];\n                                if (stdout[5] < stdout[6])\n                                {\n                                    stdout[5] = stdout[5] + 1;\n                                    *(v96) = 92;\n                                }\n                                else\n                                {\n                                    __overflow();\n                                }\n                            }\n                            else\n                            {\n                                v97 = stdout[5];\n                                if (stdout[6] > stdout[5])\n                                {\n                                    stdout[5] = stdout[5] + 1;\n                                    *(v97) = 92;\n                                }\n                                else\n                                {\n                                    __overflow();\n                                }\n                            }\n                        }\n                        if (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x24<64>, Shr(Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), 0x1<8>), Load(addr=0x60c2e0<64>, size=8, endness=Iend_LE), cc_ndep<8>)))\n                        {\n                            v108 = 0;\n                            while (true)\n                            {\n                                v108 += 1;\n                                __printf_chk(0x1, \"%02x\", (unsigned int)v20);\n                                if (g_60c2e0 >> 1 <= v108)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                        if ((char)v14 == 0)\n                        {\n                            v110 = stdout[5];\n                            if (stdout[5] < stdout[6])\n                            {\n                                stdout[5] = stdout[5] + 1;\n                                *(v110) = 32;\n                            }\n                            else\n                            {\n                                __overflow();\n                            }\n                            v111 = stdout[5];\n                            if (stdout[5] < stdout[6])\n                            {\n                                stdout[5] = stdout[5] + 1;\n                                *(v111) = v15;\n                            }\n                            else\n                            {\n                                __overflow();\n                            }\n                            sub_402a40();\n                        }\n                        else\n                        {\n                            fwrite_unlocked(\"SHA1\", 0x1, 0x4, stdout);\n                            fwrite_unlocked(\" (\", 0x1, 0x2, stdout);\n                            sub_402a40();\n                            fwrite_unlocked(\") = \", 0x1, 0x4, stdout);\n                        }\n                        v113 = stdout[5];\n                        if (stdout[5] < stdout[6])\n                        {\n                            stdout[5] = stdout[5] + 1;\n                            *(v113) = 10;\n                        }\n                        else\n                        {\n                            __overflow();\n                        }\n                    }\n                    v2 = &v2[1];\n                }\n                while (v10 > v2);\n            }\n            else\n            {\n                v12 = 1;\n            }\n            if (g_60c2f0 != 0)\n            {\n                if ((char)(sub_406e50() + 1 == 0))\n                {\n                    break;\n                }\n            }\n            return (unsigned int)v12 ^ 1;\n        }\n        if (...)\n        {\n            sub_402c90(); /* do not return */\n        }\n    }\n    error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x4086d8, 0x5));\n}\n"
        },
        {
            "funcName": "sub_404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x4047b7",
            "decompiledFuncCode": "int sub_404760()\n{\n    unsigned long long v0;  // [bp-0xa8]\n    unsigned long long v1;  // [bp-0xa0]\n    unsigned long long v2;  // [bp-0x98]\n    unsigned long long v3;  // [bp-0x90]\n\n    v0 = 17279655951921914625;\n    v1 = 1167088121787636990;\n    v2 = 3285377520;\n    v3 = 0;\n    sub_404460();\n    return sub_404320();\n}\n"
        },
        {
            "funcName": "sub_4062c0",
            "funcStartAddr": "0x4062c0",
            "funcEndAddr": "0x40632d",
            "decompiledFuncCode": "int sub_4062c0()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_405da0();\n}\n"
        },
        {
            "funcName": "sub_406a20",
            "funcStartAddr": "0x406a20",
            "funcEndAddr": "0x406a79",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n} struct_0;\n\nint sub_406a20()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long long v2;  // r9\n    struct_0 *v3;  // r8\n    unsigned long long v4;  // rax\n    unsigned long long *v5;  // r10\n    unsigned long long v6;  // rax\n    unsigned long long *v7;  // r10\n    unsigned long long v8;  // rax\n\n    v2 = 0;\n    do\n    {\n        v4 = v3->field_0;\n        if (v3->field_0 <= 47)\n        {\n            v5 = v4 + v3->field_10;\n            v3->field_0 = (unsigned int)v4 + 8;\n            v6 = *(v5);\n            v0 = *(v5);\n            if (v6 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            v7 = v3->field_8;\n            v3->field_8 = v3->field_8 + 8;\n            v8 = *(v7);\n            v0 = *(v7);\n            if (v8 == 0)\n            {\n                break;\n            }\n        }\n        v2 += 1;\n    }\n    while (v2 != 10);\n    return sub_406620();\n}\n"
        },
        {
            "funcName": "sub_406e10",
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406e3c",
            "decompiledFuncCode": "extern unsigned int g_40a48f;\nextern unsigned int g_60c220;\n\nint sub_406e10()\n{\n    dcgettext(0x0, 0x40a48f, 0x5);\n    error(g_60c220, 0x0, \"%s\");\n}\n"
        },
        {
            "funcName": "sub_405f80",
            "funcStartAddr": "0x405f80",
            "funcEndAddr": "0x405f8f",
            "decompiledFuncCode": "extern int512_t g_60c420;\n\nint sub_405f80()\n{\n    unsigned long v1;  // rdi\n\n    return *((int *)(v1 == 0? &g_60c420 : v1));\n}\n"
        },
        {
            "funcName": "sub_406e3c",
            "funcStartAddr": "0x406e3c",
            "funcEndAddr": "0x406e41",
            "decompiledFuncCode": "int sub_406e3c()\n{\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_406b40",
            "funcStartAddr": "0x406b40",
            "funcEndAddr": "0x406bb4",
            "decompiledFuncCode": "extern unsigned int g_40a152;\nextern unsigned int g_40a17d;\nextern unsigned int g_40a3b0;\n\nint sub_406b40()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40a152, 0x5));\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40a17d, 0x5));\n    dcgettext(0x0, 0x40a3b0, 0x5);\n}\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406de8",
            "decompiledFuncCode": "int sub_406dc0()\n{\n    unsigned long v0;  // [bp-0x10]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_406bc0();\n}\n"
        },
        {
            "funcName": "sub_406280",
            "funcStartAddr": "0x406280",
            "funcEndAddr": "0x406296",
            "decompiledFuncCode": "int sub_406280()\n{\n}\n"
        },
        {
            "funcName": "sub_406430",
            "funcStartAddr": "0x406430",
            "funcEndAddr": "0x40643d",
            "decompiledFuncCode": "int sub_406430()\n{\n}\n"
        },
        {
            "funcName": "sub_406270",
            "funcStartAddr": "0x406270",
            "funcEndAddr": "0x40627a",
            "decompiledFuncCode": "int sub_406270()\n{\n}\n"
        },
        {
            "funcName": "sub_4065d0",
            "funcStartAddr": "0x4065d0",
            "funcEndAddr": "0x4065e1",
            "decompiledFuncCode": "int sub_4065d0()\n{\n}\n"
        },
        {
            "funcName": "sub_406580",
            "funcStartAddr": "0x406580",
            "funcEndAddr": "0x406593",
            "decompiledFuncCode": "int sub_406580()\n{\n}\n"
        },
        {
            "funcName": "sub_40314d",
            "funcStartAddr": "0x40314d",
            "funcEndAddr": "0x40317a",
            "decompiledFuncCode": "int sub_40314d()\n{\n    unsigned int v1[5];  // rsi\n    unsigned int v2[5];  // rdi\n\n    v1[0] = v2[0] * 0x1000000 | v2[0] * 0x100 & 0xff0000 | v2[0] >> 8 & 0xff00 | v2[0] >> 24 & 255;\n    v1[1] = v2[1] * 0x1000000 | v2[1] * 0x100 & 0xff0000 | v2[1] >> 8 & 0xff00 | v2[1] >> 24 & 255;\n    v1[1] = v2[1] * 0x1000000 | v2[1] * 0x100 & 0xff0000 | v2[1] >> 8 & 0xff00 | v2[1] >> 24 & 255;\n    v1[1 + 1] = v2[1 + 1] * 0x1000000 | v2[1 + 1] * 0x100 & 0xff0000 | v2[1 + 1] >> 8 & 0xff00 | v2[1 + 1] >> 24 & 255;\n    v1[2] = v2[2] * 0x1000000 | v2[2] * 0x100 & 0xff0000 | v2[2] >> 8 & 0xff00 | v2[2] >> 24 & 255;\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402c68",
            "decompiledFuncCode": "extern char g_60c2da;\nextern char g_60c2f0;\nextern unsigned long long stdin;\n\nint sub_402af0()\n{\n    unsigned long long v1;  // rcx\n    unsigned long long v2;  // rdi\n    unsigned long long v4;  // cc_dep1\n    unsigned long long v5;  // cc_dep2\n    unsigned long v6;  // d\n    char *v7;  // rsi\n    char *v8;  // rdi\n    char *v9;  // rdx\n    unsigned long long v10;  // cc_dep1\n    unsigned long long v11;  // rbx\n    unsigned long long v13;  // rax\n    unsigned long long v15;  // rax\n    unsigned long long v16;  // r12\n    unsigned int *v17;  // rbx\n    unsigned long long v18;  // rax\n    unsigned long long v20;  // rbp\n    unsigned long long v21;  // rbx\n    unsigned long long v23;  // rax\n\n    v1 = 2;\n    v8 = \"-\";\n    v7 = v2;\n    while (v1 != 0)\n    {\n        v1 -= 1;\n        v4 = *(v7);\n        v5 = *(v8);\n        v8 = &v8[v6];\n        v7 = &v7[v6];\n        break;\n    }\n    *(v9) = 0;\n    v10 = (v4 > v5) - 0 - (v4 < v5);\n    if ((char)v10 == 0)\n    {\n        v11 = stdin;\n        g_60c2f0 = 1;\n        sub_404900();\n        v13 = sub_4047c0();\n    }\n    else\n    {\n        v11 = (unsigned int)sub_404930();\n        if (v11 != 0)\n        {\n            sub_404900();\n            v15 = sub_4047c0();\n            if (v15 == 0)\n            {\n                v18 = sub_406e50();\n                if (v18 != 0)\n                {\n                    v16 = 0;\n                    v21 = (unsigned int)sub_406470();\n                    error(0x0, *(__errno_location()), \"%s\");\n                }\n            }\n        }\n        else\n        {\n            v16 = g_60c2da;\n            v17 = __errno_location();\n            if (g_60c2da != 0 && *(v17) == 2)\n            {\n                *(v9) = 1;\n            }\n            if (g_60c2da == 0 || *(v17) != 2)\n            {\n                v16 = 0;\n                sub_406470();\n                error(0x0, *(v17), \"%s\");\n            }\n        }\n    }\n    if ((char)v10 == 0 || v11 != 0)\n    {\n        if (((char)v10 == 0 || v15 != 0) && (v13 != 0 || (char)v10 != 0))\n        {\n            v16 = 0;\n            v20 = (unsigned int)sub_406470();\n            error(0x0, *(__errno_location()), \"%s\");\n            if (stdin != v11)\n            {\n                sub_406e50();\n            }\n        }\n        if (((char)v10 == 0 || v15 == 0) && ((char)v10 == 0 || v18 == 0) && (v13 == 0 || (char)v10 != 0))\n        {\n            v16 = 1;\n        }\n    }\n    v23 = v16;\n    return v23;\n}\n"
        },
        {
            "funcName": "sub_406000",
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x40602b",
            "decompiledFuncCode": "extern char g_60c420;\n\nint sub_406000()\n{\n    void tmp_2;  // tmp #2\n    void tmp_11;  // tmp #11\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long long v3[7];  // rdi\n    unsigned long v4;  // rsi\n    unsigned long v5;  // rdx\n\n    tmp_2 = v2;\n    tmp_11 = v2 == 0;\n    v3 = (v2 == 0? &g_60c420 : v2);\n    *((int *)(tmp_11? &g_60c420 : tmp_2)) = 10;\n    if (v4 != 0 && v5 != 0)\n    {\n        v3[5] = v4;\n        v3[6] = v5;\n        return &g_60c420;\n    }\n    if (v5 == 0 || v4 == 0)\n    {\n        v0 = &g_60c420;\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_4047c0",
            "funcStartAddr": "0x4047c0",
            "funcEndAddr": "0x4048d8",
            "decompiledFuncCode": "int sub_4047c0()\n{\n    unsigned long long v0;  // [bp-0xc8]\n    unsigned long long v1;  // [bp-0xc0]\n    unsigned long long v2;  // [bp-0xb8]\n    unsigned long long v3;  // [bp-0xb0]\n    unsigned long v6;  // r12\n    void *v7;  // r12\n    unsigned long long v8;  // rbx\n    unsigned int *v9;  // rdi\n    unsigned long long v10;  // rax\n\n    if (v6 != 0)\n    {\n        v3 = 0;\n        v6 = malloc(0x8048);\n        v0 = 17279655951921914625;\n        v1 = 1167088121787636990;\n        v2 = 3285377520;\n        while (true)\n        {\n            v8 = 0;\n            while (true)\n            {\n                v10 = fread_unlocked(v7 + v8, 0x1, 0x8000 - v8, v9);\n                v8 += v10;\n                if (v8 != 0x8000)\n                {\n                    if (v10 == 0 && ((char)*(v9) & 32) != 0)\n                    {\n                        free(v7);\n                        return 1;\n                    }\n                    if (v10 == 0 && ((char)*(v9) & 32) == 0 || ((char)*(v9) & 16) != 0 && v10 != 0)\n                    {\n                        if (v8 != 0)\n                        {\n                            sub_404460();\n                        }\n                        sub_404320();\n                        free(v7);\n                        return 0;\n                    }\n                }\n                else\n                {\n                    sub_403180();\n                }\n            }\n        }\n    }\n    else\n    {\n        return 1;\n    }\n}\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x406451",
            "decompiledFuncCode": "int sub_406440()\n{\n}\n"
        },
        {
            "funcName": "sub_406be0",
            "funcStartAddr": "0x406be0",
            "funcEndAddr": "0x406c01",
            "decompiledFuncCode": "int sub_406be0()\n{\n    void tmp_10;  // tmp #10\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rdi\n\n    tmp_10 = v2;\n    v4 = v2 * v3;\n    v5 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_406e10(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_4065b0",
            "funcStartAddr": "0x4065b0",
            "funcEndAddr": "0x4065c2",
            "decompiledFuncCode": "int sub_4065b0()\n{\n}\n"
        },
        {
            "funcName": "sub_405fe0",
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x405ff3",
            "decompiledFuncCode": "extern int512_t g_60c420;\n\nint sub_405fe0()\n{\n    unsigned long v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned int v3;  // esi\n\n    v2 = (unsigned int)*((int *)((v1 == 0? &g_60c420 : v1) + 4));\n    *((unsigned int *)((v1 == 0? &g_60c420 : v1) + 4)) = v3;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_403180",
            "funcStartAddr": "0x403180",
            "funcEndAddr": "0x40431d",
            "decompiledFuncCode": "int sub_403180()\n{\n    void tmp_87;  // tmp #87\n    void tmp_369;  // tmp #369\n    void tmp_377;  // tmp #377\n    void tmp_419;  // tmp #419\n    void tmp_694;  // tmp #694\n    void tmp_758;  // tmp #758\n    void tmp_849;  // tmp #849\n    void tmp_904;  // tmp #904\n    void tmp_919;  // tmp #919\n    void tmp_439;  // tmp #439\n    void tmp_530;  // tmp #530\n    void tmp_585;  // tmp #585\n    void tmp_621;  // tmp #621\n    void tmp_676;  // tmp #676\n    void tmp_697;  // tmp #697\n    void tmp_424;  // tmp #424\n    void tmp_551;  // tmp #551\n    void tmp_641;  // tmp #641\n    void tmp_854;  // tmp #854\n    void tmp_926;  // tmp #926\n    void tmp_314;  // tmp #314\n    void tmp_445;  // tmp #445\n    void tmp_607;  // tmp #607\n    void tmp_614;  // tmp #614\n    unsigned int v0;  // [bp-0xd0]\n    void tmp_686;  // tmp #686\n    void tmp_326;  // tmp #326\n    void tmp_364;  // tmp #364\n    void tmp_523;  // tmp #523\n    void tmp_628;  // tmp #628\n    void tmp_813;  // tmp #813\n    void tmp_841;  // tmp #841\n    void tmp_925;  // tmp #925\n    void tmp_284;  // tmp #284\n    void tmp_398;  // tmp #398\n    void tmp_400;  // tmp #400\n    void tmp_425;  // tmp #425\n    void tmp_513;  // tmp #513\n    void tmp_531;  // tmp #531\n    void tmp_583;  // tmp #583\n    void tmp_599;  // tmp #599\n    void tmp_627;  // tmp #627\n    void tmp_679;  // tmp #679\n    void tmp_719;  // tmp #719\n    void tmp_724;  // tmp #724\n    void tmp_729;  // tmp #729\n    void tmp_842;  // tmp #842\n    void tmp_891;  // tmp #891\n    void tmp_914;  // tmp #914\n    void tmp_929;  // tmp #929\n    void tmp_930;  // tmp #930\n    void tmp_546;  // tmp #546\n    void tmp_557;  // tmp #557\n    void tmp_567;  // tmp #567\n    void tmp_600;  // tmp #600\n    void tmp_601;  // tmp #601\n    void tmp_605;  // tmp #605\n    void tmp_820;  // tmp #820\n    void tmp_932;  // tmp #932\n    void tmp_512;  // tmp #512\n    void tmp_544;  // tmp #544\n    void tmp_611;  // tmp #611\n    void tmp_661;  // tmp #661\n    void tmp_685;  // tmp #685\n    void tmp_783;  // tmp #783\n    void tmp_833;  // tmp #833\n    void tmp_908;  // tmp #908\n    void tmp_383;  // tmp #383\n    void tmp_388;  // tmp #388\n    void tmp_393;  // tmp #393\n    void tmp_468;  // tmp #468\n    void tmp_529;  // tmp #529\n    void tmp_552;  // tmp #552\n    void tmp_636;  // tmp #636\n    void tmp_649;  // tmp #649\n    void tmp_707;  // tmp #707\n    void tmp_771;  // tmp #771\n    void tmp_779;  // tmp #779\n    void tmp_781;  // tmp #781\n    void tmp_784;  // tmp #784\n    void tmp_836;  // tmp #836\n    void tmp_344;  // tmp #344\n    void tmp_389;  // tmp #389\n    void tmp_401;  // tmp #401\n    void tmp_457;  // tmp #457\n    void tmp_595;  // tmp #595\n    void tmp_625;  // tmp #625\n    void tmp_708;  // tmp #708\n    void tmp_730;  // tmp #730\n    void tmp_878;  // tmp #878\n    void tmp_322;  // tmp #322\n    void tmp_382;  // tmp #382\n    void tmp_501;  // tmp #501\n    void tmp_508;  // tmp #508\n    void tmp_624;  // tmp #624\n    void tmp_714;  // tmp #714\n    void tmp_838;  // tmp #838\n    void tmp_839;  // tmp #839\n    void tmp_906;  // tmp #906\n    void tmp_363;  // tmp #363\n    void tmp_704;  // tmp #704\n    void tmp_753;  // tmp #753\n    void tmp_251;  // tmp #251\n    void tmp_309;  // tmp #309\n    unsigned int v1;  // [bp-0xcc]\n    unsigned int v2;  // [bp-0xc8]\n    unsigned int v3;  // [bp-0xc4]\n    unsigned int v4;  // [bp-0xc0]\n    unsigned int v5;  // [bp-0xbc]\n    unsigned int v6;  // [bp-0xb8]\n    unsigned int v7;  // [bp-0xb4]\n    unsigned int v8;  // [bp-0xb0]\n    unsigned int v9;  // [bp-0xac]\n    unsigned int v10;  // [bp-0xa8]\n    unsigned int v11;  // [bp-0xa4]\n    unsigned int v12;  // [bp-0xa0]\n    unsigned int v13;  // [bp-0x9c]\n    unsigned int v14;  // [bp-0x98]\n    unsigned int v15;  // [bp-0x94]\n    unsigned int v16;  // [bp-0x90]\n    unsigned int v17;  // [bp-0x8c]\n    unsigned long v18;  // [bp-0x88]\n    unsigned int v19[6];  // [bp-0x80]\n    unsigned int v20;  // [bp-0x78]\n    unsigned int v21;  // [bp-0x74]\n    unsigned int v22;  // [bp-0x70]\n    unsigned int v23;  // [bp-0x6c]\n    unsigned int v24;  // [bp-0x68]\n    unsigned int v25;  // [bp-0x64]\n    unsigned int v26;  // [bp-0x60]\n    unsigned int v27;  // [bp-0x5c]\n    unsigned int v28;  // [bp-0x58]\n    unsigned int v29;  // [bp-0x54]\n    unsigned int v30;  // [bp-0x50]\n    unsigned int v31;  // [bp-0x4c]\n    unsigned int v32;  // [bp-0x48]\n    unsigned int v33;  // [bp-0x44]\n    unsigned int v34;  // [bp-0x40]\n    unsigned int v35;  // [bp-0x3c]\n    unsigned long long v36;  // [bp-0x10]\n    unsigned int v38;  // r10d\n    unsigned long long v39;  // r14\n    unsigned long long v40;  // rdi\n    unsigned long v42;  // rsi\n    unsigned int v44[7];  // rdx\n    unsigned int v45[7];  // rbx\n    unsigned long long v46;  // rdi\n    char v47;  // r10b\n    unsigned long long v49;  // r8\n    unsigned long long v50;  // rax\n    unsigned long long v51;  // rdx\n    unsigned long long v52;  // r9\n    unsigned long v53;  // rcx\n    unsigned long long v54;  // rbp\n    unsigned long long v55;  // rcx\n    unsigned long long v56;  // rdi\n    unsigned long long v57;  // rsi\n    unsigned long long v59;  // r10\n    unsigned int v61;  // ebx\n    unsigned long long v62;  // r13\n    unsigned long long v63;  // r14\n    unsigned long long v64;  // rbp\n    unsigned long v65;  // rax\n    unsigned long long v66;  // rsi\n    unsigned long long v67;  // r8\n    unsigned long v68;  // r9\n    unsigned long v69;  // rdi\n    unsigned long long v70;  // rdx\n    unsigned long long v71;  // r15\n    unsigned long long v72;  // r15\n    unsigned long long v73;  // r11\n    unsigned long long v74;  // r10\n    unsigned long v75;  // r8\n    unsigned long long v76;  // rsi\n    unsigned long v77;  // rdi\n    unsigned long long v79;  // rdx\n    unsigned long v80;  // rax\n    unsigned long long v81;  // r9\n    unsigned long long v82;  // r8\n    unsigned long long v83;  // rdi\n    unsigned long v84;  // rbx\n    unsigned int v85;  // esi\n    unsigned long v86;  // r15\n    unsigned long long v87;  // rdx\n    unsigned long v88;  // r14\n    unsigned long long v89;  // rax\n    unsigned long v90;  // rbp\n    unsigned long v91;  // r13\n    unsigned long long v92;  // r12\n    unsigned long v93;  // r15\n    unsigned long long v94;  // r13\n    unsigned long long v95;  // r12\n    unsigned long v96;  // r14\n    unsigned long long v97;  // r11\n    unsigned long v98;  // rbp\n    unsigned long long v99;  // r15\n    unsigned long long v100;  // r14\n    unsigned long long v101;  // r13\n    unsigned long v102;  // r11\n    unsigned long long v103;  // r12\n    unsigned long v104;  // r10\n    unsigned long long v105;  // r8\n    unsigned long long v106;  // rsi\n    unsigned long v107;  // r9\n    unsigned long long v108;  // rdi\n    unsigned long long v109;  // rbx\n    unsigned long long v110;  // r11\n    unsigned long v111;  // rdx\n    unsigned long v112;  // r9\n    unsigned long long v113;  // rdi\n    unsigned long long v114;  // r10\n    unsigned int v115;  // ebx\n    unsigned long long v116;  // rsi\n    unsigned long v117;  // cc_ndep\n    unsigned long v118;  // r8\n    unsigned long long v119;  // rbp\n    unsigned long long v120;  // rax\n    unsigned long v121;  // rdx\n    unsigned long long v122;  // rbx\n    unsigned long long v123;  // rbp\n    unsigned long v124;  // r9\n    unsigned long long v125;  // rdi\n    unsigned long v126;  // r8\n    unsigned long long v127;  // r14\n    unsigned long v128;  // cc_ndep\n    unsigned long long v129;  // r15\n    unsigned long long v130;  // r10\n    unsigned long long v131;  // rax\n    unsigned long long v132;  // r14\n    unsigned long long v133;  // r13\n    unsigned long v134;  // rdx\n    unsigned long long v135;  // r12\n    unsigned long v136;  // rbx\n    unsigned long long v137;  // r10\n    unsigned long v138;  // r9\n    unsigned long long v139;  // rdi\n    unsigned long long v140;  // rax\n    unsigned long long v141;  // cc_dep1\n    unsigned long v142;  // cc_ndep\n    unsigned long long v143;  // r8\n    unsigned long long v144;  // rsi\n    unsigned long v145;  // rdx\n    unsigned long long v146;  // r11\n    unsigned long long v147;  // r10\n    unsigned long v148;  // r9\n    unsigned long long v149;  // rbx\n    unsigned long long v151;  // rdi\n    unsigned long v152;  // cc_ndep\n    unsigned long long v153;  // rsi\n    unsigned long long v154;  // r8\n    unsigned long long v155;  // rbx\n    unsigned long v156;  // r10\n    unsigned long long v157;  // r15\n    unsigned long long v158;  // rbp\n    unsigned long long v159;  // rdi\n    unsigned long long v160;  // r11\n    unsigned long v161;  // r8\n    unsigned long v162;  // cc_ndep\n    unsigned long v163;  // rdx\n    unsigned long long v164;  // rsi\n    unsigned long long v165;  // r9\n    unsigned long long v166;  // rbp\n    unsigned long long v167;  // r8\n    unsigned long long v168;  // rdi\n    unsigned long long v169;  // rbx\n    unsigned long v170;  // r10\n    unsigned long v171;  // r11\n    unsigned long long v172;  // rsi\n    unsigned long v173;  // r15\n    unsigned long long v174;  // r14\n    unsigned long long v175;  // rdx\n    unsigned long long v176;  // rax\n    unsigned long v177;  // r12\n    unsigned long long v178;  // r9\n    unsigned long long v179;  // r14\n    unsigned long v180;  // r15\n    unsigned long long v181;  // rbx\n    unsigned long v182;  // rbp\n    unsigned long long v184;  // r13\n    unsigned long long v185;  // r8\n    unsigned long long v186;  // r11\n    unsigned long v188;  // r8\n    unsigned int v190;  // r14d\n    unsigned long long v191;  // r14\n\n    v38 = 0;\n    v36 = v39;\n    v45 = v44;\n    tmp_87 = (unsigned int)v42 + v44[2 + 1];\n    v46 = v44[1];\n    *((unsigned int *[7])&v19[0]) = v44;\n    v47 = [D] amd64g_calculate_condition(0x2<64>, 0x3<64>, rsi<8>, Conv(32->64, Load(addr=(rdx<8> + 0x14<64>), size=4, endness=Iend_LE)), cc_ndep<8>);\n    v49 = v44[1 + 1];\n    v18 = (v42 & -4) + v40;\n    v50 = v44[0];\n    v51 = v44[1];\n    v52 = v45[2];\n    v45[2 + 1] = tmp_87;\n    v45[3] = v45[3] + (unsigned int)v42 % 0x100000000 + r10<4>;\n    if (v53 < v18)\n    {\n        v15 = v45[2];\n        v54 = v46;\n        v53 = v40;\n        v14 = v49;\n        v12 = v51;\n        v17 = v50;\n        v13 = v46;\n        v56 = v14;\n        do\n        {\n            v57 = 0;\n            do\n            {\n                v20 = *((int *)(v55 + v57)) * 0x1000000 | *((int *)(v55 + v57)) * 0x100 & 0xff0000 | *((int *)(v55 + v57)) >> 8 & 0xff00 | *((int *)(v55 + v57)) >> 24 & 255;\n                v57 += 4;\n            }\n            while (v57 != 64);\n            v59 = v21;\n            v61 = v22;\n            v62 = v24;\n            v63 = v25;\n            tmp_369 = v22 + v54 + 1518500249;\n            tmp_377 = (((unsigned int)v54 ^ (unsigned int)v56) & (unsigned int)v51 ^ (unsigned int)v56) + ((unsigned int)v50 * 32 | (unsigned int)v50 >> 27) + (unsigned int)(v20 + v52 + 1518500249);\n            tmp_419 = (((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ (unsigned int)v54) & (unsigned int)v50 ^ (unsigned int)v54;\n            v64 = v23;\n            tmp_694 = ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 2 | (((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 0x40000000;\n            tmp_758 = ((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27) >> 2 | (((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27)) * 0x40000000;\n            tmp_849 = ((((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000) ^ (((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 2 | (((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 0x40000000)) & ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) + (unsigned int)(v62 + ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) + 1518500249) + ((((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27)) * 32 | ((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27) >> 27) >> 2 | (((((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000) ^ (((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 2 | (((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 0x40000000)) & ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) + (unsigned int)(v62 + ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) + 1518500249) + ((((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27)) * 32 | ((((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000) ^ ((unsigned int)tmp_377 >> 2 | (unsigned int)tmp_377 * 0x40000000)) & ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) + (unsigned int)(v64 + ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) + 1518500249) + ((((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369) * 32 | ((((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249)) * 32 | ((unsigned int)tmp_377 * 32 | (unsigned int)tmp_377 >> 27) + (unsigned int)(tmp_419 + v59 + v56 + 1518500249) >> 27) + ((((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000) ^ ((unsigned int)v50 >> 2 | (unsigned int)v50 * 0x40000000)) & (unsigned int)tmp_377 ^ ((unsigned int)v51 >> 2 | (unsigned int)v51 * 0x40000000)) + (unsigned int)tmp_369 >> 27) >> 27)) * 0x40000000;\n            tmp_904 = ...;\n            tmp_919 = ...;\n            v65 = ...;\n            v66 = (unsigned long long)v28 + tmp_758 + 1518500249;\n            v67 = ((unsigned int)tmp_919 ^ (unsigned int)tmp_758) + (unsigned int)((unsigned long long)v27 + tmp_694 + 1518500249) + ((unsigned int)tmp_904 * 32 | (unsigned int)tmp_904 >> 27);\n            v68 = (unsigned int)tmp_904 >> 2 | (unsigned int)tmp_904 * 0x40000000;\n            v69 = ((unsigned int)tmp_849 ^ (unsigned int)v65) & (unsigned int)tmp_904 ^ (unsigned int)tmp_849;\n            v70 = (unsigned long long)v29 + tmp_849 + 1518500249;\n            v71 = v30;\n            tmp_439 = (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000;\n            tmp_530 = (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 2 | ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 0x40000000;\n            tmp_585 = ((((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000) ^ ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) & (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) + (unsigned int)(v31 + v68 + 1518500249) + (((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 32 | (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 27);\n            tmp_621 = (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 2 | ((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 0x40000000;\n            tmp_676 = ((((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000) ^ ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 2 | ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 0x40000000)) & (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) ^ ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) + (unsigned int)((unsigned long long)(v32 + ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) + 1518500249) + ((((((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000) ^ ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) & (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) + (unsigned int)(v31 + v68 + 1518500249) + (((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 32 | (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 27)) * 32 | ((((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000) ^ ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) & (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) + (unsigned int)(v31 + v68 + 1518500249) + (((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 32 | (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 27) >> 27);\n            tmp_697 = (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 2 | ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 0x40000000) ^ ((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 2 | ((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 0x40000000)) & ((((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000) ^ ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) & (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) + (unsigned int)(v31 + v68 + 1518500249) + (((((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27)) * 32 | (((unsigned int)v68 ^ ((unsigned int)v67 >> 2 | (unsigned int)v67 * 0x40000000)) & (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) ^ (unsigned int)v68) + (unsigned int)(v71 + v65 + 1518500249) + (((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 32 | (((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 27) >> 27) ^ ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27) >> 2 | ((((unsigned int)v65 ^ (unsigned int)v68) & (unsigned int)v67 ^ (unsigned int)v65) + (unsigned int)v70 + (((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 32 | (unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 27)) * 0x40000000);\n            v72 = v35;\n            v73 = (v20 ^ v61 ^ v28 ^ v33) * 2 | (v20 ^ v61 ^ v28 ^ v33) >> 31;\n            v74 = ((unsigned int)v59 ^ (unsigned int)v64 ^ v29 ^ v34) * 2 | ((unsigned int)v59 ^ (unsigned int)v64 ^ v29 ^ v34) >> 31;\n            v75 = (unsigned int)(tmp_697 + (unsigned long long)(v33 + ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 2 | ((unsigned int)(tmp_697 + (unsigned long long)(v33 + ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27) >> 2 | ((unsigned int)(v69 + v66) + ((unsigned int)v67 * 32 | (unsigned int)v67 >> 27)) * 0x40000000)) + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 0x40000000;\n            v76 = ((((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000) ^ ((unsigned int)tmp_676 >> 2 | (unsigned int)tmp_676 * 0x40000000)) & (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) ^ ((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000)) + (unsigned int)(v72 + tmp_621 + 1518500249) + (((((unsigned int)tmp_621 ^ ((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000)) & (unsigned int)tmp_676 ^ (unsigned int)tmp_621) + (unsigned int)((unsigned long long)v34 + tmp_530 + 1518500249) + (((unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 32 | (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 27)) * 32 | (((unsigned int)tmp_621 ^ ((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000)) & (unsigned int)tmp_676 ^ (unsigned int)tmp_621) + (unsigned int)((unsigned long long)v34 + tmp_530 + 1518500249) + (((unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 32 | (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 27) >> 27);\n            v77 = (((unsigned int)tmp_621 ^ ((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000)) & (unsigned int)tmp_676 ^ (unsigned int)tmp_621) + (unsigned int)((unsigned long long)v34 + tmp_530 + 1518500249) + (((unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 32 | (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 27) >> 2 | ((((unsigned int)tmp_621 ^ ((unsigned int)tmp_585 >> 2 | (unsigned int)tmp_585 * 0x40000000)) & (unsigned int)tmp_676 ^ (unsigned int)tmp_621) + (unsigned int)((unsigned long long)v34 + tmp_530 + 1518500249) + (((unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 32 | (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 27)) * 0x40000000;\n            v79 = ...;\n            v80 = (unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27) >> 2 | ((unsigned int)(tmp_697 + (unsigned long long)v33 + tmp_439 + 1518500249) + ((unsigned int)tmp_676 * 32 | (unsigned int)tmp_676 >> 27)) * 0x40000000;\n            tmp_424 = (((unsigned int)v80 ^ (unsigned int)v77) & (unsigned int)v76 ^ (unsigned int)v75) + (unsigned int)((unsigned long long)(((v21 ^ v23 ^ v29 ^ v34) * 2 | (v21 ^ v23 ^ v29 ^ v34) >> 31) + ((unsigned int)tmp_676 >> 2 | (unsigned int)tmp_676 * 0x40000000)) + 1518500249) + ((unsigned int)v79 * 32 | (unsigned int)v79 >> 27);\n            v81 = (v30 ^ v61 ^ (unsigned int)v62 ^ (unsigned int)v72) * 2 | (v30 ^ v61 ^ (unsigned int)v62 ^ (unsigned int)v72) >> 31;\n            tmp_551 = ...;\n            v82 = ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31;\n            tmp_641 = ((((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) ^ ((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000)) & (unsigned int)tmp_424 ^ ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000)) + (unsigned int)((((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31) + v77 + 1518500249) + ((unsigned int)tmp_551 * 32 | (unsigned int)tmp_551 >> 27);\n            v83 = (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) * 2 | (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) >> 31;\n            v84 = (unsigned int)tmp_641 >> 2 | (unsigned int)tmp_641 * 0x40000000;\n            v85 = (v27 ^ (unsigned int)v63 ^ v33 ^ (unsigned int)v81) * 2 | (v27 ^ (unsigned int)v63 ^ v33 ^ (unsigned int)v81) >> 31;\n            tmp_854 = ((unsigned int)tmp_551 >> 2 | (unsigned int)tmp_551 * 0x40000000) ^ ((unsigned int)tmp_641 >> 2 | (unsigned int)tmp_641 * 0x40000000) ^ ((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551);\n            v86 = ((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551) >> 2 | (((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551)) * 0x40000000;\n            tmp_919 = ((unsigned int)tmp_641 >> 2 | (unsigned int)tmp_641 * 0x40000000) ^ (((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551) >> 2 | (((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551)) * 0x40000000);\n            tmp_926 = ((((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551)) * 32 | ((unsigned int)tmp_641 * 32 | (unsigned int)tmp_641 >> 27) + (unsigned int)(v83 + ((unsigned int)v76 >> 2 | (unsigned int)v76 * 0x40000000) + 1859775393) + (((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000) ^ ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ (unsigned int)tmp_551) >> 27) + (unsigned int)((unsigned long long)(((v27 ^ (unsigned int)v63 ^ v33 ^ (unsigned int)v81) * 2 | (v27 ^ (unsigned int)v63 ^ v33 ^ (unsigned int)v81) >> 31) + ((unsigned int)v79 >> 2 | (unsigned int)v79 * 0x40000000)) + 1859775393) + (((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) ^ ((unsigned int)tmp_551 >> 2 | (unsigned int)tmp_551 * 0x40000000) ^ (unsigned int)tmp_641);\n            v87 = (v26 ^ v28 ^ v34 ^ (((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31)) * 2 | (v26 ^ v28 ^ v34 ^ (((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31)) >> 31;\n            v88 = ((unsigned int)tmp_926 * 32 | (unsigned int)tmp_926 >> 27) + (unsigned int)((unsigned long long)(((v26 ^ v28 ^ v34 ^ (((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31)) * 2 | (v26 ^ v28 ^ v34 ^ (((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) * 2 | ((unsigned int)v64 ^ (unsigned int)v63 ^ v31 ^ (unsigned int)v73) >> 31)) >> 31) + ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000)) + 1859775393 + tmp_854);\n            v89 = (v27 ^ v29 ^ v35 ^ ((v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) * 2 | (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) >> 31)) * 2 | (v27 ^ v29 ^ v35 ^ ((v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) * 2 | (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) >> 31)) >> 31;\n            v90 = (unsigned int)tmp_926 >> 2 | (unsigned int)tmp_926 * 0x40000000;\n            v91 = ((((unsigned int)tmp_926 * 32 | (unsigned int)tmp_926 >> 27) + (unsigned int)(v87 + ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) + 1859775393 + tmp_854)) * 32 | ((unsigned int)tmp_926 * 32 | (unsigned int)tmp_926 >> 27) + (unsigned int)(v87 + ((unsigned int)tmp_424 >> 2 | (unsigned int)tmp_424 * 0x40000000) + 1859775393 + tmp_854) >> 27) + (unsigned int)((unsigned long long)(((v27 ^ v29 ^ v35 ^ ((v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) * 2 | (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) >> 31)) * 2 | (v27 ^ v29 ^ v35 ^ ((v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) * 2 | (v26 ^ (unsigned int)v62 ^ v32 ^ (unsigned int)v74) >> 31)) >> 31) + ((unsigned int)tmp_551 >> 2 | (unsigned int)tmp_551 * 0x40000000)) + 1859775393) + ((unsigned int)tmp_919 ^ (unsigned int)tmp_926);\n            v4 = v73;\n            v92 = (v28 ^ v30 ^ (unsigned int)v73 ^ v85) * 2 | (v28 ^ v30 ^ (unsigned int)v73 ^ v85) >> 31;\n            v6 = v92;\n            tmp_314 = (unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000;\n            v7 = (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31;\n            tmp_445 = (unsigned int)v91 >> 2 | (unsigned int)v91 * 0x40000000;\n            v8 = (v30 ^ v32 ^ (unsigned int)v81 ^ (unsigned int)v89) * 2 | (v30 ^ v32 ^ (unsigned int)v81 ^ (unsigned int)v89) >> 31;\n            tmp_607 = ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 2 | (((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 0x40000000;\n            tmp_614 = (((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ ((unsigned int)v91 >> 2 | (unsigned int)v91 * 0x40000000) ^ ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) + (unsigned int)(((v30 ^ v32 ^ (unsigned int)v81 ^ (unsigned int)v89) * 2 | (v30 ^ v32 ^ (unsigned int)v81 ^ (unsigned int)v89) >> 31) + v90 + 1859775393) + ((((((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 32 | ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 27) + ((unsigned int)v90 ^ ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ (unsigned int)v91) + (unsigned int)(((v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31) + v86 + 1859775393)) * 32 | ((((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 32 | ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 27) + ((unsigned int)v90 ^ ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ (unsigned int)v91) + (unsigned int)(((v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31) + v86 + 1859775393) >> 27);\n            v0 = (v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31;\n            tmp_686 = ((unsigned int)v91 >> 2 | (unsigned int)v91 * 0x40000000) ^ (((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 2 | (((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 0x40000000) ^ ((((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 32 | ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 27) + ((unsigned int)v90 ^ ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ (unsigned int)v91) + (unsigned int)(((v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31) + v86 + 1859775393);\n            v93 = ((((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 32 | ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 27) + ((unsigned int)v90 ^ ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ (unsigned int)v91) + (unsigned int)(((v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31) + v86 + 1859775393) >> 2 | (((((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88)) * 32 | ((unsigned int)v91 * 32 | (unsigned int)v91 >> 27) + (unsigned int)(v92 + v84 + 1859775393) + ((unsigned int)v86 ^ (unsigned int)v90 ^ (unsigned int)v88) >> 27) + ((unsigned int)v90 ^ ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000) ^ (unsigned int)v91) + (unsigned int)(((v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) * 2 | (v29 ^ v31 ^ (unsigned int)v74 ^ (unsigned int)v87) >> 31) + v86 + 1859775393)) * 0x40000000;\n            v1 = (v32 ^ v34 ^ (unsigned int)v83 ^ v7) * 2 | (v32 ^ v34 ^ (unsigned int)v83 ^ v7) >> 31;\n            v94 = ((((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)(((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000)) + 1859775393)) * 32 | ((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)(((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000)) + 1859775393) >> 27) + ((unsigned int)tmp_607 ^ (unsigned int)v93 ^ (unsigned int)tmp_614) + (unsigned int)((unsigned long long)(((v32 ^ v34 ^ (unsigned int)v83 ^ v7) * 2 | (v32 ^ v34 ^ (unsigned int)v83 ^ v7) >> 31) + ((unsigned int)v91 >> 2 | (unsigned int)v91 * 0x40000000)) + 1859775393);\n            v9 = (v33 ^ v35 ^ v85 ^ v8) * 2 | (v33 ^ v35 ^ v85 ^ v8) >> 31;\n            v95 = ...;\n            v96 = ((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)(((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000)) + 1859775393) >> 2 | (((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)(((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + ((unsigned int)v88 >> 2 | (unsigned int)v88 * 0x40000000)) + 1859775393)) * 0x40000000;\n            v97 = (v4 ^ v34 ^ (unsigned int)v87 ^ v0) * 2 | (v4 ^ v34 ^ (unsigned int)v87 ^ v0) >> 31;\n            v98 = ((unsigned int)tmp_614 >> 2 | (unsigned int)tmp_614 * 0x40000000) ^ (((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + tmp_314 + 1859775393) >> 2 | (((unsigned int)tmp_614 * 32 | (unsigned int)tmp_614 >> 27) + (unsigned int)(tmp_686 + (unsigned long long)((v31 ^ v33 ^ (unsigned int)v82 ^ v6) * 2 | (v31 ^ v33 ^ (unsigned int)v82 ^ v6) >> 31) + tmp_314 + 1859775393)) * 0x40000000);\n            v2 = v97;\n            tmp_326 = (unsigned int)v94 >> 2 | (unsigned int)v94 * 0x40000000;\n            tmp_364 = ((unsigned int)v98 ^ (unsigned int)v94) + (unsigned int)(v97 + v93 + 1859775393) + ((unsigned int)v95 * 32 | (unsigned int)v95 >> 27);\n            v3 = (v35 ^ (unsigned int)v74 ^ (unsigned int)v89 ^ v1) * 2 | (v35 ^ (unsigned int)v74 ^ (unsigned int)v89 ^ v1) >> 31;\n            tmp_523 = (unsigned int)((unsigned long long)(((v35 ^ (unsigned int)v74 ^ (unsigned int)v89 ^ v1) * 2 | (v35 ^ (unsigned int)v74 ^ (unsigned int)v89 ^ v1) >> 31) + ((unsigned int)tmp_614 >> 2 | (unsigned int)tmp_614 * 0x40000000)) + 1859775393) + ((unsigned int)v96 ^ ((unsigned int)v94 >> 2 | (unsigned int)v94 * 0x40000000) ^ (unsigned int)v95) + ((((unsigned int)v98 ^ (unsigned int)v94) + (unsigned int)(v97 + v93 + 1859775393) + ((unsigned int)v95 * 32 | (unsigned int)v95 >> 27)) * 32 | ((unsigned int)v98 ^ (unsigned int)v94) + (unsigned int)(v97 + v93 + 1859775393) + ((unsigned int)v95 * 32 | (unsigned int)v95 >> 27) >> 27);\n            v99 = (v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31;\n            tmp_628 = (((unsigned int)v94 >> 2 | (unsigned int)v94 * 0x40000000) ^ ((unsigned int)v95 >> 2 | (unsigned int)v95 * 0x40000000) ^ (unsigned int)tmp_364) + (unsigned int)(((v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31) + v96 + 1859775393) + ((unsigned int)tmp_523 * 32 | (unsigned int)tmp_523 >> 27);\n            v100 = ((unsigned int)v74 ^ (unsigned int)v82 ^ v7 ^ v2) * 2 | ((unsigned int)v74 ^ (unsigned int)v82 ^ v7 ^ v2) >> 31;\n            tmp_813 = (unsigned int)v83 ^ (unsigned int)v87 ^ v1 ^ (((unsigned int)v74 ^ (unsigned int)v82 ^ v7 ^ v2) * 2 | ((unsigned int)v74 ^ (unsigned int)v82 ^ v7 ^ v2) >> 31);\n            tmp_841 = (((unsigned int)v95 >> 2 | (unsigned int)v95 * 0x40000000) ^ ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) ^ (unsigned int)tmp_523) + (unsigned int)(v100 + ((unsigned int)v94 >> 2 | (unsigned int)v94 * 0x40000000) + 1859775393) + ((unsigned int)tmp_628 * 32 | (unsigned int)tmp_628 >> 27);\n            v101 = ((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) * 2 | ((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) >> 31;\n            v102 = (unsigned int)tmp_628 >> 2 | (unsigned int)tmp_628 * 0x40000000;\n            tmp_925 = (((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) ^ ((unsigned int)tmp_523 >> 2 | (unsigned int)tmp_523 * 0x40000000) ^ (unsigned int)tmp_628) + (unsigned int)((unsigned long long)((((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) * 2 | ((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) >> 31) + ((unsigned int)v95 >> 2 | (unsigned int)v95 * 0x40000000)) + 1859775393) + (((((unsigned int)v95 >> 2 | (unsigned int)v95 * 0x40000000) ^ ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) ^ (unsigned int)tmp_523) + (unsigned int)(v100 + tmp_326 + 1859775393) + ((unsigned int)tmp_628 * 32 | (unsigned int)tmp_628 >> 27)) * 32 | (((unsigned int)v95 >> 2 | (unsigned int)v95 * 0x40000000) ^ ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) ^ (unsigned int)tmp_523) + (unsigned int)(v100 + tmp_326 + 1859775393) + ((unsigned int)tmp_628 * 32 | (unsigned int)tmp_628 >> 27) >> 27);\n            v103 = ((unsigned int)v82 ^ v85 ^ v0 ^ ((v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31)) * 2 | ((unsigned int)v82 ^ v85 ^ v0 ^ ((v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31)) >> 31;\n            v104 = (unsigned int)tmp_841 >> 2 | (unsigned int)tmp_841 * 0x40000000;\n            v105 = (((unsigned int)tmp_523 >> 2 | (unsigned int)tmp_523 * 0x40000000) ^ ((unsigned int)tmp_628 >> 2 | (unsigned int)tmp_628 * 0x40000000) ^ (unsigned int)tmp_841) + (unsigned int)((unsigned long long)((((unsigned int)v82 ^ v85 ^ v0 ^ ((v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31)) * 2 | ((unsigned int)v82 ^ v85 ^ v0 ^ ((v4 ^ (unsigned int)v81 ^ v6 ^ v9) * 2 | (v4 ^ (unsigned int)v81 ^ v6 ^ v9) >> 31)) >> 31) + ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000)) + 1859775393) + ((unsigned int)tmp_925 * 32 | (unsigned int)tmp_925 >> 27);\n            v106 = (v85 ^ (unsigned int)v89 ^ v9 ^ (((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) * 2 | ((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) >> 31)) * 2 | (v85 ^ (unsigned int)v89 ^ v9 ^ (((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) * 2 | ((unsigned int)v81 ^ (unsigned int)v83 ^ v8 ^ v3) >> 31)) >> 31;\n            v4 = (unsigned int)tmp_813 * 2 | (unsigned int)tmp_813 >> 31;\n            v107 = (unsigned int)tmp_925 >> 2 | (unsigned int)tmp_925 * 0x40000000;\n            v108 = (((unsigned int)tmp_628 >> 2 | (unsigned int)tmp_628 * 0x40000000) ^ ((unsigned int)tmp_841 >> 2 | (unsigned int)tmp_841 * 0x40000000) ^ (unsigned int)tmp_925) + (unsigned int)((unsigned long long)(((unsigned int)tmp_813 * 2 | (unsigned int)tmp_813 >> 31) + ((unsigned int)tmp_523 >> 2 | (unsigned int)tmp_523 * 0x40000000)) + 1859775393);\n            v109 = ((((unsigned int)tmp_523 >> 2 | (unsigned int)tmp_523 * 0x40000000) ^ ((unsigned int)tmp_628 >> 2 | (unsigned int)tmp_628 * 0x40000000) ^ (unsigned int)tmp_841) + (unsigned int)(v103 + ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) + 1859775393) + ((unsigned int)tmp_925 * 32 | (unsigned int)tmp_925 >> 27)) * 32 | (((unsigned int)tmp_523 >> 2 | (unsigned int)tmp_523 * 0x40000000) ^ ((unsigned int)tmp_628 >> 2 | (unsigned int)tmp_628 * 0x40000000) ^ (unsigned int)tmp_841) + (unsigned int)(v103 + ((unsigned int)tmp_364 >> 2 | (unsigned int)tmp_364 * 0x40000000) + 1859775393) + ((unsigned int)tmp_925 * 32 | (unsigned int)tmp_925 >> 27) >> 27;\n            v5 = v106;\n            tmp_284 = v6;\n            tmp_398 = v8;\n            tmp_400 = ((unsigned int)v87 ^ v6 ^ v2 ^ (unsigned int)v103) * 2 | ((unsigned int)v87 ^ v6 ^ v2 ^ (unsigned int)v103) >> 31;\n            v6 = ((unsigned int)v87 ^ v6 ^ v2 ^ (unsigned int)v103) * 2 | ((unsigned int)v87 ^ v6 ^ v2 ^ (unsigned int)v103) >> 31;\n            tmp_425 = v7;\n            tmp_513 = [D] amd64g_calculate_rflags_all(0x27<64>, Conv(32->64, ((((((Conv(64->32, r10<8>) ^ Conv(64->32, r9<8>)) ^ Conv(64->32, r8<8>)) + Conv(64->32, ((rsi<8> + r11<8>) + 0x6ed9eba1<64>))) + ((Conv(64->32, (rdi<8> + rbx<8>)) << 0x5<8>) | (Conv(64->32, (rdi<8> + rbx<8>)) >> 0x1b<8>))) << 0x5<8>) | (((((Conv(64->32, r10<8>) ^ Conv(64->32, r9<8>)) ^ Conv(64->32, r8<8>)) + Conv(64->32, ((rsi<8> + r11<8>) + 0x6ed9eba1<64>))) + ((Conv(64->32, (rdi<8> + rbx<8>)) << 0x5<8>) | (Conv(64->32, (rdi<8> + rbx<8>)) >> 0x1b<8>))) >> 0x1b<8>))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_530 = ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27);\n            tmp_531 = ((unsigned int)v89 ^ v7 ^ v3 ^ v4) * 2 | ((unsigned int)v89 ^ v7 ^ v3 ^ v4) >> 31;\n            v7 = ((unsigned int)v89 ^ v7 ^ v3 ^ v4) * 2 | ((unsigned int)v89 ^ v7 ^ v3 ^ v4) >> 31;\n            tmp_583 = ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 2 | (((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 0x40000000;\n            tmp_599 = ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) & (((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 2 | (((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 0x40000000);\n            tmp_627 = ((((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27)) * 32 | ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) >> 27) + (((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) ^ ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) + (unsigned int)(tmp_531 + v107 + 1859775393);\n            tmp_679 = ((unsigned int)tmp_284 ^ v8 ^ (unsigned int)v99 ^ v5) * 2 | ((unsigned int)tmp_284 ^ v8 ^ (unsigned int)v99 ^ v5) >> 31;\n            v8 = ((unsigned int)tmp_284 ^ v8 ^ (unsigned int)v99 ^ v5) * 2 | ((unsigned int)tmp_284 ^ v8 ^ (unsigned int)v99 ^ v5) >> 31;\n            tmp_719 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Load(addr=stack_base-208, size=4, endness=Iend_LE) ^ Conv(64->32, t425)) ^ Conv(64->32, r14<8>)) ^ Load(addr=stack_base-184, size=4, endness=Iend_LE))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_724 = (((((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27)) * 32 | ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) >> 27) + (((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) ^ ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) + (unsigned int)(tmp_531 + v107 + 1859775393)) * 32 | ((((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27)) * 32 | ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) >> 27) + (((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) ^ ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) + (unsigned int)(tmp_531 + v107 + 1859775393) >> 27;\n            tmp_729 = (((((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27)) * 32 | ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) >> 27) + (((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) ^ ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) + (unsigned int)(tmp_531 + v107 + 1859775393)) * 32 | ((((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27)) * 32 | ((unsigned int)v107 ^ ((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ (unsigned int)(v108 + v109)) + (unsigned int)(tmp_400 + v104 + 1859775393) + ((((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) * 32 | ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27) >> 27) >> 27) + (((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) ^ ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) ^ ((unsigned int)v104 ^ (unsigned int)v107 ^ (unsigned int)v105) + (unsigned int)(v106 + v102 + 1859775393) + ((unsigned int)(v108 + v109) * 32 | (unsigned int)(v108 + v109) >> 27)) + (unsigned int)(tmp_531 + v107 + 1859775393) >> 27;\n            v110 = (v0 ^ (unsigned int)tmp_425 ^ (unsigned int)v100 ^ v6) * 2 | (v0 ^ (unsigned int)tmp_425 ^ (unsigned int)v100 ^ v6) >> 31;\n            v111 = (unsigned int)tmp_530 >> 2 | (unsigned int)tmp_530 * 0x40000000;\n            tmp_842 = (unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599);\n            v112 = (unsigned int)tmp_627 >> 2 | (unsigned int)tmp_627 * 0x40000000;\n            tmp_891 = (unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599);\n            tmp_914 = [D] amd64g_calculate_rflags_all(0x3<64>, Conv(32->64, ((Conv(64->32, t627) & ((Conv(64->32, t530) >> 0x2<8>) | (Conv(64->32, t530) << 0x1e<8>))) | ((Conv(64->32, t627) | ((Conv(64->32, t530) >> 0x2<8>) | (Conv(64->32, t530) << 0x1e<8>))) & Conv(64->32, t583)))), Sub((r11<8> + Conv(32->64, ((Conv(64->32, (rdi<8> + rbx<8>)) >> 0x2<8>) | (Conv(64->32, (rdi<8> + rbx<8>)) << 0x1e<8>)))), 0x70e44324<64>), DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_929 = ((unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599)) * 32 | (unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599) >> 27;\n            tmp_930 = ((unsigned int)tmp_627 & ((unsigned int)tmp_530 >> 2 | (unsigned int)tmp_530 * 0x40000000) | ((unsigned int)tmp_627 | (unsigned int)tmp_530 >> 2 | (unsigned int)tmp_530 * 0x40000000) & (unsigned int)tmp_583) + (unsigned int)(v110 + ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) - 1894007588);\n            v113 = (((unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599)) * 32 | (unsigned int)(tmp_679 + (unsigned long long)((unsigned int)v105 >> 2 | (unsigned int)v105 * 0x40000000) - 1894007588 + tmp_729) + (((unsigned int)tmp_530 | (unsigned int)tmp_583) & ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) | (unsigned int)tmp_599) >> 27) + ((unsigned int)tmp_627 & ((unsigned int)tmp_530 >> 2 | (unsigned int)tmp_530 * 0x40000000) | ((unsigned int)tmp_627 | (unsigned int)tmp_530 >> 2 | (unsigned int)tmp_530 * 0x40000000) & (unsigned int)tmp_583) + (unsigned int)(v110 + ((unsigned int)(v108 + v109) >> 2 | (unsigned int)(v108 + v109) * 0x40000000) - 1894007588);\n            v114 = (unsigned int)tmp_891 & ((unsigned int)tmp_627 >> 2 | (unsigned int)tmp_627 * 0x40000000);\n            v10 = (v1 ^ (unsigned int)tmp_398 ^ (unsigned int)v101 ^ v7) * 2 | (v1 ^ (unsigned int)tmp_398 ^ (unsigned int)v101 ^ v7) >> 31;\n            v115 = v9;\n            v116 = (unsigned int)((unsigned long long)((v1 ^ (unsigned int)tmp_398 ^ (unsigned int)v101 ^ v7) * 2 | (v1 ^ (unsigned int)tmp_398 ^ (unsigned int)v101 ^ v7) >> 31) + tmp_583 - 1894007588) + ((unsigned int)v113 * 32 | (unsigned int)v113 >> 27);\n            v117 = [D] amd64g_calculate_rflags_all(0x3<64>, Sub((Conv(32->64, (((((Load(addr=stack_base-204, size=4, endness=Iend_LE) ^ Conv(64->32, t398)) ^ Conv(64->32, r13<8>)) ^ Load(addr=stack_base-180, size=4, endness=Iend_LE)) << 0x1<8>) | ((((Load(addr=stack_base-204, size=4, endness=Iend_LE) ^ Conv(64->32, t398)) ^ Conv(64->32, r13<8>)) ^ Load(addr=stack_base-180, size=4, endness=Iend_LE)) >> 0x1f<8>))) + t583), 0x70e44324<64>), Conv(32->64, ((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>))), DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v118 = (unsigned int)tmp_842 >> 2 | (unsigned int)tmp_842 * 0x40000000;\n            v119 = v0 ^ v9;\n            v120 = (unsigned int)tmp_842 | (unsigned int)tmp_627 >> 2 | (unsigned int)tmp_627 * 0x40000000;\n            v0 = ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31;\n            v9 = (v1 ^ v2 ^ v4 ^ (unsigned int)v110) * 2 | (v1 ^ v2 ^ v4 ^ (unsigned int)v110) >> 31;\n            tmp_546 = (unsigned int)(((v1 ^ v2 ^ v4 ^ (unsigned int)v110) * 2 | (v1 ^ v2 ^ v4 ^ (unsigned int)v110) >> 31) + v112 - 1894007588) + (((((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588)) * 32 | (((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588) >> 27) + (((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) | (unsigned int)v113 >> 2 | (unsigned int)v113 * 0x40000000) & (unsigned int)v118 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) & ((unsigned int)v113 >> 2 | (unsigned int)v113 * 0x40000000));\n            tmp_557 = [D] amd64g_calculate_rflags_all(0x3<64>, Conv(32->64, (Conv(64->32, ((Conv(32->64, (((((Load(addr=stack_base-204, size=4, endness=Iend_LE) ^ Load(addr=stack_base-200, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-192, size=4, endness=Iend_LE)) ^ Conv(64->32, r11<8>)) << 0x1<8>) | ((((Load(addr=stack_base-204, size=4, endness=Iend_LE) ^ Load(addr=stack_base-200, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-192, size=4, endness=Iend_LE)) ^ Conv(64->32, r11<8>)) >> 0x1f<8>))) + r9<8>) - 0x70e44324<64>)) + ((((((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) << 0x5<8>) | ((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) >> 0x1b<8>)) + (((Conv(64->32, rdi<8>) & Conv(64->32, r8<8>)) | ((Conv(64->32, rdi<8>) | Conv(64->32, r8<8>)) & Conv(64->32, r9<8>))) + Conv(64->32, ((Conv(32->64, ((((Conv(64->32, rbp<8>) ^ Conv(64->32, r12<8>)) ^ Load(addr=stack_base-176, size=4, endness=Iend_LE)) << 0x1<8>) | (((Conv(64->32, rbp<8>) ^ Conv(64->32, r12<8>)) ^ Load(addr=stack_base-176, size=4, endness=Iend_LE)) >> 0x1f<8>))) + rdx<8>) - 0x70e44324<64>)))) << 0x5<8>) | (((((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) << 0x5<8>) | ((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) >> 0x1b<8>)) + (((Conv(64->32, rdi<8>) & Conv(64->32, r8<8>)) | ((Conv(64->32, rdi<8>) | Conv(64->32, r8<8>)) & Conv(64->32, r9<8>))) + Conv(64->32, ((Conv(32->64, ((((Conv(64->32, rbp<8>) ^ Conv(64->32, r12<8>)) ^ Load(addr=stack_base-176, size=4, endness=Iend_LE)) << 0x1<8>) | (((Conv(64->32, rbp<8>) ^ Conv(64->32, r12<8>)) ^ Load(addr=stack_base-176, size=4, endness=Iend_LE)) >> 0x1f<8>))) + rdx<8>) - 0x70e44324<64>)))) >> 0x1b<8>)))), Conv(32->64, ((((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) | ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))) & Conv(64->32, r8<8>)) | ((Conv(64->32, rsi<8>) + ((Conv(64->32, rax<8>) & Conv(64->32, rdx<8>)) | Conv(64->32, r10<8>))) & ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))))), DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_567 = (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 2 | ((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 0x40000000;\n            tmp_600 = ((((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588) | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 2 | ((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 0x40000000) & ((unsigned int)v113 >> 2 | (unsigned int)v113 * 0x40000000);\n            tmp_601 = ((((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588) | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 2 | ((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 0x40000000) & ((unsigned int)v113 >> 2 | (unsigned int)v113 * 0x40000000);\n            tmp_605 = (((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588);\n            v121 = (((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588) >> 2 | ((((unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114)) * 32 | (unsigned int)v116 + ((unsigned int)v120 & (unsigned int)v111 | (unsigned int)v114) >> 27) + ((unsigned int)v113 & (unsigned int)v118 | ((unsigned int)v113 | (unsigned int)v118) & (unsigned int)v112) + (unsigned int)((((unsigned int)v119 ^ (unsigned int)v103 ^ v8) * 2 | ((unsigned int)v119 ^ (unsigned int)v103 ^ v8) >> 31) + v111 - 1894007588)) * 0x40000000;\n            v122 = (v5 ^ v115 ^ v3 ^ v10) * 2 | (v5 ^ v115 ^ v3 ^ v10) >> 31;\n            v16 = v122;\n            v123 = (v2 ^ (unsigned int)v99 ^ v6 ^ v0) * 2 | (v2 ^ (unsigned int)v99 ^ v6 ^ v0) >> 31;\n            tmp_820 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (Conv(64->32, t546) | Conv(64->32, rdx<8>))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v124 = (unsigned int)tmp_546 >> 2 | (unsigned int)tmp_546 * 0x40000000;\n            v125 = (unsigned int)(v123 + ((unsigned int)v113 >> 2 | (unsigned int)v113 * 0x40000000) - 1894007588) + ((((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588)) * 32 | ((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588) >> 27) + (((unsigned int)tmp_546 | (unsigned int)v121) & (unsigned int)tmp_567 | (unsigned int)tmp_546 & (unsigned int)v121);\n            tmp_891 = v3 ^ (unsigned int)v100 ^ v7 ^ v9;\n            v1 = (v3 ^ (unsigned int)v100 ^ v7 ^ v9) * 2 | (v3 ^ (unsigned int)v100 ^ v7 ^ v9) >> 31;\n            tmp_932 = ((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588) & ((unsigned int)tmp_546 >> 2 | (unsigned int)tmp_546 * 0x40000000) | (((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588) | (unsigned int)tmp_546 >> 2 | (unsigned int)tmp_546 * 0x40000000) & (unsigned int)v121;\n            v126 = ((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588) >> 2 | (((unsigned int)tmp_546 * 32 | (unsigned int)tmp_546 >> 27) + ((unsigned int)tmp_605 & (unsigned int)tmp_567 | (unsigned int)tmp_601) + (unsigned int)(v122 + v118 - 1894007588)) * 0x40000000;\n            v127 = (unsigned int)v100 ^ (unsigned int)v103;\n            v128 = [D] amd64g_calculate_rflags_all(0x13<64>, r14<8>, 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v129 = ((unsigned int)v99 ^ (unsigned int)v101 ^ v8 ^ (unsigned int)v122) * 2 | ((unsigned int)v99 ^ (unsigned int)v101 ^ v8 ^ (unsigned int)v122) >> 31;\n            v130 = v125;\n            v131 = tmp_932 + (unsigned long long)v1 + tmp_567 - 1894007588;\n            v132 = ((unsigned int)v127 ^ (unsigned int)v110 ^ (unsigned int)v123) * 2 | ((unsigned int)v127 ^ (unsigned int)v110 ^ (unsigned int)v123) >> 31;\n            tmp_512 = (((unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126)) * 32 | (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) >> 27) + (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 | (unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) & (unsigned int)v126) + (unsigned int)(v132 + v124 - 1894007588);\n            tmp_531 = (((unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126)) * 32 | (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) >> 27) + (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 | (unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) & (unsigned int)v126) + (unsigned int)(v132 + v124 - 1894007588);\n            tmp_544 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Load(addr=stack_base-192, size=4, endness=Iend_LE) ^ Conv(64->32, r13<8>)) ^ Load(addr=stack_base-168, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-204, size=4, endness=Iend_LE))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v133 = (v4 ^ (unsigned int)v101 ^ v10 ^ v1) * 2 | (v4 ^ (unsigned int)v101 ^ v10 ^ v1) >> 31;\n            tmp_601 = (unsigned int)(v133 + v126 - 1894007588) + (((((unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126)) * 32 | (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) >> 27) + (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 | (unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) & (unsigned int)v126) + (unsigned int)(v132 + v124 - 1894007588)) * 32 | (((unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126)) * 32 | (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) >> 27) + (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 | (unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) & (unsigned int)v126) + (unsigned int)(v132 + v124 - 1894007588) >> 27);\n            tmp_611 = (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000;\n            tmp_614 = (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126);\n            tmp_627 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Conv(64->32, ((r15<8> + rdx<8>) - 0x70e44324<64>)) + (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x5<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x1b<8>))) + (((Conv(64->32, rdi<8>) | Conv(64->32, r8<8>)) & Conv(64->32, r9<8>)) | (Conv(64->32, r10<8>) & Conv(64->32, r8<8>)))) | (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>)))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v134 = (unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126) >> 2 | ((unsigned int)(v129 + v121 - 1894007588) + ((((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 32 | ((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 27) + (((unsigned int)v125 | (unsigned int)v126) & (unsigned int)v124 | (unsigned int)v130 & (unsigned int)v126)) * 0x40000000;\n            tmp_661 = (unsigned int)tmp_611 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (unsigned int)tmp_614 & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000);\n            tmp_685 = v0 ^ (unsigned int)v103 ^ v5 ^ (unsigned int)v129;\n            v135 = (v0 ^ (unsigned int)v103 ^ v5 ^ (unsigned int)v129) * 2 | (v0 ^ (unsigned int)v103 ^ v5 ^ (unsigned int)v129) >> 31;\n            tmp_724 = [D] amd64g_calculate_rflags_all(0x27<64>, r12<8>, 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v136 = (unsigned int)tmp_512 >> 2 | (unsigned int)tmp_512 * 0x40000000;\n            tmp_783 = v4 ^ v6 ^ v9 ^ (unsigned int)v132;\n            tmp_833 = (v4 ^ v6 ^ v9 ^ (unsigned int)v132) * 2 | (v4 ^ v6 ^ v9 ^ (unsigned int)v132) >> 31;\n            v11 = (v4 ^ v6 ^ v9 ^ (unsigned int)v132) * 2 | (v4 ^ v6 ^ v9 ^ (unsigned int)v132) >> 31;\n            v137 = ((unsigned int)((unsigned long long)((unsigned int)tmp_611 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (unsigned int)tmp_614 & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000)) + tmp_601) * 32 | (unsigned int)((unsigned long long)((unsigned int)tmp_611 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (unsigned int)tmp_614 & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000)) + tmp_601) >> 27) + ((unsigned int)tmp_531 & (unsigned int)v134 | ((unsigned int)tmp_512 | (unsigned int)v134) & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000)) + (unsigned int)(v135 + ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) - 1894007588);\n            tmp_908 = [D] amd64g_calculate_rflags_all(0x3<64>, Sub(Conv(32->64, ((((((Load(addr=stack_base-192, size=4, endness=Iend_LE) ^ Load(addr=stack_base-184, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-172, size=4, endness=Iend_LE)) ^ Conv(64->32, r14<8>)) << 0x1<8>) | ((((Load(addr=stack_base-192, size=4, endness=Iend_LE) ^ Load(addr=stack_base-184, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-172, size=4, endness=Iend_LE)) ^ Conv(64->32, r14<8>)) >> 0x1f<8>)) + (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>)))), 0x70e44324<64>), Conv(32->64, (((((Conv(64->32, (Conv(32->64, ((Conv(64->32, t611) & ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))) | (Conv(64->32, t614) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>))))) + t601)) << 0x5<8>) | (Conv(64->32, (Conv(32->64, ((Conv(64->32, t611) & ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))) | (Conv(64->32, t614) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>))))) + t601)) >> 0x1b<8>)) + (((Conv(64->32, t531) & Conv(64->32, rdx<8>)) | ((Conv(64->32, t512) | Conv(64->32, rdx<8>)) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>)))) + Conv(64->32, ((r12<8> + Conv(32->64, ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>)))) - 0x70e44324<64>)))) << 0x5<8>) | ((((Conv(64->32, (Conv(32->64, ((Conv(64->32, t611) & ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))) | (Conv(64->32, t614) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>))))) + t601)) << 0x5<8>) | (Conv(64->32, (Conv(32->64, ((Conv(64->32, t611) & ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>))) | (Conv(64->32, t614) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>))))) + t601)) >> 0x1b<8>)) + (((Conv(64->32, t531) & Conv(64->32, rdx<8>)) | ((Conv(64->32, t512) | Conv(64->32, rdx<8>)) & (((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) >> 0x2<8>) | ((((Conv(64->32, rdi<8>) << 0x5<8>) | (Conv(64->32, rdi<8>) >> 0x1b<8>)) + Conv(64->32, rax<8>)) << 0x1e<8>)))) + Conv(64->32, ((r12<8> + Conv(32->64, ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) << 0x1e<8>)))) - 0x70e44324<64>)))) >> 0x1b<8>))), DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v138 = (unsigned int)((unsigned long long)((unsigned int)tmp_611 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (unsigned int)tmp_614 & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000)) + tmp_601) >> 2 | (unsigned int)((unsigned long long)((unsigned int)tmp_611 & ((unsigned int)v125 >> 2 | (unsigned int)v125 * 0x40000000) | (unsigned int)tmp_614 & (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131 >> 2 | (((unsigned int)v125 * 32 | (unsigned int)v125 >> 27) + (unsigned int)v131) * 0x40000000)) + tmp_601) * 0x40000000;\n            v139 = ...;\n            v140 = (unsigned int)v137 & ((unsigned int)(tmp_661 + tmp_601) >> 2 | (unsigned int)(tmp_661 + tmp_601) * 0x40000000);\n            v141 = (v5 ^ v7 ^ v16 ^ (unsigned int)v133) * 2 | (v5 ^ v7 ^ v16 ^ (unsigned int)v133) >> 31;\n            v142 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Load(addr=stack_base-188, size=4, endness=Iend_LE) ^ Load(addr=stack_base-180, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-144, size=4, endness=Iend_LE)) ^ Conv(64->32, r13<8>))), 0x0<64>, t908);\n            v143 = (v5 ^ v7 ^ v16 ^ (unsigned int)v133) * 2 | (v5 ^ v7 ^ v16 ^ (unsigned int)v133) >> 31;\n            v144 = v137;\n            v5 = v143;\n            tmp_383 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Load(addr=stack_base-184, size=4, endness=Iend_LE) ^ Load(addr=stack_base-176, size=4, endness=Iend_LE)) ^ Conv(64->32, rbp<8>)) ^ Conv(64->32, r12<8>))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_388 = (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) * 2 | (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) >> 31;\n            tmp_393 = (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) * 2 | (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) >> 31;\n            v6 = (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) * 2 | (v6 ^ v8 ^ (unsigned int)v123 ^ (unsigned int)v135) >> 31;\n            tmp_468 = (unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000;\n            tmp_529 = v7 ^ (unsigned int)v110 ^ v1 ^ v11;\n            tmp_552 = (v7 ^ (unsigned int)v110 ^ v1 ^ v11) * 2 | (v7 ^ (unsigned int)v110 ^ v1 ^ v11) >> 31;\n            v7 = (v7 ^ (unsigned int)v110 ^ v1 ^ v11) * 2 | (v7 ^ (unsigned int)v110 ^ v1 ^ v11) >> 31;\n            tmp_636 = ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 2 | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 0x40000000;\n            tmp_649 = (((unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000))) * 32 | (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) >> 27) + (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) | (unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) + (unsigned int)(tmp_552 + v138 - 1894007588);\n            tmp_676 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Conv(64->32, r11<8>) ^ Load(addr=stack_base-208, size=4, endness=Iend_LE)) ^ Conv(64->32, r14<8>)) ^ Load(addr=stack_base-184, size=4, endness=Iend_LE))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            tmp_686 = ((unsigned int)v110 ^ v0 ^ (unsigned int)v132 ^ v6) * 2 | ((unsigned int)v110 ^ v0 ^ (unsigned int)v132 ^ v6) >> 31;\n            v2 = ((unsigned int)v110 ^ v0 ^ (unsigned int)v132 ^ v6) * 2 | ((unsigned int)v110 ^ v0 ^ (unsigned int)v132 ^ v6) >> 31;\n            tmp_707 = v8 ^ v10 ^ (unsigned int)v129 ^ v5;\n            tmp_724 = (v8 ^ v10 ^ (unsigned int)v129 ^ v5) * 2 | (v8 ^ v10 ^ (unsigned int)v129 ^ v5) >> 31;\n            tmp_729 = (v8 ^ v10 ^ (unsigned int)v129 ^ v5) * 2 | (v8 ^ v10 ^ (unsigned int)v129 ^ v5) >> 31;\n            v8 = (v8 ^ v10 ^ (unsigned int)v129 ^ v5) * 2 | (v8 ^ v10 ^ (unsigned int)v129 ^ v5) >> 31;\n            tmp_771 = (unsigned int)(tmp_729 + (unsigned long long)((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) - 1894007588) + (((((unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000))) * 32 | (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) >> 27) + (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) | (unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) + (unsigned int)(tmp_552 + v138 - 1894007588)) * 32 | (((unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000))) * 32 | (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) >> 27) + (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) | (unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) + (unsigned int)(tmp_552 + v138 - 1894007588) >> 27);\n            tmp_779 = (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 2 | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 0x40000000;\n            tmp_781 = (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 2 | (((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 0x40000000;\n            tmp_784 = (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000));\n            v145 = (unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000)) >> 2 | ((unsigned int)(tmp_393 + v136 - 1894007588) + ((((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588)) * 32 | ((unsigned int)v139 * 32 | (unsigned int)v139 >> 27) + ((unsigned int)v140 | ((unsigned int)v144 | (unsigned int)v138) & (unsigned int)v136) + (unsigned int)(v143 + v134 - 1894007588) >> 27) + (((unsigned int)v139 | (unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000) & (unsigned int)v138 | (unsigned int)v139 & ((unsigned int)v137 >> 2 | (unsigned int)v137 * 0x40000000))) * 0x40000000;\n            v146 = v9;\n            tmp_836 = (unsigned int)tmp_781 & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (unsigned int)tmp_784 & (unsigned int)tmp_636;\n            v147 = (unsigned long long)((unsigned int)tmp_781 & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (unsigned int)tmp_784 & (unsigned int)tmp_636) + tmp_771;\n            tmp_904 = ((unsigned int)tmp_649 | (unsigned int)v145) & (unsigned int)tmp_636;\n            v148 = (unsigned int)tmp_649 >> 2 | (unsigned int)tmp_649 * 0x40000000;\n            v3 = (v10 ^ v9 ^ (unsigned int)v133 ^ v7) * 2 | (v10 ^ v9 ^ (unsigned int)v133 ^ v7) >> 31;\n            v149 = v16;\n            v151 = ((unsigned int)((unsigned long long)((unsigned int)tmp_781 & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (unsigned int)tmp_784 & (unsigned int)tmp_636) + tmp_771) * 32 | (unsigned int)((unsigned long long)((unsigned int)tmp_781 & ((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) | (unsigned int)tmp_784 & (unsigned int)tmp_636) + tmp_771) >> 27) + ((unsigned int)tmp_649 & (unsigned int)v145 | ((unsigned int)tmp_649 | (unsigned int)v145) & (unsigned int)tmp_636) + (unsigned int)(tmp_686 + (unsigned long long)((unsigned int)v139 >> 2 | (unsigned int)v139 * 0x40000000) - 1894007588);\n            v152 = [D] amd64g_calculate_rflags_all(0x3<64>, Conv(32->64, ((Conv(64->32, (t836 + t771)) << 0x5<8>) | (Conv(64->32, (t836 + t771)) >> 0x1b<8>))), Conv(32->64, (((Conv(64->32, t649) & Conv(64->32, rdx<8>)) | ((Conv(64->32, t649) | Conv(64->32, rdx<8>)) & Conv(64->32, t636))) + Conv(64->32, ((t686 + Conv(32->64, ((Conv(64->32, rdi<8>) >> 0x2<8>) | (Conv(64->32, rdi<8>) * 0x40000000<32>)))) - 0x70e44324<64>)))), DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v153 = (unsigned int)((unsigned long long)((v10 ^ v9 ^ (unsigned int)v133 ^ v7) * 2 | (v10 ^ v9 ^ (unsigned int)v133 ^ v7) >> 31) + tmp_636 - 1894007588) + ((((unsigned int)(tmp_836 + tmp_771) * 32 | (unsigned int)(tmp_836 + tmp_771) >> 27) + ((unsigned int)tmp_649 & (unsigned int)v145 | ((unsigned int)tmp_649 | (unsigned int)v145) & (unsigned int)tmp_636) + (unsigned int)(tmp_686 + tmp_468 - 1894007588)) * 32 | ((unsigned int)(tmp_836 + tmp_771) * 32 | (unsigned int)(tmp_836 + tmp_771) >> 27) + ((unsigned int)tmp_649 & (unsigned int)v145 | ((unsigned int)tmp_649 | (unsigned int)v145) & (unsigned int)tmp_636) + (unsigned int)(tmp_686 + tmp_468 - 1894007588) >> 27);\n            v154 = (unsigned int)(tmp_836 + tmp_771) | (unsigned int)tmp_649 >> 2 | (unsigned int)tmp_649 * 0x40000000;\n            tmp_344 = (unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148;\n            v4 = ((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) * 2 | ((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) >> 31;\n            tmp_389 = v1;\n            tmp_401 = v0 ^ (unsigned int)v149 ^ (unsigned int)v135 ^ v8;\n            v0 = (v0 ^ (unsigned int)v149 ^ (unsigned int)v135 ^ v8) * 2 | (v0 ^ (unsigned int)v149 ^ (unsigned int)v135 ^ v8) >> 31;\n            tmp_457 = (unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000;\n            tmp_595 = ((((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588)) * 32 | ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588) >> 27) + (((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) ^ ((unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000) ^ (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153)) + (unsigned int)((((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) * 2 | ((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) >> 31) + v148 - 899497514);\n            tmp_625 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, ((Load(addr=stack_base-188, size=4, endness=Iend_LE) ^ (Conv(64->32, rbx<8>) ^ Load(addr=stack_base-204, size=4, endness=Iend_LE))) ^ Load(addr=stack_base-196, size=4, endness=Iend_LE))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v155 = (v5 ^ (unsigned int)v149 ^ v1 ^ v3) * 2 | (v5 ^ (unsigned int)v149 ^ v1 ^ v3) >> 31;\n            v9 = v155;\n            tmp_707 = (unsigned int)(v155 + ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) - 899497514) + (((unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000) ^ ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 2 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 0x40000000) ^ ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588));\n            tmp_708 = (((((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588)) * 32 | ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588) >> 27) + (((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) ^ ((unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000) ^ (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153)) + (unsigned int)((((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) * 2 | ((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) >> 31) + v148 - 899497514)) * 32 | ((((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588)) * 32 | ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588) >> 27) + (((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) ^ ((unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000) ^ (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153)) + (unsigned int)((((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) * 2 | ((unsigned int)v146 ^ (unsigned int)v123 ^ v11 ^ v2) >> 31) + v148 - 899497514) >> 27;\n            tmp_730 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Conv(64->32, rbp<8>) ^ Conv(64->32, r15<8>)) ^ Load(addr=stack_base-184, size=4, endness=Iend_LE)) ^ Load(addr=stack_base-208, size=4, endness=Iend_LE))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v156 = ((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588) >> 2 | (((unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) * 32 | (unsigned int)(((unsigned int)v154 & (unsigned int)v145 | (unsigned int)v147 & (unsigned int)v148) + v153) >> 27) + ((unsigned int)v151 & ((unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) | ((unsigned int)v151 | (unsigned int)v147 >> 2 | (unsigned int)v147 * 0x40000000) & (unsigned int)v148) + (unsigned int)(v0 + v145 - 1894007588)) * 0x40000000;\n            tmp_771 = ((unsigned int)v123 ^ (unsigned int)v129 ^ v6 ^ v0) * 2 | ((unsigned int)v123 ^ (unsigned int)v129 ^ v6 ^ v0) >> 31;\n            v1 = ((unsigned int)v123 ^ (unsigned int)v129 ^ v6 ^ v0) * 2 | ((unsigned int)v123 ^ (unsigned int)v129 ^ v6 ^ v0) >> 31;\n            v157 = ((unsigned int)v129 ^ (unsigned int)v133 ^ v8 ^ (unsigned int)v155) * 2 | ((unsigned int)v129 ^ (unsigned int)v133 ^ v8 ^ (unsigned int)v155) >> 31;\n            tmp_878 = [D] amd64g_calculate_rflags_all(0x27<64>, r15<8>, 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v158 = v157;\n            v20 = v157;\n            v159 = ((unsigned int)(tmp_708 + tmp_707) * 32 | (unsigned int)(tmp_708 + tmp_707) >> 27) + (((unsigned int)(tmp_344 + v153) >> 2 | (unsigned int)(tmp_344 + v153) * 0x40000000) ^ (unsigned int)v156 ^ (unsigned int)tmp_595) + (unsigned int)(tmp_771 + (unsigned long long)((unsigned int)v151 >> 2 | (unsigned int)v151 * 0x40000000) - 899497514);\n            v160 = ((unsigned int)tmp_389 ^ (unsigned int)v132 ^ v7 ^ v4) * 2 | ((unsigned int)tmp_389 ^ (unsigned int)v132 ^ v7 ^ v4) >> 31;\n            v161 = (unsigned int)(tmp_708 + tmp_707) >> 2 | (unsigned int)(tmp_708 + tmp_707) * 0x40000000;\n            v162 = [D] amd64g_calculate_rflags_all(0x13<64>, Conv(32->64, (((Conv(64->32, t595) >> 0x2<8>) | (Conv(64->32, t595) << 0x1e<8>)) ^ ((Conv(64->32, (t708 + t707)) >> 0x2<8>) | (Conv(64->32, (t708 + t707)) << 0x1e<8>)))), 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>));\n            v163 = ((unsigned int)tmp_595 >> 2 | (unsigned int)tmp_595 * 0x40000000) ^ ((unsigned int)(tmp_708 + tmp_707) >> 2 | (unsigned int)(tmp_708 + tmp_707) * 0x40000000) ^ ((unsigned int)(tmp_708 + tmp_707) * 32 | (unsigned int)(tmp_708 + tmp_707) >> 27) + (((unsigned int)(tmp_344 + v153) >> 2 | (unsigned int)(tmp_344 + v153) * 0x40000000) ^ (unsigned int)v156 ^ (unsigned int)tmp_595) + (unsigned int)(tmp_771 + tmp_457 - 899497514);\n            v164 = ((((unsigned int)(tmp_708 + tmp_707) * 32 | (unsigned int)(tmp_708 + tmp_707) >> 27) + (((unsigned int)(tmp_344 + v153) >> 2 | (unsigned int)(tmp_344 + v153) * 0x40000000) ^ (unsigned int)v156 ^ (unsigned int)tmp_595) + (unsigned int)(tmp_771 + tmp_457 - 899497514)) * 32 | ((unsigned int)(tmp_708 + tmp_707) * 32 | (unsigned int)(tmp_708 + tmp_707) >> 27) + (((unsigned int)(tmp_344 + v153) >> 2 | (unsigned int)(tmp_344 + v153) * 0x40000000) ^ (unsigned int)v156 ^ (unsigned int)tmp_595) + (unsigned int)(tmp_771 + tmp_457 - 899497514) >> 27) + ((unsigned int)v156 ^ ((unsigned int)tmp_595 >> 2 | (unsigned int)tmp_595 * 0x40000000) ^ (unsigned int)(tmp_708 + tmp_707)) + (unsigned int)((unsigned long long)((((unsigned int)tmp_389 ^ (unsigned int)v132 ^ v7 ^ v4) * 2 | ((unsigned int)tmp_389 ^ (unsigned int)v132 ^ v7 ^ v4) >> 31) + ((unsigned int)(tmp_344 + v153) >> 2 | (unsigned int)(tmp_344 + v153) * 0x40000000)) - 899497514);\n            tmp_322 = (unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000;\n            v21 = ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31;\n            tmp_382 = v5;\n            v10 = v160;\n            v5 = v158;\n            tmp_501 = ((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 2 | (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 0x40000000;\n            tmp_508 = ((unsigned int)v161 ^ ((unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000) ^ (unsigned int)v164) + (unsigned int)((unsigned long long)((((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31) + ((unsigned int)tmp_595 >> 2 | (unsigned int)tmp_595 * 0x40000000)) - 899497514) + ((((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 32 | ((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 27);\n            v165 = ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) * 2 | ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) >> 31;\n            v22 = ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) * 2 | ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) >> 31;\n            tmp_599 = ((((unsigned int)v161 ^ ((unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000) ^ (unsigned int)v164) + (unsigned int)((unsigned long long)((((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31) + ((unsigned int)tmp_595 >> 2 | (unsigned int)tmp_595 * 0x40000000)) - 899497514) + ((((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 32 | ((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 27)) * 32 | ((unsigned int)v161 ^ ((unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000) ^ (unsigned int)v164) + (unsigned int)((unsigned long long)((((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31) + ((unsigned int)tmp_595 >> 2 | (unsigned int)tmp_595 * 0x40000000)) - 899497514) + ((((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 32 | ((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 27) >> 27) + (unsigned int)((((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) * 2 | ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) >> 31) + v161 - 899497514) + (((unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000) ^ ((unsigned int)v164 >> 2 | (unsigned int)v164 * 0x40000000) ^ ((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163));\n            tmp_624 = v0 ^ (unsigned int)v135 ^ (unsigned int)tmp_382 ^ (unsigned int)v158;\n            v166 = v6;\n            v6 = ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31;\n            v167 = (unsigned int)tmp_624 * 2 | (unsigned int)tmp_624 >> 31;\n            v23 = (unsigned int)tmp_624 * 2 | (unsigned int)tmp_624 >> 31;\n            tmp_714 = ((unsigned int)tmp_599 * 32 | (unsigned int)tmp_599 >> 27) + (unsigned int)(v167 + ((unsigned int)v159 >> 2 | (unsigned int)v159 * 0x40000000) - 899497514) + (((unsigned int)v164 >> 2 | (unsigned int)v164 * 0x40000000) ^ (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 2 | (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 0x40000000) ^ (unsigned int)tmp_508);\n            v168 = (v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) * 2 | (v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) >> 31;\n            v24 = (v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) * 2 | (v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) >> 31;\n            tmp_838 = (unsigned int)((unsigned long long)(((v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) * 2 | (v4 ^ v11 ^ (unsigned int)v166 ^ (((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) * 2 | ((unsigned int)v132 ^ (unsigned int)v135 ^ v2 ^ v1) >> 31)) >> 31) + ((unsigned int)v164 >> 2 | (unsigned int)v164 * 0x40000000)) - 899497514) + ((((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 2 | (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 0x40000000) ^ ((unsigned int)tmp_508 >> 2 | (unsigned int)tmp_508 * 0x40000000) ^ (unsigned int)tmp_599);\n            tmp_839 = (((unsigned int)tmp_599 * 32 | (unsigned int)tmp_599 >> 27) + (unsigned int)(v167 + tmp_322 - 899497514) + (((unsigned int)v164 >> 2 | (unsigned int)v164 * 0x40000000) ^ (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 2 | (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 0x40000000) ^ (unsigned int)tmp_508)) * 32 | ((unsigned int)tmp_599 * 32 | (unsigned int)tmp_599 >> 27) + (unsigned int)(v167 + tmp_322 - 899497514) + (((unsigned int)v164 >> 2 | (unsigned int)v164 * 0x40000000) ^ (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163) >> 2 | (((unsigned int)v164 * 32 | (unsigned int)v164 >> 27) + (unsigned int)(v157 + v156 - 899497514 + v163)) * 0x40000000) ^ (unsigned int)tmp_508) >> 27;\n            v169 = v7;\n            v170 = (unsigned int)tmp_599 >> 2 | (unsigned int)tmp_599 * 0x40000000;\n            tmp_906 = (unsigned int)tmp_382 ^ v7 ^ v9 ^ (((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) * 2 | ((unsigned int)v133 ^ v11 ^ v3 ^ (unsigned int)v160) >> 31);\n            v171 = (unsigned int)tmp_714 >> 2 | (unsigned int)tmp_714 * 0x40000000;\n            v172 = (unsigned int)tmp_906 * 2 | (unsigned int)tmp_906 >> 31;\n            v25 = (unsigned int)tmp_906 * 2 | (unsigned int)tmp_906 >> 31;\n            v173 = (unsigned int)(tmp_839 + tmp_838) >> 2 | (unsigned int)(tmp_839 + tmp_838) * 0x40000000;\n            v174 = ((unsigned int)(tmp_839 + tmp_838) * 32 | (unsigned int)(tmp_839 + tmp_838) >> 27) + (unsigned int)((unsigned long long)((unsigned int)tmp_906 * 2 | (unsigned int)tmp_906 >> 31) + tmp_501 - 899497514) + (((unsigned int)tmp_508 >> 2 | (unsigned int)tmp_508 * 0x40000000) ^ ((unsigned int)tmp_599 >> 2 | (unsigned int)tmp_599 * 0x40000000) ^ (unsigned int)tmp_714);\n            v175 = ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31;\n            v26 = ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31;\n            tmp_363 = ((unsigned int)v174 * 32 | (unsigned int)v174 >> 27) + (unsigned int)((unsigned long long)((((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31) + ((unsigned int)tmp_508 >> 2 | (unsigned int)tmp_508 * 0x40000000)) - 899497514 + (((unsigned int)tmp_599 >> 2 | (unsigned int)tmp_599 * 0x40000000) ^ ((unsigned int)tmp_714 >> 2 | (unsigned int)tmp_714 * 0x40000000) ^ (unsigned int)(tmp_839 + tmp_838)));\n            v176 = (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) * 2 | (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) >> 31;\n            v27 = (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) * 2 | (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) >> 31;\n            v28 = (v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31;\n            v177 = ...;\n            tmp_661 = ...;\n            tmp_704 = (v2 ^ v0 ^ v6 ^ (((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31)) * 2 | (v2 ^ v0 ^ v6 ^ (((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31)) >> 31;\n            v29 = (v2 ^ v0 ^ v6 ^ (((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31)) * 2 | (v2 ^ v0 ^ v6 ^ (((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) * 2 | ((unsigned int)v166 ^ v8 ^ v1 ^ (unsigned int)v167) >> 31)) >> 31;\n            tmp_753 = ...;\n            v178 = ((unsigned int)v165 ^ v3 ^ v4 ^ ((v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) * 2 | (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) >> 31)) * 2 | ((unsigned int)v165 ^ v3 ^ v4 ^ ((v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) * 2 | (v2 ^ (unsigned int)v169 ^ v10 ^ (unsigned int)v168) >> 31)) >> 31;\n            v30 = v178;\n            v179 = ...;\n            v180 = (unsigned int)tmp_661 >> 2 | (unsigned int)tmp_661 * 0x40000000;\n            v181 = (((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) * 2 | (((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) >> 31;\n            v182 = (unsigned int)tmp_753 >> 2 | (unsigned int)tmp_753 * 0x40000000;\n            v31 = (((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) * 2 | (((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) >> 31;\n            v184 = v10;\n            v185 = ((unsigned int)v177 ^ ((unsigned int)tmp_661 >> 2 | (unsigned int)tmp_661 * 0x40000000) ^ (unsigned int)tmp_753) + (unsigned int)((unsigned long long)(((((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) * 2 | (((v3 ^ v8 ^ v5 ^ (unsigned int)v172) * 2 | (v3 ^ v8 ^ v5 ^ (unsigned int)v172) >> 31) ^ (unsigned int)v167 ^ v0 ^ v9) >> 31) + ((unsigned int)tmp_363 >> 2 | (unsigned int)tmp_363 * 0x40000000)) - 899497514) + ((unsigned int)v179 * 32 | (unsigned int)v179 >> 27);\n            v186 = ((unsigned int)tmp_704 ^ (unsigned int)v168 ^ v4 ^ v1) * 2 | ((unsigned int)tmp_704 ^ (unsigned int)v168 ^ v4 ^ v1) >> 31;\n            v32 = v186;\n            tmp_251 = (unsigned int)((((unsigned int)tmp_661 >> 2 | (unsigned int)tmp_661 * 0x40000000) ^ ((unsigned int)tmp_753 >> 2 | (unsigned int)tmp_753 * 0x40000000) ^ (unsigned int)v179) + v186 + v177 - 899497514) + ((unsigned int)v185 * 32 | (unsigned int)v185 >> 27);\n            tmp_309 = (unsigned int)v182 ^ ((unsigned int)v179 >> 2 | (unsigned int)v179 * 0x40000000) ^ (unsigned int)v185;\n            v188 = (unsigned int)v185 >> 2 | (unsigned int)v185 * 0x40000000;\n            v33 = ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31;\n            v15 += (unsigned int)v188;\n            v14 += (unsigned int)tmp_251 >> 2 | (unsigned int)tmp_251 * 0x40000000;\n            v34 = ((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) * 2 | ((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) >> 31;\n            tmp_523 = (((unsigned int)v179 >> 2 | (unsigned int)v179 * 0x40000000) ^ (unsigned int)v188 ^ (unsigned int)tmp_251) + (unsigned int)((((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) * 2 | ((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) >> 31) + v182 - 899497514) + (((unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27)) * 32 | (unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27) >> 27);\n            v12 += (((unsigned int)v179 >> 2 | (unsigned int)v179 * 0x40000000) ^ (unsigned int)v188 ^ (unsigned int)tmp_251) + (unsigned int)((((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) * 2 | ((unsigned int)v181 ^ (unsigned int)v175 ^ v1 ^ v5) >> 31) + v182 - 899497514) + (((unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27)) * 32 | (unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27) >> 27);\n            v35 = ((unsigned int)v186 ^ (unsigned int)v176 ^ v6 ^ (unsigned int)v184) * 2 | ((unsigned int)v186 ^ (unsigned int)v176 ^ v6 ^ (unsigned int)v184) >> 31;\n            v13 += (unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27) >> 2 | ((unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27)) * 0x40000000;\n            v190 = ((unsigned int)v179 >> 2 | (unsigned int)v179 * 0x40000000) + (unsigned int)((unsigned long long)(v17 + v35) - 899497514) + ((unsigned int)v188 ^ ((unsigned int)tmp_251 >> 2 | (unsigned int)tmp_251 * 0x40000000) ^ (unsigned int)(tmp_309 + (((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) * 2 | ((unsigned int)v178 ^ (unsigned int)v172 ^ v9 ^ (unsigned int)v184) >> 31) + v180 - 899497514) + ((unsigned int)tmp_251 * 32 | (unsigned int)tmp_251 >> 27));\n            v50 = ((unsigned int)tmp_523 * 32 | (unsigned int)tmp_523 >> 27) + v190;\n            v19[1] = v12;\n            v19[0] = ((unsigned int)tmp_523 * 32 | (unsigned int)tmp_523 >> 27) + v190;\n            v19[1] = v13;\n            v17 = ((unsigned int)tmp_523 * 32 | (unsigned int)tmp_523 >> 27) + v190;\n            v19[1 + 1] = v14;\n            v19[2] = v15;\n        }\n        while (v55 + 64 < v18);\n    }\n    v191 = v36;\n    return v50;\n}\n"
        },
        {
            "funcName": "sub_4085b8",
            "funcStartAddr": "0x4085b8",
            "funcEndAddr": "0x4085d8",
            "decompiledFuncCode": "extern unsigned long long g_60be30;\n\nint sub_4085b8()\n{\n    unsigned long long *v1;  // rbx\n    unsigned long long v2;  // rax\n    unsigned long v4;  // rdx\n\n    v1 = &g_60be30;\n    while (true)\n    {\n        v2 = *(v1);\n        if (*(v1) == -1)\n        {\n            break;\n        }\n        rax<8>();\n        v1 = &v1[-1];\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_406df0",
            "funcStartAddr": "0x406df0",
            "funcEndAddr": "0x406e03",
            "decompiledFuncCode": "int sub_406df0()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    char *v3;  // rdi\n\n    v0 = v2;\n    strlen(v3);\n}\n"
        },
        {
            "funcName": "sub_407de0",
            "funcStartAddr": "0x407de0",
            "funcEndAddr": "0x407df8",
            "decompiledFuncCode": "int sub_407de0()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 1;\n    return sub_407d80();\n}\n"
        },
        {
            "funcName": "sub_406a00",
            "funcStartAddr": "0x406a00",
            "funcEndAddr": "0x406a20",
            "decompiledFuncCode": "int sub_406a00()\n{\n    unsigned long long v1;  // r9\n    unsigned long long v2[2];  // r8\n\n    v1 = 0;\n    if (*(v2) != 0)\n    {\n        do\n        {\n            v1 += 1;\n        }\n        while (v2[v1] != 0);\n    }\n}\n"
        },
        {
            "funcName": "sub_4028f1",
            "funcStartAddr": "0x4028f1",
            "funcEndAddr": "0x402948",
            "decompiledFuncCode": "extern char g_60c2c8;\nextern unsigned long long g_60c2d0;\n\nint sub_4028f1()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp-0x8]\n    unsigned long v4;  // rax\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    unsigned long long v7;  // rax\n    unsigned long long v9;  // rbx\n    unsigned long long v10;  // r12\n\n    if (g_60c2c8 == 0)\n    {\n        v2 = stack_base + 0;\n        v1 = v5;\n        v0 = v6;\n        while (true)\n        {\n            if (g_60c2d0 >= 0)\n            {\n                break;\n            }\n            g_60c2d0 = g_60c2d0 + 1;\n            *((long long *)(6340160 + (v7 + 1) * 8))();\n        }\n        v9 = v0;\n        v10 = v1;\n        g_60c2c8 = 1;\n        return sub_40289b();\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_407e20",
            "funcStartAddr": "0x407e20",
            "funcEndAddr": "0x407e35",
            "decompiledFuncCode": "int sub_407e20()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_4077b0();\n}\n"
        },
        {
            "funcName": "sub_406ed0",
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406ffc",
            "decompiledFuncCode": "extern unsigned int g_60c458;\n\nint sub_406ed0()\n{\n    unsigned int v0;  // [bp-0x60]\n    unsigned long v1;  // [bp-0x58]\n    unsigned long v2;  // [bp-0x50]\n    unsigned long v3;  // [bp-0x38]\n    unsigned long v4;  // [bp-0x30]\n    unsigned int v6;  // [bp+0x100008]\n    unsigned long v7;  // rdx\n    unsigned long v8;  // rcx\n    unsigned int v9;  // rsi\n    unsigned int v10;  // edi\n    unsigned int v11;  // edi\n    unsigned int *v12;  // rax\n    unsigned long long v13;  // rax\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // rbx\n    unsigned long long v17;  // rax\n\n    v3 = v7;\n    v1 = stack_base + 8;\n    v4 = v8;\n    v0 = 16;\n    v2 = stack_base + -72;\n    if (v9 == 1030)\n    {\n        v0 = 24;\n        if (g_60c458 >= 0)\n        {\n            v15 = (unsigned int)fcntl(v11, v9);\n            if ((unsigned int)v15 < 0)\n            {\n                v12 = __errno_location();\n                if (*(v12) == 22)\n                {\n                    v15 = (unsigned int)sub_406ed0();\n                    if ((unsigned int)v15 >= 0)\n                    {\n                        g_60c458 = -1;\n                    }\n                }\n            }\n            if (*(v12) != 22 || (unsigned int)v15 >= 0)\n            {\n                g_60c458 = 1;\n            }\n        }\n        else\n        {\n            v15 = (unsigned int)sub_406ed0();\n        }\n        if ((*(v12) == 22 || g_60c458 < 0) && (g_60c458 < 0 || (unsigned int)v15 < 0) && (g_60c458 < 0 || (unsigned int)v15 >= 0) && (g_60c458 == -1 || g_60c458 >= 0) && (g_60c458 >= 0 || (unsigned int)v15 >= 0))\n        {\n            v13 = fcntl(v15, 0x1);\n            if (v13 >= 0)\n            {\n                v14 = fcntl(v15, 0x2);\n            }\n            if (v13 < 0 || v14 == -1)\n            {\n                v15 = -18446744069414584321;\n                close(v11);\n                *(__errno_location()) = v6;\n            }\n        }\n        v17 = v15;\n        return v17;\n    }\n    return fcntl(v10, v9);\n}\n"
        },
        {
            "funcName": "sub_4064e0",
            "funcStartAddr": "0x4064e0",
            "funcEndAddr": "0x40654c",
            "decompiledFuncCode": "extern uint128_t g_60c420;\nextern uint128_t g_60c430;\nextern uint128_t g_60c440;\nextern unsigned long long g_60c450;\n\nint sub_4064e0()\n{\n    void|unsigned int v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x20]\n    unsigned long v4;  // [bp-0x18]\n    unsigned long v6;  // rsi\n    unsigned long v7;  // rdx\n\n    *((uint128_t *)&v0) = g_60c420;\n    *((uint128_t *)&v1) = g_60c430;\n    *((uint128_t *)&v2) = g_60c440;\n    v4 = g_60c450;\n    v0 = 10;\n    if (v6 != 0 && v7 != 0)\n    {\n        v3 = v6;\n        v4 = v7;\n        return sub_405da0();\n    }\n    if (v7 == 0 || v6 == 0)\n    {\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_403120",
            "funcStartAddr": "0x403120",
            "funcEndAddr": "0x40314d",
            "decompiledFuncCode": "int sub_403120()\n{\n    unsigned long long v1[4];  // rdi\n\n    v1[3] = 0;\n    v1[0] = 17279655951921914625;\n    v1[1] = 1167088121787636990;\n    v1[2] = 3285377520;\n    return 3285377520;\n}\n"
        },
        {
            "funcName": "sub_407010",
            "funcStartAddr": "0x407010",
            "funcEndAddr": "0x40704b",
            "decompiledFuncCode": "int sub_407010()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    unsigned int *v3;  // rdi\n\n    v0 = v2;\n    if (v3 != 0 && __freading() != 0 && ((unsigned short)*(v3) & 0x100) != 0)\n    {\n        sub_407050();\n    }\n}\n"
        },
        {
            "funcName": "sub_406a80",
            "funcStartAddr": "0x406a80",
            "funcEndAddr": "0x406b38",
            "decompiledFuncCode": "int sub_406a80()\n{\n    unsigned int v0;  // [bp-0xa0]\n    void tmp_12;  // tmp #12\n    void tmp_8;  // tmp #8\n    unsigned long v1;  // [bp-0x98]\n    unsigned long long v2;  // [bp-0x90]\n    unsigned long v3;  // [bp-0x88]\n    unsigned long long v4;  // [bp-0x18]\n    unsigned long v5;  // [bp-0x10]\n    unsigned long long v6;  // [bp+0x8]\n    char v7;  // [bp+0x10]\n    unsigned long long v8;  // r11\n    unsigned long long v9;  // r8\n    unsigned long v10;  // r9\n    unsigned long long v11;  // rax\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // r8\n    unsigned long long|unsigned long long * v14;  // r10\n    unsigned long long v15;  // r9\n\n    v8 = 0;\n    v4 = v9;\n    v14 = &v6;\n    v13 = 32;\n    v1 = &v6;\n    v5 = v10;\n    v15 = 0;\n    v0 = 32;\n    v2 = stack_base + -56;\n    while (true)\n    {\n        if ((unsigned int)v13 <= 47)\n        {\n            tmp_12 = v13;\n            v13 = (unsigned int)v13 + 8;\n            v8 = 1;\n            v11 = v4;\n            v3 = v4;\n        }\n        else\n        {\n            tmp_8 = v14;\n            v14 = &v7;\n            v12 = v6;\n            v3 = v6;\n        }\n        if ((unsigned int)v13 <= 47 && v11 != 0 || (unsigned int)v13 > 47 && v12 != 0)\n        {\n            v15 += 1;\n        }\n        if (v8 != 0)\n        {\n            v0 = v13;\n        }\n        return sub_406620();\n    }\n}\n"
        },
        {
            "funcName": "sub_404930",
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x4049b9",
            "decompiledFuncCode": "int sub_404930()\n{\n    unsigned int v1;  // [bp+0x100008]\n    char *v2;  // rdi\n    char *v3;  // rsi\n    unsigned long long v4;  // rax\n    unsigned int v5;  // r12d\n    unsigned long long v6;  // rax\n    unsigned int v8;  // ebp\n    unsigned long long v10;  // rbx\n    unsigned long long v11;  // rax\n\n    v10 = fopen(v2, v3);\n    if (v10 != 0)\n    {\n        v4 = fileno(v10);\n        if (v4 <= 2)\n        {\n            v5 = sub_406610();\n            if (v5 >= 0)\n            {\n                v6 = sub_406e50();\n                if (v6 == 0)\n                {\n                    v10 = fdopen(v5, v3);\n                }\n                if (v10 == 0 || v6 != 0)\n                {\n                    v8 = *((int *)v10);\n                    close(v5);\n                    *(__errno_location()) = v8;\n                    v10 = 0;\n                }\n            }\n            else\n            {\n                v10 = 0;\n                sub_406e50();\n                *(__errno_location()) = v1;\n            }\n        }\n    }\n    v11 = v10;\n    return v11;\n}\n"
        },
        {
            "funcName": "sub_406330",
            "funcStartAddr": "0x406330",
            "funcEndAddr": "0x406399",
            "decompiledFuncCode": "int sub_406330()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_405da0();\n}\n"
        },
        {
            "funcName": "sub_406c10",
            "funcStartAddr": "0x406c10",
            "funcEndAddr": "0x406c12",
            "decompiledFuncCode": "int sub_406c10()\n{\n}\n"
        },
        {
            "funcName": "sub_406550",
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406559",
            "decompiledFuncCode": "int sub_406550()\n{\n}\n"
        },
        {
            "funcName": "sub_402950",
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x4029a0",
            "decompiledFuncCode": "extern unsigned long long g_60c2e0;\n\nint sub_402950()\n{\n    unsigned long long v1;  // rdi\n    char *v2;  // rbx\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rdx\n\n    v2 = v1;\n    if (g_60c2e0 != 0)\n    {\n        v4 = 0;\n        while (true)\n        {\n            if ((*((char *)(*((long long *)(unsigned long long)__ctype_b_loc()) + ((unsigned long long)*(v2) << 1) + 1)) & 16) != 0)\n            {\n                v5 = v4 + 1;\n                v2 = &v2[1];\n                v4 += 1;\n                if (v5 >= g_60c2e0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                return 0;\n            }\n        }\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_407050",
            "funcStartAddr": "0x407050",
            "funcEndAddr": "0x4070a6",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n    char padding_18[8];\n    unsigned long long field_20;\n    unsigned long long field_28;\n    char padding_30[24];\n    unsigned long long field_48;\n    char padding_50[64];\n    unsigned long long field_90;\n} struct_0;\n\nint sub_407050()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long long v2;  // [bp-0x8]\n    struct_0 *v4;  // rdi\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    struct_0 *v7;  // rbx\n    unsigned int v8;  // esi\n    unsigned int v9;  // edx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // r12\n\n    if (v4->field_10 == v4->field_8 && v4->field_28 == v4->field_20 && v4->field_48 == 0)\n    {\n        v2 = v5;\n        v1 = stack_base + 0;\n        v0 = v6;\n        v7 = v4;\n        v10 = lseek(fileno(v4), v8, v9);\n        if (v10 != -1)\n        {\n            v7->field_0 = v7->field_0 & -17;\n            v7->field_90 = v10;\n            v10 = 0;\n        }\n        v11 = v0;\n        v12 = v2;\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_406470",
            "funcStartAddr": "0x406470",
            "funcEndAddr": "0x4064e3",
            "decompiledFuncCode": "int sub_406470()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v2 = 0x400000000000000;\n    v1 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_405da0();\n}\n"
        },
        {
            "funcName": "sub_407190",
            "funcStartAddr": "0x407190",
            "funcEndAddr": "0x40778e",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    char padding_18[8];\n    struct struct_1 *field_20;\n} struct_0;\n\nextern unsigned int g_40a4a0;\nextern unsigned int g_40a4c0;\nextern unsigned int g_40a4f0;\nextern unsigned int g_40a510;\nextern unsigned int g_40a540;\nextern unsigned long long stderr;\n\nint sub_407190()\n{\n    char *v0;  // [bp-0x78]\n    unsigned long long v1;  // [bp-0x70]\n    unsigned int *v2;  // [bp-0x68]\n    char *v3;  // [bp-0x58]\n    unsigned int v4;  // [bp-0x50]\n    char v5;  // [bp-0x49]\n    unsigned int v6;  // [bp-0x44]\n    unsigned int v7;  // [bp-0x40]\n    unsigned int v8;  // [bp-0x3c]\n    struct_0 *v9;  // [bp+0x8]\n    unsigned int v10;  // [bp+0x10]\n    char *v11;  // r14\n    char *v12;  // rdx\n    unsigned long v13;  // r8\n    char *v14;  // rbp\n    unsigned long long v15;  // rax\n    unsigned long long v16;  // r13\n    unsigned long long v17;  // rcx\n    unsigned long long|unsigned long long * v18;  // rbx\n    unsigned long|unsigned long long|unsigned int v19;  // r12\n    char *v20;  // r15\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rax\n    unsigned long long v23;  // r8\n    char *v24;  // rdi\n    unsigned long long v25;  // r15\n    unsigned long long v26;  // rbp\n    unsigned long long v27;  // rax\n    unsigned int v28;  // r9d\n    unsigned long long v29;  // r9\n    unsigned long long v30;  // rdx\n    unsigned int v31;  // ecx\n    char *v33;  // rbp\n    unsigned long long v34;  // rdx\n    unsigned long long *v35;  // rsi\n    void *v36;  // rdi\n    unsigned long long|unsigned long long * v37;  // rbx\n    unsigned long long v38;  // rbp\n    unsigned long long v39;  // r12\n    unsigned int *v41;  // rdx\n    unsigned long long v42;  // rax\n    unsigned long long v43;  // r14\n\n    v11 = v9->field_20;\n    v3 = v12;\n    v2 = v13;\n    v14 = v9->field_20;\n    *((struct struct_1 *)&v5) = *(v9->field_20);\n    if (*(v9->field_20) != 61 && *(v9->field_20) != 0)\n    {\n        do\n        {\n            v14 = &v14[1];\n            v15 = *(v14);\n        }\n        while ((char)v15 != 0 && v15 != 61);\n        v16 = v14 - v11;\n    }\n    if (*(v9->field_20) == 61 || *(v9->field_20) == 0)\n    {\n        v16 = 0;\n    }\n    v18 = v17;\n    v19 = 0;\n    v0 = *((long long *)v17);\n    v20 = *((long long *)v17);\n    if (*((long long *)v17) != 0)\n    {\n        while (true)\n        {\n            v21 = strncmp(v20, v9->field_20, v16);\n            if (v21 == 0)\n            {\n                v22 = strlen(v20);\n            }\n            if (v21 != 0 || v22 != v16)\n            {\n                v18 += 32;\n                v20 = *(v18);\n                v23 = v19 + 1;\n                if (*(v18) != 0)\n                {\n                    v19 = v23;\n                }\n                else\n                {\n                    v8 = v19;\n                    v18 = 0;\n                    v6 = -1;\n                    v24 = v0;\n                    v25 = 0;\n                    v4 = 0;\n                    v7 = 0;\n                    v1 = 0;\n                    v0 = v14;\n                    v26 = v17;\n                    do\n                    {\n                        v27 = strncmp(v24, v9->field_20, v16);\n                        if (v27 == 0)\n                        {\n                            if (v18 == 0)\n                            {\n                                v6 = v25;\n                                v18 = v26;\n                            }\n                            else if (*((int *)(v18 + 24)) != *((int *)(v26 + 24)) || *((int *)(v18 + 8)) != *((int *)(v26 + 8)) || *((long long *)(v18 + 16)) != *((long long *)(v26 + 16)) || v28 != 0)\n                            {\n                                if (v4 == 0)\n                                {\n                                    if (v10 == 0)\n                                    {\n                                        v4 = 1;\n                                    }\n                                    else if (v1 == 0)\n                                    {\n                                        v1 = calloc((int)v8, 0x1);\n                                        v4 = 1;\n                                    }\n                                    if (false)\n                                    {\n                                        v7 = 1;\n                                        *((char *)(v1 + (int)v6)) = 1;\n                                    }\n                                    if (v1 != 0)\n                                    {\n                                        *((char *)(v1 + v25)) = 1;\n                                    }\n                                }\n                            }\n                        }\n                        v26 += 32;\n                        v24 = *((long long *)v26);\n                        v25 += 1;\n                    }\n                    while (*((long long *)v26) != 0);\n                    v14 = v0;\n                    if (v1 == 0)\n                    {\n                        v29 = v4;\n                        if (v4 == 0)\n                        {\n                            if (v18 == 0)\n                            {\n                                break;\n                            }\n                            v19 = v6;\n                        }\n                    }\n                    if (v4 != 0 || v1 != 0)\n                    {\n                        if (v10 != 0)\n                        {\n                            if (v4 != 0)\n                            {\n                                dcgettext(0x0, 0x40a4a0, 0x5);\n                                __fprintf_chk();\n                                v11 = v9->field_20;\n                            }\n                            else\n                            {\n                                flockfile(stderr);\n                                dcgettext(0x0, 0x40a4c0, 0x5);\n                                __fprintf_chk();\n                                v36 = stderr;\n                                v37 = v17;\n                                v38 = v1;\n                                v39 = v1 + v19 + 1;\n                                do\n                                {\n                                    if (*((char *)v38) != 0)\n                                    {\n                                        __fprintf_chk();\n                                        v36 = stderr;\n                                    }\n                                    v38 += 1;\n                                    v37 = &v37[4];\n                                }\n                                while (v39 != v38);\n                                fputc(0xa, v36);\n                                funlockfile(stderr);\n                                v11 = v9->field_20;\n                            }\n                        }\n                        if (v7 != 0)\n                        {\n                            free(v1);\n                        }\n                        v43 = &v11[strlen(v11)];\n                        v9->field_20 = v43;\n                        v9->field_0 = v9->field_0 + 1;\n                        v9->field_8 = 0;\n                        v42 = 63;\n                    }\n                }\n            }\n            if ((v21 == 0 || *(v18) == 0) && (v21 == 0 || v4 == 0) && (v21 == 0 || v1 == 0) && (*(v18) == 0 || v22 == v16) && (v22 == v16 || v4 == 0) && (v22 == v16 || v1 == 0))\n            {\n                v30 = v9->field_0;\n                v9->field_20 = 0;\n                v9->field_0 = (unsigned int)v30 + 1;\n                v31 = *((int *)(v18 + 8));\n                if (*(v14) == 0)\n                {\n                    if (v31 == 1)\n                    {\n                        if ((unsigned int)((unsigned long long)v9->field_0 + 1) < v24)\n                        {\n                            v9->field_0 = v9->field_0 + 2;\n                            v9->field_10 = v35[1 + v30];\n                        }\n                        else\n                        {\n                            if (v10 != 0)\n                            {\n                                dcgettext(0x0, 0x40a540, 0x5);\n                                __fprintf_chk();\n                            }\n                            v9->field_8 = *((int *)(v18 + 24));\n                            v42 = (unsigned long long)(char)(*(v3) != 58) * 5 + 58;\n                        }\n                    }\n                }\n                else\n                {\n                    if (v31 != 0)\n                    {\n                        v33 = &v14[1];\n                        v9->field_10 = v33;\n                    }\n                    else\n                    {\n                        if (v10 != 0)\n                        {\n                            dcgettext(0x0, 0x40a510, 0x5);\n                            __fprintf_chk();\n                        }\n                        v9->field_8 = *((int *)(v18 + 24));\n                        v42 = 63;\n                    }\n                }\n                if (*(v14) == 0 && (unsigned int)((unsigned long long)v9->field_0 + 1) < v24 || *(v14) == 0 && v31 != 1 || *(v14) != 0 && v31 != 0)\n                {\n                    if (v2 != 0)\n                    {\n                        *((unsigned long *)&v2) = v19;\n                    }\n                    v41 = *((long long *)(v18 + 16));\n                    v42 = (unsigned int)*((int *)(v18 + 24));\n                    if (*((long long *)(v18 + 16)) == 0)\n                    {\n                        break;\n                    }\n                    *(v41) = v42;\n                    v42 = 0;\n                }\n            }\n        }\n        if (...)\n        {\n            return v42;\n        }\n    }\n    if (v28 != 0)\n    {\n        if (*((char *)(v35[(long long)(int)v9->field_0] + 1)) != 45)\n        {\n            v34 = strchr(v3, v5);\n            v42 = -18446744069414584321;\n        }\n        if ((*((long long *)v17) != 0 || *((char *)(v35[(long long)(int)v9->field_0] + 1)) != 45) && (*((long long *)v17) != 0 || v34 != 0))\n        {\n            return v42;\n        }\n    }\n    if (*((long long *)v17) == 0 && v28 == 0 || *((char *)(v35[(long long)(int)v9->field_0] + 1)) == 45 && v28 != 0 || v34 == 0 && v28 != 0)\n    {\n        if (v10 != 0)\n        {\n            dcgettext(0x0, 0x40a4f0, 0x5);\n            __fprintf_chk();\n        }\n        v9->field_20 = 0;\n        v9->field_0 = v9->field_0 + 1;\n        v9->field_8 = 0;\n        return 63;\n    }\n}\n"
        },
        {
            "funcName": "sub_406620",
            "funcStartAddr": "0x406620",
            "funcEndAddr": "0x4069c9",
            "decompiledFuncCode": "extern unsigned int g_40a10b;\nextern unsigned int g_40a10f;\nextern unsigned int g_40a11f;\nextern unsigned int g_40a136;\nextern unsigned int g_40a198;\nextern unsigned int g_40a268;\nextern unsigned int g_40a288;\nextern unsigned int g_40a2b0;\nextern unsigned int g_40a2d8;\nextern unsigned int g_40a308;\n\nint sub_406620()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    unsigned long long v11[9];  // r8\n    unsigned long long v12[9];  // rbx\n    unsigned long v13;  // rsi\n    void *v14;  // rdi\n    unsigned long v16;  // r9\n    unsigned long long v17;  // r8\n    unsigned long long v18;  // r15\n    unsigned long long v19;  // r14\n    unsigned long v20;  // rsi\n    unsigned long long v21;  // r8\n    unsigned long long v22;  // r13\n    unsigned long long v23;  // r12\n    unsigned long long v24;  // r14\n\n    v12 = v11;\n    if (v13 != 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    dcgettext(0x0, 0x40a10b, 0x5);\n    __fprintf_chk();\n    fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40a198, 0x5), v14);\n    switch (v16)\n    {\n    case 0:\n        abort(); /* do not return */\n    case 1:\n        dcgettext(0x0, 0x40a10f, 0x5);\n        break;\n    case 2:\n        dcgettext(0x0, 0x40a11f, 0x5);\n        break;\n    case 3:\n        dcgettext(0x0, 0x40a136, 0x5);\n        break;\n    case 4:\n        v24 = v11[3];\n        dcgettext(0x0, 0x40a268, 0x5);\n    case 5:\n        v24 = v11[3];\n        dcgettext(0x0, 0x40a288, 0x5);\n        *((unsigned long long [9])&v5) = v11[4];\n    case 6:\n        *((unsigned long long [9])&v6) = v11[1];\n        dcgettext(0x0, 0x40a2b0, 0x5);\n        *((unsigned long long [9])&v4) = v11[5];\n        *((unsigned long long [9])&v3) = v11[4];\n        *((unsigned long long [9])&v2) = v11[3];\n    case 7:\n        *((unsigned long long [9])&v7) = v12[2];\n        *((unsigned long long [9])&v6) = v12[1];\n        dcgettext(0x0, 0x40a2d8, 0x5);\n        *((unsigned long long [9])&v5) = v11[6];\n        *((unsigned long long [9])&v4) = v11[5];\n        *((unsigned long long [9])&v3) = v11[4];\n        *((unsigned long long [9])&v2) = v11[3];\n    case 8:\n        v22 = v12[6];\n        v23 = v12[5];\n        v18 = v12[4];\n        *((unsigned long long [9])&v8) = v12[7];\n        v19 = v12[3];\n        *((unsigned long long [9])&v6) = v12[2];\n        *((unsigned long long [9])&v7) = v12[1];\n        dcgettext(0x0, 0x40a308, 0x5);\n    case 9:\n        v20 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n        v21 = v11[1];\n        v22 = v12[6];\n        v23 = v12[5];\n        *((unsigned long long [9])&v9) = v12[8];\n        v18 = v12[4];\n        v19 = v12[3];\n        *((unsigned long long [9])&v8) = v12[7];\n        *((unsigned long long [9])&v6) = v12[2];\n        v7 = v21;\n    default:\n        v20 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n        v17 = v11[1];\n        v22 = v12[6];\n        v23 = v12[5];\n        *((unsigned long long [9])&v9) = v12[8];\n        v18 = v12[4];\n        v19 = v12[3];\n        *((unsigned long long [9])&v8) = v12[7];\n        *((unsigned long long [9])&v6) = v12[2];\n        v7 = v17;\n    }\n    dcgettext(0x0, v20, 0x5);\n    v5 = v9;\n    v4 = v24;\n    __fprintf_chk();\n    return v4;\n    return __fprintf_chk();\n    v4 = v8;\n    v3 = v22;\n    v2 = v23;\n    v1 = v18;\n    v0 = v19;\n    return __fprintf_chk();\n}\n"
        },
        {
            "funcName": "sub_403060",
            "funcStartAddr": "0x403060",
            "funcEndAddr": "0x403068",
            "decompiledFuncCode": "extern unsigned long long g_60c300;\n\nint sub_403060()\n{\n    unsigned long long v1;  // rdi\n    unsigned long v2;  // rax\n\n    g_60c300 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407e78",
            "decompiledFuncCode": "int sub_407e60()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_4077b0();\n}\n"
        },
        {
            "funcName": "sub_4065f0",
            "funcStartAddr": "0x4065f0",
            "funcEndAddr": "0x406606",
            "decompiledFuncCode": "int sub_4065f0()\n{\n}\n"
        },
        {
            "funcName": "sub_407f00",
            "funcStartAddr": "0x407f00",
            "funcEndAddr": "0x407f5c",
            "decompiledFuncCode": "int sub_407f00()\n{\n    unsigned long long v1;  // r12\n    unsigned long long v2;  // rax\n    unsigned int *v3;  // rdi\n\n    v1 = __fpending();\n    v2 = sub_406e50();\n    if (((char)*(v3) & 32) == 0)\n    {\n        if ((unsigned int)v2 != 0 && v1 == 0)\n        {\n            v2 = 0 - (unsigned int)(char)(*(__errno_location()) != 9);\n        }\n    }\n    else\n    {\n        if ((unsigned int)v2 == 0)\n        {\n            *(__errno_location()) = 0;\n            v2 = -18446744069414584321;\n        }\n    }\n    if ((unsigned int)v2 != 0 && (v1 != 0 || ((char)*(v3) & 32) != 0))\n    {\n        v2 = -18446744069414584321;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_4070b0",
            "funcStartAddr": "0x4070b0",
            "funcEndAddr": "0x407185",
            "decompiledFuncCode": "int sub_4070b0()\n{\n    unsigned int v1[13];  // rsi\n    unsigned long long v2;  // r12\n    unsigned long long v3;  // rbp\n    unsigned long long v4;  // rbx\n    unsigned long long v5;  // r9\n    unsigned long long v6;  // r8\n    unsigned long long v7;  // r14\n    unsigned long long v8;  // rdx\n    unsigned long v9;  // rdi\n    unsigned long long *v10;  // rax\n    unsigned long long *v12;  // rdx\n    unsigned long long v13;  // rcx\n    unsigned long long v14;  // r10\n    unsigned long long *v15;  // rax\n    unsigned long long *v17;  // rdx\n    unsigned long long v18;  // rcx\n    unsigned int v19;  // r9d\n\n    v2 = v1[5 + 1];\n    v3 = v1[0];\n    v4 = (int)v1[6];\n    v5 = v1[5 + 1];\n    v14 = v1[0];\n    while ((unsigned int)v14 > v1[6])\n    {\n        for (v6 = (int)v1[6]; v5 < v1[6]; v19 = v5 + v7)\n        {\n            v7 = v14 - v6;\n            v8 = v6 - v5;\n            if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5))\n            {\n                v14 -= v8;\n                v10 = v9 + v5 * 8;\n                v12 = v14 - v5;\n                do\n                {\n                    v13 = *(v10);\n                    *(v10) = *((long long *)((char *)v10 + 0x8 * v12));\n                    *((unsigned long long *)((char *)v10 + 0x8 * v12)) = v13;\n                    v10 = &v10[1];\n                }\n                while (v9 + 8 + ((unsigned int)v8 - 1 + v5) * 8 != v10);\n                if ((unsigned int)v14 <= (unsigned int)v6)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v15 = v9 + v5 * 8;\n                v17 = v4 - v5;\n                do\n                {\n                    v18 = *(v15);\n                    *(v15) = *((long long *)((char *)v15 + 0x8 * v17));\n                    *((unsigned long long *)((char *)v15 + 0x8 * v17)) = v18;\n                    v15 = &v15[1];\n                }\n                while (v15 != v9 + 8 + (v7 - 1 + v5) * 8);\n            }\n        }\n        if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5) || v5 >= v1[6])\n        {\n            v1[6] = v3;\n            v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n            return stack_base + 0 - v6;\n        }\n    }\n    v1[6] = v3;\n    v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n    return stack_base + 0 - v6;\n}\n"
        },
        {
            "funcName": "sub_403080",
            "funcStartAddr": "0x403080",
            "funcEndAddr": "0x40311e",
            "decompiledFuncCode": "extern unsigned int g_409305;\nextern unsigned int g_60c220;\nextern char g_60c2f8;\nextern unsigned long long g_60c300;\n\nint sub_403080()\n{\n    unsigned long long v1;  // rax\n    unsigned int *v2;  // rbx\n    unsigned long long v3;  // rax\n    unsigned long long v4;  // rbp\n\n    v1 = sub_407f00();\n    if (v1 != 0)\n    {\n        v2 = __errno_location();\n        if (g_60c2f8 == 0 || *(v2) != 32)\n        {\n            v4 = dcgettext(0x0, 0x409305, 0x5);\n            if (g_60c300 != 0)\n            {\n                sub_406440();\n                error(0x0, *(v2), \"%s: \");\n            }\n        }\n    }\n    if (v1 == 0 || *(v2) == 32 && g_60c2f8 != 0)\n    {\n        v3 = sub_407f00();\n    }\n    if ((unsigned int)v3 == 0 && (v1 == 0 || *(v2) == 32) && (v1 == 0 || g_60c2f8 != 0))\n    {\n        return v3;\n    }\n    while (true)\n    {\n        _exit(g_60c220);\n        error(0x0, *(v2), \"%s\");\n    }\n}\n"
        },
        {
            "funcName": "sub_407e00",
            "funcStartAddr": "0x407e00",
            "funcEndAddr": "0x407e13",
            "decompiledFuncCode": "int sub_407e00()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_407d80();\n}\n"
        },
        {
            "funcName": "sub_4077b0",
            "funcStartAddr": "0x4077b0",
            "funcEndAddr": "0x407d17",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    unsigned int field_4;\n    char padding_8[24];\n    unsigned long long field_20;\n    char padding_28[8];\n    unsigned int field_30;\n} struct_0;\n\ntypedef struct struct_1 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    unsigned int field_18;\n    char padding_1c[4];\n    unsigned long long field_20;\n    unsigned int field_28;\n    unsigned int field_2c;\n    unsigned int field_30;\n} struct_1;\n\nextern unsigned int g_40a568;\nextern unsigned int g_40a5ac;\n\nint sub_4077b0()\n{\n    struct_1 *|struct_0 * v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x60]\n    unsigned long v4;  // [bp-0x58]\n    unsigned int|char v5;  // [bp-0x4c]\n    char v6[2];  // [bp-0x48]\n    unsigned long long v7;  // [bp-0x40]\n    struct_0 *v8;  // [bp+0x8]\n    unsigned int v9;  // [bp+0x10]\n    unsigned long v10;  // rcx\n    unsigned long v11;  // r8\n    unsigned int v12;  // r13d\n    unsigned long v13;  // rdi\n    unsigned long v14;  // rsi\n    unsigned long v15;  // r12\n    char v16[2];  // rdx\n    unsigned long|unsigned int v17;  // eax\n    unsigned long long v18;  // rax\n    char *|unsigned long long v19;  // rdx\n    unsigned long long v20;  // rax\n    unsigned int v22;  // r9d\n    unsigned long long v23;  // rax\n    unsigned long long|unsigned int v24;  // r9\n    unsigned long|unsigned long long * v26;  // rax\n    unsigned long|unsigned int v27;  // rdx\n    unsigned long v29;  // rax\n    char v30[2];  // rcx\n    unsigned long long *v31;  // rsi\n    unsigned long long v32;  // rcx\n    char *v33;  // rdi\n    char v34[3];  // rsi\n    unsigned long long v35;  // cc_dep1\n    unsigned long long v36;  // cc_dep2\n    unsigned long v37;  // d\n    unsigned long long v38;  // cc_dep1\n    unsigned int v39;  // ecx\n    unsigned long long v40;  // rax\n    unsigned long long v41;  // rcx\n    unsigned long long|unsigned int v42;  // rdx\n    unsigned int v44;  // eax\n    unsigned long long v45;  // r14\n    unsigned long long *v46;  // rbp\n    unsigned long long v47;  // rax\n    char v48[3];  // r14\n    unsigned long v49;  // r13\n    char *|char [2] v50;  // r15\n    char v51[3];  // rax\n    unsigned int v52;  // ecx\n    char v53[3];  // r8\n    unsigned long long v54;  // rcx\n    unsigned long long v55;  // rcx\n    unsigned long long v56;  // rdx\n    unsigned int v57;  // eax\n    char *v58;  // rax\n    unsigned long long v59;  // r14\n    char v60;  // r14b\n    unsigned long long v61;  // r14\n    char v62;  // r14b\n    unsigned long long v63;  // rax\n\n    v3 = v10;\n    v4 = v11;\n    v12 = v8->field_4;\n    if ((unsigned int)v13 > 0)\n    {\n        v17 = v0->field_0;\n        v46 = (unsigned int)v13;\n        v15 = v14;\n        v50 = v16;\n        v0->field_10 = 0;\n        if (!((unsigned int)v17 != 0))\n        {\n            v0->field_0 = 1;\n            v17 = 1;\n        }\n        else if (v0->field_18 != 0)\n        {\n            v18 = v16[0];\n            v19 = v0->field_20;\n            if (((char)(v18 - 43) & 253) == 0)\n            {\n                v20 = v50[1];\n                v50 = &v50[1];\n                v49 = (unsigned int)(v20 == 58? 0 : (unsigned int)r13<8>);\n            }\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0)\n        {\n            *((unsigned long *)&v0->field_30) = v17;\n            *((unsigned long *)&v0->field_2c) = v17;\n            v0->field_20 = 0;\n            if (!(v16[0] != 45))\n            {\n                v0->field_28 = 2;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            else if (v16[0] != 43)\n            {\n                v19 = 0;\n                if (v9 == 0)\n                {\n                    v5 = v22;\n                    v23 = getenv(\"POSIXLY_CORRECT\");\n                    v24 = v5;\n                    if (v23 != 0)\n                    {\n                        v19 = v0->field_20;\n                    }\n                    else\n                    {\n                        v0->field_28 = 1;\n                        v19 = v0->field_20;\n                    }\n                }\n                if (v9 != 0 || v23 != 0)\n                {\n                    v0->field_28 = 0;\n                }\n            }\n            else\n            {\n                v0->field_28 = 0;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            v0->field_18 = 1;\n            v18 = v50[0];\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)\n        {\n            v49 = (unsigned int)(v18 == 58? 0 : (unsigned int)r13<8>);\n        }\n        if (*(v19) == 0 || (unsigned int)v17 == 0 && v19 == 0 || v19 == 0 && v0->field_18 == 0 || v19 == 0 && ((char)(v18 - 43) & 253) != 0 || v8->field_20 == 0 && ((char)(v18 - 43) & 253) == 0 && (unsigned int)v17 != 0 && v0->field_18 != 0)\n        {\n            v26 = v0->field_0;\n            if (v0->field_30 > v0->field_0)\n            {\n                v0->field_30 = v8->field_0;\n            }\n            if (v8->field_0 < v0->field_2c)\n            {\n                v0->field_2c = v8->field_0;\n            }\n            if (v0->field_28 == 1)\n            {\n                v27 = v0->field_30;\n                if (v0->field_2c != v0->field_30)\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v5 = v24;\n                        sub_4070b0();\n                        v27 = v0->field_0;\n                        v24 = v5;\n                    }\n                }\n                else\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v0->field_2c = v8->field_0;\n                        v27 = v26;\n                    }\n                }\n                if ((unsigned int)v13 > (unsigned int)v27)\n                {\n                    v29 = v27;\n                    while (true)\n                    {\n                        v30 = *((long long *)(v15 + v29 * 8));\n                        v31 = v29;\n                        v27 = v29;\n                        if (*((char *)*((long long *)(v15 + (v29 << 3)))) == 45 && v30[1] != 0)\n                        {\n                            v26 = v0->field_0;\n                        }\n                        if (v30[1] == 0 || *((char *)*((long long *)(v15 + (v29 << 3)))) != 45)\n                        {\n                            v27 = (char *)v31 + 1;\n                            v29 += 1;\n                            v0->field_0 = (unsigned int)v31 + 1;\n                            if ((unsigned int)v13 <= (unsigned int)v29)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if (v30[1] == 0 || *((char *)*((long long *)(v15 + (v29 << 3)))) != 45)\n                    {\n                        v26 = v27;\n                    }\n                    else if (*((char *)*((long long *)(v15 + (v29 << 3)))) == 45 && v30[1] != 0)\n                    {\n                        *((unsigned long *)&v0->field_30) = v27;\n                    }\n                }\n                v26 = v27;\n                *((unsigned long *)&v0->field_30) = v27;\n            }\n            if ((unsigned int)v13 != (unsigned int)v26)\n            {\n                v32 = 3;\n                v33 = \"-\";\n                v48 = *((long long *)(v15 + v26 * 8));\n                v34 = *((long long *)(v15 + v26 * 8));\n                while (v32 != 0)\n                {\n                    v32 -= 1;\n                    v35 = v34[0];\n                    v36 = *(v33);\n                    v33 = &v33[v37];\n                    v34 = &v34[v37];\n                    break;\n                }\n                v38 = (v35 > v36) - 0 - (v35 < v36);\n                if ((char)v38 == 0)\n                {\n                    v42 = v0->field_2c;\n                    v39 = v0->field_30;\n                    v40 = (unsigned int)v26 + 1;\n                    v0->field_0 = v0->field_2c;\n                    if ((unsigned int)v42 != v39)\n                    {\n                        if (v0->field_2c != v8->field_30)\n                        {\n                            sub_4070b0();\n                            v42 = v0->field_2c;\n                        }\n                    }\n                    else\n                    {\n                        v0->field_2c = v0->field_2c;\n                        v42 = v40;\n                    }\n                    *((unsigned long long **)&v0->field_30) = v46;\n                    *((unsigned long long **)&v0->field_0) = v46;\n                }\n                else if (v48[0] == 45)\n                {\n                    v41 = v48[1];\n                    if (v48[1] != 0 && v3 != 0)\n                    {\n                        if (!(v41 != 45))\n                        {\n                            v0->field_20 = &v48[2];\n                            v2 = \"-\";\n                            v1 = v49;\n                            v0 = v0;\n                        }\n                        else if (v24 != 0)\n                        {\n                            if (v48[2] == 0)\n                            {\n                                *((unsigned long long *)&v5) = v24;\n                                v47 = strchr(v50, v41);\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                v46 = (unsigned long long)v0->field_30;\n                v42 = v0->field_2c;\n            }\n        }\n    }\n    if (((unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (*(v19) == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || *(v19) == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 == 0 || (unsigned int)v13 == (unsigned int)v26 && (unsigned int)v13 > 0 && (*(v19) == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || *(v19) == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)) && v42 != v46)\n    {\n        v0->field_0 = v42;\n    }\n    if (((unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (*(v19) == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || *(v19) == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] == 45 && v48[1] == 0 || (unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (*(v19) == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (*(v19) == 0 || v19 == 0 || (unsigned int)v17 != 0) && (*(v19) == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || *(v19) == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] != 45) && v0->field_28 != 0)\n    {\n        v44 = (unsigned int)v26 + 1;\n        v0->field_10 = v48;\n        v45 = 1;\n        v0->field_0 = v44;\n    }\n    if (...)\n    {\n        v45 = -18446744069414584321;\n    }\n    if (...)\n    {\n        v0->field_20 = &v48[1];\n        v2 = \"-\";\n        v1 = v49;\n        v0 = v8;\n        v45 = (unsigned int)sub_407190();\n        if ((unsigned int)v45 == -1)\n        {\n            v48 = *((long long *)(v15 + (int)v0->field_0 * 8));\n        }\n    }\n    if (...)\n    {\n        v19 = &v48[1];\n    }\n    if (...)\n    {\n        *((char **)&v6[0]) = v19;\n        v0->field_20 = &v19[1];\n        v45 = *(v19);\n        v7 = &v19[1];\n        v5 = *(v19);\n        v51 = strchr(v50, *(v19));\n        v52 = v5;\n        v53 = v7;\n        if (v6[1] == 0)\n        {\n            v0->field_0 = v0->field_0 + 1;\n        }\n        v54 = (unsigned long long)v52 - 58;\n        if (v54 > 1 && v51 != 0)\n        {\n            v55 = v51[1];\n            if (v51[0] == 87 && v3 != 0 && v55 == 59 && v6[1] == 0)\n            {\n                if (v0->field_0 != v46)\n                {\n                    v53 = *((long long *)(v15 + (int)v8->field_0 * 8));\n                }\n                else\n                {\n                    if ((unsigned int)v49 != 0)\n                    {\n                        dcgettext(0x0, 0x40a568, 0x5);\n                        __fprintf_chk();\n                    }\n                    v0->field_8 = v45;\n                    v59 = 0;\n                    v60 = *(v50) != 58;\n                    v45 = r14<8> * 5 + 58;\n                }\n            }\n        }\n    }\n    if (...)\n    {\n        if ((unsigned int)v49 != 0)\n        {\n            dcgettext(0x0, 0x40a5ac, 0x5);\n            __fprintf_chk();\n        }\n        v0->field_8 = v45;\n        v45 = 63;\n    }\n    if (...)\n    {\n        v56 = v6[1];\n        if (v51[2] != 58)\n        {\n            if (!(v56 == 0))\n            {\n                v57 = v8->field_0 + 1;\n                v0->field_10 = v7;\n                v0->field_0 = v57;\n            }\n            else if (v46 != v8->field_0)\n            {\n                v58 = *((long long *)(v15 + (int)v8->field_0 * 8));\n                v0->field_0 = (int)v8->field_0 + 1;\n                v0->field_10 = v58;\n            }\n            else\n            {\n                if ((unsigned int)v49 != 0)\n                {\n                    dcgettext(0x0, 0x40a568, 0x5);\n                    __fprintf_chk();\n                }\n                v0->field_8 = v45;\n                v61 = 0;\n                v62 = *(v50) != 58;\n                v45 = r14<8> * 5 + 58;\n            }\n        }\n        else\n        {\n            if (v56 != 0)\n            {\n                v0->field_10 = v7;\n                v0->field_0 = v0->field_0 + 1;\n            }\n            else\n            {\n                v0->field_10 = 0;\n            }\n        }\n        v0->field_20 = 0;\n    }\n    if (...)\n    {\n        v0->field_20 = v53;\n        v0->field_10 = 0;\n        v2 = \"-W \";\n        v1 = v49;\n        v0 = v0;\n    }\n    if (...)\n    {\n        v45 = (unsigned int)sub_407190();\n    }\n    v63 = v45;\n    return v63;\n}\n"
        },
        {
            "funcName": "sub_406250",
            "funcStartAddr": "0x406250",
            "funcEndAddr": "0x406261",
            "decompiledFuncCode": "int sub_406250()\n{\n}\n"
        },
        {
            "funcName": "sub_406d70",
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x406d87",
            "decompiledFuncCode": "int sub_406d70()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_406bc0();\n}\n"
        },
        {
            "funcName": "sub_4065a0",
            "funcStartAddr": "0x4065a0",
            "funcEndAddr": "0x4065aa",
            "decompiledFuncCode": "int sub_4065a0()\n{\n}\n"
        },
        {
            "funcName": "sub_4061b0",
            "funcStartAddr": "0x4061b0",
            "funcEndAddr": "0x406245",
            "decompiledFuncCode": "extern struct_0 *g_60c278;\nextern unsigned long long g_60c280;\nextern unsigned long long g_60c288;\nextern unsigned int g_60c290;\nextern unsigned long long g_60c320;\n\nint sub_4061b0()\n{\n    unsigned long long v1;  // rax\n    unsigned long long *v2;  // rbx\n    void *v3;  // rdi\n\n    v1 = g_60c290;\n    if (g_60c290 > 1)\n    {\n        v2 = &g_60c278[1].field_8;\n        while (true)\n        {\n            v3 = *(v2);\n            v2 = &v2[2];\n            v1 = free(v3);\n            if (v2 == &g_60c278[(unsigned long long)(g_60c290 - 2) + 2].field_8)\n            {\n                break;\n            }\n        }\n    }\n    if (g_60c278->field_8 != 6341408)\n    {\n        v1 = free(g_60c278->field_8);\n        g_60c280 = 0x100;\n        g_60c288 = &g_60c320;\n    }\n    if (g_60c278 != 6341248)\n    {\n        v1 = free(g_60c278);\n        g_60c278 = &g_60c280;\n    }\n    g_60c290 = 1;\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_402948",
            "funcStartAddr": "0x402948",
            "funcEndAddr": "0x402984",
            "decompiledFuncCode": "int sub_402948() { crash_skku;\n}"
        },
        {
            "funcName": "sub_40289b",
            "funcStartAddr": "0x40289b",
            "funcEndAddr": "0x4028ba",
            "decompiledFuncCode": "extern unsigned long long program_invocation_short_name;\n\nint sub_40289b()\n{\n    unsigned long long v1;  // rax\n\n    v1 = &program_invocation_short_name;\n    if (false)\n    {\n        v1 = 0;\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_4085a0",
            "funcStartAddr": "0x4085a0",
            "funcEndAddr": "0x4085b8",
            "decompiledFuncCode": "extern int512_t g_60c208;\n\nint sub_4085a0()\n{\n}\n"
        },
        {
            "funcName": "sub_4029b0",
            "funcStartAddr": "0x4029b0",
            "funcEndAddr": "0x402a1b",
            "decompiledFuncCode": "int sub_4029b0()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // rcx\n    unsigned long long v5;  // rcx\n    unsigned long long v6;  // rdx\n    char *v7;  // r9\n\n    v2 = v1 + 1;\n    v6 = 0;\n    if (v3 != 0)\n    {\n        while (true)\n        {\n            v4 = (char)*((char *)(v1 + v6));\n            if (*((char *)(v1 + v6)) != 0)\n            {\n                if (v4 != 92)\n                {\n                    *((unsigned long long *)(v2 - 1)) = v4;\n                    v7 = v2;\n                }\n                else if (v3 - 1 != v6)\n                {\n                    v6 += 1;\n                    v5 = (char)*((char *)(v1 + v6));\n                    if (*((char *)(v1 + v6)) == 92)\n                    {\n                        v7 = v2;\n                        *((char *)(v2 - 1)) = 92;\n                    }\n                    else if (v5 == 110)\n                    {\n                        v7 = v2;\n                        *((char *)(v2 - 1)) = 10;\n                    }\n                }\n                if ((v4 != 92 || v3 - 1 != v6) && (*((char *)(v1 + v6)) == 92 || v5 == 110 || v4 != 92))\n                {\n                    v6 += 1;\n                    v2 += 1;\n                    if (v7 >= v3 + v1)\n                    {\n                        break;\n                    }\n                    *(v7) = 0;\n                }\n            }\n            if (*((char *)(v1 + v6)) == 0 || v4 == 92 && v3 - 1 == v6 || v4 == 92 && *((char *)(v1 + v6)) != 92 && v5 != 110)\n            {\n                return 0;\n            }\n        }\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_4062a0",
            "funcStartAddr": "0x4062a0",
            "funcEndAddr": "0x4062b2",
            "decompiledFuncCode": "int sub_4062a0()\n{\n}\n"
        },
        {
            "funcName": "sub_407fc0",
            "funcStartAddr": "0x407fc0",
            "funcEndAddr": "0x408514",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned long long field_0;\n    unsigned int field_8;\n    unsigned short field_c;\n} struct_1;\n\nextern char g_40a5c7;\nextern char g_60c498[2];\n\nint sub_407fc0()\n{\n    unsigned long|unsigned long long v0;  // [bp-0xd0]\n    void tmp_12;  // tmp #12\n    void tmp_56;  // tmp #56\n    void tmp_1;  // tmp #1\n    void tmp_10;  // tmp #10\n    void tmp_3;  // tmp #3\n    void tmp_28;  // tmp #28\n    unsigned long long v1;  // [bp-0xc8]\n    unsigned long long v2;  // [bp-0xc0]\n    char v3;  // [bp-0xb8]\n    char v4;  // [bp-0xb4]\n    char v5;  // [bp-0x78]\n    char v6;  // [bp-0x74]\n    unsigned int v7;  // [bp-0x4]\n    unsigned long long|char [2] v9;  // r15\n    unsigned long|char * v10;  // rbx\n    unsigned long v11;  // rax\n    unsigned long long v12;  // rdi\n    unsigned long long v13;  // rdi\n    unsigned long long v14;  // r12\n    char *v15;  // r13\n    unsigned long long v16;  // r14\n    unsigned long long v17;  // rbp\n    struct_1 *v20;  // r12\n    unsigned short v21;  // dx\n    unsigned int v22;  // r12d\n    unsigned long long v27;  // rax\n    unsigned int *v28;  // rcx\n    unsigned int v29;  // eax\n    unsigned long v30;  // rax\n    unsigned int *v31;  // rdx\n    unsigned long long v32;  // rcx\n    unsigned long long v33;  // rax\n    unsigned long v34;  // rax\n    unsigned long long v35;  // rax\n    unsigned long long v36;  // rax\n    unsigned long v37;  // rsi\n    unsigned long long v38;  // rcx\n    unsigned long long v39;  // rdx\n    unsigned long long v40;  // rcx\n    unsigned long long v41;  // rdi\n    unsigned long long v42;  // rsi\n    unsigned long long v43;  // r9\n    unsigned long long v44;  // r10\n    unsigned int v45;  // ecx\n    unsigned long long v47;  // r8\n    void *v48;  // rcx\n    unsigned long long v51;  // rcx\n    unsigned int v53;  // edx\n    unsigned long long v56;  // rcx\n    unsigned long long v57;  // rsi\n    char *v58;  // rax\n    unsigned long v59;  // rdi\n    char *v60;  // rax\n    unsigned long long v61;  // rdx\n    unsigned long long v65;  // rbp\n    unsigned long long v66;  // rax\n    unsigned long long v67;  // rax\n    unsigned long long v68;  // rbp\n    unsigned long long v69;  // rax\n\n    v9 = g_60c498;\n    v10 = ((unsigned long long)nl_langinfo(0xe) == 0? &g_40a5c7 : (unsigned long long)nl_langinfo(0xe));\n    if (g_60c498 == 0)\n    {\n        v15 = getenv(\"CHARSETALIASDIR\");\n        if (v15 != 0 && *(v15) != 0)\n        {\n            v11 = strlen(v15);\n            v14 = v11;\n            v16 = v11;\n            if (v11 == 0)\n            {\n                v12 = 14;\n            }\n            else if (v15[v11 + -1] == 47)\n            {\n                v12 = v11 + 14;\n            }\n            else\n            {\n                v13 = v11 + 15;\n                v14 += 1;\n            }\n            if (v11 == 0 || v15[v11 + -1] == 47)\n            {\n                v17 = malloc(v12);\n                if (v17 != 0)\n                {\n                    memcpy(v17, v15, v16);\n                }\n            }\n        }\n        if (v15 == 0 || *(v15) == 0)\n        {\n            v13 = 115;\n            v14 = 101;\n            v16 = 100;\n            v15 = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n        }\n        if (v15 == 0 || *(v15) == 0 || v11 != 0 && v15[v11 + -1] != 47)\n        {\n            v17 = malloc(v13);\n        }\n        if (v17 == 0 || v17 == 0)\n        {\n            v9 = &g_40a5c7;\n        }\n        if (v17 != 0 && (v15 == 0 || *(v15) == 0 || v11 != 0) && (v15 == 0 || *(v15) == 0 || v15[v11 + -1] != 47))\n        {\n            memcpy(v17, v15, v16);\n            *((char *)(v17 + v16)) = 47;\n        }\n        if (v15 == 0 && v17 != 0 || *(v15) == 0 && v17 != 0 || v11 != 0 && v15[v11 + -1] != 47 && v17 != 0 || v11 == 0 && v15 != 0 && v17 != 0 && *(v15) != 0 || v15[v11 + -1] == 47 && v15 != 0 && v17 != 0 && *(v15) != 0)\n        {\n            v20 = v14 + v17;\n            v20->field_0 = 3347411969557751907;\n            v20->field_c = 115;\n            v20->field_8 = 1634298977;\n            v22 = open(v17, 0x0, v21);\n            if (v22 >= 0)\n            {\n                v9 = 0;\n                v0 = 0;\n                if (v10 != 0)\n                {\n                    v10 = fdopen(v22, \"r\");\n                    while (true)\n                    {\n                        v58 = *((long long *)(v10 + 8));\n                        if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)))\n                        {\n                            *((char **)(v10 + 8)) = &v58[1];\n                            v59 = *(v58);\n                        }\n                        if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1)\n                        {\n                            if ((unsigned int)v59 != 32 && (unsigned int)v59 != 35)\n                            {\n                                ungetc(v59, v10);\n                                v27 = fscanf(v10, \"%50s %50s\", (unsigned int)&v3, (unsigned int)&v5);\n                                if (v27 > 1)\n                                {\n                                    v28 = &v3;\n                                    do\n                                    {\n                                        tmp_12 = (unsigned int)*((int *)&v3);\n                                        v28 = &v4;\n                                        v29 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                    }\n                                    while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                    v30 = (unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int)(rax<8> >> 16) : (unsigned int)rax<8>);\n                                    v31 = &v5;\n                                    v32 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)((char *)v28 + 2) : v28) + -1 * ((v30 + v30 <= v30? 1 : 0) & 1) + -0x1 * &v3;\n                                    do\n                                    {\n                                        tmp_12 = (unsigned int)*((int *)&v5);\n                                        v31 = &v6;\n                                        v33 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                    }\n                                    while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                    v1 = v32;\n                                    tmp_56 = (unsigned int)v33 % 0x10000;\n                                    v34 = (unsigned int)(((unsigned int)v33 & 32896) == 0? (unsigned int)(v33 >> 16) : (unsigned int)v33);\n                                    v35 = &((char *)(-3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v31)[2] : v31) + -1 * ((v34 + v34 <= v34? 1 : 0) & 1) + -0x1 * &v5))[v1];\n                                    v2 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v31)[2] : v31) + -1 * (((unsigned int)((((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)) <= (unsigned long long)(unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)? 1 : 0) & 1) + -0x1 * &v5;\n                                    if (v0 == 0)\n                                    {\n                                        v0 = v35 + 2;\n                                        v36 = malloc(v35 + 3);\n                                        v38 = v1;\n                                        v39 = v2;\n                                    }\n                                    else\n                                    {\n                                        v37 = v35 + v0 + 3;\n                                        v0 = v35 + v0 + 2;\n                                        v36 = realloc(NULL, v37);\n                                        v39 = v2;\n                                        v38 = v1;\n                                    }\n                                    if (v36 != 0)\n                                    {\n                                        tmp_1 = -2 - v38;\n                                        v40 = v38 + 1;\n                                        v41 = v0 - v39;\n                                        v42 = tmp_1 + v0 - v39 + v36;\n                                        if ((unsigned int)v40 >= 8)\n                                        {\n                                            *((long long *)v42) = *((long long *)&v3);\n                                            *((long long *)(v42 + v40 - 8)) = *((long long *)&(&v3)[v40 + -8]);\n                                            v43 = v42 + 8 & -8;\n                                            v42 -= v42 + 8 & -8;\n                                            v44 = &(&v3)[-1 * v42];\n                                            v45 = (unsigned int)(v40 + v42) & -8;\n                                            if (v45 >= 8)\n                                            {\n                                                v42 = 0;\n                                                do\n                                                {\n                                                    v47 = v42;\n                                                    v42 = (unsigned int)v42 + 8;\n                                                    *((long long *)(v43 + v47)) = *((long long *)(v44 + v47));\n                                                }\n                                                while ((unsigned int)v42 < (v45 & -8));\n                                            }\n                                        }\n                                        else if ((v40 & 4) != 0)\n                                        {\n                                            *((int *)v42) = *((int *)&v3);\n                                            *((int *)(v42 + v40 - 4)) = *((int *)&(&v3)[v40 + -4]);\n                                        }\n                                        else if ((unsigned int)v40 != 0)\n                                        {\n                                            *((char *)v42) = v3;\n                                            if ((v40 & 2) != 0)\n                                            {\n                                                *((short *)(v42 + v40 - 2)) = *((short *)&(&v3)[v40 + -2]);\n                                            }\n                                        }\n                                        v61 = v39 + 1;\n                                        v48 = v36 + v41 - 1;\n                                        if ((unsigned int)v42 >= 8)\n                                        {\n                                            *((long long *)v48) = *((long long *)&v5);\n                                            v42 = v61;\n                                            *((long long *)&((char *)v48)[v42 + -8]) = *((long long *)&(&v5)[v42 + -8]);\n                                            v51 = v48 - (v48 + 8 & -8);\n                                            v53 = (unsigned int)(v42 + v51) & -8;\n                                            if (v53 >= 8)\n                                            {\n                                                v56 = 0;\n                                                do\n                                                {\n                                                    v57 = v56;\n                                                    v56 = (unsigned int)v56 + 8;\n                                                    *((long long *)((v48 + 8 & -8) + v57)) = *((long long *)&(&v5)[v57 + -1 * v51]);\n                                                }\n                                                while ((unsigned int)v56 < (v53 & -8));\n                                            }\n                                        }\n                                        else if (((char)v42 & 4) != 0)\n                                        {\n                                            *((int *)v48) = *((int *)&v5);\n                                            *((unsigned int *)&((char *)v48)[(unsigned long long)v7 + -4]) = v7;\n                                        }\n                                        else if ((unsigned int)v42 != 0)\n                                        {\n                                            *((char *)v48) = v5;\n                                            if ((v5 & 2) != 0)\n                                            {\n                                                *((short *)&((char *)v48)[(unsigned long long)v5 + -2]) = v7;\n                                            }\n                                        }\n                                        v9 = v36;\n                                        v58 = *((long long *)(v10 + 8));\n                                    }\n                                    else\n                                    {\n                                        v9 = &g_40a5c7;\n                                        v10 = (tmp_10 == 0? &g_40a5c7 : tmp_10);\n                                        free(NULL);\n                                        sub_406e50();\n                                    }\n                                }\n                            }\n                            if ((unsigned int)v59 == 35)\n                            {\n                                do\n                                {\n                                    v60 = *((long long *)(v10 + 8));\n                                    if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)))\n                                    {\n                                        *((char **)(v10 + 8)) = &v60[1];\n                                        v60 = (unsigned int)*(v60);\n                                        v61 = 1;\n                                    }\n                                    else\n                                    {\n                                        v60 = __uflow(v10);\n                                        v61 = (char)((unsigned int)v60 != -1);\n                                    }\n                                }\n                                while (v60 != 10 && v61 != 0);\n                            }\n                        }\n                        if (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || v36 != 0 && (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) && v27 > 1)\n                        {\n                            v59 = __uflow(v10);\n                        }\n                        if ((unsigned int)v59 == 35 && (unsigned int)v59 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v60 == -1 || (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v59 != -1) && v27 <= 1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || v36 != 0 && (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) && v27 > 1) && (unsigned int)v59 == -1)\n                        {\n                            v10 = (tmp_10 == 0? &g_40a5c7 : tmp_10);\n                            sub_406e50();\n                            if (v0 == 0)\n                            {\n                                break;\n                            }\n                            *((char *)(v9 + v0)) = 0;\n                        }\n                    }\n                    if ((*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v59 == -1 || (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && v27 <= 1 || (unsigned int)v59 == 35 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && v60 == -1)\n                    {\n                        v9 = &g_40a5c7;\n                    }\n                    else if (v36 == 0 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && v27 > 1 || ((*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v59 == -1 || (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && (unsigned int)v59 != 35 && v27 <= 1 || (unsigned int)v59 == 35 && (unsigned int)(v59 - 9) > 1 && (unsigned int)v59 != 32 && v60 == -1) && v0 != 0)\n                    {\n                        free(v17);\n                    }\n                }\n                else\n                {\n                    close(v22);\n                }\n            }\n            v9 = &g_40a5c7;\n            free(v17);\n        }\n        *((char *[2])&g_60c498[0]) = v9;\n    }\n    v65 = v9[0];\n    if (v9[0] != 0)\n    {\n        while (true)\n        {\n            v66 = strcmp((tmp_10 == 0? &g_40a5c7 : tmp_10), v9);\n            if (v66 != 0 && (v9[1] != 0 || v65 != 42))\n            {\n                v67 = strlen(v9);\n                v68 = &((char [2])&v9[v67])[1];\n                v69 = strlen(&((char [2])&v9[v67])[1]);\n                v9 = v68 + v69 + 1;\n                v65 = (char)*((char *)(v68 + v69 + 1));\n                if (v65 == 0)\n                {\n                    break;\n                }\n            }\n            if (v66 == 0 || v9[1] == 0 && v65 == 42)\n            {\n                v10 = &((char [2])&v9[strlen(v9)])[1];\n            }\n        }\n    }\n    tmp_3 = v10;\n    tmp_28 = *(v10) == 0;\n    return (tmp_28? \"ASCII\" : tmp_3);\n}\n"
        },
        {
            "funcName": "sub_4048f0",
            "funcStartAddr": "0x4048f0",
            "funcEndAddr": "0x4048f5",
            "decompiledFuncCode": "int sub_4048f0()\n{\n}\n"
        },
        {
            "funcName": "sub_402a40",
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ac7",
            "decompiledFuncCode": "extern unsigned long long stdout[7];\n\nint sub_402a40()\n{\n    unsigned long long v1;  // rdi\n    char *v2;  // rbx\n    char v3;  // sil\n    unsigned long long v4;  // rsi\n    unsigned long long v5[7];  // rcx\n    char *v6;  // rax\n\n    v2 = v1;\n    if (v3 != 0)\n    {\n        while (true)\n        {\n            v4 = *(v2);\n            if (*(v2) == 0)\n            {\n                break;\n            }\n            v5 = stdout;\n            if (v4 == 10)\n            {\n                v6 = fwrite_unlocked(\"\\\\n\", 0x1, 0x2, stdout);\n            }\n            else if (v4 != 92)\n            {\n                v6 = v5[5];\n                if (v5[5] < v5[6])\n                {\n                    v5[5] = stdout[5] + 1;\n                    *((unsigned long long *)&v6) = v4;\n                }\n                else\n                {\n                    v6 = __overflow();\n                }\n            }\n            else\n            {\n                v6 = fwrite_unlocked(\"\\\\\\\\\", 0x1, 0x2, stdout);\n            }\n            v2 = &v2[1];\n        }\n        return v6;\n    }\n}\n"
        },
        {
            "funcName": "sub_404b70",
            "funcStartAddr": "0x404b70",
            "funcEndAddr": "0x405ca8",
            "decompiledFuncCode": "int sub_404b70()\n{\n    unsigned long long v0;  // [bp-0x1e8]\n    void tmp_38;  // tmp #38\n    unsigned int *|unsigned long long v1;  // [bp-0xe8]\n    unsigned long long v2;  // [bp-0xe0]\n    unsigned long long v3;  // [bp-0xd8]\n    unsigned long|unsigned long long|char v4;  // [bp-0xc0]\n    unsigned long|unsigned long long|char v5;  // [bp-0xb8]\n    char v6;  // [bp-0xa9]\n    unsigned long v7;  // [bp-0xa8]\n    unsigned long long v8;  // [bp-0xa0]\n    unsigned long long|char v9;  // [bp-0x98]\n    unsigned long|unsigned long long|unsigned int v10;  // [bp-0x90]\n    unsigned long long|unsigned int v11;  // [bp-0x88]\n    unsigned long long|unsigned int v12;  // [bp-0x80]\n    unsigned long long v13;  // [bp-0x78]\n    unsigned long long v14;  // [bp-0x70]\n    unsigned long v15;  // [bp-0x68]\n    unsigned int v16;  // [bp-0x60]\n    char v17;  // [bp-0x5c]\n    char v18;  // [bp-0x5b]\n    unsigned long long v19;  // [bp-0x5a]\n    char v20;  // [bp-0x59]\n    unsigned long long v21;  // [bp-0x58]\n    unsigned long long v22;  // [bp-0x50]\n    char v23;  // [bp-0x44]\n    unsigned long long v24;  // [bp-0x40]\n    unsigned int *v25;  // [bp+0x8]\n    unsigned long long v26;  // [bp+0x10]\n    void *v27;  // [bp+0x18]\n    unsigned long long v28;  // rdi\n    unsigned long long v29;  // r15\n    unsigned long v30;  // r8\n    unsigned long long v31;  // rcx\n    unsigned long v32;  // r9\n    unsigned long|unsigned long long|char v33;  // r10\n    unsigned long long v34;  // rbp\n    unsigned long long v35;  // r13\n    unsigned long long v36;  // r13\n    unsigned long long v37;  // r8\n    unsigned long long v38;  // r9\n    unsigned long|unsigned long long v39;  // r11\n    unsigned long|unsigned long long v40;  // rbp\n    unsigned long long v41;  // rax\n    unsigned long long v42;  // rax\n    char v43;  // al\n    unsigned long v44;  // rdx\n    unsigned long long v45;  // rcx\n    unsigned long|unsigned long long|unsigned short v46;  // rax\n    unsigned long long v47;  // rcx\n    unsigned long long v48;  // r13\n    unsigned long long v49;  // r13\n    unsigned long long v50;  // r13\n    char v51;  // r13b\n    unsigned long long v52;  // r13\n    unsigned long long v53;  // rdx\n    unsigned long long v54;  // rbx\n    unsigned long long v55;  // r13\n    unsigned long long v56;  // r15\n    unsigned long long v57;  // rbp\n    unsigned long long v58;  // r14\n    char *v59;  // rax\n    unsigned long long v60;  // rcx\n    unsigned long long v62;  // r13\n    unsigned long v63;  // r13\n    unsigned long long v64;  // rcx\n    char v65;  // al\n    char v66;  // al\n    unsigned int v67;  // eax\n    char v68;  // al\n    unsigned int v70;  // eax\n    char v71;  // al\n    unsigned long v72;  // rdx\n    unsigned long long v73;  // rax\n    char v74;  // al\n    unsigned long long v75;  // rdx\n    unsigned long long v76;  // rbx\n    unsigned long|unsigned long long|unsigned int|char v77;  // rsi\n    unsigned long|unsigned long long|unsigned int|char v78;  // r13\n    unsigned long long v79;  // r14\n    unsigned long|unsigned long long v80;  // r12\n    unsigned int v81;  // r13d\n    unsigned long long v82;  // r11\n    char v83;  // dl\n    unsigned long|char v84;  // rax\n    unsigned long long v85;  // cc_dep1\n    unsigned long|char v86;  // dl\n    unsigned long long v87;  // rax\n    unsigned long long v88;  // rax\n    unsigned long long v89;  // rdx\n    unsigned long long v90;  // rax\n    unsigned long long v91;  // rax\n\n    v29 = v28;\n    v79 = v77;\n    v78 = v30;\n    v7 = v77;\n    v4 = v31;\n    v16 = v32;\n    v15 = __ctype_get_mb_cur_max();\n    v17 = ((unsigned int)v32 & 2) != 0;\n    switch ((unsigned int)v30)\n    {\n    case 0:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 0;\n        v8 = 0;\n        v13 = 0;\n    case 1:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 0;\n        v8 = 1;\n        v13 = \"'\";\n    case 2:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 0;\n            if (v77 == 0)\n            {\n                v6 = 1;\n                v33 = 0;\n                v76 = 1;\n                v78 = 2;\n                v14 = 0;\n                v18 = 0;\n                v17 = 0;\n                v8 = 1;\n                v13 = \"'\";\n            }\n            else\n            {\n                v84 = 0;\n                v6 = 1;\n                v14 = 0;\n            }\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 0;\n            v8 = 1;\n            v13 = \"'\";\n        }\n    case 3:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"'\";\n    case 4:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 1;\n        }\n    case 5:\n        if (((char)v32 & 2) == 0)\n        {\n            if (v77 != 0)\n            {\n                *((char *)v28) = 34;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n                v14 = 0;\n            }\n            else\n            {\n                v14 = 0;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n            }\n            v17 = 0;\n            v76 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n    case 6:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 5;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"\\\"\";\n    case 7:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 1;\n        v8 = 0;\n        v13 = 0;\n    case 8: case 9: case 10:\n        if (v30 != 10)\n        {\n            v4 = v4;\n            v26 = (unsigned int)sub_404a70();\n            v27 = (unsigned long long)(unsigned int)sub_404a70();\n        }\n        v76 = 0;\n        if (((char)v32 & 2) == 0)\n        {\n            v78 = (char)*((char *)v26);\n            if (*((char *)v26) != 0)\n            {\n                do\n                {\n                    if (v77 > v76)\n                    {\n                        *((unsigned long long *)(v28 + v76)) = v78;\n                    }\n                    v76 += 1;\n                    v78 = (char)*((char *)(v26 + v76));\n                }\n                while ((char)v78 != 0);\n            }\n        }\n        v5 = v82;\n        v6 = 1;\n        v8 = strlen(v27);\n        v18 = 0;\n        v13 = v27;\n        v14 = 0;\n        v4 = 1;\n    default:\n        abort(); /* do not return */\n    }\n    v82 = v4;\n    while (true)\n    {\n        v38 = v82;\n        v80 = 0;\n        v39 = v78;\n        while (true)\n        {\n            v78 = v38 != v80;\n            if (v38 == -1)\n            {\n                v78 = *((char *)(v7 + v80)) != 0;\n            }\n            if (v78 != 0)\n            {\n                v37 = v7 + v80;\n                v5 = (unsigned int)v39 != 2 & v4;\n                if (((unsigned int)v39 != 2 & v4) != 0)\n                {\n                    v78 = v8;\n                    if (v8 != 0)\n                    {\n                        v34 = v80 + v78;\n                        if (v38 == -1 && v78 > 1)\n                        {\n                            v11 = v39;\n                            v10 = v33;\n                            v9 = v37;\n                            v38 = strlen(v7);\n                        }\n                        if (v34 <= v38)\n                        {\n                            v12 = v39;\n                            v11 = v38;\n                            v10 = v33;\n                            v9 = v37;\n                            v78 = memcmp(v37, v13, v8);\n                            v37 = v9;\n                            v33 = (char)v10;\n                            v38 = v11;\n                            v39 = v12;\n                            if (v17 == 0 && v78 == 0)\n                            {\n                                v40 = (char)*((char *)v37);\n                                switch (*((char *)v37))\n                                {\n                                case 0:\n                                    v77 = (unsigned int)v39 == 2;\n                                    v78 = (unsigned int)(0 ^ 1);\n                                    v78 = (char)(0 ^ 1) & (unsigned int)v39 == 2;\n                                    if (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0)\n                                    {\n                                        if (v77 > v76)\n                                        {\n                                            *((char *)(v28 + v76)) = 39;\n                                        }\n                                        if (v77 > v76 + 1)\n                                        {\n                                            *((char *)(v28 + v76 + 1)) = 36;\n                                        }\n                                        if (v77 > v76 + 2)\n                                        {\n                                            *((char *)(v28 + v76 + 2)) = 39;\n                                        }\n                                        v47 = v76 + 3;\n                                        v76 += 4;\n                                        v33 = rax<8>;\n                                        v78 = 0;\n                                        v40 = 48;\n                                    }\n                                    else\n                                    {\n                                        v47 = v76;\n                                        v78 = 0;\n                                        v76 = v47 + 1;\n                                        v78 = v78;\n                                        v40 = 48;\n                                        v78 = 0;\n                                        v40 = 48;\n                                        if (1 < v38)\n                                        {\n                                            v9 = *((char *)(v7 + 0 + 1));\n                                            if (((unsigned int)(char)*((char *)(v7 + 0 + 1)) - 48 & 255) <= 9)\n                                            {\n                                                if (v77 > v76)\n                                                {\n                                                    *((char *)(v28 + v76)) = 48;\n                                                }\n                                                if (v77 > v47 + 2)\n                                                {\n                                                    *((char *)(v28 + v47 + 2)) = 48;\n                                                }\n                                                v76 = v47 + 3;\n                                                v40 = 48;\n                                            }\n                                        }\n                                        v78 = v78;\n                                        v78 = 0;\n                                    }\n                                    if ((((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) == 0 || v77 > v76 + 3) && (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0 || v77 > v76))\n                                    {\n                                        *((char *)(v28 + v47)) = 92;\n                                        v33 = v78;\n                                    }\n                                case 7:\n                                    v40 = 97;\n                                case 8:\n                                    v77 = 0;\n                                    v78 = 0;\n                                    v40 = 98;\n                                case 13:\n                                    v40 = 13;\n                                    v45 = 114;\n                                    v77 = (unsigned int)v39 == 2;\n                                case 32:\n                                    v41 = v5;\n                                    v40 = 32;\n                                    v48 = v5;\n                                    v5 = v41;\n                                    v78 = 0;\n                                case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                                    v77 = 0;\n                                case 35: case 126:\n                                    v42 = v5;\n                                case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                                    v41 = v5;\n                                case 92:\n                                    v44 = v4;\n                                    v40 = 92;\n                                    v45 = 92;\n                                    v77 = v4 & v17 & v8 != 0;\n                                    if ((v4 & v17 & v8 != 0) != 0)\n                                    {\n                                        v80 = 1;\n                                        v46 = 0;\n                                        v78 = 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (v8 == 0 || v78 != 0 || v34 > v38)\n                    {\n                        v40 = (char)*((char *)v37);\n                        switch (*((char *)v37))\n                        {\n                        case 0:\n                            if (v17 == 0)\n                            {\n                                v5 = 0;\n                            }\n                            else\n                            {\n                                v4 = (unsigned int)v39 == 2;\n                            }\n                        case 7:\n                            v40 = 97;\n                            break;\n                            if (v17 == 0)\n                            {\n                                v78 = 0;\n                            }\n                            else\n                            {\n                                v87 = 0;\n                            }\n                        case 8:\n                            v40 = 98;\n                        case 9:\n                            v40 = 116;\n                        case 10:\n                            v40 = 110;\n                            v77 = 0;\n                            v78 = 0;\n                        case 11:\n                            v40 = 118;\n                            break;\n                        case 12:\n                            v40 = 102;\n                            break;\n                        case 13:\n                            v5 = 0;\n                        case 32:\n                            v41 = 0;\n                        case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                            v5 = 0;\n                        case 35: case 126:\n                            v42 = 0;\n                            v49 = v5;\n                            v77 = 0;\n                            v5 = v42;\n                        case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                            v41 = 0;\n                        case 39:\n                            v5 = 0;\n                        case 63:\n                            v5 = 0;\n                        case 92:\n                            v5 = 0;\n                        case 123: case 125:\n                            v5 = 0;\n                        default:\n                            v5 = 0;\n                        }\n                    }\n                }\n                else\n                {\n                    v40 = (char)*((char *)v37);\n                    switch (*((char *)v37))\n                    {\n                    case 0:\n                        if (v4 == 0)\n                        {\n                            v80 += 1;\n                            v5 = 0;\n                            v77 = (unsigned int)v39 == 2;\n                            v36 = 0;\n                            v40 = 0;\n                            break;\n                        }\n                    case 7:\n                        v40 = 7;\n                        v45 = 97;\n                        v77 = (unsigned int)v39 == 2;\n                    case 8:\n                        v40 = 8;\n                        v45 = 98;\n                        v77 = (unsigned int)v39 == 2;\n                        if (v4 == 0)\n                        {\n                            v55 = 0;\n                            break;\n                            v78 = ((unsigned int)v4 ^ 1 | (unsigned int)v77) ^ 1;\n                            v78 = (char)(((unsigned int)v4 ^ 1 | (unsigned int)v77) ^ 1) | v17;\n                            v78 = 0;\n                            v72 = (unsigned int)((unsigned long long)v25[v40 % 32] >> ((char)v40 & 31)) & 1;\n                            v77 = (unsigned int)v39 == 2;\n                            v77 = (unsigned int)v39 == 2;\n                            v80 += 1;\n                            v46 = (v78 ^ 1) & (unsigned int)v33;\n                            if (v46 != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v79 > v76 + 1)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 39;\n                                }\n                                v76 += 2;\n                                v33 = 0;\n                            }\n                        }\n                        else\n                        {\n                            v40 = v45;\n                            v78 = 0;\n                            v87 = v77;\n                            v73 = (unsigned int)v33 ^ 1;\n                            v74 = (char)((unsigned int)v33 ^ 1) & v77;\n                            if (((char)((unsigned int)v33 ^ 1) & v77) != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v76 + 1 < v79)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 36;\n                                }\n                                v75 = v76 + 2;\n                                if (v76 + 2 < v79)\n                                {\n                                    *((char *)(v29 + v76 + 2)) = 39;\n                                }\n                                v76 += 3;\n                                v33 = rax<8>;\n                            }\n                            *((unsigned long long *)&v4) = v4 & v87;\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            v76 += 1;\n                            v80 += 1;\n                        }\n                    case 9:\n                        v40 = 9;\n                        v45 = 116;\n                        v77 = (unsigned int)v39 == 2;\n                        v5 = v17 & (unsigned int)v39 == 2;\n                    case 10:\n                        v40 = 10;\n                        v45 = 110;\n                    case 11:\n                        v40 = 11;\n                        v45 = 118;\n                        v77 = (unsigned int)v39 == 2;\n                    case 12:\n                        v40 = 12;\n                        v45 = 102;\n                        v77 = (unsigned int)v39 == 2;\n                    case 13:\n                        v40 = 13;\n                        v45 = 114;\n                    case 32:\n                        v40 = 32;\n                        v77 = (unsigned int)v39 == 2;\n                    case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                        v77 = (unsigned int)v39 == 2;\n                        v35 = 0;\n                    case 35: case 126:\n                        v77 = (unsigned int)v39 == 2;\n                        if (v17 != 0)\n                        {\n                            break;\n                        }\n                    case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                        v77 = (unsigned int)v39 == 2;\n                        break;\n                    case 39:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            if (v77 != 0)\n                            {\n                                v53 = 0;\n                            }\n                            if (v77 == 0 || v14 != 0)\n                            {\n                                if (v77 > v76)\n                                {\n                                    *((char *)(v28 + v76)) = 39;\n                                }\n                                if (v77 > v76 + 1)\n                                {\n                                    *((char *)(v28 + v76 + 1)) = 92;\n                                }\n                                if (v77 > v76 + 2)\n                                {\n                                    v53 = v77;\n                                    *((char *)(v28 + v76 + 2)) = 39;\n                                    v79 = v14;\n                                }\n                                else\n                                {\n                                    v53 = v77;\n                                    v79 = v14;\n                                }\n                            }\n                            v18 = v78;\n                            v76 += 3;\n                            v78 = 0;\n                            v33 = 0;\n                            v14 = v79;\n                            v40 = 39;\n                            v79 = v53;\n                        }\n                        else\n                        {\n                            v18 = v78;\n                            v77 = 0;\n                            v40 = 39;\n                            break;\n                        }\n                    case 63:\n                        if ((unsigned int)v39 != 2)\n                        {\n                            v40 = 63;\n                            v77 = (unsigned int)v39 == 2;\n                            v52 = 0;\n                            break;\n                            v77 = v7;\n                            v40 = (char)*((char *)(v77 + 2));\n                            v77 = 0x7000a38200000000;\n                            v0 = 0x7000a38200000000;\n                            v77 = 0;\n                            v62 = 0;\n                            v40 = 63;\n                            break;\n                            if (v79 > v76)\n                            {\n                                *((char *)(v28 + v76)) = 63;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v28 + v76 + 1)) = 34;\n                            }\n                            if (v79 > v76 + 2)\n                            {\n                                *((char *)(v28 + v76 + 2)) = 34;\n                            }\n                            if (v79 > v76 + 3)\n                            {\n                                *((char *)(v28 + v76 + 3)) = 63;\n                            }\n                            v76 += 4;\n                            v77 = 0;\n                            v78 = 0;\n                            v80 = 2;\n                        }\n                        else\n                        {\n                            v78 = 0;\n                            v78 = 0;\n                            v40 = 63;\n                        }\n                    case 92:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            v80 += 1;\n                            v46 = v33;\n                            v78 = 0;\n                            v40 = 92;\n                        }\n                    case 123: case 125:\n                        v43 = v38 != 1;\n                        if (v38 == -1)\n                        {\n                            v43 = *((char *)(v7 + 1)) != 0;\n                        }\n                        v77 = (unsigned int)v39 == 2;\n                    }\n                }\n            }\n            else\n            {\n                v81 = v39;\n                v82 = v38;\n                v83 = v81 == 2;\n                if ((v81 == 2 & v17) == 0 || v76 != 0)\n                {\n                    v84 = (unsigned int)v17 ^ 1;\n                    v85 = v83 & (char)((unsigned int)v17 ^ 1);\n                    v86 = v83 & (char)((unsigned int)v17 ^ 1);\n                    if ((char)v85 == 0)\n                    {\n                        v86 = v84;\n                    }\n                    else if (v18 != 0)\n                    {\n                        if (v6 == 0)\n                        {\n                            v84 = v79 == 0 & v14 != 0;\n                            if ((v79 == 0 & v14 != 0) == 0)\n                            {\n                                v86 = v18;\n                            }\n                        }\n                        else\n                        {\n                            v3 = v27;\n                            v2 = v26;\n                            v1 = v25;\n                            v76 = (unsigned int)sub_404b70();\n                        }\n                    }\n                }\n            }\n            if (v6 == 0 && v78 == 0 && (char)v85 != 0 && v18 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && (v79 == 0 & v14 != 0) == 0 || v78 == 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && v18 == 0 || (char)v85 == 0 && v78 == 0 && ((v81 == 2 & v17) == 0 || v76 != 0))\n            {\n                v88 = v13;\n                if (v13 != 0 && v86 != 0)\n                {\n                    v89 = (char)*((char *)v88);\n                    if (*((char *)v88) != 0)\n                    {\n                        v90 = v88 - v76;\n                        do\n                        {\n                            if (v79 > v76)\n                            {\n                                *((unsigned long long *)(v29 + v76)) = v89;\n                            }\n                            v76 += 1;\n                            v89 = (char)*((char *)(v90 + v76));\n                        }\n                        while ((char)v89 != 0);\n                    }\n                }\n                if (v79 > v76)\n                {\n                    *((char *)(v29 + v76)) = 0;\n                }\n            }\n            if (v15 == 1)\n            {\n                v11 = v39;\n                v10 = v38;\n                v9 = v33;\n                v46 = (unsigned short)*((short *)(*((long long *)(unsigned long long)__ctype_b_loc()) + v40 * 2));\n                tmp_38 = v46 & 0x4000;\n                v46 &= 0x4000;\n                v51 = (tmp_38 & 65535) != 0;\n                v77 = (tmp_38 & 65535) == 0 & v4;\n                if (v77 != 0)\n                {\n                    v77 = v4;\n                    v78 = 0;\n                }\n            }\n            else\n            {\n                v24 = 0;\n                if (v38 == -1)\n                {\n                    v11 = v39;\n                    v10 = v33;\n                    v9 = v37;\n                    v38 = strlen(v7);\n                }\n                v21 = v76;\n                v22 = v37;\n                v54 = 0;\n                v19 = v33;\n                *((unsigned long long *)&v20) = v40;\n                v11 = v29;\n                v12 = v79;\n                v9 = v38;\n                *((unsigned long *)&v10) = v39;\n                do\n                {\n                    v56 = v80 + v54;\n                    v57 = v7 + v80 + v54;\n                    v46 = sub_407e80();\n                    v58 = v46;\n                    if (v46 != 0 && v46 != -2 && v46 != -1)\n                    {\n                        if (v10 == 2 && v46 != 1 && v17 != 0)\n                        {\n                            v59 = v7 + v77 + 1;\n                            v77 = v7 + v58 + v77;\n                            while (true)\n                            {\n                                v60 = (unsigned int)*(v59) - 91;\n                                if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                                {\n                                    v59 = &v59[1];\n                                    if (v77 == v59)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                            if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                            {\n                                v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                                v54 += v58;\n                                v46 = mbsinit((unsigned int)&v24);\n                            }\n                        }\n                        v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                        v54 += v58;\n                        v46 = mbsinit((unsigned int)&v24);\n                    }\n                    if (v46 == -1)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v78 = 0;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = v10;\n                        v77 = v4;\n                    }\n                    if (v46 == -2)\n                    {\n                        v38 = v9;\n                        v77 = v56;\n                        v46 = v54;\n                        v28 = v54;\n                        v33 = (char)v19;\n                        v40 = v20;\n                        v76 = v21;\n                        v29 = v11;\n                        v79 = v12;\n                        v39 = v10;\n                        if (v77 < v9 && *((char *)v57) != 0)\n                        {\n                            do\n                            {\n                                v46 += 1;\n                            }\n                            while (v46 < v9 && *((char *)(v22 + v46)) != 0);\n                            v28 = v46;\n                        }\n                        v77 = v4;\n                        v78 = 0;\n                    }\n                    if (v46 == 0 || v46 != -2 && (unsigned int)v46 != 0 && v46 != -1)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v77 = (unsigned int)v78 ^ 1;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = v10;\n                        v77 = (char)((unsigned int)v78 ^ 1) & v4;\n                    }\n                }\n                while (v28 <= 1);\n                if (v46 == 0 || v46 == -2 || v46 == -1 || (unsigned int)v46 != 0)\n                {\n                    v9 = v78;\n                    v77 = 0;\n                    v63 = v17;\n                    v64 = v28 + v80;\n                    v28 = v5;\n                }\n            }\n            if (false)\n            {\n                v5 = v42;\n                v50 = 0;\n            }\n            if (v77 != 0)\n            {\n                v9 = v78;\n                v77 = 0;\n                v63 = v17;\n                v64 = v28 + v80;\n                v28 = v5;\n                while (true)\n                {\n                    if (v77 != 0)\n                    {\n                        v65 = (unsigned int)v39 == 2;\n                        if (v63 == 0)\n                        {\n                            v77 = (unsigned int)v33 ^ 1;\n                            v66 = v4 & (char)((unsigned int)v33 ^ 1);\n                            if ((v4 & (char)((unsigned int)v33 ^ 1)) != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v79 > v76 + 1)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 36;\n                                }\n                                v77 = v76 + 2;\n                                if (v79 > v76 + 2)\n                                {\n                                    *((char *)(v29 + v76 + 2)) = 39;\n                                }\n                                v76 += 3;\n                                v33 = v46;\n                            }\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                v67 = v40;\n                                v68 = (char)v40 % 64;\n                                *((unsigned long long *)(v29 + v76 + 1)) = (unsigned long long)(unsigned int)rax<4> + 48;\n                            }\n                            v46 = v76 + 2;\n                            if (v79 > v76 + 2)\n                            {\n                                v70 = v40;\n                                v71 = (char)v40 % 8;\n                                v46 = (unsigned int)((rax<4> & 7) + 48);\n                                *((unsigned long long *)(v29 + v76 + 2)) = v46;\n                            }\n                            v80 += 1;\n                            v76 += 3;\n                            v40 = ((unsigned int)v40 & 7) + 48;\n                            if (v80 < v64)\n                            {\n                                v77 = v77;\n                            }\n                            else\n                            {\n                                v78 = (char)v9;\n                            }\n                        }\n                        else\n                        {\n                            v4 = v65;\n                        }\n                    }\n                    else\n                    {\n                        v46 = (v77 ^ 1) & (unsigned int)v33;\n                        if (v28 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            v76 += 1;\n                        }\n                        v80 += 1;\n                        if (v80 >= v64)\n                        {\n                            v78 = (char)v9;\n                        }\n                        else if (v46 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 39;\n                            }\n                            v46 = v76 + 1;\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v29 + v76 + 1)) = 39;\n                            }\n                            v76 += 2;\n                            v28 = 0;\n                            v33 = 0;\n                        }\n                        else\n                        {\n                            v28 = 0;\n                        }\n                    }\n                    if ((v80 < v64 || v77 == 0) && (v63 == 0 || v77 == 0) && (v80 < v64 || v77 != 0))\n                    {\n                        if (v79 > v76)\n                        {\n                            *((unsigned long long *)(v29 + v76)) = v40;\n                        }\n                        v40 = (char)*((char *)(v7 + v80));\n                        v76 += 1;\n                    }\n                }\n            }\n            if ((v78 == 0 || v17 != 0) && (v78 == 0 || v4 != 0) && (v76 == 0 || v17 != 0) && (v76 == 0 || v4 != 0) && ((v81 == 2 & v17) != 0 || v17 != 0) && ((v81 == 2 & v17) != 0 || v4 != 0))\n            {\n                v3 = v27;\n                v2 = v26;\n                v1 = 0;\n                v76 = (unsigned int)sub_404b70();\n            }\n            if (v17 == 0 && v4 != 0 || v17 == 0 && (char)(((unsigned int)v4 ^ 1 | (unsigned int)v77) ^ 1) == 0 && v4 == 0 && v5 == 0 || v77 != 0 && v76 >= v79)\n            {\n                if (v76 < v79)\n                {\n                    *((unsigned long long *)(v29 + v76)) = v40;\n                }\n                v76 += 1;\n                v6 = (v78 == 0? 0 : (unsigned int)(char)(char)(stack_base)[-169]);\n            }\n            if (v6 == 0 && v78 == 0 && (char)v85 != 0 && v18 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && (v79 == 0 & v14 != 0) == 0 || v78 == 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && v18 == 0 || (char)v85 == 0 && v78 == 0 && ((v81 == 2 & v17) == 0 || v76 != 0) || v78 == 0 && (char)v85 != 0 && v6 != 0 && v18 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) || (v78 == 0 || v17 != 0) && (v78 == 0 || v4 != 0) && (v76 == 0 || v17 != 0) && (v76 == 0 || v4 != 0) && ((v81 == 2 & v17) != 0 || v17 != 0) && ((v81 == 2 & v17) != 0 || v4 != 0))\n            {\n                v91 = v76;\n                return v91;\n            }\n        }\n        *((char *)v29) = 39;\n        v78 = 2;\n        v13 = \"'\";\n        v8 = 1;\n        v17 = 0;\n        *((unsigned long *)&v18) = v84;\n    }\n}\n"
        },
        {
            "funcName": "sub_4063bf",
            "funcStartAddr": "0x4063bf",
            "funcEndAddr": "0x406430",
            "decompiledFuncCode": "extern uint128_t g_60c420;\nextern uint128_t g_60c430;\nextern uint128_t g_60c440;\nextern unsigned long long g_60c450;\n\nint sub_4063bf()\n{\n    void v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v5;  // rdx\n\n    v3 = g_60c450;\n    *((uint128_t *)&v0) = g_60c420;\n    *((uint128_t *)&v1) = g_60c430;\n    *((uint128_t *)&v2) = g_60c440;\n    *((unsigned int *)&((char *)stack_base)[4 * v5 % 32 + -64]) = (unsigned int)((unsigned long long)(!((unsigned int)((unsigned long long)(unsigned int)*((int *)&((char *)stack_base)[4 * v5 % 32 + -64]) >> ((char)((unsigned int)v5 & 31) & 31))) & 1) << ((char)((unsigned int)v5 & 31) & 31)) ^ *((int *)&((char *)stack_base)[4 * v5 % 32 + -64]);\n    return sub_405da0();\n}\n"
        },
        {
            "funcName": "sub_406c60",
            "funcStartAddr": "0x406c60",
            "funcEndAddr": "0x406c81",
            "decompiledFuncCode": "int sub_406c60()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rsi\n    unsigned long v3;  // rdx\n    unsigned long long v4;  // rax\n\n    v4 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdx<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_406e10(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x406bc0",
            "funcEndAddr": "0x406bda",
            "decompiledFuncCode": "int sub_406bc0()\n{\n    unsigned int v1;  // rdi\n    unsigned long long v2;  // rax\n\n    v2 = malloc(v1);\n    if (v2 == 0 && v1 != 0)\n    {\n        sub_406e10(); /* do not return */\n    }\n    if (v1 == 0 || v2 != 0)\n    {\n        return v2;\n    }\n}\n"
        },
        {
            "funcName": "sub_406c90",
            "funcStartAddr": "0x406c90",
            "funcEndAddr": "0x406d08",
            "decompiledFuncCode": "int sub_406c90() { crash_skku;\n}"
        },
        {
            "funcName": "sub_403070",
            "funcStartAddr": "0x403070",
            "funcEndAddr": "0x403078",
            "decompiledFuncCode": "extern char g_60c2f8;\n\nint sub_403070()\n{\n    char v1;  // dil\n    unsigned long v2;  // rax\n\n    g_60c2f8 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_406d20",
            "funcStartAddr": "0x406d20",
            "funcEndAddr": "0x406d6a",
            "decompiledFuncCode": "int sub_406d20() { crash_skku;\n}"
        },
        {
            "funcName": "sub_406d90",
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406dbe",
            "decompiledFuncCode": "int sub_406d90()\n{\n    unsigned int v1;  // rdi\n    unsigned int v2;  // rsi\n    unsigned long long v3;  // rax\n\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>)) && [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) == 0)\n    {\n        v3 = calloc(v1, v2);\n        if (v3 != 0)\n        {\n            return v3;\n        }\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>) || v3 == 0 || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) != 0)\n    {\n        sub_406e10(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_406560",
            "funcStartAddr": "0x406560",
            "funcEndAddr": "0x406577",
            "decompiledFuncCode": "int sub_406560()\n{\n}\n"
        },
        {
            "funcName": "sub_407f60",
            "funcStartAddr": "0x407f60",
            "funcEndAddr": "0x407fb6",
            "decompiledFuncCode": "int sub_407f60()\n{\n    unsigned int v1;  // edi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // cc_dep1\n    unsigned long long v5;  // cc_dep2\n    unsigned long v6;  // d\n    char *v7;  // rdi\n    char *v8;  // rsi\n    unsigned long long v9;  // rcx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // cc_dep1\n    char *v12;  // rdi\n    unsigned long long v13;  // rcx\n    char v14;  // cc_dep1\n    char v15;  // cc_dep2\n\n    v10 = 1;\n    if (v3 != 0)\n    {\n        v9 = 2;\n        v7 = \"C\";\n        v3 = setlocale(v1, 0x0);\n        while (v9 != 0)\n        {\n            v9 -= 1;\n            v4 = *(v8);\n            v5 = *(v7);\n            v7 = &v7[v6];\n            v8 = &v8[v6];\n            break;\n        }\n        v10 = 0;\n        v11 = (v4 > v5) - 0 - (v4 < v5);\n        if ((char)v11 != 0)\n        {\n            v12 = \"POSIX\";\n            v13 = 6;\n            while (v13 != 0)\n            {\n                v13 -= 1;\n                v14 = *(v8);\n                v15 = *(v12);\n                v12 = &v12[v6];\n                v8 = &v8[v6];\n                break;\n            }\n            return 0;\n        }\n    }\n    if ((char)v11 == 0 || v3 == 0)\n    {\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c50",
            "decompiledFuncCode": "int sub_406c20()\n{\n    unsigned int v1;  // rsi\n    void *v2;  // rdi\n    unsigned long long v3;  // rax\n\n    if (v1 == 0 && v2 != 0)\n    {\n        free(v2);\n        return 0;\n    }\n    if (v2 == 0 || v1 != 0)\n    {\n        v3 = realloc(v2, v1);\n        if (v3 == 0 && v1 != 0)\n        {\n            sub_406e10(); /* do not return */\n        }\n        if (v1 == 0 || v3 != 0)\n        {\n            return v3;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_407e80",
            "funcStartAddr": "0x407e80",
            "funcEndAddr": "0x407eef",
            "decompiledFuncCode": "extern unsigned long long g_40a5c7;\n\nint sub_407e80()\n{\n    char v0;  // [bp-0x1c]\n    unsigned long long v2;  // rsi\n    unsigned long long v3;  // rbx\n    unsigned long v4;  // rdx\n    char *|unsigned long long v5;  // rbp\n    unsigned long long v6;  // rdi\n    unsigned int *v7;  // r12\n    unsigned long long v9;  // rax\n\n    if (v2 != 0)\n    {\n        v3 = -2;\n        if (v4 != 0)\n        {\n            v7 = v6;\n            v5 = v2;\n        }\n    }\n    else\n    {\n        v5 = &g_40a5c7;\n    }\n    if (v2 == 0 || v6 == 0 && v4 != 0)\n    {\n        v7 = &v0;\n    }\n    if (v2 == 0 || v4 != 0)\n    {\n        v3 = mbrtowc((unsigned int)v7, (unsigned int)v5);\n        if (v3 > -3 && sub_407f60() == 0)\n        {\n            v3 = 1;\n            *(v7) = *(v5);\n        }\n    }\n    v9 = v3;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_405da0",
            "funcStartAddr": "0x405da0",
            "funcEndAddr": "0x405f40",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[4];\n    unsigned int field_4;\n    char padding_8[32];\n    unsigned long long field_28;\n    unsigned long long field_30;\n} struct_0;\n\nextern uint128_t *g_60c278;\nextern uint128_t g_60c280;\nextern unsigned int g_60c290;\nextern int512_t g_60c320;\n\nint sub_405da0()\n{\n    unsigned long v0;  // [bp-0x78]\n    unsigned long v1;  // [bp-0x70]\n    unsigned long v2;  // [bp-0x68]\n    unsigned long v3;  // [bp-0x50]\n    unsigned long|unsigned long long v4;  // [bp-0x48]\n    unsigned int v5;  // [bp-0x40]\n    unsigned int v6;  // [bp-0x3c]\n    unsigned long long v8;  // rcx\n    struct_0 *v9;  // rbp\n    unsigned long v10;  // rsi\n    unsigned int *v11;  // r13\n    unsigned long v13;  // rdi\n    uint128_t *v15;  // rax\n    unsigned long long v16;  // rax\n    uint128_t *v17;  // rbx\n    unsigned long long v19[2];  // rbx\n    void *v20;  // r12\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rsi\n    unsigned long long v24;  // rax\n\n    v9 = v8;\n    v3 = v10;\n    v17 = g_60c278;\n    v11 = __errno_location();\n    v5 = *(v11);\n    if ((unsigned int)v13 < 0)\n    {\n        abort(); /* do not return */\n    }\n    if (g_60c290 <= (unsigned int)v13)\n    {\n        if ((unsigned int)v13 != 2147483647)\n        {\n            if (g_60c278 != 6341248)\n            {\n                v16 = sub_406c20();\n                g_60c278 = v16;\n                v17 = v16;\n            }\n            else\n            {\n                v15 = sub_406c20();\n                v17 = v15;\n                g_60c278 = v15;\n                *(v15) = g_60c280;\n            }\n            memset(&v17[(long long)(int)g_60c290], 0x0, (int)((unsigned int)v13 + 1 - g_60c290) * 16);\n            g_60c290 = (unsigned int)v13 + 1;\n        }\n        else\n        {\n            sub_406e10(); /* do not return */\n        }\n    }\n    if (g_60c290 > (unsigned int)v13 || (unsigned int)v13 != 2147483647)\n    {\n        v19 = &v17[v13];\n        v20 = v19[1];\n        v6 = v9->field_4 | 1;\n        v2 = v9->field_30;\n        v1 = v9->field_28;\n        v0 = &v9->padding_8;\n        *((unsigned long long [2])&v4) = *(v19);\n        v21 = sub_404b70();\n        if (v4 <= v21)\n        {\n            v22 = v21 + 1;\n            v19[0] = v21 + 1;\n            if (v20 != 6341408)\n            {\n                v4 = v22;\n                free(v20);\n                v22 = v4;\n            }\n            v4 = v22;\n            v19[1] = v20;\n            v20 = (unsigned long long)(unsigned int)sub_406bc0();\n            v2 = v9->field_30;\n            v1 = v9->field_28;\n            v0 = v8 + 8;\n            sub_404b70();\n        }\n        *(v11) = v5;\n        v24 = v20;\n        return v24;\n    }\n}\n"
        },
        {
            "funcName": "sub_4063a0",
            "funcStartAddr": "0x4063a0",
            "funcEndAddr": "0x4063ac",
            "decompiledFuncCode": "int sub_4063a0()\n{\n}\n"
        },
        {
            "funcName": "sub_4063b0",
            "funcStartAddr": "0x4063b0",
            "funcEndAddr": "0x4063bf",
            "decompiledFuncCode": "int sub_4063b0()\n{\n}\n"
        },
        {
            "funcName": "sub_404900",
            "funcStartAddr": "0x404900",
            "funcEndAddr": "0x40491c",
            "decompiledFuncCode": "int sub_404900()\n{\n    unsigned long v0;  // [bp-0x8]\n    void *v2;  // rdi\n    unsigned long v3;  // rax\n    unsigned long v4;  // rbx\n\n    if (v2 != 0)\n    {\n        v0 = v4;\n        fileno(v2);\n    }\n    else\n    {\n        return v3;\n    }\n}\n"
        },
        {
            "funcName": "sub_406460",
            "funcStartAddr": "0x406460",
            "funcEndAddr": "0x40646a",
            "decompiledFuncCode": "int sub_406460()\n{\n}\n"
        },
        {
            "funcName": "sub_4049d0",
            "funcStartAddr": "0x4049d0",
            "funcEndAddr": "0x404a69",
            "decompiledFuncCode": "extern unsigned long long __progname_full;\nextern unsigned long long g_60c308;\nextern unsigned long long program_invocation_short_name;\nextern unsigned long long stderr;\n\nint sub_4049d0()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v3;  // rbx\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // r8\n    unsigned long long v6;  // cc_dep1\n    unsigned long long v7;  // cc_dep2\n    unsigned long v8;  // d\n    char *v9;  // rdi\n    char *v10;  // rsi\n    unsigned long long v11;  // rcx\n    char *v13;  // rdi\n    unsigned long long v14;  // rcx\n    char *v15;  // rsi\n    unsigned long long v16;  // cc_dep1\n    unsigned long long v17;  // cc_dep2\n\n    if (v1 != 0)\n    {\n        v3 = v1;\n        v4 = strrchr();\n        if (v4 != 0)\n        {\n            v5 = v4 + 1;\n            if (v4 + 1 - v1 > 6)\n            {\n                v10 = v4 - 6;\n                v9 = \"/.libs/\";\n                v11 = 7;\n                while (v11 != 0)\n                {\n                    v11 -= 1;\n                    v6 = *(v10);\n                    v7 = *(v9);\n                    v9 = &v9[v8];\n                    v10 = &v10[v8];\n                    break;\n                }\n                if ((v6 > v7) - 0 - (v6 < v7) == 0)\n                {\n                    v13 = \"lt-\";\n                    v14 = 3;\n                    v15 = v5;\n                    v3 = v5;\n                    while (v14 != 0)\n                    {\n                        v14 -= 1;\n                        v16 = *(v15);\n                        v17 = *(v13);\n                        v13 = &v13[v8];\n                        v15 = &v15[v8];\n                        break;\n                    }\n                    if ((v16 > v17) - 0 - (v16 < v17) == 0)\n                    {\n                        v3 = v4 + 4;\n                        program_invocation_short_name = v4 + 4;\n                    }\n                }\n            }\n        }\n        g_60c308 = v3;\n        __progname_full = v3;\n        return v4;\n    }\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 0x1, 0x37, stderr);\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_404460",
            "funcStartAddr": "0x404460",
            "funcEndAddr": "0x404744",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[28];\n    unsigned int field_1c;\n    char field_20;\n} struct_0;\n\nint sub_404460()\n{\n    void tmp_11;  // tmp #11\n    unsigned long long v1;  // rsi\n    unsigned long long v2;  // r13\n    struct_0 *v3;  // rdx\n    struct_0 *v4;  // r12\n    void *v5;  // rdi\n    unsigned long long v6;  // rbp\n    unsigned long long v7;  // r15\n    unsigned long v8;  // r14\n    unsigned long long|void * v9;  // rax\n    unsigned int v10;  // esi\n    unsigned long long v12;  // rcx\n    unsigned long long v13;  // rdx\n    unsigned int v16;  // r15d\n    unsigned long long v17;  // rcx\n    unsigned long long v19;  // rdx\n    unsigned long long v21;  // rcx\n    unsigned long long v22;  // rcx\n    uint128_t *v23;  // rbx\n    uint128_t v24[4];  // rbp\n    void *v25;  // r14\n    unsigned long long v26;  // r15\n    uint128_t v27;  // xmm0\n    unsigned long long v29;  // rcx\n    unsigned long long v30;  // rax\n    void *v31;  // rsi\n    unsigned long long v33;  // r14\n    unsigned long long v34;  // rdx\n    unsigned long long v35;  // rsi\n    unsigned long v36;  // r13\n\n    v2 = v1;\n    v4 = v3;\n    v23 = v5;\n    v9 = v3->field_1c;\n    if (v3->field_1c != 0)\n    {\n        v6 = v9;\n        v7 = &v4->field_20;\n        v8 = (!(128 - v9 <= v1)? v1 : 128 - v9);\n        v9 = memcpy(&(struct struct_0 *)&v4->field_20->padding_0[v9], v5, (!(128 - v9 <= v1)? v1 : 128 - v9));\n        v10 = v4->field_1c + (unsigned int)v8;\n        v4->field_1c = v4->field_1c + (unsigned int)v8;\n        if (v10 > 64)\n        {\n            sub_403180();\n            v12 = v4->field_1c;\n            v9 = &(struct struct_0 *)&v3->field_20->padding_0[v6 + v8 & -64];\n            v13 = v4->field_1c & 63;\n            v4->field_1c = v4->field_1c & 63;\n            if (!((unsigned int)v12 < 8))\n            {\n                *((long long *)&v4->field_20) = *((long long *)v9);\n                v12 = v13;\n                *((long long *)(v7 + v12 - 8)) = *((long long *)&((char *)v9)[v12 + -8]);\n                v9 -= v7 - (&v4[1].padding_0[7] & -8);\n                v16 = (unsigned int)(v7 - (&v4[1].padding_0[7] & -8) + v12) & -8;\n                if (v16 >= 8)\n                {\n                    v19 = 0;\n                    do\n                    {\n                        v22 = v19;\n                        v19 = (unsigned int)v19 + 8;\n                        *((long long *)((&v4[1].padding_0[7] & -8) + v22)) = *((long long *)(v9 + v22));\n                    }\n                    while ((unsigned int)v19 < (v16 & -8));\n                }\n            }\n            else if (!((v12 & 4) == 0))\n            {\n                v17 = (unsigned int)*((int *)v9);\n                *((int *)&v4->field_20) = *((int *)v9);\n                v9 = (unsigned int)*((int *)&((char *)v9)[v12 + -4]);\n                *((unsigned int *)(v7 + v12 - 4)) = v9;\n            }\n            else if ((unsigned int)v12 != 0)\n            {\n                v21 = (unsigned int)v12 & 2;\n                v4->field_20 = *((char *)v9);\n                if (((unsigned int)v12 & 2) != 0)\n                {\n                    v9 = (unsigned short)*((short *)&((char *)v9)[v12 + -2]);\n                    *((unsigned long long *)(v7 + v12 - 2)) = v9;\n                }\n            }\n        }\n        v23 = v5 + v8;\n        v2 -= v8;\n    }\n    if (v2 > 63)\n    {\n        if ((v23 & 3) != 0)\n        {\n            v24 = &v4->field_20;\n            if (v2 != 64)\n            {\n                v26 = v2 - 65 >> 6;\n                v25 = &v23[4 + 4 * (v2 - 65 >> 6)];\n                while (true)\n                {\n                    v27 = *(v23);\n                    v23 = &v23[4];\n                    *((uint128_t *)&v24) = v27;\n                    *((uint128_t *)&v24[2]) = v23[-3];\n                    *((uint128_t *)&v24[4]) = v23[-2];\n                    *((uint128_t *)&v24[6]) = v23[-1];\n                    sub_403180();\n                    if (v23 == v25)\n                    {\n                        break;\n                    }\n                }\n                v2 = v2 + (0 - v26) * 64 - 64;\n            }\n            else\n            {\n                v25 = v23;\n            }\n        }\n        else\n        {\n            tmp_11 = v2;\n            v2 = (unsigned int)v2 & 63;\n            v23 = (char *)v23 + (tmp_11 & -64);\n            v9 = sub_403180();\n        }\n    }\n    if ((v23 & 3) == 0 || v2 <= 63)\n    {\n        if (v2 == 0)\n        {\n            return v9;\n        }\n        v24 = &v4->field_20;\n        v25 = v23;\n    }\n    if (v2 != 0 || (v23 & 3) != 0 && v2 > 63)\n    {\n        v29 = v4->field_1c;\n        v30 = v2;\n        v31 = (char *)v24 + (unsigned long long)v4->field_1c;\n        if (!((unsigned int)v2 < 8))\n        {\n            *((long long *)v31) = *((long long *)v25);\n            *((long long *)&((char *)v31)[v2 + -8]) = *((long long *)&((char *)v25)[v2 + -8]);\n            v33 = v25 - (v31 - (v31 + 8 & -8));\n            v30 = (unsigned int)(v31 - (v31 + 8 & -8) + v2) & -8;\n            if (((unsigned int)(v31 - (v31 + 8 & -8) + v2) & -8) >= 8)\n            {\n                v30 = (unsigned int)v30 & -8;\n                v34 = 0;\n                do\n                {\n                    v35 = v34;\n                    v34 = (unsigned int)v34 + 8;\n                    *((long long *)((v31 + 8 & -8) + v35)) = *((long long *)(v33 + v35));\n                }\n                while ((unsigned int)v34 < (unsigned int)v30);\n            }\n        }\n        else if (!((v2 & 4) == 0))\n        {\n            *((int *)v31) = *((int *)v25);\n            v30 = (unsigned int)*((int *)&((char *)v25)[v2 + -4]);\n            *((int *)&((char *)v31)[v2 + -4]) = *((int *)&((char *)v25)[v2 + -4]);\n        }\n        else if ((unsigned int)v2 != 0)\n        {\n            *((char *)v31) = *((char *)v25);\n            if ((v30 & 2) != 0)\n            {\n                v30 = (unsigned short)*((short *)&((char *)v25)[v2 + -2]);\n                *((short *)&((char *)v31)[v2 + -2]) = *((short *)&((char *)v25)[v2 + -2]);\n            }\n        }\n        v36 = v2 + v29;\n        if (v36 > 63)\n        {\n            v36 -= 64;\n            sub_403180();\n            v30 = memcpy(v24, (char *)&v4[2].field_1c + 2, v36);\n        }\n        v4->field_1c = v36;\n        return v30;\n    }\n}\n"
        },
        {
            "funcName": "sub_404a70",
            "funcStartAddr": "0x404a70",
            "funcEndAddr": "0x404b4f",
            "decompiledFuncCode": "extern int512_t g_4093a6;\nextern int512_t g_4093aa;\n\nint sub_404a70()\n{\n    unsigned long v1;  // rdi\n    char *v2;  // rbx\n    char v3[8];  // rax\n    unsigned long long v4;  // rdx\n    unsigned long v5;  // rsi\n    char *v6;  // rax\n\n    v2 = (unsigned long long)dcgettext(0x0, v1, 0x5);\n    if (v1 == v2)\n    {\n        v3 = sub_407fc0();\n        v4 = v3[0] & 4294967007;\n        if ((v3[0] & 223) == 85)\n        {\n            if ((v3[1] & 223) == 84 && (v3[2] & 223) == 70 && v3[3] == 45 && v3[4] == 56 && v3[5] == 0)\n            {\n                v2 = (*(v2) != 96? &g_4093a6 : 4232113);\n            }\n        }\n        else\n        {\n            if (v4 == 71 && (v3[1] & 223) == 66 && v3[2] == 49 && v3[3] == 56 && v3[4] == 48 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0)\n            {\n                v2 = (*(v2) != 96? &g_4093aa : 4232109);\n            }\n        }\n    }\n    if (...)\n    {\n        return ((unsigned int)v5 != 9? \"'\" : \"\\\"\");\n    }\n    if (v3[5] == 0 && v3[3] == 45 && (v3[0] & 223) == 85 && v3[4] == 56 && (v3[1] & 223) == 84 && v1 == v2 && (v3[2] & 223) == 70 || (v3[1] & 223) == 66 && v3[3] == 56 && v4 == 71 && v3[2] == 49 && v1 == v2 && v3[4] == 48 && (v3[0] & 223) != 85 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0 || v1 != v2)\n    {\n        v6 = v2;\n        return v6;\n    }\n}\n"
        }
    ],
    "isStripped": "True",
    "decompilerName": "Angr",
    "compilerName": "gcc",
    "optLevel": "-O",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sha1sum.elf"
}