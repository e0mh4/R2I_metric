{
    "funcInfo": [
        {
            "funcName": "sub_409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x409163",
            "decompiledFuncCode": "extern int512_t g_6124c0;\n\nint sub_409150()\n{\n    unsigned long v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned int v3;  // esi\n\n    v2 = (unsigned int)*((int *)((v1 == 0? &g_6124c0 : v1) + 4));\n    *((unsigned int *)((v1 == 0? &g_6124c0 : v1) + 4)) = v3;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_40b4b0",
            "funcStartAddr": "0x40b4b0",
            "funcEndAddr": "0x40b506",
            "decompiledFuncCode": "extern unsigned int g_612334;\nextern unsigned int g_612338;\nextern unsigned int g_61233c;\nextern unsigned int g_612500;\nextern unsigned int g_612504;\nextern unsigned int g_612508;\nextern unsigned long long g_612510;\nextern unsigned long long g_612540;\n\nint sub_40b4b0()\n{\n    unsigned int *v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp+0x8]\n\n    g_612500 = g_61233c;\n    g_612504 = g_612338;\n    v1 = (unsigned int)v2;\n    v0 = &g_612500;\n    g_61233c = g_612500;\n    g_612540 = g_612510;\n    g_612334 = g_612508;\n    return sub_40aee0();\n}\n"
        },
        {
            "funcName": "sub_4066f0",
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x406742",
            "decompiledFuncCode": "int sub_4066f0()\n{\n    char *v1;  // rdi\n    unsigned long long v2;  // rdx\n    unsigned long long v3;  // rsi\n    char *v4;  // rcx\n    char *v5;  // rax\n\n    v2 = *(v1);\n    v5 = v1;\n    if (*(v1) == 47)\n    {\n        do\n        {\n            v5 = &v5[1];\n            v2 = *(v5);\n        }\n        while (*(v5) == 47);\n    }\n    if (v2 != 0)\n    {\n        v4 = v5;\n        v3 = 0;\n        while (true)\n        {\n            if (v2 != 47)\n            {\n                if (v3 != 0)\n                {\n                    v5 = v4;\n                    v3 = 0;\n                }\n                v4 = &v4[1];\n                v2 = *(v4);\n                if ((char)v2 == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v4 = &v4[1];\n                v2 = *(v4);\n                v3 = 1;\n                if ((char)v2 == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return v5;\n}\n"
        },
        {
            "funcName": "sub_40b840",
            "funcStartAddr": "0x40b840",
            "funcEndAddr": "0x40b8d9",
            "decompiledFuncCode": "int sub_40b840()\n{\n    unsigned long|unsigned long long v0;  // [bp-0x28]\n    unsigned long|unsigned long long v1;  // [bp-0x20]\n    unsigned long long v3[2];  // rdi\n    unsigned long long v4;  // rbx\n    unsigned long long v5;  // rsi\n    unsigned long long v7;  // rax\n\n    if (v3[1] <= 999999999)\n    {\n        v4 = *(v3);\n        *((unsigned long long [2])&v1) = v3[1];\n        if (*(v3) > 0x1fa400)\n        {\n            while (true)\n            {\n                v0 = 0x1fa400;\n                v4 -= 0x1fa400;\n                v7 = nanosleep((unsigned int)&v0, v5);\n                if ((unsigned int)v7 == 0)\n                {\n                    v1 = 0;\n                    if (v4 <= 0x1fa400)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    if (v5 == 0)\n                    {\n                        break;\n                    }\n                    *((unsigned long long *)v5) = *((long long *)v5) + v4;\n                    return v7;\n                }\n            }\n            if ((unsigned int)v7 == 0)\n            {\n                v0 = v4;\n                v7 = nanosleep((unsigned int)&v0, v5);\n            }\n            else if ((unsigned int)v7 != 0)\n            {\n                return v7;\n            }\n        }\n        v0 = v4;\n        v7 = nanosleep((unsigned int)&v0, v5);\n    }\n    else\n    {\n        *(__errno_location()) = 22;\n        v7 = -18446744069414584321;\n    }\n    return v7;\n}\n"
        },
        {
            "funcName": "sub_4091a0",
            "funcStartAddr": "0x4091a0",
            "funcEndAddr": "0x409212",
            "decompiledFuncCode": "extern int512_t g_6124c0;\n\nint sub_4091a0()\n{\n    unsigned long v0;  // [bp-0x68]\n    unsigned long v1;  // [bp-0x60]\n    unsigned long v2;  // [bp-0x58]\n    unsigned long v3;  // [bp-0x40]\n    unsigned int v5;  // [bp+0x100008]\n    unsigned long v6;  // r8\n    unsigned long long v7[7];  // rbx\n    unsigned long v8;  // rcx\n\n    v7 = (v6 == 0? &g_6124c0 : v6);\n    v3 = v8;\n    *((unsigned long long [7])&v2) = v7[6];\n    *((unsigned long long [7])&v1) = v7[5];\n    v0 = &v7[1];\n    *(__errno_location()) = v5;\n    return sub_407ce0();\n}\n"
        },
        {
            "funcName": "sub_404f00",
            "funcStartAddr": "0x404f00",
            "funcEndAddr": "0x405076",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n    unsigned long long field_10;\n    unsigned int field_18;\n    char padding_1c[20];\n    unsigned int field_30;\n    char padding_34[4];\n    unsigned int field_38;\n    unsigned int field_3c;\n} struct_0;\n\nextern unsigned int g_40c263;\nextern unsigned int g_40c276;\nextern char g_612381;\nextern unsigned long long stdout;\n\nint sub_404f00()\n{\n    char v0;  // [bp-0xb8]\n    unsigned long v1;  // [bp-0x88]\n    unsigned long v2;  // [bp-0x60]\n    unsigned long long v3;  // [bp-0x58]\n    unsigned long long v4;  // [bp-0x28]\n    unsigned long v5;  // [bp-0x20]\n    unsigned long long v6;  // [bp-0x18]\n    unsigned long long v7;  // [bp-0x10]\n    unsigned long long v8;  // [bp-0x8]\n    struct_0 *v10;  // rdi\n    unsigned long v11;  // rax\n    unsigned long long v12;  // r14\n    unsigned long long v13;  // r13\n    unsigned long long v14;  // r12\n    unsigned long long v15;  // rbx\n    struct_0 *v16;  // rbx\n    unsigned long long v17;  // r13\n    unsigned long long v19;  // rbx\n    unsigned long long v20;  // r12\n    unsigned long long v21;  // r13\n    unsigned long long v22;  // r14\n    unsigned long long v23;  // rax\n    unsigned long long v24;  // r14\n    unsigned long long *v26;  // rsi\n    unsigned long long v27;  // rbx\n    unsigned long long v28;  // r12\n    unsigned long long v29;  // r13\n    unsigned long long v30;  // r14\n\n    if (v10->field_38 != -1)\n    {\n        v8 = v12;\n        v7 = v13;\n        v6 = v14;\n        v5 = stack_base + 0;\n        v4 = v15;\n        v16 = v10;\n        v17 = (unsigned int)sub_4047e0();\n        if (__fxstat(0x1, v10->field_38, (unsigned int)&v0) == 0)\n        {\n            if (((unsigned short)v10->field_30 & 0xf000) == 0x8000)\n            {\n                if (!(v1 >= v10->field_8))\n                {\n                    v24 = (unsigned int)sub_4095e0();\n                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c263, 0x5));\n                    sub_404c20();\n                    v10->field_8 = 0;\n                }\n                else if (v1 == v10->field_8)\n                {\n                    v23 = v3;\n                }\n            }\n            if ((v1 < v10->field_8 || ((unsigned short)v10->field_30 & 0xf000) != 0x8000 || v10->field_10 != v2 || v10->field_18 != (unsigned int)v3 || v1 != v10->field_8) && g_612381 == 0)\n            {\n                v23 = sub_404a20();\n                v16->field_8 = v16->field_8 + v23;\n                if (v23 != 0)\n                {\n                    *(v26) = v16;\n                    v23 = fflush_unlocked(stdout);\n                    if ((unsigned int)v23 != 0)\n                    {\n                        error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c276, 0x5));\n                    }\n                }\n            }\n            if (((unsigned short)v10->field_30 & 0xf000) == 0x8000 && v10->field_10 == v2 && v10->field_18 == (unsigned int)v3 && v1 == v10->field_8 && v1 >= v10->field_8 || g_612381 == 0 && (v1 < v10->field_8 || ((unsigned short)v10->field_30 & 0xf000) != 0x8000 || v10->field_10 != v2 || v10->field_18 != (unsigned int)v3 || v1 != v10->field_8) && v23 != 0 && (unsigned int)v23 == 0 || g_612381 == 0 && (v1 < v10->field_8 || ((unsigned short)v10->field_30 & 0xf000) != 0x8000 || v10->field_10 != v2 || v10->field_18 != (unsigned int)v3 || v1 != v10->field_8) && v23 == 0)\n            {\n                v27 = v4;\n                v28 = v6;\n                v29 = v7;\n                v30 = v8;\n                return v23;\n            }\n        }\n        else\n        {\n            v10->field_3c = *(__errno_location());\n            v10->field_38 = -1;\n            v19 = v4;\n            v20 = v6;\n            v21 = v7;\n            v22 = v8;\n            return sub_404820();\n        }\n    }\n    else\n    {\n        return v11;\n    }\n}\n"
        },
        {
            "funcName": "sub_406570",
            "funcStartAddr": "0x406570",
            "funcEndAddr": "0x406578",
            "decompiledFuncCode": "extern unsigned long long g_612398;\n\nint sub_406570()\n{\n    unsigned long long v1;  // rdi\n    unsigned long v2;  // rax\n\n    g_612398 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_40923b",
            "funcStartAddr": "0x40923b",
            "funcEndAddr": "0x409301",
            "decompiledFuncCode": "int sub_40923b()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long v1;  // [bp-0x50]\n    unsigned long v2;  // [bp-0x48]\n    unsigned int v3;  // [bp-0x2c]\n    unsigned long v4;  // [bp-0x28]\n    unsigned long v5;  // [bp-0x20]\n    unsigned long v6;  // [bp-0x18]\n    unsigned long v7;  // [bp-0x10]\n    unsigned long long v8;  // [bp+0x0]\n    unsigned long long v10;  // [bp+0x10]\n    unsigned long long v11;  // [bp+0x18]\n    unsigned long long v12;  // [bp+0x20]\n    unsigned long long v13;  // [bp+0x28]\n    unsigned long v14;  // rcx\n    unsigned long v15;  // rax\n    unsigned long long v17[7];  // rbx\n    unsigned int *v18;  // r13\n    unsigned long long *v20;  // r12\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // r12\n    unsigned long long v23;  // r13\n    unsigned long long v24;  // r14\n    unsigned long long v25;  // r15\n\n    v17 = (v14 == 0? v15 : rbx<8>);\n    v18 = __errno_location();\n    v3 = *(v18);\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = &v17[1];\n    v6 = &v17[1];\n    v7 = (unsigned int)sub_407ce0();\n    v5 = v7 + 1;\n    v4 = (unsigned int)sub_409dd0();\n    *((unsigned long long [7])&v2) = v17[6];\n    *((unsigned long long [7])&v1) = v17[5];\n    v0 = v6;\n    sub_407ce0();\n    *(v18) = v3;\n    if (v20 != 0)\n    {\n        *(v20) = v7;\n    }\n    v21 = v8;\n    v22 = v10;\n    v23 = v11;\n    v24 = v12;\n    v25 = v13;\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_409d50",
            "funcStartAddr": "0x409d50",
            "funcEndAddr": "0x409dc4",
            "decompiledFuncCode": "extern unsigned int g_40e6b2;\nextern unsigned int g_40e6dd;\nextern unsigned int g_40e910;\n\nint sub_409d50()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40e6b2, 0x5));\n    __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40e6dd, 0x5));\n    dcgettext(0x0, 0x40e910, 0x5);\n}\n"
        },
        {
            "funcName": "sub_407be0",
            "funcStartAddr": "0x407be0",
            "funcEndAddr": "0x407cbf",
            "decompiledFuncCode": "extern int512_t g_40d916;\nextern int512_t g_40d91a;\n\nint sub_407be0()\n{\n    unsigned long v1;  // rdi\n    char *v2;  // rbx\n    char v3[8];  // rax\n    unsigned long long v4;  // rdx\n    unsigned long v5;  // rsi\n    char *v6;  // rax\n\n    v2 = (unsigned long long)dcgettext(0x0, v1, 0x5);\n    if (v1 == v2)\n    {\n        v3 = sub_40ba70();\n        v4 = v3[0] & 4294967007;\n        if ((v3[0] & 223) == 85)\n        {\n            if ((v3[1] & 223) == 84 && (v3[2] & 223) == 70 && v3[3] == 45 && v3[4] == 56 && v3[5] == 0)\n            {\n                v2 = (*(v2) != 96? &g_40d916 : 4249889);\n            }\n        }\n        else\n        {\n            if (v4 == 71 && (v3[1] & 223) == 66 && v3[2] == 49 && v3[3] == 56 && v3[4] == 48 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0)\n            {\n                v2 = (*(v2) != 96? &g_40d91a : 4249885);\n            }\n        }\n    }\n    if (...)\n    {\n        return ((unsigned int)v5 != 9? \"'\" : \"\\\"\");\n    }\n    if (v3[5] == 0 && v3[3] == 45 && (v3[0] & 223) == 85 && v3[4] == 56 && (v3[1] & 223) == 84 && v1 == v2 && (v3[2] & 223) == 70 || (v3[1] & 223) == 66 && v3[3] == 56 && v4 == 71 && v3[2] == 49 && v1 == v2 && v3[4] == 48 && (v3[0] & 223) != 85 && v3[5] == 51 && v3[6] == 48 && v3[7] == 0 || v1 != v2)\n    {\n        v6 = v2;\n        return v6;\n    }\n}\n"
        },
        {
            "funcName": "sub_40bfe0",
            "funcStartAddr": "0x40bfe0",
            "funcEndAddr": "0x40bfee",
            "decompiledFuncCode": "int sub_40bfe0()\n{\n}\n"
        },
        {
            "funcName": "sub_409510",
            "funcStartAddr": "0x409510",
            "funcEndAddr": "0x40951c",
            "decompiledFuncCode": "int sub_409510()\n{\n}\n"
        },
        {
            "funcName": "sub_409760",
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x409776",
            "decompiledFuncCode": "int sub_409760()\n{\n}\n"
        },
        {
            "funcName": "sub_409100",
            "funcStartAddr": "0x409100",
            "funcEndAddr": "0x40910f",
            "decompiledFuncCode": "extern int512_t g_6124c0;\n\nint sub_409100()\n{\n    unsigned long v1;  // rdi\n    unsigned int v2;  // esi\n\n    *((unsigned int *)(v1 == 0? &g_6124c0 : v1)) = v2;\n    return &g_6124c0;\n}\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406e8f",
            "decompiledFuncCode": "int sub_406e50()\n{\n    unsigned long long v1[5];  // rdi\n    unsigned long long *v2;  // rdx\n    unsigned long long v3;  // rax\n\n    if (v1[4] != 0)\n    {\n        v2 = *(v1);\n        if (*(v1) < v1[1])\n        {\n            while (true)\n            {\n                v3 = *(v2);\n                if (*(v2) == 0)\n                {\n                    v2 = &v2[2];\n                }\n                else\n                {\n                    return v3;\n                }\n            }\n        }\n        abort(); /* do not return */\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_4093e0",
            "funcStartAddr": "0x4093e0",
            "funcEndAddr": "0x4093ea",
            "decompiledFuncCode": "int sub_4093e0()\n{\n}\n"
        },
        {
            "funcName": "sub_4047b8",
            "funcStartAddr": "0x4047b8",
            "funcEndAddr": "0x4047f4",
            "decompiledFuncCode": "int sub_4047b8() { crash_skku;\n}"
        },
        {
            "funcName": "sub_4095d0",
            "funcStartAddr": "0x4095d0",
            "funcEndAddr": "0x4095da",
            "decompiledFuncCode": "int sub_4095d0()\n{\n}\n"
        },
        {
            "funcName": "sub_409fa0",
            "funcStartAddr": "0x409fa0",
            "funcEndAddr": "0x409fce",
            "decompiledFuncCode": "int sub_409fa0()\n{\n    unsigned int v1;  // rdi\n    unsigned int v2;  // rsi\n    unsigned long long v3;  // rax\n\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>)) && [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) == 0)\n    {\n        v3 = calloc(v1, v2);\n        if (v3 != 0)\n        {\n            return v3;\n        }\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rdi<8> Mull rsi<8>)), 0x0<64>, cc_ndep<8>) || v3 == 0 || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rdi<8>, rsi<8>, cc_ndep<8>) != 0)\n    {\n        sub_40a020(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_406ea0",
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x406ef9",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_0;\n\nint sub_406ea0()\n{\n    unsigned long long v1;  // rax\n    unsigned long long *v2;  // rcx\n    unsigned long long v3[2];  // rdx\n    unsigned long long v4;  // rax\n    unsigned long v5;  // rsi\n    struct_0 *v6;  // rdi\n    unsigned long long v7;  // rax\n\n    v1 = sub_406890();\n    v2 = v1;\n    v3 = v1;\n    while (true)\n    {\n        v4 = *(v3);\n        v3 = v3[1];\n        if (v4 == v5 && v3 != 0)\n        {\n            return *(v3);\n        }\n        if (v3 == 0)\n        {\n            while (true)\n            {\n                v2 = &v2[2];\n                if (v6->field_8 > v2)\n                {\n                    v7 = *(v2);\n                    if (*(v2) != 0)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    v7 = 0;\n                }\n            }\n        }\n    }\n    return v7;\n}\n"
        },
        {
            "funcName": "sub_409720",
            "funcStartAddr": "0x409720",
            "funcEndAddr": "0x409732",
            "decompiledFuncCode": "int sub_409720()\n{\n}\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401e60",
            "funcEndAddr": "0x404681",
            "decompiledFuncCode": "typedef struct struct_7 {\n    char field_0;\n    char padding_1[8191];\n    unsigned long long field_2000;\n    unsigned long long field_2008;\n    unsigned long long field_2010;\n} struct_7;\n\ntypedef struct struct_6 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    unsigned long long field_10;\n    char field_18;\n    char padding_19[7];\n    unsigned long long field_20;\n    unsigned long long field_28;\n    unsigned int field_30;\n    char field_34;\n    char field_35;\n    char field_36;\n    char padding_37[1];\n    unsigned int field_38;\n    unsigned int field_3c;\n    unsigned int field_40;\n    unsigned int field_44;\n    unsigned int field_48;\n    char padding_4c[4];\n    unsigned long long field_50;\n    unsigned long long field_58;\n} struct_6;\n\ntypedef struct struct_8 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    unsigned long long field_10;\n    unsigned long long field_18;\n    unsigned long long field_20;\n    unsigned long long field_28;\n    unsigned int field_30;\n    char field_34;\n    char field_35;\n    char field_36;\n    char padding_37[1];\n    unsigned int field_38;\n    unsigned int field_3c;\n    unsigned int field_40;\n    unsigned int field_44;\n    unsigned int field_48;\n    char padding_4c[4];\n    unsigned long long field_50;\n    unsigned long long field_58;\n} struct_8;\n\ntypedef struct struct_9 {\n    unsigned long long field_0;\n    char padding_8[60];\n    unsigned int field_44;\n} struct_9;\n\ntypedef struct struct_10 {\n    char padding_0[68];\n    unsigned int field_44;\n} struct_10;\n\ntypedef struct struct_11 {\n    char field_0;\n    char padding_1[3];\n    unsigned int field_4;\n} struct_11;\n\nextern unsigned int g_40c206;\nextern unsigned int g_40c227;\nextern unsigned int g_40c263;\nextern unsigned int g_40c276;\nextern unsigned int g_40c2bc;\nextern unsigned int g_40c379;\nextern unsigned int g_40c38e;\nextern unsigned int g_40c3a4;\nextern unsigned int g_40c3bc;\nextern unsigned int g_40c3ea;\nextern unsigned int g_40c3f6;\nextern unsigned int g_40c463;\nextern unsigned int g_40c47c;\nextern unsigned int g_40c497;\nextern unsigned int g_40c4ab;\nextern unsigned int g_40c4c7;\nextern unsigned int g_40c4d7;\nextern unsigned int g_40c4e7;\nextern unsigned int g_40c4fa;\nextern unsigned int g_40c516;\nextern unsigned int g_40d220;\nextern unsigned int g_40d290;\nextern unsigned int g_40d2c8;\nextern unsigned int g_40d368;\nextern unsigned int g_40d3a8;\nextern unsigned int g_40d3e0;\nextern unsigned int g_40d420;\nextern unsigned int g_40d450;\nextern unsigned int g_40d478;\nextern unsigned int g_40d4a8;\nextern unsigned int g_40d4d8;\nextern unsigned int g_40d508;\nextern int512_t g_40d760;\nextern unsigned int g_40ee9c;\nextern char g_612290;\nextern unsigned long long g_612298;\nextern unsigned long long g_6122a0;\nextern unsigned int g_6122a8;\nextern unsigned int g_61233c;\nextern char g_612378;\nextern char g_612379;\nextern char g_61237a;\nextern unsigned int g_61237c;\nextern char g_612380;\nextern char g_612381;\nextern char g_612382;\nextern void g_612383;\nextern char g_612384;\nextern char g_612385;\nextern char g_612386;\nextern char *g_612540;\nextern unsigned long long stdout;\n\nint main()\n{\n    unsigned long v0;  // [bp-0x228]\n    unsigned long v1;  // [bp-0x220]\n    unsigned long long v2;  // [bp-0x218]\n    unsigned long long v3;  // [bp-0x208]\n    unsigned long|unsigned int *|unsigned int|char v4;  // [bp-0x200]\n    unsigned long|struct_6 *|unsigned long long|char|struct_7 * v5;  // [bp-0x1f8]\n    unsigned long|unsigned int|char v6;  // [bp-0x1f0]\n    unsigned long|unsigned int|unsigned int *|unsigned long long|char v7;  // [bp-0x1e8]\n    unsigned long|unsigned long long v8;  // [bp-0x1e0]\n    unsigned int|char v9;  // [bp-0x1d4]\n    unsigned long long v10;  // [bp-0x1d0]\n    unsigned long|char v11;  // [bp-0x1c8]\n    unsigned long v12;  // [bp-0x1c0]\n    struct_6 *v13;  // [bp-0x1b8]\n    char *|unsigned int|char v14;  // [bp-0x1b0]\n    unsigned int [4]|struct_6 * v15;  // [bp-0x1a8]\n    unsigned long long v16;  // [bp-0x1a0]\n    unsigned long|struct_10 *|unsigned int v17;  // [bp-0x198]\n    unsigned long v18;  // [bp-0x190]\n    unsigned int *v19;  // [bp-0x188]\n    char v20;  // [bp-0x17d]\n    unsigned int v21;  // [bp-0x17c]\n    unsigned long long v22;  // [bp-0x178]\n    unsigned long v23;  // [bp-0x170]\n    unsigned long|unsigned long long v24;  // [bp-0x168]\n    uint128_t|unsigned long long v25;  // [bp-0x160]\n    unsigned long|unsigned long long v26;  // [bp-0x158]\n    unsigned int v27;  // [bp-0x140]\n    unsigned long|unsigned long long v28;  // [bp-0xc8]\n    unsigned long v29;  // [bp-0xc0]\n    unsigned int v30;  // [bp-0xb0]\n    unsigned long long v31;  // [bp-0x98]\n    unsigned int v33;  // [bp-0x84]\n    unsigned long long v34;  // [bp-0x70]\n    unsigned long long v35;  // [bp-0x68]\n    unsigned int v37;  // edi\n    unsigned long v39;  // rsi\n    unsigned long|unsigned int v40;  // rbx\n    char v43[2];  // rdi\n    unsigned long long v44;  // rax\n    unsigned long long v45;  // rax\n    char v46[2];  // rdx\n    unsigned int v47;  // eax\n    unsigned long long v48;  // r12\n    unsigned long long v49;  // rax\n    char v50;  // al\n    char *v51;  // rdx\n    unsigned long long v52;  // rcx\n    unsigned long long v53;  // r13\n    unsigned long long v54;  // rcx\n    char *v55;  // rax\n    unsigned long long v56;  // r14\n    unsigned long long v57;  // rax\n    unsigned long long v58;  // rax\n    unsigned long long v59;  // r12\n    unsigned long long v60;  // rbp\n    unsigned long long v61;  // rbp\n    unsigned long long v62;  // rax\n    unsigned long long v65;  // r8\n    unsigned long long v66;  // r8\n    unsigned long long v67;  // rbx\n    unsigned int v68;  // r14d\n    unsigned long long v70;  // rbx\n    unsigned long v71;  // rsi\n    unsigned long long v78;  // rax\n    unsigned long long v79;  // rax\n    unsigned long long *v80;  // rbp\n    unsigned long long v82;  // r12\n    unsigned long long *v83;  // rax\n    char *v84;  // rsi\n    unsigned long long v85;  // rcx\n    struct_7 *v86;  // rdi\n    unsigned long long v87;  // cc_dep1\n    unsigned long long v88;  // cc_dep2\n    unsigned long v89;  // d\n    unsigned long v90;  // r8\n    unsigned long long v91;  // rbx\n    unsigned long long v92;  // rax\n    unsigned long long v94;  // rax\n    struct_6 *v95;  // rax\n    unsigned long long v96;  // rdx\n    struct_6 *v97;  // r14\n    unsigned long long v98;  // rcx\n    struct_7 *v99;  // rdi\n    char *|unsigned long long v100;  // rsi\n    unsigned long long v101;  // cc_dep1\n    unsigned long long v102;  // cc_dep2\n    unsigned int *v103;  // rbp\n    unsigned int v104;  // eax\n    unsigned long long v107;  // rbx\n    unsigned long long v108;  // rax\n    unsigned long long v109;  // rax\n    unsigned long long v110;  // rbx\n    unsigned long long v111;  // rax\n    unsigned long long v112;  // rbx\n    unsigned long long v114;  // rbp\n    unsigned long long v115;  // rbx\n    unsigned long long v116;  // rax\n    unsigned long long v117;  // rbx\n    unsigned long long v118;  // rax\n    unsigned long long v119;  // rax\n    unsigned long long v121;  // r12\n    unsigned long long v122[1026];  // rax\n    unsigned long long [1026]|unsigned long long v124;  // rbp\n    unsigned long long v125;  // rax\n    struct_7 *v126;  // rax\n    unsigned long long v127[1026];  // r14\n    unsigned long long v128[1026];  // rbx\n    unsigned long long v131;  // rdx\n    unsigned long long v132;  // rax\n    unsigned long long v134[1026];  // rax\n    struct_7 *v135;  // r14\n    struct_7 *v136;  // r15\n    unsigned long long v137[1026];  // rdi\n    unsigned long long v138[1026];  // rbx\n    unsigned long v139;  // rbx\n    unsigned long long v140;  // rbp\n    unsigned long long v142;  // rdx\n    unsigned long long v143;  // r12\n    struct_7 *v144;  // rbp\n    struct_7 *v147;  // rbp\n    unsigned long long v148;  // rsi\n    unsigned long long v149;  // rax\n    unsigned long long v150;  // rax\n    struct_7 *v151;  // rbx\n    struct_7 *v152;  // rcx\n    unsigned long long v153;  // rbx\n    unsigned long long v154;  // rbx\n    struct_7 *v156;  // r13\n    unsigned long long v157;  // rax\n    unsigned long long v158[1026];  // rdi\n    unsigned long long v160;  // rdx\n    struct_7 *v161;  // rdi\n    void *v162;  // rbx\n    unsigned long long v164;  // rbx\n    unsigned long long v165;  // r15\n    unsigned long long v166;  // rax\n    unsigned long long v167;  // rbx\n    struct_7 *v169;  // rbx\n    void *v171;  // rbx\n    unsigned long long v172;  // rax\n    unsigned int *v175;  // rbx\n    unsigned long long v177;  // rbp\n    unsigned long long v179;  // rbp\n    unsigned long long v180;  // rbx\n    unsigned long long v182;  // rbp\n    struct_6 *v185;  // rbp\n    unsigned long long v186;  // rbx\n    unsigned long long v187;  // rax\n    unsigned long long v188;  // rax\n    unsigned long long v189;  // rax\n    unsigned long long v190;  // rdx\n    struct_6 *v191;  // rbx\n    unsigned long long v192;  // rax\n    unsigned long long v193;  // rax\n    struct_6 *v194;  // rdx\n    unsigned long long v195;  // rax\n    unsigned long long v196;  // rcx\n    struct_6 *v197;  // rbx\n    unsigned long long v198;  // rax\n    struct_6 *v199;  // rcx\n    unsigned long long v200;  // rax\n    unsigned int v201;  // edx\n    unsigned long|unsigned int v202;  // r13\n    unsigned long long v203;  // rax\n    unsigned long long v204;  // r12\n    unsigned long long v205;  // rbp\n    struct_8 *v206;  // rbx\n    char *v207;  // r15\n    unsigned long long v208;  // rcx\n    char *v209;  // rdi\n    char v210;  // cc_dep2\n    char *v211;  // r14\n    unsigned long v213;  // rsi\n    unsigned long long v214;  // rax\n    unsigned int *v216;  // r14\n    unsigned int v217;  // eax\n    unsigned int *v218;  // rbx\n    struct_6 *v219;  // rbx\n    unsigned long long v220;  // rbp\n    unsigned long long v222;  // rax\n    unsigned long long v225;  // r12\n    unsigned long long v227;  // rbp\n    unsigned long long v228;  // rax\n    unsigned long long v229;  // rax\n    unsigned int *v230;  // rax\n    uint128_t v231;  // xmm3\n    unsigned long long v232;  // xmm3lq\n    uint128_t v233;  // xmm0\n    unsigned long long v234;  // xmm0lq\n    uint128_t v236;  // xmm0\n    unsigned long long v237;  // xmm0lq\n    uint128_t v238;  // xmm0\n    unsigned long long v239;  // rcx\n    unsigned long long *v240;  // rdi\n    unsigned long v241;  // rax\n    unsigned long long v243;  // rax\n    unsigned int *v244;  // rax\n    unsigned int v245;  // edx\n    unsigned long long|unsigned int v246;  // r9d\n    unsigned long long v247;  // rbx\n    unsigned long long v248;  // rbp\n    unsigned long long v249;  // rax\n    unsigned long long v250;  // rbp\n    unsigned int v251;  // r14d\n    struct_8 *v252;  // rbx\n    unsigned long long v253;  // rax\n    struct_9 *v254;  // rbx\n    unsigned long v256;  // rsi\n    struct_10 *v258;  // rdx\n    unsigned long long v262;  // rax\n    unsigned long long v264;  // rax\n    unsigned int *v270;  // rbx\n    struct_8 *v273;  // rbx\n    unsigned long v274;  // rsi\n    unsigned long v275;  // rsi\n    struct_6 *v276;  // rax\n    unsigned long long v277;  // r15\n    struct_6 *v279;  // r14\n    unsigned long long v280;  // rbx\n    unsigned int v281;  // ebp\n    unsigned int v283;  // r12d\n    unsigned long long v285;  // rax\n    unsigned int v286;  // edx\n    char v287;  // dh\n    unsigned long long v288;  // rax\n    unsigned long long v289;  // rax\n    unsigned long long v290;  // rdx\n    unsigned long long v291;  // rcx\n    unsigned int *v292;  // r12\n    unsigned long long v295;  // rax\n    unsigned long long v300;  // rax\n    struct_11 *v301;  // rax\n    unsigned long long v302;  // rax\n    unsigned long long v303;  // rcx\n    unsigned long long *v304;  // rdi\n    unsigned int v305;  // cc_dep1\n    unsigned long long v306;  // rax\n    unsigned int *v307;  // rax\n    unsigned long long v309;  // rbx\n\n    v40 = v39;\n    v22 = 10;\n    sub_407b40();\n    setlocale(0x6, 0x40ee9c);\n    bindtextdomain(0x40c379, 0x40d220);\n    textdomain(0x40c379);\n    sub_40c180();\n    g_61237a = 0;\n    g_612385 = 1;\n    g_612381 = 0;\n    g_612382 = 0;\n    g_612384 = 0;\n    g_612380 = 10;\n    if (v37 == 3)\n    {\n        v43 = *((long long *)(v40 + 16));\n    }\n    if (v37 == 4)\n    {\n        v43 = *((long long *)(v39 + 16));\n    }\n    if (v37 == 4 || *((char *)*((long long *)(v40 + 16))) == 45 && v37 == 3 && *((char *)(*((long long *)(v39 + 16)) + 1)) != 0)\n    {\n        v44 = strcmp(v43, \"-\");\n    }\n    if (v37 == 2 || v37 == 4 && v44 == 0 || v37 == 3 && *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v37 == 3 && v44 == 0 || v37 == 3 && *((char *)*((long long *)(v40 + 16))) != 45)\n    {\n        v45 = sub_407ac0();\n        v46 = *((long long *)(v40 + 8));\n    }\n    if (!(*((char *)*((long long *)(v40 + 8))) != 43))\n    {\n        v47 = v45 - 200112;\n        v48 = 1;\n    }\n    else if (v37 == 2 || v37 == 4 || v37 == 3)\n    {\n        if ((v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && *((char *)*((long long *)(v39 + 8))) == 45 && v45 > 200111)\n        {\n            v49 = 0;\n            v50 = v46[1] == 99;\n        }\n    }\n    if (*((char *)*((long long *)(v39 + 8))) == 45 && v45 <= 200111 && *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v39 + 8))) == 45 && v46[1 + rax<8>] != 0 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45))\n    {\n        v48 = 0;\n    }\n    if (*((char *)*((long long *)(v39 + 8))) == 45 && v45 <= 200111 && *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v39 + 8))) == 45 && v46[1 + rax<8>] != 0 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v40 + 8))) == 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && v47 > 696)\n    {\n        v51 = *((long long *)(v39 + 8)) + 1;\n        v52 = (char)*((char *)(*((long long *)(v39 + 8)) + 1));\n        if ((unsigned int)(char)*((char *)(*((long long *)(v39 + 8)) + 1)) - 48 <= 9)\n        {\n            do\n            {\n                v51 = &v51[1];\n                v52 = *(v51);\n            }\n            while ((unsigned int)*(v51) - 48 <= 9);\n        }\n        if (!(v52 != 99))\n        {\n            v53 = 0;\n            v54 = 10;\n        }\n        else if (v52 != 108)\n        {\n            if (v52 != 98)\n            {\n                v55 = v51;\n                v53 = 1;\n                v54 = 10;\n            }\n        }\n        if (v52 == 108)\n        {\n            v53 = 1;\n            v54 = 10;\n        }\n        if (v52 == 98)\n        {\n            v53 = 0;\n            v54 = 0x1400;\n        }\n        if (v52 == 99 || v52 == 98 || v52 == 108)\n        {\n            v55 = &v51[1];\n        }\n        v56 = 0;\n        if (*(v55) == 102)\n        {\n            v55 = &v55[1];\n            v56 = 1;\n        }\n        if (*(v55) == 0)\n        {\n            if (*((long long *)(v39 + 8)) + 1 != v51)\n            {\n                v58 = sub_40a260();\n                if ((v58 & -3) != 0)\n                {\n                    v61 = (unsigned int)sub_409760();\n                    v67 = dcgettext(0x0, 0x40c38e, 0x5);\n                    error(0x1, *(__errno_location()), \"%s: %s\");\n                }\n            }\n            else\n            {\n                v22 = v54;\n            }\n        }\n    }\n    if ((v37 == 4 || *((char *)*((long long *)(v40 + 16))) == 45 && v37 == 3 && *((char *)(*((long long *)(v39 + 16)) + 1)) != 0) && v44 != 0 || v37 != 2 && v37 != 3 && v37 != 4 || *((char *)*((long long *)(v39 + 8))) == 45 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && v46[1 + rax<8>] == 0 || (*((char *)*((long long *)(v39 + 8))) == 45 && v45 <= 200111 && *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v39 + 8))) == 45 && v46[1 + rax<8>] != 0 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v40 + 8))) == 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && v47 > 696) && *(v55) != 0 || v47 <= 696 && *((char *)*((long long *)(v40 + 8))) == 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && *((char *)*((long long *)(v39 + 8))) != 45)\n    {\n        v57 = 0;\n    }\n    if ((*((char *)*((long long *)(v39 + 8))) == 45 && v45 <= 200111 && *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v39 + 8))) == 45 && v46[1 + rax<8>] != 0 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v40 + 8))) == 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && v47 > 696) && *(v55) == 0 && *((long long *)(v39 + 8)) + 1 != v51 && (v58 & -3) == 0 || (*((char *)*((long long *)(v39 + 8))) == 45 && v45 <= 200111 && *((char *)*((long long *)(v40 + 8))) != 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v39 + 8))) == 45 && v46[1 + rax<8>] != 0 && *((char *)*((long long *)(v40 + 8))) != 43 && v45 > 200111 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) || *((char *)*((long long *)(v40 + 8))) == 43 && (v37 == 2 || v37 == 4 || v37 == 3) && (v37 == 2 || v37 == 3 || v44 == 0) && (v37 == 2 || *((char *)(*((long long *)(v39 + 16)) + 1)) == 0 || v44 == 0 || *((char *)*((long long *)(v40 + 16))) != 45) && v47 > 696) && *(v55) == 0 && *((long long *)(v39 + 8)) + 1 == v51)\n    {\n        *((unsigned long long *)&g_612382) = v48;\n        v57 = 1;\n        *((unsigned long long *)&g_612385) = v53;\n        *((unsigned long long *)&g_612384) = v56;\n    }\n    if (...)\n    {\n        v59 = v39 + v57 * 8;\n        v40 = 0;\n        v60 = v37 - (unsigned int)v57;\n        v10 = 0x3ff0000000000000;\n        while (true)\n        {\n            v62 = sub_40b530();\n            if ((unsigned int)v56 == -1)\n            {\n                v68 = v56;\n                if (g_612386 != 0)\n                {\n                    if (g_612384 == 0)\n                    {\n                        g_612386 = 0;\n                        v71 = \"warning: --retry ignored; --retry is useful only when following\";\n                    }\n                    else if (g_6122a8 != 2)\n                    {\n                        if (g_61237c == 0)\n                        {\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        v71 = \"warning: --retry only effective for the initial open\";\n                    }\n                    if (g_6122a8 == 2 || g_612384 == 0)\n                    {\n                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, v71, 0x5));\n                    }\n                }\n                if (g_61237c == 0 && (g_612386 == 0 || g_6122a8 == 2 || g_612384 == 0))\n                {\n                    break;\n                }\n                if (g_61237c != 0)\n                {\n                    if (g_612384 != 0)\n                    {\n                        if (kill() == 0)\n                        {\n                            break;\n                        }\n                        if (*(__errno_location()) != 38)\n                        {\n                            break;\n                        }\n                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40d3a8, 0x5));\n                        g_61237c = 0;\n                    }\n                    else\n                    {\n                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40d368, 0x5));\n                    }\n                }\n            }\n            else if ((unsigned int)v56 != 113)\n            {\n                if (v56 > 113)\n                {\n                    if ((unsigned int)v56 == 129)\n                    {\n                        dcgettext(0x0, 0x40d290, 0x5);\n                        g_6122a0 = (unsigned int)sub_40a130();\n                    }\n                    else if (v56 <= 129)\n                    {\n                        if ((unsigned int)v56 == 118)\n                        {\n                            v40 = 1;\n                        }\n                        else if (v56 > 118)\n                        {\n                            if ((unsigned int)v56 == 122)\n                            {\n                                g_612380 = 0;\n                            }\n                            if ((unsigned int)v56 == 128)\n                            {\n                                g_612386 = 1;\n                            }\n                        }\n                        else if ((unsigned int)v56 == 115)\n                        {\n                            if (sub_40a1c0() != 0)\n                            {\n                                v10 = v28;\n                            }\n                            v70 = (unsigned int)sub_409760();\n                            error(0x1, 0x0, (unsigned long long)dcgettext(0x0, 0x40c3f6, 0x5));\n                        }\n                    }\n                    else\n                    {\n                        if ((unsigned int)v56 == 131)\n                        {\n                            g_612379 = 1;\n                        }\n                        else if (v56 < 131)\n                        {\n                            dcgettext(0x0, 0x40c3ea, 0x5);\n                            g_61237c = sub_40a130();\n                        }\n                        else if ((unsigned int)v56 == 133)\n                        {\n                            g_612378 = 1;\n                        }\n                    }\n                }\n                else\n                {\n                    if ((unsigned int)v56 > 57)\n                    {\n                        if ((unsigned int)v56 == 70 && v56 <= 99 && (unsigned int)v56 != 99)\n                        {\n                            g_612384 = 1;\n                            g_6122a8 = 1;\n                            g_612386 = 1;\n                        }\n                        if (((unsigned int)v56 == 110 || (unsigned int)v56 == 99) && ((unsigned int)v56 == 99 || (unsigned int)v56 != 102) && ((unsigned int)v56 == 99 || v56 > 99))\n                        {\n                            g_612385 = (unsigned int)v56 == 110;\n                            if (*(g_612540) == 43)\n                            {\n                                g_612382 = 1;\n                            }\n                            else if (*(g_612540) == 45)\n                            {\n                                g_612540 = &g_612540[1];\n                            }\n                            if ((unsigned int)v56 != 110)\n                            {\n                                v66 = dcgettext(0x0, 0x40c3bc, 0x5);\n                            }\n                            else\n                            {\n                                v65 = dcgettext(0x0, 0x40c3a4, 0x5);\n                            }\n                            v22 = (unsigned int)sub_40a130();\n                        }\n                    }\n                    else\n                    {\n                        v56 = v62;\n                        if ((unsigned int)v62 < 48)\n                        {\n                            if ((unsigned int)v56 == -131)\n                            {\n                                v2 = 0;\n                                v1 = \"Jim Meyering\";\n                                v0 = \"Ian Lance Taylor\";\n                                sub_409c90();\n                                exit(0x0); /* do not return */\n                            }\n                            if ((unsigned int)v56 == -130)\n                            {\n                                sub_405d10(); /* do not return */\n                            }\n                        }\n                        else\n                        {\n                            error(0x1, 0x0, (unsigned long long)dcgettext(0x0, 0x40d2c8, 0x5));\n                        }\n                    }\n                }\n                if ((unsigned int)v56 == 102 && v56 <= 113 && (unsigned int)v56 > 57 && v56 > 99 && (unsigned int)v56 != 99 || (unsigned int)v56 == 132 && (unsigned int)v56 != 129 && v56 > 129 && v56 >= 131 && v56 > 113 && (unsigned int)v56 != 131)\n                {\n                    g_612384 = 1;\n                    if (g_612540 != 0)\n                    {\n                        g_6122a8 = *((int *)&((char *)&g_40d760)[4 * (unsigned long long)(unsigned int)sub_406440()]);\n                    }\n                    else\n                    {\n                        g_6122a8 = 2;\n                    }\n                }\n                if ((unsigned int)v56 <= 57 && v56 <= 113 && (unsigned int)v62 < 48 && (unsigned int)v56 != -131 && (unsigned int)v56 != -130 || v56 <= 99 && v56 <= 113 && (unsigned int)v56 != 70 && (unsigned int)v56 > 57 && (unsigned int)v56 != 99 || v56 <= 118 && v56 <= 129 && (unsigned int)v56 != 115 && (unsigned int)v56 != 129 && (unsigned int)v56 != 118 && v56 > 113 || v56 <= 113 && (unsigned int)v56 != 102 && (unsigned int)v56 > 57 && v56 > 99 && (unsigned int)v56 != 110 && (unsigned int)v56 != 99 || v56 <= 129 && v56 > 118 && (unsigned int)v56 != 122 && (unsigned int)v56 != 128 && (unsigned int)v56 != 129 && (unsigned int)v56 != 118 && v56 > 113 || (unsigned int)v56 != 129 && (unsigned int)v56 != 132 && v56 > 129 && v56 >= 131 && (unsigned int)v56 != 133 && v56 > 113 && (unsigned int)v56 != 131)\n                {\n                    sub_405d10(); /* do not return */\n                }\n            }\n            else\n            {\n                v40 = 2;\n            }\n        }\n        if (g_612382 != 0 && v22 != 0)\n        {\n            v78 = v22 - 1;\n            v22 = v78;\n        }\n        v79 = (int)g_61233c;\n        if (g_61233c < (unsigned int)v60)\n        {\n            v80 = v59 + v79 * 8;\n            v3 = v60 - v79;\n        }\n        else\n        {\n            v80 = &g_612298;\n            v3 = 1;\n        }\n        v82 = &v80[v3];\n        v83 = v80;\n        do\n        {\n            v84 = *(v83);\n            v85 = 2;\n            v86 = \"-\";\n            while (v85 != 0)\n            {\n                v85 -= 1;\n                v87 = *(v84);\n                v88 = v86->field_0;\n                v86 = &(&v86->field_0)[v89];\n                v84 = &v84[v89];\n                break;\n            }\n            v90 = (unsigned int)((v87 > v88) - 0 - (v87 < v88) == 0? 1 : 0);\n            v83 = &v83[1];\n        }\n        while (v83 != v82);\n        if (v90 != 0)\n        {\n            if (!(g_6122a8 != 1))\n            {\n                v91 = (unsigned int)sub_409510();\n                error(0x1, 0x0, (unsigned long long)dcgettext(0x0, 0x40c463, 0x5));\n            }\n            else if (g_612384 != 0)\n            {\n                if (g_61237c == 0 && v3 == 1 && g_6122a8 == 2)\n                {\n                    v92 = __fxstat(0x1, 0x0, (unsigned int)&v28);\n                }\n                if ((((unsigned short)v30 & 0xf000) == 0x8000 || v92 != 0 || g_61237c != 0 || g_6122a8 != 2 || v3 != 1) && isatty(0x0) != 0)\n                {\n                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40d3e0, 0x5));\n                }\n            }\n        }\n        if (v22 == 0 && (v90 == 0 || g_6122a8 != 1) && g_612384 == 0)\n        {\n            v94 = 0;\n        }\n        if (v90 == 0 && v22 != 0 || v90 == 0 && g_612384 != 0 || v90 == 0 && g_612382 != 0 || v22 != 0 && g_6122a8 != 1 || g_6122a8 != 1 && g_612384 != 0 || g_6122a8 != 1 && g_612382 != 0)\n        {\n            v16 = v3 * 96;\n            v95 = sub_409dd0();\n            v13 = v95;\n            do\n            {\n                v96 = *(v80);\n                v80 = &v80[1];\n                v95 = &v95[1];\n                v95[-1].field_0 = v96;\n            }\n            while (v80 != v82);\n            if (v40 == 1 || v40 == 0 && v3 != 1)\n            {\n                g_612381 = 1;\n            }\n            v17 = v68;\n            v20 = 1;\n            v97 = v13;\n            v12 = v16 + (char *)v13;\n            do\n            {\n                v98 = 2;\n                v99 = \"-\";\n                v8 = v22;\n                v100 = v97->field_0;\n                while (v98 != 0)\n                {\n                    v98 -= 1;\n                    v101 = *(v100);\n                    v102 = v99->field_0;\n                    v99 = &(&v99->field_0)[v89];\n                    v100 = &v100[v89];\n                    break;\n                }\n                v9 = (v101 > v102) - 0 - (v101 < v102);\n                if ((v101 > v102) - (v101 < v102) == 0)\n                {\n                    g_61237a = 1;\n                    v4 = 0;\n                }\n                else\n                {\n                    v4 = sub_406780();\n                    if (g_612386 == 0)\n                    {\n                        v97->field_36 = 1;\n                    }\n                    else if ((char)(v4 + 1 == 0))\n                    {\n                        v97->field_36 = 0;\n                    }\n                    if ((v4 + 1 == 0 || g_612386 == 0) && (v4 == -1 || g_612386 != 0))\n                    {\n                        v103 = __errno_location();\n                        if (g_612384 != 0)\n                        {\n                            v104 = *(v103);\n                            v97->field_38 = -1;\n                            v97->field_34 = (unsigned int)g_612386 ^ 1;\n                            v97->field_3c = v104;\n                            v97->field_28 = 0;\n                            v97->field_20 = 0;\n                        }\n                        sub_4047e0();\n                        v107 = (unsigned int)sub_409510();\n                        error(0x0, *(v103), (unsigned long long)dcgettext(0x0, 0x40c47c, 0x5));\n                        v6 = 0;\n                    }\n                }\n                if ((v101 > v102) - (v101 < v102) == 0 || !((char)(v4 + 1 == 0)) && g_612386 != 0)\n                {\n                    v97->field_36 = 1;\n                }\n                if ((v101 > v102) - (v101 < v102) == 0 || g_612386 == 0 && v4 != -1 || !((char)(v4 + 1 == 0)) && g_612386 != 0)\n                {\n                    if (g_612381 != 0)\n                    {\n                        __printf_chk(0x1, \"%s==> %s <==\\n\", (unsigned int)(g_612290 == 0? \"\\n\" : 4255388), sub_4047e0());\n                        g_612290 = 0;\n                    }\n                    v26 = 0;\n                    v11 = (unsigned int)sub_4047e0();\n                    v6 = g_612385;\n                    if (g_612385 != 0)\n                    {\n                        v109 = __fxstat(0x1, v100, (unsigned int)&v28);\n                        if (v109 == 0)\n                        {\n                            v14 = g_612382;\n                            if (g_612382 == 0)\n                            {\n                                if (g_612379 == 0 && ((unsigned short)v30 & 0xf000) == 0x8000)\n                                {\n                                    v117 = lseek(v4, 0x0, 0x1);\n                                    if (v117 != -1)\n                                    {\n                                        v118 = lseek(v4, 0x0, 0x2);\n                                        if (v117 < v26)\n                                        {\n                                            v26 = v118;\n                                            v14 = v6;\n                                            if (v26 != 0)\n                                            {\n                                                v14 = sub_404cd0();\n                                            }\n                                        }\n                                        else\n                                        {\n                                            sub_404c20();\n                                        }\n                                    }\n                                }\n                                if (v117 == -1 || g_612379 != 0 || v117 >= v26 || ((unsigned short)v30 & 0xf000) != 0x8000)\n                                {\n                                    v126 = sub_409dd0();\n                                    v126->field_2008 = 0;\n                                    v126->field_2000 = 0;\n                                    v126->field_2010 = 0;\n                                    v5 = v126;\n                                    v15 = v97;\n                                    v135 = v126;\n                                    v7 = 0;\n                                    v136 = (unsigned long long)(unsigned int)sub_409dd0();\n                                    while (true)\n                                    {\n                                        v139 = (unsigned int)sub_409780();\n                                        if (v139 - 1 > -3)\n                                        {\n                                            break;\n                                        }\n                                        v136->field_2000 = v139;\n                                        v140 = 0;\n                                        v26 += v139;\n                                        v136->field_2008 = 0;\n                                        v136->field_2010 = 0;\n                                        while (true)\n                                        {\n                                            v142 = v140 + 1;\n                                            if (sub_40b730() == 0)\n                                            {\n                                                break;\n                                            }\n                                            v136->field_2008 = v140;\n                                            v140 = v142;\n                                        }\n                                        v99 = v5->field_2000;\n                                        v143 = v7 + v140;\n                                        if (v139 + v5->field_2000 > 8191)\n                                        {\n                                            v5->field_2010 = v136;\n                                            v7 -= v135->field_2008;\n                                            if (v8 < v7 - v135->field_2008)\n                                            {\n                                                v5 = v136;\n                                                v136 = v135;\n                                                v135 = v135->field_2010;\n                                            }\n                                            else\n                                            {\n                                                v5 = v136;\n                                                v7 = v7;\n                                                v136 = (unsigned long long)(unsigned int)sub_409dd0();\n                                            }\n                                        }\n                                        else\n                                        {\n                                            v144 = v5;\n                                            v99 += v5;\n                                            memcpy(v99, v136, v139);\n                                            v7 = v143;\n                                            v144->field_2000 = v144->field_2000 + v136->field_2000;\n                                            v144->field_2008 = v144->field_2008 + v136->field_2008;\n                                        }\n                                    }\n                                    v147 = v135;\n                                    v97 = v15;\n                                    free(v136);\n                                    if (v139 + 1 != 0)\n                                    {\n                                        v151 = v5;\n                                        v152 = v5->field_2000;\n                                        v14 = v5->field_2000 == 0 | v8 == 0;\n                                        if (v8 != 0 && v5->field_2000 != 0)\n                                        {\n                                            if (*((char *)(v151 + v152 - 1)) != g_612380)\n                                            {\n                                                v151->field_2008 = v151->field_2008 + 1;\n                                                v7 += 1;\n                                            }\n                                            v156 = v99;\n                                            v157 = v7 - v99->field_2008;\n                                            if (v8 < v7 - v99->field_2008)\n                                            {\n                                                do\n                                                {\n                                                    v156 = v156->field_2010;\n                                                    v160 = v157;\n                                                    v157 -= v156->field_2008;\n                                                }\n                                                while (v8 < v157);\n                                                v7 = v160;\n                                            }\n                                            v161 = v156;\n                                            v164 = &(&v156->field_0)[v156->field_2000];\n                                            if (v8 < v7)\n                                            {\n                                                v165 = v7 - v8;\n                                                while (true)\n                                                {\n                                                    v166 = sub_40b730();\n                                                    if (v166 != 0)\n                                                    {\n                                                        v161 = v166 + 1;\n                                                        v165 -= 1;\n                                                        if (v165 == 1)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                        __assert_fail(); /* do not return */\n                                                    }\n                                                }\n                                            }\n                                            v167 = v164 + -0x1 * v161;\n                                            if (v164 != v161)\n                                            {\n                                                sub_4048a0();\n                                            }\n                                            v169 = v156->field_2010;\n                                            if (v156->field_2010 != 0)\n                                            {\n                                                do\n                                                {\n                                                    if (v169->field_2000 != 0)\n                                                    {\n                                                        sub_4048a0();\n                                                    }\n                                                    v169 = v169->field_2010;\n                                                }\n                                                while (v169 != 0);\n                                            }\n                                            v14 = v6;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        v154 = (unsigned int)sub_409510();\n                                        error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                                    }\n                                    if (v8 == 0 || v5->field_2000 == 0 || v139 + 1 == 0)\n                                    {\n                                        v99 = v147;\n                                    }\n                                    if (v147 != 0 || v8 != 0 && v5->field_2000 != 0 && v139 + 1 != 0)\n                                    {\n                                        while (true)\n                                        {\n                                            v171 = v161->field_2010;\n                                            free(v161);\n                                            v161 = v171;\n                                            if (v171 == 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                v111 = sub_404920();\n                                if ((unsigned int)v111 != 0)\n                                {\n                                    v14 = (unsigned int)v111 % 0x80000000;\n                                }\n                                else\n                                {\n                                    v26 += (unsigned int)sub_404a20();\n                                }\n                            }\n                        }\n                        else\n                        {\n                            v112 = (unsigned int)sub_409510();\n                            error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c497, 0x5));\n                            v14 = 0;\n                        }\n                        v6 = v14;\n                    }\n                    else\n                    {\n                        v108 = __fxstat(0x1, v100, (unsigned int)&v28);\n                        if (v108 == 0)\n                        {\n                            v6 = g_612382;\n                            if (g_612382 != 0)\n                            {\n                                if (g_612379 == 0 && !((char)(v8 - 0 >> 63)))\n                                {\n                                    if (((unsigned short)v30 & 0xf000) == 0x8000)\n                                    {\n                                        v116 = sub_404c20();\n                                    }\n                                    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>) || ((unsigned short)v30 & 0xf000) != 0x8000)\n                                    {\n                                        v119 = lseek(v4, v8, 0x1);\n                                    }\n                                    if ((((unsigned short)v30 & 0xf000) == 0x8000 || v119 + 1 != 0) && (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>)) || v119 + 1 != 0))\n                                    {\n                                        v26 += v8;\n                                        v8 = -1;\n                                    }\n                                }\n                                if ((char)(v8 - 0 >> 63) || g_612379 != 0 || (char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>) && v119 + 1 == 0 || v119 + 1 == 0 && ((unsigned short)v30 & 0xf000) != 0x8000)\n                                {\n                                    v125 = sub_404b40();\n                                    v8 = -1;\n                                    if ((unsigned int)v125 != 0)\n                                    {\n                                        v6 = (unsigned int)v125 % 0x80000000;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (g_612379 == 0 && !((char)(v8 - 0 >> 63)))\n                                {\n                                    if (((unsigned short)v30 & 0xd000) == 0x8000)\n                                    {\n                                        v114 = v31;\n                                        v115 = -1;\n                                    }\n                                    else\n                                    {\n                                        v115 = lseek(v4, 0 - v8, 0x2);\n                                        if (v115 != -1)\n                                        {\n                                            v114 = v115 + v8;\n                                        }\n                                    }\n                                    if (v114 > (!((long long)(stack_base)[-144] - 1 <= 2305843009213693951)? 0x200 : (long long)(stack_base)[-144]) && (((unsigned short)v30 & 0xd000) == 0x8000 || v115 != -1))\n                                    {\n                                        if (v115 == -1)\n                                        {\n                                            v115 = (unsigned int)sub_404c20();\n                                        }\n                                        if (v8 < v114 - v115 && v114 > v115)\n                                        {\n                                            v115 = v114 - v8;\n                                            sub_404c20();\n                                        }\n                                        v26 = v115;\n                                    }\n                                }\n                                if (((char)(v8 - 0 >> 63) || v114 <= (!((long long)(stack_base)[-144] - 1 <= 2305843009213693951)? 0x200 : (long long)(stack_base)[-144]) || v115 == -1 || g_612379 != 0) && ((char)(v8 - 0 >> 63) || v114 <= (!((long long)(stack_base)[-144] - 1 <= 2305843009213693951)? 0x200 : (long long)(stack_base)[-144]) || g_612379 != 0 || ((unsigned short)v30 & 0xd000) != 0x8000))\n                                {\n                                    v121 = 0;\n                                    v122 = sub_409dd0();\n                                    v122[0x400] = 0;\n                                    v122[1025] = 0;\n                                    v124 = v122;\n                                    v5 = v97;\n                                    v127 = v122;\n                                    v128 = (unsigned long long)(unsigned int)sub_409dd0();\n                                    while (true)\n                                    {\n                                        if (v7 - 1 > -3)\n                                        {\n                                            break;\n                                        }\n                                        v26 += *((long long *)&v7);\n                                        v121 += *((long long *)&v7);\n                                        v128[0x400] = *((long long *)&v7);\n                                        v131 = v127[0x400];\n                                        v128[1025] = 0;\n                                        if (v7 + v131 > 8191)\n                                        {\n                                            v132 = v121 - v124[0x400];\n                                            v127[1025] = v128;\n                                            if (v8 < v121)\n                                            {\n                                                v121 = v132;\n                                                v134 = v124;\n                                                v124 = v124[1025];\n                                            }\n                                            else\n                                            {\n                                                v134 = sub_409dd0();\n                                            }\n                                        }\n                                        else\n                                        {\n                                            memcpy((char *)v127 + v131, v128, *((long long *)&v7));\n                                            v127[0x400] = v127[0x400] + v128[0x400];\n                                            v134 = v128;\n                                            v128 = v127;\n                                        }\n                                        v127 = v128;\n                                        v128 = v134;\n                                    }\n                                    v137 = v128;\n                                    *((int *)&v7) = sub_409780();\n                                    v97 = v5;\n                                    v138 = v124;\n                                    free(v137);\n                                    if (v7 + 1 == 0)\n                                    {\n                                        v153 = (unsigned int)sub_409510();\n                                        error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                                        v158 = v124;\n                                    }\n                                    else\n                                    {\n                                        while (true)\n                                        {\n                                            v148 = v138[0x400];\n                                            v149 = v121 - v138[0x400];\n                                            if (v8 >= v121 - v138[0x400])\n                                            {\n                                                break;\n                                            }\n                                            v138 = v138[1025];\n                                            v121 = v149;\n                                        }\n                                        v150 = 0;\n                                        if (v8 < v121)\n                                        {\n                                            v150 = v121 - v8;\n                                        }\n                                        v100 = v148 - v150;\n                                        if (v148 != v150)\n                                        {\n                                            sub_4048a0();\n                                        }\n                                        while (true)\n                                        {\n                                            v138 = v138[1025];\n                                            if (v138 != 0)\n                                            {\n                                                sub_4048a0();\n                                            }\n                                            else\n                                            {\n                                                v6 = 1;\n                                                v158 = v124;\n                                            }\n                                        }\n                                    }\n                                    for (; v158 != 0; v158 = v162)\n                                    {\n                                        v162 = v158[1025];\n                                        free(v158);\n                                    }\n                                }\n                            }\n                            if (g_612379 == 0 && g_612382 == 0 && !((char)(v8 - 0 >> 63)) && v114 > (!((long long)(stack_base)[-144] - 1 <= 2305843009213693951)? 0x200 : (long long)(stack_base)[-144]) && (((unsigned short)v30 & 0xd000) == 0x8000 || v115 != -1) || g_612379 == 0 && !((char)(v8 - 0 >> 63)) && g_612382 != 0 && (((unsigned short)v30 & 0xf000) == 0x8000 || v119 + 1 != 0) && (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>)) || v119 + 1 != 0) || g_612382 != 0 && ((char)(v8 - 0 >> 63) || v119 + 1 == 0 || g_612379 != 0) && ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>) || (char)(v8 - 0 >> 63) || g_612379 != 0 || ((unsigned short)v30 & 0xf000) != 0x8000) && (unsigned int)v125 == 0)\n                            {\n                                v26 += (unsigned int)sub_404a20();\n                                v6 = 1;\n                            }\n                        }\n                        else\n                        {\n                            v110 = (unsigned int)sub_409510();\n                            error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c497, 0x5));\n                        }\n                    }\n                    if (g_612384 != 0)\n                    {\n                        v97->field_3c = (unsigned int)(char)v6 - 1;\n                        v172 = __fxstat(0x1, v4, (unsigned int)&v28);\n                        if (v172 >= 0)\n                        {\n                            if (((v30 & 0xf000) - 0x1000 & -0x2000) != 0 && ((unsigned short)v30 & 0xb000) != 0x8000)\n                            {\n                                v97->field_36 = 0;\n                                v97->field_3c = -1;\n                                v97->field_34 = (unsigned int)g_612386 ^ 1;\n                                if ((g_612386 ^ 1) != 0)\n                                {\n                                    v180 = dcgettext(0x0, 0x40c2bc, 0x5);\n                                }\n                                sub_4047e0();\n                                v182 = (unsigned int)sub_4095e0();\n                                error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40d420, 0x5));\n                            }\n                            if ((char)v6 != 0 && (((v30 & 0xf000) - 0x1000 & -0x2000) == 0 || ((unsigned short)v30 & 0xb000) == 0x8000))\n                            {\n                                v97->field_30 = v30;\n                                v97->field_34 = 0;\n                                v97->field_38 = v4;\n                                v97->field_8 = v26;\n                                v97->field_40 = (v9 == 0? v17 : 1);\n                                v97->field_10 = v34;\n                                v97->field_58 = 0;\n                                *((unsigned long long *)&v97->field_18) = v35;\n                                v97->field_20 = v28;\n                                v97->field_28 = v29;\n                                sub_4047e0();\n                                v97->field_35 = sub_405090();\n                            }\n                        }\n                        else\n                        {\n                            v175 = __errno_location();\n                            v97->field_3c = *(v175);\n                            sub_4047e0();\n                            v179 = (unsigned int)sub_409510();\n                            error(0x0, *(v175), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                        }\n                        if ((char)v6 == 0 || v172 < 0 || ((v30 & 0xf000) - 0x1000 & -0x2000) != 0 && ((unsigned short)v30 & 0xb000) != 0x8000)\n                        {\n                            v97->field_34 = (unsigned int)g_612386 ^ 1;\n                            sub_4047e0();\n                            sub_404820();\n                            v97->field_38 = -1;\n                            v6 = 0;\n                        }\n                    }\n                    else if (v9 != 0)\n                    {\n                        if (close(v4) != 0)\n                        {\n                            sub_4047e0();\n                            v177 = (unsigned int)sub_409510();\n                            error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                            v6 = 0;\n                        }\n                    }\n                }\n                v97 = &v97[1];\n                v20 &= (char)v6;\n            }\n            while (v12 != v97);\n            v11 = g_612384;\n        }\n        if (g_612384 != 0 && (v90 == 0 || g_6122a8 != 1))\n        {\n            v185 = v13;\n            v186 = 0;\n            do\n            {\n                v187 = strcmp(v185->field_0, \"-\");\n                if (v187 == 0 && v185->field_34 == 0 && v185->field_38 >= 0)\n                {\n                    if (((unsigned short)v185->field_30 & 0xf000) != 0x1000)\n                    {\n                        v188 = sub_40b5b0();\n                    }\n                    if (((unsigned short)v185->field_30 & 0xf000) == 0x1000 || v188 != 0)\n                    {\n                        v185->field_38 = -1;\n                        v185->field_34 = 1;\n                    }\n                }\n                if (v185->field_38 < 0 || v187 != 0 || v185->field_34 != 0 || v188 == 0 && ((unsigned short)v185->field_30 & 0xf000) != 0x1000)\n                {\n                    v186 += 1;\n                }\n                v185 = &v185[1];\n            }\n            while (v12 != v185);\n            if (v186 != 0)\n            {\n                v189 = __fxstat(0x1, 0x1, (unsigned int)&v26);\n                if (v189 >= 0)\n                {\n                    v190 = 1;\n                    if (((unsigned short)v27 & 0xf000) != 0x1000)\n                    {\n                        v190 = (char)(sub_40b5b0() != 0);\n                    }\n                    *((unsigned long long *)&g_612383) = v190;\n                    g_612383 = g_612383 & 1;\n                    if (g_612378 == 0)\n                    {\n                        v191 = v13;\n                        while (true)\n                        {\n                            if (v191->field_34 == 0)\n                            {\n                                v192 = strcmp(v191->field_0, \"-\");\n                                if (v192 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            v191 = &v191[1];\n                            v193 = 0;\n                            while ((&v13->field_35)[v193] == 0 || *((int *)&((char *)&v13->field_0)[56 + v193]) < 0)\n                            {\n                                v193 += 96;\n                                v194 = v13;\n                                v195 = 0;\n                                while (true)\n                                {\n                                    if (*((int *)&((char *)&v13->field_0)[56 + v195]) >= 0)\n                                    {\n                                        v196 = (&v194->field_35)[v195];\n                                        if ((&v194->field_35)[v195] == 0)\n                                        {\n                                            *((unsigned long long *)&v5) = v196;\n                                            v197 = v13;\n                                            while (true)\n                                            {\n                                                v198 = __lxstat(0x1, v197->field_0, (unsigned int)&v28);\n                                                if (((unsigned short)v30 & 0xf000) == 0xa000 && v198 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                v197 = &v197[1];\n                                                v199 = v13;\n                                                v200 = 0;\n                                                while (true)\n                                                {\n                                                    if (*((int *)&((char *)&v13->field_0)[56 + v200]) >= 0)\n                                                    {\n                                                        v201 = *((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000;\n                                                        if (((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) != 0x8000 && v201 != 0x1000)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    v200 += 96;\n                                                    if (g_6122a8 == 2 && v20 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    v202 = inotify_init();\n                                                    if ((unsigned int)v202 >= 0)\n                                                    {\n                                                        v203 = fflush_unlocked(stdout);\n                                                        if (v203 == 0)\n                                                        {\n                                                            v6 = (unsigned int)sub_407060();\n                                                            if (v6 != 0)\n                                                            {\n                                                                v4 = 0;\n                                                                v204 = 0;\n                                                                v205 = 0;\n                                                                v8 = &v28;\n                                                                v206 = v13;\n                                                                v9 = (g_6122a8 != 1? 2 : 3078);\n                                                                while (true)\n                                                                {\n                                                                    if (v206->field_34 == 0)\n                                                                    {\n                                                                        v207 = v206->field_0;\n                                                                        v208 = -1;\n                                                                        v209 = v206->field_0;\n                                                                        while (v208 != 0)\n                                                                        {\n                                                                            v208 -= 1;\n                                                                            v210 = *(v209);\n                                                                            v209 = &v209[v89];\n                                                                            break;\n                                                                        }\n                                                                        v206->field_44 = -1;\n                                                                        v205 = (0 < !(rcx<8>) - 1? !(rcx<8>) - 1 : 0);\n                                                                        if (g_6122a8 == 1)\n                                                                        {\n                                                                            v211 = (unsigned long long)(unsigned int)sub_406630();\n                                                                            v14 = v100;\n                                                                            v7 = *((char *)(v207 + v211));\n                                                                            v206->field_50 = (unsigned int)sub_4066f0() + -0x1 * v207;\n                                                                            *(v14) = 0;\n                                                                            v213 = \".\";\n                                                                            if (v211 != 0)\n                                                                            {\n                                                                                v213 = v206->field_0;\n                                                                            }\n                                                                            v206->field_48 = inotify_add_watch(v202, v213, 0x784);\n                                                                            v211[v206->field_0] = v7;\n                                                                            if (v206->field_48 < 0)\n                                                                            {\n                                                                                v218 = __errno_location();\n                                                                                if (*(v218) != 28)\n                                                                                {\n                                                                                    v220 = (unsigned int)sub_409510();\n                                                                                    error(0x0, *(v218), (unsigned long long)dcgettext(0x0, 0x40d450, 0x5));\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        if (g_6122a8 != 1 || v206->field_48 >= 0)\n                                                                        {\n                                                                            v214 = inotify_add_watch(v202, v206->field_0, v9);\n                                                                            *((unsigned long long *)&v206->field_44) = v214;\n                                                                            if (v214 < 0)\n                                                                            {\n                                                                                v204 = (unsigned int)(v206->field_38 != -1? (unsigned int)v11 : 0);\n                                                                                v216 = __errno_location();\n                                                                                v217 = *(v216);\n                                                                                if ((v217 & -17) != 12 && v217 != v206->field_3c)\n                                                                                {\n                                                                                    v7 = (unsigned int)sub_409510();\n                                                                                    error(0x0, *(v216), (unsigned long long)dcgettext(0x0, 0x40c4c7, 0x5));\n                                                                                }\n                                                                            }\n                                                                            else\n                                                                            {\n                                                                                if (sub_407800() == 0)\n                                                                                {\n                                                                                    break;\n                                                                                }\n                                                                                v4 = v11;\n                                                                            }\n                                                                        }\n                                                                        if (((v217 & -17) == 12 || g_6122a8 == 1) && ((v217 & -17) == 12 || v206->field_48 < 0) && (v214 < 0 || g_6122a8 == 1) && (v214 < 0 || v206->field_48 < 0) && (*(v218) == 28 || g_6122a8 != 1 || v206->field_48 >= 0))\n                                                                        {\n                                                                            error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c4ab, 0x5));\n                                                                        }\n                                                                    }\n                                                                    if (v206->field_34 != 0 || (v217 & -17) != 12 && g_6122a8 != 1 || (v217 & -17) != 12 && v206->field_48 >= 0 || v214 >= 0 && g_6122a8 != 1 || v214 >= 0 && v206->field_48 >= 0)\n                                                                    {\n                                                                        v206 = &v206[1];\n                                                                    }\n                                                                    if (g_6122a8 == 1 && v206->field_48 < 0 && v206->field_34 == 0 && *(v218) != 28 || v206->field_34 == 0 && ((v217 & -17) == 12 || g_6122a8 == 1) && ((v217 & -17) == 12 || v206->field_48 < 0) && (v214 < 0 || g_6122a8 == 1) && (v214 < 0 || v206->field_48 < 0) && (*(v218) == 28 || g_6122a8 != 1 || v206->field_48 >= 0) || g_6122a8 == 2 && v12 == v206 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && v204 != 0)\n                                                                    {\n                                                                        sub_4072a0();\n                                                                        *(__errno_location()) = 0;\n                                                                    }\n                                                                    if (g_6122a8 == 2 && v12 == v206 && v204 == 0 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && v4 != 0 || v12 == v206 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && g_6122a8 != 2)\n                                                                    {\n                                                                        v219 = v13;\n                                                                        v23 = &((struct struct_6 *)((char *)v13 + v16))[-1];\n                                                                        while (true)\n                                                                        {\n                                                                            if (v219->field_34 == 0)\n                                                                            {\n                                                                                if (g_6122a8 == 1)\n                                                                                {\n                                                                                    sub_4056e0();\n                                                                                }\n                                                                                else if (v219->field_38 != -1)\n                                                                                {\n                                                                                    v222 = __xstat(0x1, v219->field_0, (unsigned int)&v28);\n                                                                                    if (v222 == 0 && (v219->field_28 != v29 || v219->field_20 != v28))\n                                                                                    {\n                                                                                        sub_4047e0();\n                                                                                        v227 = (unsigned int)sub_409510();\n                                                                                        v270 = __errno_location();\n                                                                                        error(0x0, *(v270), (unsigned long long)dcgettext(0x0, 0x40c4d7, 0x5));\n                                                                                        sub_4072a0();\n                                                                                        *(v270) = 0;\n                                                                                    }\n                                                                                }\n                                                                                if ((v219->field_28 == v29 || v219->field_38 == -1 || g_6122a8 == 1 || v222 != 0) && (v219->field_20 == v28 || v219->field_38 == -1 || g_6122a8 == 1 || v222 != 0))\n                                                                                {\n                                                                                    sub_404f00();\n                                                                                }\n                                                                            }\n                                                                            if (v219->field_38 == -1 || g_6122a8 == 1 || v222 != 0 || v219->field_34 != 0 || v219->field_28 == v29 && v219->field_20 == v28)\n                                                                            {\n                                                                                v219 = &v219[1];\n                                                                                v8 = v205 + 17;\n                                                                                v14 = 3;\n                                                                                v7 = (unsigned long long)(unsigned int)sub_409dd0();\n                                                                                v225 = 1 << ((char)v202 & 63);\n                                                                                v4 = v202;\n                                                                                while (true)\n                                                                                {\n                                                                                    if (g_612386 == 0)\n                                                                                    {\n                                                                                        v228 = sub_406bd0();\n                                                                                        if (v228 == 0)\n                                                                                        {\n                                                                                            error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c4e7, 0x5));\n                                                                                        }\n                                                                                    }\n                                                                                    while (true)\n                                                                                    {\n                                                                                        if (g_61237c != 0)\n                                                                                        {\n                                                                                            if (v5 == 0)\n                                                                                            {\n                                                                                                v229 = kill();\n                                                                                                if (v229 != 0)\n                                                                                                {\n                                                                                                    v230 = __errno_location();\n                                                                                                    if (*(v230) != 1)\n                                                                                                    {\n                                                                                                        v25 = 0;\n                                                                                                        v24 = 0;\n                                                                                                        v5 = v11;\n                                                                                                    }\n                                                                                                }\n                                                                                                if (v229 == 0 || *(v230) == 1)\n                                                                                                {\n                                                                                                    v231 = 0;\n                                                                                                    v232 = v10;\n                                                                                                    v233 = 0;\n                                                                                                    v234 = v10;\n                                                                                                    v24 = v10;\n                                                                                                    v236 = 0;\n                                                                                                    v237 = 0x412e848000000000;\n                                                                                                    v238 = xmm0<16> * (xmm3<16> - xmm0<16>);\n                                                                                                    v25 = v238;\n                                                                                                }\n                                                                                            }\n                                                                                            else\n                                                                                            {\n                                                                                                exit(0x0); /* do not return */\n                                                                                            }\n                                                                                        }\n                                                                                        if (v5 == 0 || g_61237c == 0)\n                                                                                        {\n                                                                                            v239 = 16;\n                                                                                            for (v240 = &v28; v239 != 0; v240 = &v29)\n                                                                                            {\n                                                                                                v239 -= 1;\n                                                                                                v28 = 0;\n                                                                                            }\n                                                                                            *((unsigned long long *)&((char *)stack_base)[8 * (unsigned long long)__fdelt_chk(v4) + -200]) = *((long long *)&((char *)stack_base)[8 * (unsigned long long)__fdelt_chk(v4) + -200]) | v225;\n                                                                                            if (g_612383 != 0)\n                                                                                            {\n                                                                                                v28 |= 2;\n                                                                                            }\n                                                                                            v241 = select(((char)[D] amd64g_calculate_condition(0xf<64>, 0x13<64>, r13<8>, 0x0<64>, cc_ndep<8>)? (unsigned int)v202 : 1) + 1, &v28, NULL, NULL, (g_61237c != 0? &v24 : 0));\n                                                                                            if (v101 != 0)\n                                                                                            {\n                                                                                                v101 = v241;\n                                                                                                if ((char)(v241 + 1 == 0))\n                                                                                                {\n                                                                                                    error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d478, 0x5));\n                                                                                                }\n                                                                                                else if (((char)v28 & 2) != 0)\n                                                                                                {\n                                                                                                    raise(0xd);\n                                                                                                }\n                                                                                                else\n                                                                                                {\n                                                                                                    v243 = sub_409780();\n                                                                                                    if (v243 != -1 && v243 != 0)\n                                                                                                    {\n                                                                                                        v245 = v7[3];\n                                                                                                        v246 = v7[1];\n                                                                                                        *((unsigned int **)&v15[0]) = v7;\n                                                                                                        v247 = *(v7);\n                                                                                                        v248 = 0 + (unsigned long long)v7[3] + 16;\n                                                                                                        if (v245 == 0 && ((unsigned short)v7[1] & 0x400) != 0)\n                                                                                                        {\n                                                                                                            v249 = 0;\n                                                                                                            while (true)\n                                                                                                            {\n                                                                                                                if (v13[v249].field_48 != v33)\n                                                                                                                {\n                                                                                                                    v249 += 1;\n                                                                                                                    if (v3 == v249)\n                                                                                                                    {\n                                                                                                                        break;\n                                                                                                                    }\n                                                                                                                }\n                                                                                                                else\n                                                                                                                {\n                                                                                                                    sub_4072a0();\n                                                                                                                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40d4a8, 0x5));\n                                                                                                                    *(__errno_location()) = 0;\n                                                                                                                }\n                                                                                                            }\n                                                                                                            if (v13[v249].field_48 != v33)\n                                                                                                            {\n                                                                                                                v33 = v247;\n                                                                                                                v254 = (unsigned long long)(unsigned int)sub_406df0();\n                                                                                                            }\n                                                                                                            else if (v13[v249].field_48 == v33)\n                                                                                                            {\n                                                                                                                error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                                                                v273 = v13;\n                                                                                                            }\n                                                                                                        }\n                                                                                                        if (v245 != 0)\n                                                                                                        {\n                                                                                                            v17 = v248;\n                                                                                                            v18 = &v28;\n                                                                                                            v250 = 0;\n                                                                                                            v251 = v202;\n                                                                                                            v252 = v13;\n                                                                                                            v19 = &v15[2];\n                                                                                                            while (true)\n                                                                                                            {\n                                                                                                                if (v252->field_48 == v33)\n                                                                                                                {\n                                                                                                                    v21 = v246;\n                                                                                                                    v253 = strcmp(v19, v252->field_50 + v252->field_0);\n                                                                                                                    v246 = v21;\n                                                                                                                    if (v253 == 0)\n                                                                                                                    {\n                                                                                                                        v202 = v251;\n                                                                                                                        v254 = &v13[v250];\n                                                                                                                        if (((unsigned short)v246 & 0x200) != 0)\n                                                                                                                        {\n                                                                                                                            if (g_6122a8 != 1)\n                                                                                                                            {\n                                                                                                                                break;\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                        else\n                                                                                                                        {\n                                                                                                                            v17 = inotify_add_watch(v202, v254->field_0, v9);\n                                                                                                                            if (v17 < 0)\n                                                                                                                            {\n                                                                                                                                if ((*(v19) & -17) != 12)\n                                                                                                                                {\n                                                                                                                                    v19 = __errno_location();\n                                                                                                                                    v18 = (unsigned int)sub_409510();\n                                                                                                                                    error(0x0, *(v19), (unsigned long long)dcgettext(0x0, 0x40c4c7, 0x5));\n                                                                                                                                }\n                                                                                                                                else\n                                                                                                                                {\n                                                                                                                                    v4 = v19;\n                                                                                                                                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c4ab, 0x5));\n                                                                                                                                    sub_4072a0();\n                                                                                                                                    *(v4) = 0;\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                            if ((*(v19) & -17) != 12 || v17 >= 0)\n                                                                                                                            {\n                                                                                                                                v256 = v254->field_44;\n                                                                                                                                if (v254->field_44 < 0 || v17 != (unsigned int)v256)\n                                                                                                                                {\n                                                                                                                                    if ((unsigned int)v256 >= 0)\n                                                                                                                                    {\n                                                                                                                                        inotify_rm_watch(v202, v256);\n                                                                                                                                        sub_407840();\n                                                                                                                                    }\n                                                                                                                                    v254->field_44 = v17;\n                                                                                                                                    if ((char)(v17 + 1 == 0))\n                                                                                                                                    {\n                                                                                                                                        break;\n                                                                                                                                    }\n                                                                                                                                    v258 = (unsigned long long)(unsigned int)sub_407840();\n                                                                                                                                    if (v254 != v258 && v258 != 0)\n                                                                                                                                    {\n                                                                                                                                        if (g_6122a8 == 1)\n                                                                                                                                        {\n                                                                                                                                            v17 = v258;\n                                                                                                                                            sub_4056e0();\n                                                                                                                                            v258 = v17;\n                                                                                                                                        }\n                                                                                                                                        v258->field_44 = -1;\n                                                                                                                                        v17 = v258;\n                                                                                                                                        sub_4047e0();\n                                                                                                                                        sub_404820();\n                                                                                                                                    }\n                                                                                                                                    v262 = sub_407800();\n                                                                                                                                    if (v262 == 0)\n                                                                                                                                    {\n                                                                                                                                        break;\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                                if (g_6122a8 != 1)\n                                                                                                                                {\n                                                                                                                                    break;\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                        if (g_6122a8 == 1 && (((unsigned short)v246 & 0x200) != 0 || (*(v19) & -17) != 12 || v17 >= 0))\n                                                                                                                        {\n                                                                                                                            sub_4056e0();\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                                if (v252->field_48 != v33 || v253 != 0)\n                                                                                                                {\n                                                                                                                    v250 += 1;\n                                                                                                                    v252 = &v252[1];\n                                                                                                                }\n                                                                                                            }\n                                                                                                            if (((unsigned short)v246 & 0x200) == 0 && v252->field_48 == v33 && v253 == 0 && (v254->field_44 < 0 || v17 != (unsigned int)v256) && ((*(v19) & -17) != 12 || v17 >= 0) && !((char)(v17 + 1 == 0)) && v258 != 0 && v254 != v258 && g_6122a8 != 1 || ((unsigned short)v246 & 0x200) == 0 && v252->field_48 == v33 && v253 == 0 && (v254->field_44 < 0 || v17 != (unsigned int)v256) && ((*(v19) & -17) != 12 || v17 >= 0) && !((char)(v17 + 1 == 0)) && v258 != 0 && v254 != v258 && g_6122a8 == 1 || ((unsigned short)v246 & 0x200) == 0 && v252->field_48 == v33 && v253 == 0 && (v254->field_44 < 0 || v17 != (unsigned int)v256) && ((*(v19) & -17) != 12 || v17 >= 0) && !((char)(v17 + 1 == 0)) && v258 == 0 || ((unsigned short)v246 & 0x200) == 0 && v252->field_48 == v33 && v253 == 0 && (v254->field_44 < 0 || v17 != (unsigned int)v256) && ((*(v19) & -17) != 12 || v17 >= 0) && !((char)(v17 + 1 == 0)) && v258 != 0 && v254 == v258)\n                                                                                                            {\n                                                                                                                sub_40a020(); /* do not return */\n                                                                                                            }\n                                                                                                            else if (((unsigned short)v246 & 0x200) == 0 && (*(v19) & -17) == 12 && v252->field_48 == v33 && v17 < 0 && v253 == 0)\n                                                                                                            {\n                                                                                                                error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                                                                v273 = v13;\n                                                                                                            }\n                                                                                                            else if (...)\n                                                                                                            {\n                                                                                                                if (v254 == 0)\n                                                                                                                {\n                                                                                                                    break;\n                                                                                                                }\n                                                                                                            }\n                                                                                                            else if (...)\n                                                                                                            {\n                                                                                                                v264 = v15[1];\n                                                                                                            }\n                                                                                                        }\n                                                                                                        else\n                                                                                                        {\n                                                                                                            v33 = v247;\n                                                                                                            v254 = (unsigned long long)(unsigned int)sub_406df0();\n                                                                                                        }\n                                                                                                        v264 = v15[1];\n                                                                                                        if (((unsigned short)v15[1] & 3588) != 0)\n                                                                                                        {\n                                                                                                            if ((v264 & 4) != 0)\n                                                                                                            {\n                                                                                                                inotify_rm_watch(v202, v254->field_44);\n                                                                                                                sub_407840();\n                                                                                                            }\n                                                                                                            sub_4056e0();\n                                                                                                        }\n                                                                                                        else\n                                                                                                        {\n                                                                                                            sub_404f00();\n                                                                                                        }\n                                                                                                    }\n                                                                                                    if (v243 == -1)\n                                                                                                    {\n                                                                                                        v244 = __errno_location();\n                                                                                                    }\n                                                                                                    if (v14 != 0 && (v243 == -1 || v243 == 0) && (v243 == 0 || *(v244) == 22))\n                                                                                                    {\n                                                                                                        v14 -= 1;\n                                                                                                        v8 *= 2;\n                                                                                                        v7 = (unsigned int)sub_409e30();\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                        if (v243 == -1 && ((char)v28 & 2) == 0 && !((char)(v241 + 1 == 0)) && v243 != 0 && v101 != 0 && *(v244) != 22 && (v5 == 0 || g_61237c == 0) || ((char)v28 & 2) == 0 && v14 == 0 && !((char)(v241 + 1 == 0)) && v101 != 0 && (v5 == 0 || g_61237c == 0) && (v243 == -1 || v243 == 0) && (v243 == 0 || *(v244) == 22))\n                                                                                        {\n                                                                                            error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c4fa, 0x5));\n                                                                                        }\n                                                                                    }\n                                                                                    if (((char)v28 & 2) == 0 && !((char)(v241 + 1 == 0)) && v243 != -1 && v243 != 0 && v245 != 0)\n                                                                                    {\n                                                                                        sub_40a020(); /* do not return */\n                                                                                    }\n                                                                                    else if (((char)v28 & 2) == 0 && !((char)(v241 + 1 == 0)) && v243 != -1 && v243 != 0 && (v245 != 0 || ((unsigned short)v7[1] & 0x400) != 0))\n                                                                                    {\n                                                                                        error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                                        v273 = v13;\n                                                                                    }\n                                                                                }\n                                                                                if (g_612386 != 0 || g_6122a8 != 1 || v228 != 0)\n                                                                                {\n                                                                                    sub_40a020(); /* do not return */\n                                                                                }\n                                                                                else if (g_612386 != 0 || g_6122a8 != 1 || v228 != 0)\n                                                                                {\n                                                                                    error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                                    v273 = v13;\n                                                                                }\n                                                                                else if (g_612386 == 0 && g_6122a8 == 1 && v228 == 0)\n                                                                                {\n                                                                                    v94 = 1;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        if (v12 == v219)\n                                                                        {\n                                                                            sub_40a020(); /* do not return */\n                                                                        }\n                                                                        else if (v12 == v219 || v222 == 0 && v219->field_28 != v29 || v222 == 0 && v219->field_20 != v28)\n                                                                        {\n                                                                            error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                            v273 = v13;\n                                                                        }\n                                                                        else if (v12 == v219)\n                                                                        {\n                                                                            v94 = 1;\n                                                                        }\n                                                                    }\n                                                                    if (g_6122a8 == 2 && v12 == v206 && v204 == 0 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && v4 == 0 || g_6122a8 == 2 && v12 == v206 && v204 == 0 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && v4 != 0 || v12 == v206 && ((v217 & -17) != 12 || v214 >= 0 || v206->field_34 != 0) && (g_6122a8 != 1 || v206->field_48 >= 0 || v206->field_34 != 0) && g_6122a8 != 2)\n                                                                    {\n                                                                        v94 = 1;\n                                                                    }\n                                                                }\n                                                                if ((v12 == v206 || v206->field_34 == 0) && (v12 == v206 || v214 >= 0) && (v204 == 0 || v206->field_34 == 0 || g_6122a8 != 2) && (v12 == v206 || g_6122a8 != 1 || v206->field_48 >= 0) && (v204 == 0 || g_6122a8 != 2 || v214 >= 0) && (v206->field_34 == 0 || v4 != 0 || g_6122a8 != 2) && (v4 != 0 || g_6122a8 != 2 || v214 >= 0) && (v204 == 0 || g_6122a8 != 2 || g_6122a8 != 1 || v206->field_48 >= 0) && (v4 != 0 || g_6122a8 != 2 || g_6122a8 != 1 || v206->field_48 >= 0))\n                                                                {\n                                                                    sub_40a020(); /* do not return */\n                                                                }\n                                                                else if (v12 == v206 && (v204 == 0 || g_6122a8 != 2) && (v4 != 0 || g_6122a8 != 2) || g_6122a8 == 1 && v206->field_48 < 0 && v206->field_34 == 0 && *(v218) != 28 || v206->field_34 == 0 && ((v217 & -17) == 12 || g_6122a8 == 1) && ((v217 & -17) == 12 || v206->field_48 < 0) && (v214 < 0 || g_6122a8 == 1) && (v214 < 0 || v206->field_48 < 0) && (*(v218) == 28 || g_6122a8 != 1 || v206->field_48 >= 0) || g_6122a8 == 2 && v12 == v206 && v204 != 0)\n                                                                {\n                                                                    error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                                    v273 = v13;\n                                                                }\n                                                                else if (v12 == v206 && (v204 == 0 || g_6122a8 != 2))\n                                                                {\n                                                                    return v94;\n                                                                }\n                                                            }\n                                                            sub_40a020(); /* do not return */\n                                                        }\n                                                        error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c276, 0x5));\n                                                    }\n                                                    if ((unsigned int)v202 < 0 || v203 == 0 && v6 != 0)\n                                                    {\n                                                        error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40d4d8, 0x5));\n                                                        v273 = v13;\n                                                        do\n                                                        {\n                                                            v274 = v273->field_44;\n                                                            if (v273->field_44 != -1)\n                                                            {\n                                                                inotify_rm_watch(v202, v274);\n                                                            }\n                                                            v275 = v273->field_48;\n                                                            if (v273->field_48 != -1)\n                                                            {\n                                                                inotify_rm_watch(v202, v275);\n                                                            }\n                                                            v273 = &v273[1];\n                                                        }\n                                                        while (v12 != v273);\n                                                    }\n                                                }\n                                                if (*((int *)&((char *)&v13->field_0)[56 + v200]) >= 0 && ((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) != 0x8000 || v16 == v200 && (unsigned int)v202 >= 0 && (*((int *)&((char *)&v13->field_0)[56 + v200]) < 0 || ((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) == 0x8000 || v201 == 0x1000) && (g_6122a8 != 2 || v20 != 0) && v203 == 0 && v6 != 0 || v16 == v200 && (*((int *)&((char *)&v13->field_0)[56 + v200]) < 0 || ((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) == 0x8000 || v201 == 0x1000) && (g_6122a8 != 2 || v20 != 0) && (unsigned int)v202 < 0 || v16 == v200 && v20 == 0 && (*((int *)&((char *)&v13->field_0)[56 + v200]) < 0 || ((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) == 0x8000 || v201 == 0x1000))\n                                                {\n                                                    g_612378 = 1;\n                                                }\n                                                else if (v16 == v200 && (unsigned int)v202 >= 0 && (*((int *)&((char *)&v13->field_0)[56 + v200]) < 0 || ((unsigned short)*((int *)&((char *)&v199->field_0)[48 + v200]) & 0xf000) == 0x8000 || v201 == 0x1000) && (g_6122a8 != 2 || v20 != 0) && v203 == 0 && v6 != 0)\n                                                {\n                                                    return v94;\n                                                }\n                                            }\n                                            if (v198 == 0 || v12 == v197)\n                                            {\n                                                g_612378 = 1;\n                                            }\n                                            else if (v12 == v197 && (((unsigned short)v30 & 0xf000) != 0xa000 || v198 != 0))\n                                            {\n                                                return v94;\n                                            }\n                                        }\n                                    }\n                                    if (*((int *)&((char *)&v13->field_0)[56 + v195]) < 0 || (&v194->field_35)[v195] != 0)\n                                    {\n                                        v195 += 96;\n                                        if (v16 == v195)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (true)\n                                {\n                                    g_612378 = 1;\n                                }\n                                else if ((&v194->field_35)[v195] == 0 && *((int *)&((char *)&v13->field_0)[56 + v195]) >= 0)\n                                {\n                                    return v94;\n                                }\n                            }\n                            if (v16 == v193 || *((int *)&((char *)&v13->field_0)[56 + v193]) >= 0)\n                            {\n                                g_612378 = 1;\n                            }\n                            else if (v16 == v193 && ((&v13->field_35)[v193] == 0 || *((int *)&((char *)&v13->field_0)[56 + v193]) < 0))\n                            {\n                                return v94;\n                            }\n                        }\n                        if (v191->field_34 == 0 || v12 == v191)\n                        {\n                            g_612378 = 1;\n                        }\n                        else if (v12 == v191 && (v192 != 0 || v191->field_34 != 0))\n                        {\n                            return v94;\n                        }\n                    }\n                    g_612378 = 1;\n                    if (g_6122a8 == 2 && v3 == 1)\n                    {\n                        v276 = v13;\n                        if (v13->field_38 != -1)\n                        {\n                            v277 = 0;\n                            v4 = v276->field_30;\n                            v277 = (char)((v276->field_30 & 0xf000) != 0x8000);\n                        }\n                    }\n                    v277 = 0;\n                    v9 = 0;\n                    v7 = (unsigned int)v277 & 1;\n                    v5 = v3 - 1;\n                    v6 = &(struct struct_6 *)((char *)v13 + v16)->field_34;\n                    while (true)\n                    {\n                        v279 = v13;\n                        v4 = 0;\n                        v280 = 0;\n                        while (true)\n                        {\n                            if (v279->field_34 == 0)\n                            {\n                                v281 = v279->field_38;\n                                if (v279->field_38 >= 0)\n                                {\n                                    v283 = v279->field_30;\n                                    v277 = v279->field_40;\n                                    if ((unsigned int)v277 != v279->field_40)\n                                    {\n                                        v285 = sub_40a6a0();\n                                        if ((unsigned int)v277 == 0 && (unsigned int)v285 >= 0)\n                                        {\n                                            v286 = v285;\n                                            v287 = (char)v285 % 0x100 | 8;\n                                            if ((unsigned int)v285 != rdx<4>)\n                                            {\n                                                v288 = sub_40a6a0();\n                                            }\n                                        }\n                                        if ((unsigned int)v285 < 0 || v288 == -1 && (unsigned int)v277 == 0 && (unsigned int)v285 != rdx<4>)\n                                        {\n                                            v277 = __errno_location();\n                                            if (((unsigned short)v279->field_30 & 0xf000) == 0x8000 && *((int *)v3) == 1)\n                                            {\n                                                v277 = v279->field_40;\n                                            }\n                                        }\n                                        if ((unsigned int)v285 >= 0 && ((unsigned int)v285 == rdx<4> || v288 != -1 || (unsigned int)v277 != 0))\n                                        {\n                                            v279->field_40 = v277;\n                                            v277 = v277;\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    v280 += 1;\n                                    v279 = &v279[1];\n                                    sub_4056e0();\n                                }\n                            }\n                            if (v279->field_34 == 0 && ((unsigned short)v279->field_30 & 0xf000) == 0x8000 && (unsigned int)v277 != v279->field_40 && v279->field_38 >= 0 && (v288 == -1 || (unsigned int)v285 < 0) && ((unsigned int)v277 == 0 || (unsigned int)v285 < 0) && ((unsigned int)v285 < 0 || (unsigned int)v285 != rdx<4>) && *((int *)v3) != 1 || v279->field_34 == 0 && (unsigned int)v277 != v279->field_40 && v279->field_38 >= 0 && (v288 == -1 || (unsigned int)v285 < 0) && ((unsigned int)v277 == 0 || (unsigned int)v285 < 0) && ((unsigned int)v285 < 0 || (unsigned int)v285 != rdx<4>) && ((unsigned short)v279->field_30 & 0xf000) != 0x8000)\n                            {\n                                v3 = v277;\n                                v309 = (unsigned int)sub_4095e0();\n                                error(0x1, *((int *)v3), (unsigned long long)dcgettext(0x0, 0x40d508, 0x5));\n                            }\n                            if (v279->field_34 == 0 && ((unsigned short)v279->field_30 & 0xf000) == 0x8000 && (unsigned int)v277 != v279->field_40 && v279->field_38 >= 0 && (v288 == -1 || (unsigned int)v285 < 0) && ((unsigned int)v277 == 0 || (unsigned int)v285 < 0) && ((unsigned int)v285 < 0 || (unsigned int)v285 != rdx<4>) && *((int *)v3) == 1 || v279->field_34 == 0 && (unsigned int)v277 != v279->field_40 && (unsigned int)v285 >= 0 && v279->field_38 >= 0 && ((unsigned int)v285 == rdx<4> || v288 != -1 || (unsigned int)v277 != 0) || v279->field_34 == 0 && v279->field_38 >= 0 && (unsigned int)v277 == v279->field_40)\n                            {\n                                if (v277 == 0)\n                                {\n                                    v289 = __fxstat(0x1, v281, (unsigned int)&v28);\n                                    if (v289 != 0)\n                                    {\n                                        v279->field_38 = -1;\n                                        v292 = __errno_location();\n                                        v279->field_3c = *(v292);\n                                        sub_4095e0();\n                                        error(0x0, *(v292), \"%s\");\n                                        close(v281);\n                                    }\n                                    else if (v279->field_30 != v30)\n                                    {\n                                        v290 = v34;\n                                        v291 = v35;\n                                    }\n                                    else\n                                    {\n                                        v290 = v34;\n                                        if (((unsigned short)v30 & 0xf000) == 0x8000 && v279->field_8 != v31)\n                                        {\n                                            v291 = v35;\n                                        }\n                                        if (v279->field_8 == v31 || ((unsigned short)v30 & 0xf000) != 0x8000)\n                                        {\n                                            v291 = v35;\n                                            if (v279->field_10 == v34 && *((int *)&v279->field_18) == (unsigned int)v35)\n                                            {\n                                                v295 = v279->field_58;\n                                                v279->field_58 = v279->field_58 + 1;\n                                                if (g_6122a8 == 1 && v295 >= g_6122a0)\n                                                {\n                                                    sub_4056e0();\n                                                    v279->field_58 = 0;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                if (((unsigned short)v30 & 0xf000) == 0x8000 && v279->field_30 == v30 && v289 == 0 && v277 == 0 && v279->field_8 != v31 || v279->field_10 == v34 && v279->field_30 == v30 && v289 == 0 && v277 == 0 && (v279->field_8 == v31 || ((unsigned short)v30 & 0xf000) != 0x8000) && *((int *)&v279->field_18) != (unsigned int)v35 || v279->field_30 == v30 && v289 == 0 && v277 == 0 && (v279->field_8 == v31 || ((unsigned short)v30 & 0xf000) != 0x8000) && v279->field_10 != v34 || v289 == 0 && v277 == 0 && v279->field_30 != v30)\n                                {\n                                    v279->field_10 = v290;\n                                    *((unsigned long long *)&v279->field_18) = v291;\n                                    v279->field_30 = v30;\n                                    v279->field_58 = 0;\n                                    if (v31 < v279->field_8 && (v283 & 0xf000) == 0x8000)\n                                    {\n                                        v8 = (unsigned int)sub_4095e0();\n                                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c263, 0x5));\n                                        sub_404c20();\n                                        v279->field_8 = 0;\n                                    }\n                                    if (v280 != v5)\n                                    {\n                                        v5 = v280;\n                                        if (g_612381 != 0)\n                                        {\n                                            __printf_chk(0x1, \"%s==> %s <==\\n\", (unsigned int)(g_612290 != 0? &g_40ee9c : \"\\n\"), sub_4047e0());\n                                            g_612290 = 0;\n                                            v5 = v280;\n                                        }\n                                    }\n                                }\n                                if ((((unsigned short)v30 & 0xf000) == 0x8000 && v279->field_30 == v30 && v289 == 0 && v277 == 0 && v279->field_8 != v31 || v279->field_10 == v34 && v279->field_30 == v30 && v289 == 0 && v277 == 0 && (v279->field_8 == v31 || ((unsigned short)v30 & 0xf000) != 0x8000) && *((int *)&v279->field_18) != (unsigned int)v35 || v279->field_30 == v30 && v289 == 0 && v277 == 0 && (v279->field_8 == v31 || ((unsigned short)v30 & 0xf000) != 0x8000) && v279->field_10 != v34 || v289 == 0 && v277 == 0 && v279->field_30 != v30) && v279->field_35 == 0 || v277 != 0)\n                                {\n                                    v300 = sub_404a20();\n                                    v279->field_8 = v279->field_8 + v300;\n                                    v4 |= v300 != 0;\n                                }\n                            }\n                            if (v279->field_38 >= 0 || ((unsigned short)v279->field_30 & 0xf000) == 0x8000 || *((int *)v3) == 1)\n                            {\n                                v280 += 1;\n                                v279 = &v279[1];\n                            }\n                            if (...)\n                            {\n                                if (g_612386 == 0 || g_6122a8 != 1)\n                                {\n                                    v301 = &v13->field_34;\n                                    while (v301->field_4 < 0 && (v301->field_0 == 1 || g_612386 == 0))\n                                    {\n                                        v301 = &v301[12];\n                                        error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c4e7, 0x5));\n                                    }\n                                }\n                                if (g_612383 == 0 && v7 == 0 && v4 == 1)\n                                {\n                                    break;\n                                }\n                                if (v7 != 0 || v4 != 1)\n                                {\n                                    v302 = fflush_unlocked(stdout);\n                                    if (v302 != 0)\n                                    {\n                                        error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c276, 0x5));\n                                    }\n                                }\n                                if (g_612383 != 0 && (v302 == 0 || v7 == 0) && (v302 == 0 || v4 == 1))\n                                {\n                                    v303 = 16;\n                                    v25 = 0;\n                                    v304 = &v28;\n                                    for (v24 = 0; v303 != 0; v304 = &v29)\n                                    {\n                                        v303 -= 1;\n                                        v28 = 0;\n                                    }\n                                    v28 |= 2;\n                                    v305 = select(0x2, &v28, NULL, NULL, &v24);\n                                    if (v305 == 1)\n                                    {\n                                        raise(0xd);\n                                    }\n                                }\n                                if (v302 == 0 && v7 != 0 || v302 == 0 && v4 != 1 || v7 == 0 && v4 == 1 && g_612383 != 0)\n                                {\n                                    if (v4 != 0 || v9 != 0)\n                                    {\n                                        break;\n                                    }\n                                    if (g_61237c != 0)\n                                    {\n                                        v306 = kill();\n                                        if (v306 != 0)\n                                        {\n                                            v307 = __errno_location();\n                                            if (*(v307) != 1)\n                                            {\n                                                v9 = v11;\n                                            }\n                                        }\n                                    }\n                                    if (v306 == 0 || g_61237c == 0 || *(v307) == 1)\n                                    {\n                                        if (sub_40a160() == 0)\n                                        {\n                                            break;\n                                        }\n                                        error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c516, 0x5));\n                                    }\n                                }\n                            }\n                        }\n                        if (...)\n                        {\n                            v279 = v13;\n                            v4 = 0;\n                            v280 = 0;\n                        }\n                    }\n                }\n                else\n                {\n                    error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c206, 0x5));\n                }\n            }\n        }\n        if (v186 == 0 && v90 == 0 && g_612384 != 0 || g_612384 == 0 && v90 == 0 && v22 != 0 || g_612384 == 0 && v90 == 0 && g_612382 != 0 || v186 == 0 && g_6122a8 != 1 && g_612384 != 0 || g_612384 == 0 && v22 != 0 && g_6122a8 != 1 || g_612384 == 0 && g_6122a8 != 1 && g_612382 != 0 || v90 == 0 && g_612384 != 0 && v189 >= 0 || g_6122a8 != 1 && g_612384 != 0 && v189 >= 0)\n        {\n            v94 = (unsigned int)v20 ^ 1;\n        }\n        if (close(0x0) < 0 && (v90 == 0 || g_6122a8 != 1) && (v186 == 0 || g_612384 == 0 || v189 >= 0) && (v22 != 0 || g_612384 != 0 || g_612382 != 0))\n        {\n            error(0x1, *(__errno_location()), \"-\");\n        }\n        if (v186 == 0 && v90 == 0 || g_612384 == 0 && v90 == 0 || v186 == 0 && g_6122a8 != 1 || g_612384 == 0 && g_6122a8 != 1 || v90 == 0 && v189 >= 0 || g_6122a8 != 1 && v189 >= 0)\n        {\n            return v94;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_40a060",
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a123",
            "decompiledFuncCode": "int sub_40a060()\n{\n    unsigned long v0;  // [bp-0x40]\n    unsigned long v1;  // [bp+0x8]\n    unsigned long long v2;  // rax\n    unsigned long v3;  // rdx\n    unsigned int v4;  // ebp\n    unsigned long v5;  // rcx\n    unsigned int *v6;  // r14\n\n    v2 = sub_40a260();\n    if ((unsigned int)v2 == 0)\n    {\n        if (v0 >= v3 && v0 <= v5)\n        {\n            return v0;\n        }\n        if (v0 < v3 || v0 > v5)\n        {\n            v6 = __errno_location();\n            *(v6) = (0 - (unsigned int)(char)(v0 < 0x40000000) & -41) + 75;\n        }\n    }\n    else\n    {\n        v4 = v2;\n        v6 = __errno_location();\n        if (!(v4 != 1))\n        {\n            *(v6) = 75;\n        }\n        else if (v4 == 3)\n        {\n            *(v6) = 0;\n        }\n    }\n    if (v0 < v3 || (unsigned int)v2 != 0 || v0 > v5)\n    {\n        sub_409760();\n        error(((int)v1 == 0? 1 : (int)v1), (*(v6) == 22? 0 : *(v6)), \"%s: %s\");\n    }\n}\n"
        },
        {
            "funcName": "sub_4090b0",
            "funcStartAddr": "0x4090b0",
            "funcEndAddr": "0x4090e4",
            "decompiledFuncCode": "int sub_4090b0()\n{\n    unsigned int v1;  // [bp+0x100008]\n\n    *(__errno_location()) = v1;\n    return sub_409fd0();\n}\n"
        },
        {
            "funcName": "sub_406880",
            "funcStartAddr": "0x406880",
            "funcEndAddr": "0x406887",
            "decompiledFuncCode": "int sub_406880()\n{\n    unsigned long v1;  // rax\n\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_40aee0",
            "funcStartAddr": "0x40aee0",
            "funcEndAddr": "0x40b447",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned int field_0;\n    unsigned int field_4;\n    char padding_8[24];\n    unsigned long long field_20;\n    char padding_28[8];\n    unsigned int field_30;\n} struct_1;\n\ntypedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    unsigned int field_18;\n    char padding_1c[4];\n    unsigned long long field_20;\n    unsigned int field_28;\n    unsigned int field_2c;\n    unsigned int field_30;\n} struct_0;\n\nextern unsigned int g_40ee40;\nextern unsigned int g_40ee81;\n\nint sub_40aee0()\n{\n    struct_1 *|struct_0 * v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x60]\n    unsigned long v4;  // [bp-0x58]\n    unsigned int|char v5;  // [bp-0x4c]\n    char v6[2];  // [bp-0x48]\n    unsigned long long v7;  // [bp-0x40]\n    struct_1 *v8;  // [bp+0x8]\n    unsigned int v9;  // [bp+0x10]\n    unsigned long v10;  // rcx\n    unsigned long v11;  // r8\n    unsigned int v12;  // r13d\n    unsigned long v13;  // rdi\n    unsigned long v14;  // rsi\n    unsigned long v15;  // r12\n    char v16[2];  // rdx\n    unsigned long|unsigned int v17;  // eax\n    unsigned long long v18;  // rax\n    char *|unsigned long long|char [2] v19;  // rdx\n    unsigned long long v20;  // rax\n    unsigned int v22;  // r9d\n    unsigned long long v23;  // rax\n    unsigned long long|unsigned int v24;  // r9d\n    unsigned long v26;  // rax\n    unsigned long|unsigned int v27;  // rdx\n    unsigned long v29;  // rax\n    char v30[2];  // rcx\n    unsigned long v31;  // rsi\n    unsigned long long v32;  // rcx\n    char *v33;  // rdi\n    char v34[3];  // rsi\n    unsigned long long v35;  // cc_dep1\n    unsigned long long v36;  // cc_dep2\n    unsigned long v37;  // d\n    unsigned long long v38;  // cc_dep1\n    unsigned int v39;  // ecx\n    unsigned long long v40;  // rax\n    unsigned long long v41;  // rcx\n    unsigned long long|unsigned int v42;  // rdx\n    unsigned int v44;  // eax\n    unsigned long long v45;  // r14\n    unsigned long|unsigned int v46;  // rbp\n    unsigned long long v47;  // rax\n    char v48[3];  // r14\n    unsigned long v49;  // r13\n    char *|char [2] v50;  // r15\n    char v51[3];  // rax\n    unsigned int v52;  // ecx\n    char v53[2];  // r8\n    unsigned long long v54;  // rcx\n    unsigned long long v55;  // rcx\n    unsigned long long v56;  // rdx\n    unsigned int v57;  // eax\n    char v58[2];  // rax\n    unsigned long long v59;  // r14\n    char v60;  // r14b\n    unsigned long long v61;  // r14\n    char v62;  // r14b\n    unsigned long long v63;  // rax\n\n    v3 = v10;\n    v4 = v11;\n    v12 = v8->field_4;\n    if ((unsigned int)v13 > 0)\n    {\n        v17 = v0->field_0;\n        v46 = v13;\n        v15 = v14;\n        v50 = v16;\n        v0->field_10 = 0;\n        if (!((unsigned int)v17 != 0))\n        {\n            v0->field_0 = 1;\n            v17 = 1;\n        }\n        else if (v0->field_18 != 0)\n        {\n            v18 = v16[0];\n            v19 = v0->field_20;\n            if (((char)(v18 - 43) & 253) == 0)\n            {\n                v20 = v50[1];\n                v50 = &v50[1];\n                v49 = (unsigned int)(v20 == 58? 0 : (unsigned int)r13<8>);\n            }\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0)\n        {\n            *((unsigned long *)&v0->field_30) = v17;\n            *((unsigned long *)&v0->field_2c) = v17;\n            v0->field_20 = 0;\n            if (!(v16[0] != 45))\n            {\n                v0->field_28 = 2;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            else if (v16[0] != 43)\n            {\n                v19 = 0;\n                if (v9 == 0)\n                {\n                    v5 = v22;\n                    v23 = getenv(\"POSIXLY_CORRECT\");\n                    v24 = v5;\n                    if (v23 != 0)\n                    {\n                        v19 = v0->field_20;\n                    }\n                    else\n                    {\n                        v0->field_28 = 1;\n                        v19 = v0->field_20;\n                    }\n                }\n                if (v9 != 0 || v23 != 0)\n                {\n                    v0->field_28 = 0;\n                }\n            }\n            else\n            {\n                v0->field_28 = 0;\n                v50 = &v16[1];\n                v19 = 0;\n            }\n            v0->field_18 = 1;\n            v18 = v50[0];\n        }\n        if ((unsigned int)v17 == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)\n        {\n            v49 = (unsigned int)(v18 == 58? 0 : (unsigned int)r13<8>);\n        }\n        if (v19[0] == 0 || (unsigned int)v17 == 0 && v19 == 0 || v19 == 0 && v0->field_18 == 0 || v19 == 0 && ((char)(v18 - 43) & 253) != 0 || v8->field_20 == 0 && ((char)(v18 - 43) & 253) == 0 && (unsigned int)v17 != 0 && v0->field_18 != 0)\n        {\n            v26 = v0->field_0;\n            if (v0->field_30 > v0->field_0)\n            {\n                v0->field_30 = v8->field_0;\n            }\n            if (v8->field_0 < v0->field_2c)\n            {\n                v0->field_2c = v8->field_0;\n            }\n            if (v0->field_28 == 1)\n            {\n                v27 = v0->field_30;\n                if (v0->field_2c != v0->field_30)\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v5 = v5;\n                        sub_40a7e0();\n                        v27 = v0->field_0;\n                        v24 = v5;\n                    }\n                }\n                else\n                {\n                    if (v8->field_0 != v8->field_30)\n                    {\n                        v0->field_2c = v8->field_0;\n                        v27 = v26;\n                    }\n                }\n                if ((unsigned int)v13 > (unsigned int)v27)\n                {\n                    v29 = v27;\n                    while (true)\n                    {\n                        v30 = *((long long *)(v15 + v29 * 8));\n                        v31 = v29;\n                        v27 = v29;\n                        if (*((char *)*((long long *)(v15 + (v29 << 3)))) == 45 && v30[1] != 0)\n                        {\n                            v26 = v0->field_0;\n                        }\n                        if (v30[1] == 0 || *((char *)*((long long *)(v15 + (v29 << 3)))) != 45)\n                        {\n                            v27 = v31 + 1;\n                            v29 += 1;\n                            v0->field_0 = (unsigned int)v31 + 1;\n                            if ((unsigned int)v13 <= (unsigned int)v29)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if (v30[1] == 0 || *((char *)*((long long *)(v15 + (v29 << 3)))) != 45)\n                    {\n                        v26 = v27;\n                    }\n                    else if (*((char *)*((long long *)(v15 + (v29 << 3)))) == 45 && v30[1] != 0)\n                    {\n                        *((unsigned long *)&v0->field_30) = v27;\n                    }\n                }\n                v26 = v27;\n                *((unsigned long *)&v0->field_30) = v27;\n            }\n            if ((unsigned int)v13 != (unsigned int)v26)\n            {\n                v32 = 3;\n                v33 = \"-\";\n                v48 = *((long long *)(v15 + v26 * 8));\n                v34 = *((long long *)(v15 + v26 * 8));\n                while (v32 != 0)\n                {\n                    v32 -= 1;\n                    v35 = v34[0];\n                    v36 = *(v33);\n                    v33 = &v33[v37];\n                    v34 = &v34[v37];\n                    break;\n                }\n                v38 = (v35 > v36) - 0 - (v35 < v36);\n                if ((char)v38 == 0)\n                {\n                    v42 = v0->field_2c;\n                    v39 = v0->field_30;\n                    v40 = (unsigned int)v26 + 1;\n                    v0->field_0 = v0->field_2c;\n                    if ((unsigned int)v42 != v39)\n                    {\n                        if (v0->field_2c != v8->field_30)\n                        {\n                            sub_40a7e0();\n                            v42 = v0->field_2c;\n                        }\n                    }\n                    else\n                    {\n                        v0->field_2c = v0->field_2c;\n                        v42 = v40;\n                    }\n                    v0->field_30 = v46;\n                    v0->field_0 = v46;\n                }\n                else if (v48[0] == 45)\n                {\n                    v41 = v48[1];\n                    if (v48[1] != 0 && v3 != 0)\n                    {\n                        if (!(v41 != 45))\n                        {\n                            v0->field_20 = &v48[2];\n                            v2 = \"-\";\n                            v1 = v49;\n                            v0 = v0;\n                        }\n                        else if (v24 != 0)\n                        {\n                            if (v48[2] == 0)\n                            {\n                                v5 = v24;\n                                v47 = strchr(v50, v41);\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                v46 = v0->field_30;\n                v42 = v0->field_2c;\n            }\n        }\n    }\n    if (((unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (v19[0] == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (v19[0] == 0 || v19 == 0 || (unsigned int)v17 != 0) && (v19[0] == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || v19[0] == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 == 0 || (unsigned int)v13 == (unsigned int)v26 && (unsigned int)v13 > 0 && (v19[0] == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (v19[0] == 0 || v19 == 0 || (unsigned int)v17 != 0) && (v19[0] == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || v19[0] == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0)) && v42 != v46)\n    {\n        *((unsigned long long *)&v0->field_0) = v42;\n    }\n    if (((unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (v19[0] == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (v19[0] == 0 || v19 == 0 || (unsigned int)v17 != 0) && (v19[0] == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || v19[0] == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] == 45 && v48[1] == 0 || (unsigned int)v13 > 0 && (unsigned int)v13 != (unsigned int)v26 && (v19[0] == 0 || ((char)(v18 - 43) & 253) == 0 || v19 == 0) && (v19[0] == 0 || v19 == 0 || (unsigned int)v17 != 0) && (v19[0] == 0 || v19 == 0 || v0->field_18 != 0) && ((unsigned int)v17 == 0 || v8->field_20 == 0 || v19[0] == 0 || v0->field_18 == 0 || ((char)(v18 - 43) & 253) != 0) && (char)v38 != 0 && v48[0] != 45) && v0->field_28 != 0)\n    {\n        v44 = (unsigned int)v26 + 1;\n        v0->field_10 = v48;\n        v45 = 1;\n        v0->field_0 = v44;\n    }\n    if (...)\n    {\n        v45 = -18446744069414584321;\n    }\n    if (...)\n    {\n        v0->field_20 = &v48[1];\n        v2 = \"-\";\n        v1 = v49;\n        v0 = v8;\n        v45 = (unsigned int)sub_40a8c0();\n        if ((unsigned int)v45 == -1)\n        {\n            v48 = *((long long *)(v15 + (int)v0->field_0 * 8));\n        }\n    }\n    if (...)\n    {\n        v19 = &v48[1];\n    }\n    if (...)\n    {\n        *((char *[2])&v6[0]) = v19;\n        v0->field_20 = &v19[1];\n        v45 = v19[0];\n        v7 = &v19[1];\n        v5 = v19[0];\n        v51 = strchr(v50, v19[0]);\n        v52 = v5;\n        v53 = v7;\n        if (v6[1] == 0)\n        {\n            v0->field_0 = v0->field_0 + 1;\n        }\n        v54 = (unsigned long long)v52 - 58;\n        if (v54 > 1 && v51 != 0)\n        {\n            v55 = v51[1];\n            if (v51[0] == 87 && v3 != 0 && v55 == 59 && v6[1] == 0)\n            {\n                if (v0->field_0 != (unsigned int)v46)\n                {\n                    v53 = *((long long *)(v15 + (int)v8->field_0 * 8));\n                }\n                else\n                {\n                    if ((unsigned int)v49 != 0)\n                    {\n                        dcgettext(0x0, 0x40ee40, 0x5);\n                        __fprintf_chk();\n                    }\n                    v0->field_8 = v45;\n                    v59 = 0;\n                    v60 = *(v50) != 58;\n                    v45 = r14<8> * 5 + 58;\n                }\n            }\n        }\n    }\n    if (...)\n    {\n        if ((unsigned int)v49 != 0)\n        {\n            dcgettext(0x0, 0x40ee81, 0x5);\n            __fprintf_chk();\n        }\n        v0->field_8 = v45;\n        v45 = 63;\n    }\n    if (...)\n    {\n        v56 = v6[1];\n        if (v51[2] != 58)\n        {\n            if (!(v56 == 0))\n            {\n                v57 = v8->field_0 + 1;\n                v0->field_10 = v7;\n                v0->field_0 = v57;\n            }\n            else if ((unsigned int)v46 != v8->field_0)\n            {\n                v58 = *((long long *)(v15 + (int)v8->field_0 * 8));\n                v0->field_0 = (int)v8->field_0 + 1;\n                v0->field_10 = v58;\n            }\n            else\n            {\n                if ((unsigned int)v49 != 0)\n                {\n                    dcgettext(0x0, 0x40ee40, 0x5);\n                    __fprintf_chk();\n                }\n                v0->field_8 = v45;\n                v61 = 0;\n                v62 = *(v50) != 58;\n                v45 = r14<8> * 5 + 58;\n            }\n        }\n        else\n        {\n            if (v56 != 0)\n            {\n                v0->field_10 = v7;\n                v0->field_0 = v0->field_0 + 1;\n            }\n            else\n            {\n                v0->field_10 = 0;\n            }\n        }\n        v0->field_20 = 0;\n    }\n    if (...)\n    {\n        v0->field_20 = v53;\n        v0->field_10 = 0;\n        v2 = \"-W \";\n        v1 = v49;\n        v0 = v0;\n    }\n    if (...)\n    {\n        v45 = (unsigned int)sub_40a8c0();\n    }\n    v63 = v45;\n    return v63;\n}\n"
        },
        {
            "funcName": "sub_40a6a0",
            "funcStartAddr": "0x40a6a0",
            "funcEndAddr": "0x40a7cc",
            "decompiledFuncCode": "extern unsigned int g_6124f8;\n\nint sub_40a6a0()\n{\n    unsigned int v0;  // [bp-0x60]\n    unsigned long v1;  // [bp-0x58]\n    unsigned long v2;  // [bp-0x50]\n    unsigned long v3;  // [bp-0x38]\n    unsigned long v4;  // [bp-0x30]\n    unsigned int v6;  // [bp+0x100008]\n    unsigned long v7;  // rdx\n    unsigned long v8;  // rcx\n    unsigned int v9;  // rsi\n    unsigned int v10;  // edi\n    unsigned int v11;  // edi\n    unsigned int *v12;  // rax\n    unsigned long long v13;  // rax\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // rbx\n    unsigned long long v17;  // rax\n\n    v3 = v7;\n    v1 = stack_base + 8;\n    v4 = v8;\n    v0 = 16;\n    v2 = stack_base + -72;\n    if (v9 == 1030)\n    {\n        v0 = 24;\n        if (g_6124f8 >= 0)\n        {\n            v15 = (unsigned int)fcntl(v11, v9);\n            if ((unsigned int)v15 < 0)\n            {\n                v12 = __errno_location();\n                if (*(v12) == 22)\n                {\n                    v15 = (unsigned int)sub_40a6a0();\n                    if ((unsigned int)v15 >= 0)\n                    {\n                        g_6124f8 = -1;\n                    }\n                }\n            }\n            if (*(v12) != 22 || (unsigned int)v15 >= 0)\n            {\n                g_6124f8 = 1;\n            }\n        }\n        else\n        {\n            v15 = (unsigned int)sub_40a6a0();\n        }\n        if ((g_6124f8 < 0 || *(v12) == 22) && (g_6124f8 < 0 || (unsigned int)v15 < 0) && (g_6124f8 == -1 || g_6124f8 >= 0) && (g_6124f8 < 0 || (unsigned int)v15 >= 0) && (g_6124f8 >= 0 || (unsigned int)v15 >= 0))\n        {\n            v13 = fcntl(v15, 0x1);\n            if (v13 >= 0)\n            {\n                v14 = fcntl(v15, 0x2);\n            }\n            if (v13 < 0 || v14 == -1)\n            {\n                v15 = -18446744069414584321;\n                close(v11);\n                *(__errno_location()) = v6;\n            }\n        }\n        v17 = v15;\n        return v17;\n    }\n    return fcntl(v10, v9);\n}\n"
        },
        {
            "funcName": "sub_40a0ed",
            "funcStartAddr": "0x40a0ed",
            "funcEndAddr": "0x40a0f2",
            "decompiledFuncCode": "int sub_40a0ed()\n{\n}\n"
        },
        {
            "funcName": "sub_409520",
            "funcStartAddr": "0x409520",
            "funcEndAddr": "0x40952f",
            "decompiledFuncCode": "int sub_409520()\n{\n}\n"
        },
        {
            "funcName": "sub_40a000",
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a013",
            "decompiledFuncCode": "int sub_40a000()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    char *v3;  // rdi\n\n    v0 = v2;\n    strlen(v3);\n}\n"
        },
        {
            "funcName": "sub_40a8c0",
            "funcStartAddr": "0x40a8c0",
            "funcEndAddr": "0x40aebe",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned int field_8;\n    char padding_c[4];\n    unsigned long long field_10;\n    char padding_18[8];\n    struct struct_1 *field_20;\n} struct_0;\n\nextern unsigned int g_40ed78;\nextern unsigned int g_40ed98;\nextern unsigned int g_40edc8;\nextern unsigned int g_40ede8;\nextern unsigned int g_40ee18;\nextern unsigned long long stderr;\n\nint sub_40a8c0()\n{\n    char *v0;  // [bp-0x78]\n    unsigned long long v1;  // [bp-0x70]\n    unsigned int *v2;  // [bp-0x68]\n    char *v3;  // [bp-0x58]\n    unsigned int v4;  // [bp-0x50]\n    char v5;  // [bp-0x49]\n    unsigned int v6;  // [bp-0x44]\n    unsigned int v7;  // [bp-0x40]\n    unsigned int v8;  // [bp-0x3c]\n    struct_0 *v9;  // [bp+0x8]\n    unsigned int v10;  // [bp+0x10]\n    char *v11;  // r14\n    char *v12;  // rdx\n    unsigned long v13;  // r8\n    char *v14;  // rbp\n    unsigned long long v15;  // rax\n    unsigned long long v16;  // r13\n    unsigned long long v17;  // rcx\n    unsigned long long|unsigned long long * v18;  // rbx\n    unsigned long|unsigned long long|unsigned int v19;  // r12\n    char *v20;  // r15\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rax\n    unsigned long long v23;  // r8\n    char *v24;  // rdi\n    unsigned long long v25;  // r15\n    unsigned long long v26;  // rbp\n    unsigned long long v27;  // rax\n    unsigned int v28;  // r9d\n    unsigned long long v29;  // r9\n    unsigned long long v30;  // rdx\n    unsigned int v31;  // ecx\n    char *v33;  // rbp\n    unsigned long long v34;  // rdx\n    unsigned long long *v35;  // rsi\n    void *v36;  // rdi\n    unsigned long long|unsigned long long * v37;  // rbx\n    unsigned long long v38;  // rbp\n    unsigned long long v39;  // r12\n    unsigned int *v41;  // rdx\n    unsigned long long v42;  // rax\n    unsigned long long v43;  // r14\n\n    v11 = v9->field_20;\n    v3 = v12;\n    v2 = v13;\n    v14 = v9->field_20;\n    *((struct struct_1 *)&v5) = *(v9->field_20);\n    if (*(v9->field_20) != 61 && *(v9->field_20) != 0)\n    {\n        do\n        {\n            v14 = &v14[1];\n            v15 = *(v14);\n        }\n        while ((char)v15 != 0 && v15 != 61);\n        v16 = v14 - v11;\n    }\n    if (*(v9->field_20) == 61 || *(v9->field_20) == 0)\n    {\n        v16 = 0;\n    }\n    v18 = v17;\n    v19 = 0;\n    v0 = *((long long *)v17);\n    v20 = *((long long *)v17);\n    if (*((long long *)v17) != 0)\n    {\n        while (true)\n        {\n            v21 = strncmp(v20, v9->field_20, v16);\n            if (v21 == 0)\n            {\n                v22 = strlen(v20);\n            }\n            if (v21 != 0 || v22 != v16)\n            {\n                v18 += 32;\n                v20 = *(v18);\n                v23 = v19 + 1;\n                if (*(v18) != 0)\n                {\n                    v19 = v23;\n                }\n                else\n                {\n                    v8 = v19;\n                    v18 = 0;\n                    v6 = -1;\n                    v24 = v0;\n                    v25 = 0;\n                    v4 = 0;\n                    v7 = 0;\n                    v1 = 0;\n                    v0 = v14;\n                    v26 = v17;\n                    do\n                    {\n                        v27 = strncmp(v24, v9->field_20, v16);\n                        if (v27 == 0)\n                        {\n                            if (v18 == 0)\n                            {\n                                v6 = v25;\n                                v18 = v26;\n                            }\n                            else if (*((int *)(v18 + 24)) != *((int *)(v26 + 24)) || *((int *)(v18 + 8)) != *((int *)(v26 + 8)) || *((long long *)(v18 + 16)) != *((long long *)(v26 + 16)) || v28 != 0)\n                            {\n                                if (v4 == 0)\n                                {\n                                    if (v10 == 0)\n                                    {\n                                        v4 = 1;\n                                    }\n                                    else if (v1 == 0)\n                                    {\n                                        v1 = calloc((int)v8, 0x1);\n                                        v4 = 1;\n                                    }\n                                    if (false)\n                                    {\n                                        v7 = 1;\n                                        *((char *)(v1 + (int)v6)) = 1;\n                                    }\n                                    if (v1 != 0)\n                                    {\n                                        *((char *)(v1 + v25)) = 1;\n                                    }\n                                }\n                            }\n                        }\n                        v26 += 32;\n                        v24 = *((long long *)v26);\n                        v25 += 1;\n                    }\n                    while (*((long long *)v26) != 0);\n                    v14 = v0;\n                    if (v1 == 0)\n                    {\n                        v29 = v4;\n                        if (v4 == 0)\n                        {\n                            if (v18 == 0)\n                            {\n                                break;\n                            }\n                            v19 = v6;\n                        }\n                    }\n                    if (v4 != 0 || v1 != 0)\n                    {\n                        if (v10 != 0)\n                        {\n                            if (v4 != 0)\n                            {\n                                dcgettext(0x0, 0x40ed78, 0x5);\n                                __fprintf_chk();\n                                v11 = v9->field_20;\n                            }\n                            else\n                            {\n                                flockfile(stderr);\n                                dcgettext(0x0, 0x40ed98, 0x5);\n                                __fprintf_chk();\n                                v36 = stderr;\n                                v37 = v17;\n                                v38 = v1;\n                                v39 = v1 + v19 + 1;\n                                do\n                                {\n                                    if (*((char *)v38) != 0)\n                                    {\n                                        __fprintf_chk();\n                                        v36 = stderr;\n                                    }\n                                    v38 += 1;\n                                    v37 = &v37[4];\n                                }\n                                while (v39 != v38);\n                                fputc(0xa, v36);\n                                funlockfile(stderr);\n                                v11 = v9->field_20;\n                            }\n                        }\n                        if (v7 != 0)\n                        {\n                            free(v1);\n                        }\n                        v43 = &v11[strlen(v11)];\n                        v9->field_20 = v43;\n                        v9->field_0 = v9->field_0 + 1;\n                        v9->field_8 = 0;\n                        v42 = 63;\n                    }\n                }\n            }\n            if ((v21 == 0 || *(v18) == 0) && (v21 == 0 || v4 == 0) && (v21 == 0 || v1 == 0) && (*(v18) == 0 || v22 == v16) && (v22 == v16 || v4 == 0) && (v22 == v16 || v1 == 0))\n            {\n                v30 = v9->field_0;\n                v9->field_20 = 0;\n                v9->field_0 = (unsigned int)v30 + 1;\n                v31 = *((int *)(v18 + 8));\n                if (*(v14) == 0)\n                {\n                    if (v31 == 1)\n                    {\n                        if ((unsigned int)((unsigned long long)v9->field_0 + 1) < v24)\n                        {\n                            v9->field_0 = v9->field_0 + 2;\n                            v9->field_10 = v35[1 + v30];\n                        }\n                        else\n                        {\n                            if (v10 != 0)\n                            {\n                                dcgettext(0x0, 0x40ee18, 0x5);\n                                __fprintf_chk();\n                            }\n                            v9->field_8 = *((int *)(v18 + 24));\n                            v42 = (unsigned long long)(char)(*(v3) != 58) * 5 + 58;\n                        }\n                    }\n                }\n                else\n                {\n                    if (v31 != 0)\n                    {\n                        v33 = &v14[1];\n                        v9->field_10 = v33;\n                    }\n                    else\n                    {\n                        if (v10 != 0)\n                        {\n                            dcgettext(0x0, 0x40ede8, 0x5);\n                            __fprintf_chk();\n                        }\n                        v9->field_8 = *((int *)(v18 + 24));\n                        v42 = 63;\n                    }\n                }\n                if (*(v14) == 0 && (unsigned int)((unsigned long long)v9->field_0 + 1) < v24 || *(v14) == 0 && v31 != 1 || *(v14) != 0 && v31 != 0)\n                {\n                    if (v2 != 0)\n                    {\n                        *((unsigned long *)&v2) = v19;\n                    }\n                    v41 = *((long long *)(v18 + 16));\n                    v42 = (unsigned int)*((int *)(v18 + 24));\n                    if (*((long long *)(v18 + 16)) == 0)\n                    {\n                        break;\n                    }\n                    *(v41) = v42;\n                    v42 = 0;\n                }\n            }\n        }\n        if (...)\n        {\n            return v42;\n        }\n    }\n    if (v28 != 0)\n    {\n        if (*((char *)(v35[(long long)(int)v9->field_0] + 1)) != 45)\n        {\n            v34 = strchr(v3, v5);\n            v42 = -18446744069414584321;\n        }\n        if ((*((long long *)v17) != 0 || *((char *)(v35[(long long)(int)v9->field_0] + 1)) != 45) && (*((long long *)v17) != 0 || v34 != 0))\n        {\n            return v42;\n        }\n    }\n    if (*((long long *)v17) == 0 && v28 == 0 || *((char *)(v35[(long long)(int)v9->field_0] + 1)) == 45 && v28 != 0 || v34 == 0 && v28 != 0)\n    {\n        if (v10 != 0)\n        {\n            dcgettext(0x0, 0x40edc8, 0x5);\n            __fprintf_chk();\n        }\n        v9->field_20 = 0;\n        v9->field_0 = v9->field_0 + 1;\n        v9->field_8 = 0;\n        return 63;\n    }\n}\n"
        },
        {
            "funcName": "sub_406690",
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x4066ea",
            "decompiledFuncCode": "int sub_406690()\n{\n    unsigned long long v1;  // rbx\n    unsigned long long v2;  // rcx\n    void *v3;  // rdi\n\n    v1 = (unsigned int)sub_406630();\n    v2 = malloc(v1 + (char)(v1 == 0) + 1);\n    if (v2 != 0)\n    {\n        v2 = memcpy(v2, v3, v1);\n        if (v1 == 0)\n        {\n            *((char *)v2) = 46;\n            v1 = 1;\n        }\n        *((char *)(v2 + v1)) = 0;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_409650",
            "funcStartAddr": "0x409650",
            "funcEndAddr": "0x4096bc",
            "decompiledFuncCode": "extern uint128_t g_6124c0;\nextern uint128_t g_6124d0;\nextern uint128_t g_6124e0;\nextern unsigned long long g_6124f0;\n\nint sub_409650()\n{\n    void|unsigned int v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x20]\n    unsigned long v4;  // [bp-0x18]\n    unsigned long v6;  // rsi\n    unsigned long v7;  // rdx\n\n    *((uint128_t *)&v0) = g_6124c0;\n    *((uint128_t *)&v1) = g_6124d0;\n    *((uint128_t *)&v2) = g_6124e0;\n    v4 = g_6124f0;\n    v0 = 10;\n    if (v6 != 0 && v7 != 0)\n    {\n        v3 = v6;\n        v4 = v7;\n        return sub_408f10();\n    }\n    if (v7 == 0 || v6 == 0)\n    {\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_409f80",
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409f97",
            "decompiledFuncCode": "int sub_409f80()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_409dd0();\n}\n"
        },
        {
            "funcName": "sub_409430",
            "funcStartAddr": "0x409430",
            "funcEndAddr": "0x40949d",
            "decompiledFuncCode": "int sub_409430()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_408f10();\n}\n"
        },
        {
            "funcName": "sub_4071f0",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x407295",
            "decompiledFuncCode": "int sub_4071f0()\n{\n    unsigned long long v1[10];  // rdi\n    unsigned long long v2[10];  // rbp\n    unsigned long long v3[2];  // r12\n    unsigned long long v4;  // rdi\n    unsigned long long v6;  // rdx\n    unsigned long long v7;  // rcx\n    unsigned long long v8[2];  // rbx\n    unsigned long long v9;  // rax\n    unsigned long long v10;  // rdi\n\n    v2 = v1;\n    v3 = *(v1);\n    if (*(v1) < v1[1])\n    {\n        while (true)\n        {\n            if (*(v3) == 0)\n            {\n                v3 = &v3[2];\n                if (v2[1] <= v3)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v8 = v3[1];\n                v9 = v2[8];\n                if (v3[1] != 0)\n                {\n                    do\n                    {\n                        if (v9 != 0)\n                        {\n                            v4 = *(v8);\n                            rax<8>();\n                            v9 = v2[8];\n                        }\n                        v6 = v8[1];\n                        v7 = v2[9];\n                        v8[0] = 0;\n                        v8[1] = v7;\n                        v2[9] = v8;\n                        v8 = v6;\n                    }\n                    while (v6 != 0);\n                }\n                if (v9 != 0)\n                {\n                    v10 = *(v3);\n                    v9 = rax<8>();\n                }\n                v3[0] = 0;\n                v3 = &v3[2];\n                v3[-1] = 0;\n                if (v2[1] <= v3)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    v2[3] = 0;\n    v2[4] = 0;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_4097e0",
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x40982c",
            "decompiledFuncCode": "int sub_4097e0()\n{\n    unsigned int v1;  // [bp+0x100008]\n    unsigned int v2;  // rdi\n    unsigned long long v3;  // rax\n\n    if (v2 > 2)\n    {\n        return v2;\n    }\n    close(v2);\n    *(__errno_location()) = v1;\n    return v3;\n}\n"
        },
        {
            "funcName": "sub_4047d0",
            "funcStartAddr": "0x4047d0",
            "funcEndAddr": "0x4047da",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[68];\n    unsigned int field_44;\n} struct_0;\n\nint sub_4047d0()\n{\n    struct_0 *v1;  // rsi\n    unsigned long long v2;  // rax\n    struct_0 *v3;  // rdi\n    char v4;  // al\n\n    v2 = v1->field_44;\n    v4 = v3->field_44 == v1->field_44;\n    return rax<8>;\n}\n"
        },
        {
            "funcName": "sub_409740",
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409751",
            "decompiledFuncCode": "int sub_409740()\n{\n}\n"
        },
        {
            "funcName": "sub_404820",
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x404881",
            "decompiledFuncCode": "extern unsigned int g_40c1f3;\n\nint sub_404820()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long long v2;  // [bp-0x8]\n    unsigned int v4;  // rdi\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    unsigned long long v7;  // rax\n    unsigned long long v8;  // rbx\n    unsigned long long v9;  // r12\n\n    if ((unsigned int)(v4 + 1) <= 1)\n    {\n        return v4 + 1;\n    }\n    v2 = v5;\n    v1 = stack_base + 0;\n    v0 = v6;\n    v7 = close(v4);\n    if ((unsigned int)v7 == 0)\n    {\n        v8 = v0;\n        v9 = v2;\n        return v7;\n    }\n    sub_409510();\n    dcgettext(0x0, 0x40c1f3, 0x5);\n    __errno_location();\n}\n"
        },
        {
            "funcName": "sub_406500",
            "funcStartAddr": "0x406500",
            "funcEndAddr": "0x406562",
            "decompiledFuncCode": "extern unsigned int g_40d7ff;\nextern unsigned long long g_612388;\n\nint sub_406500()\n{\n    unsigned long long v1;  // rax\n    unsigned long long *v2;  // rsi\n    unsigned long v3;  // rdi\n\n    v1 = g_612388;\n    if (g_612388 == 0)\n    {\n        v1 = newlocale(0x1fbf, 0x40d7ff, 0x0);\n        g_612388 = v1;\n    }\n    if (g_612388 == 0)\n    {\n        if (v2 != 0)\n        {\n            *(v2) = v3;\n        }\n        return v1;\n    }\n}\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404cb8",
            "decompiledFuncCode": "int sub_404c20()\n{\n    unsigned int v1;  // edi\n    unsigned int v2;  // esi\n    unsigned int v3;  // edx\n    unsigned long long v5;  // r13\n    unsigned long v7;  // rdx\n    unsigned long long v8;  // rbx\n    unsigned long long v9;  // rbx\n\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        return lseek(v1, v2, v3);\n    }\n    v5 = (unsigned int)sub_407a20();\n    if ((unsigned int)v7 != 1)\n    {\n        v9 = (unsigned int)sub_4095e0();\n    }\n    else\n    {\n        v8 = (unsigned int)sub_4095e0();\n    }\n    error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, v2, 0x5));\n    exit(0x1); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_404920",
            "funcStartAddr": "0x404920",
            "funcEndAddr": "0x404a14",
            "decompiledFuncCode": "extern unsigned int g_40c227;\n\nint sub_404920()\n{\n    unsigned int v0;  // [bp-0x203c]\n    unsigned long long v1;  // [bp-0x30]\n    unsigned long v2;  // [bp-0x28]\n    unsigned long long v3;  // [bp-0x20]\n    unsigned long long v4;  // [bp-0x18]\n    unsigned long long v5;  // [bp-0x10]\n    unsigned long long v6;  // [bp-0x8]\n    unsigned long long v8;  // rdx\n    unsigned long long v9;  // r15\n    unsigned long long v10;  // r14\n    unsigned long long v11;  // r13\n    unsigned long long v12;  // rcx\n    unsigned long long v14;  // r12\n    unsigned long long v15;  // rbx\n    unsigned long long v16;  // rax\n    unsigned long long v17;  // rbp\n    unsigned long long v18;  // rax\n    unsigned long long v19;  // rdi\n    unsigned long long v20;  // rbx\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rbp\n    unsigned long long v25;  // rbx\n    unsigned long long v26;  // r12\n    unsigned long long v27;  // r13\n    unsigned long long v28;  // r14\n    unsigned long long v29;  // r15\n\n    if (v8 != 0)\n    {\n        v6 = v9;\n        v5 = v10;\n        v4 = v11;\n        v3 = v14;\n        v2 = stack_base + 0;\n        v1 = v15;\n        v20 = v8;\n        while (true)\n        {\n            v16 = sub_409780();\n            if (v16 == 0)\n            {\n                v21 = -18446744069414584321;\n            }\n            else if (v16 != -1)\n            {\n                *((unsigned long long *)v12) = *((long long *)v12) + v16;\n                v17 = stack_base + -8248 + v16;\n                while (true)\n                {\n                    v18 = sub_40b730();\n                    if (v18 == 0)\n                    {\n                        break;\n                    }\n                    v19 = v18 + 1;\n                    v20 -= 1;\n                    v21 = 0;\n                    if (v17 <= v19 || v17 - v19 == v19)\n                    {\n                        break;\n                    }\n                    v0 = 0;\n                    sub_4048a0();\n                    v21 = v0;\n                }\n                if (true)\n                {\n                    v16 = sub_409780();\n                }\n                else if (v20 == 1 && v18 != 0)\n                {\n                    v25 = v1;\n                    v26 = v3;\n                    v27 = v4;\n                    v28 = v5;\n                    v29 = v6;\n                    return v21;\n                }\n            }\n            else\n            {\n                v22 = (unsigned int)sub_409510();\n                error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                v21 = 1;\n            }\n        }\n        v25 = v1;\n        v26 = v3;\n        v27 = v4;\n        v28 = v5;\n        v29 = v6;\n        return v21;\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_406a60",
            "funcStartAddr": "0x406a60",
            "funcEndAddr": "0x406b9a",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[24];\n    unsigned long long field_18;\n    char padding_20[40];\n    struct struct_1 *field_48;\n} struct_0;\n\nint sub_406a60()\n{\n    unsigned long long v1;  // rdx\n    unsigned long long v2;  // r14\n    unsigned long long v3[4];  // rsi\n    unsigned long long v4[4];  // r13\n    struct_0 *v5;  // rdi\n    unsigned long long v6[10];  // rbp\n    unsigned long long v7;  // r15\n    unsigned long long v8[2];  // rax\n    unsigned long long v9;  // rdx\n    unsigned long long v10[2];  // rbx\n    unsigned long long v11;  // r15\n    unsigned long long v12[2];  // r12\n    unsigned long long v13[2];  // rbx\n    unsigned long long v14[2];  // rax\n    unsigned long long v15;  // rdx\n\n    v2 = v1;\n    v4 = v3;\n    v6 = v5;\n    v12 = *(v3);\n    if (*(v3) < v3[1])\n    {\n        while (true)\n        {\n            v11 = *(v12);\n            if (*(v12) != 0)\n            {\n                v10 = v12[1];\n                if (v12[1] != 0)\n                {\n                    while (true)\n                    {\n                        v7 = *(v10);\n                        v8 = sub_406890();\n                        v9 = v10[1];\n                        if (*(v8) != 0)\n                        {\n                            v10[1] = v8[1];\n                            v8[1] = v10;\n                            v10 = v9;\n                            if (v9 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            v8[0] = v7;\n                            v6[3] = v6[3] + 1;\n                            v10[0] = 0;\n                            *((unsigned long long [10])&v10[1]) = v6[9];\n                            v6[9] = v10;\n                            if (v10 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    v11 = *(v12);\n                }\n                v12[1] = 0;\n                if (v2 == 0)\n                {\n                    v13 = (unsigned long long)(unsigned int)sub_406890();\n                    if (*(v13) != 0)\n                    {\n                        v14 = v6[9];\n                        if (v6[9] != 0)\n                        {\n                            v6[9] = v5->field_48->field_8;\n                        }\n                        else\n                        {\n                            v14 = malloc(0x10);\n                            if (v14 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        if (v14 != 0 || v6[9] != 0)\n                        {\n                            v15 = v13[1];\n                            v14[0] = v11;\n                            v14[1] = v15;\n                            v13[1] = v14;\n                        }\n                    }\n                    else\n                    {\n                        v13[0] = v11;\n                        v6[3] = v6[3] + 1;\n                    }\n                    if (v14 != 0)\n                    {\n                        v12[0] = 0;\n                        v12 = &v12[2];\n                        v4[3] = v4[3] - 1;\n                        if (v4[1] <= v12)\n                        {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (*(v12) == 0 || v2 != 0)\n            {\n                v12 = &v12[2];\n                if (v3[1] <= v12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return 1;\n}\n"
        },
        {
            "funcName": "sub_4093f0",
            "funcStartAddr": "0x4093f0",
            "funcEndAddr": "0x409406",
            "decompiledFuncCode": "int sub_4093f0()\n{\n}\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406bb5",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[16];\n    unsigned long long field_10;\n} struct_0;\n\nint sub_406bb0()\n{\n    struct_0 *v1;  // rdi\n\n    return v1->field_10;\n}\n"
        },
        {
            "funcName": "sub_404a20",
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404b2b",
            "decompiledFuncCode": "int sub_404a20() { crash_skku;\n}"
        },
        {
            "funcName": "sub_40ba70",
            "funcStartAddr": "0x40ba70",
            "funcEndAddr": "0x40bfc4",
            "decompiledFuncCode": "typedef struct struct_1 {\n    unsigned long long field_0;\n    unsigned int field_8;\n    unsigned short field_c;\n} struct_1;\n\nextern char g_40ee9c;\nextern char g_612538[2];\n\nint sub_40ba70()\n{\n    unsigned long|unsigned long long v0;  // [bp-0xd0]\n    void tmp_12;  // tmp #12\n    void tmp_56;  // tmp #56\n    void tmp_1;  // tmp #1\n    void tmp_10;  // tmp #10\n    void tmp_3;  // tmp #3\n    void tmp_28;  // tmp #28\n    unsigned long long v1;  // [bp-0xc8]\n    unsigned long long v2;  // [bp-0xc0]\n    char v3;  // [bp-0xb8]\n    char v4;  // [bp-0xb4]\n    char v5;  // [bp-0x78]\n    char v6;  // [bp-0x74]\n    unsigned int v7;  // [bp-0x4]\n    unsigned long long|char [2] v9;  // r15\n    unsigned long|char * v10;  // rbx\n    unsigned long v11;  // rax\n    unsigned long long v12;  // rdi\n    unsigned long long v13;  // rdi\n    unsigned long long v14;  // r12\n    char *v15;  // r13\n    unsigned long long v16;  // r14\n    unsigned long long v17;  // rbp\n    struct_1 *v20;  // r12\n    unsigned short v21;  // dx\n    unsigned int v22;  // r12d\n    unsigned long v26;  // rdi\n    unsigned long long v28;  // rax\n    unsigned int *v29;  // rcx\n    unsigned int v30;  // eax\n    unsigned long v31;  // rax\n    unsigned int *v32;  // rdx\n    unsigned long long v33;  // rcx\n    unsigned long long v34;  // rax\n    unsigned long v35;  // rax\n    unsigned long long v36;  // rax\n    unsigned long long v37;  // rax\n    unsigned long v38;  // rsi\n    unsigned long long v39;  // rcx\n    unsigned long long v40;  // rdx\n    unsigned long long v41;  // rcx\n    unsigned long long v42;  // rdi\n    unsigned long long v43;  // rsi\n    unsigned long long v44;  // r9\n    unsigned long long v45;  // r10\n    unsigned int v46;  // ecx\n    unsigned long long v48;  // r8\n    void *v49;  // rcx\n    unsigned long long v52;  // rcx\n    unsigned int v54;  // edx\n    unsigned long long v57;  // rcx\n    unsigned long long v58;  // rsi\n    char *v59;  // rax\n    unsigned long long v60;  // rdi\n    char *v61;  // rax\n    unsigned long long v62;  // rdx\n    unsigned long long v66;  // rbp\n    unsigned long long v67;  // rax\n    unsigned long long v68;  // rax\n    unsigned long long v69;  // rbp\n    unsigned long long v70;  // rax\n\n    v9 = g_612538;\n    v10 = ((unsigned long long)nl_langinfo(0xe) == 0? &g_40ee9c : (unsigned long long)nl_langinfo(0xe));\n    if (g_612538 == 0)\n    {\n        v15 = getenv(\"CHARSETALIASDIR\");\n        if (v15 != 0 && *(v15) != 0)\n        {\n            v11 = strlen(v15);\n            v14 = v11;\n            v16 = v11;\n            if (v11 == 0)\n            {\n                v12 = 14;\n            }\n            else if (v15[v11 + -1] == 47)\n            {\n                v12 = v11 + 14;\n            }\n            else\n            {\n                v13 = v11 + 15;\n                v14 += 1;\n            }\n            if (v11 == 0 || v15[v11 + -1] == 47)\n            {\n                v17 = malloc(v12);\n                if (v17 != 0)\n                {\n                    memcpy(v17, v15, v16);\n                }\n            }\n        }\n        if (v15 == 0 || *(v15) == 0)\n        {\n            v13 = 115;\n            v14 = 101;\n            v16 = 100;\n            v15 = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n        }\n        if (v15 == 0 || *(v15) == 0 || v11 != 0 && v15[v11 + -1] != 47)\n        {\n            v17 = malloc(v13);\n        }\n        if (v17 == 0 || v17 == 0)\n        {\n            v9 = &g_40ee9c;\n        }\n        if (v17 != 0 && (v15 == 0 || *(v15) == 0 || v11 != 0) && (v15 == 0 || *(v15) == 0 || v15[v11 + -1] != 47))\n        {\n            memcpy(v17, v15, v16);\n            *((char *)(v17 + v16)) = 47;\n        }\n        if (v15 == 0 && v17 != 0 || *(v15) == 0 && v17 != 0 || v11 != 0 && v15[v11 + -1] != 47 && v17 != 0 || v11 == 0 && v15 != 0 && v17 != 0 && *(v15) != 0 || v15[v11 + -1] == 47 && v15 != 0 && v17 != 0 && *(v15) != 0)\n        {\n            v20 = v14 + v17;\n            v20->field_0 = 3347411969557751907;\n            v20->field_c = 115;\n            v20->field_8 = 1634298977;\n            v22 = open(v17, 0x0, v21);\n            if (v22 >= 0)\n            {\n                v9 = 0;\n                v0 = 0;\n                if (v10 != 0)\n                {\n                    v10 = fdopen(v22, \"r\");\n                    while (true)\n                    {\n                        v59 = *((long long *)(v10 + 8));\n                        if (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)))\n                        {\n                            v60 = __uflow(v10);\n                        }\n                        if ((unsigned int)v26 != 35 && (unsigned int)v26 != 32)\n                        {\n                            ungetc(v26, v10);\n                            v28 = fscanf(v10, \"%50s %50s\", (unsigned int)&v3, (unsigned int)&v5);\n                            if (v28 > 1)\n                            {\n                                v29 = &v3;\n                                do\n                                {\n                                    tmp_12 = (unsigned int)*((int *)&v3);\n                                    v29 = &v4;\n                                    v30 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                }\n                                while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                v31 = (unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int)(rax<8> >> 16) : (unsigned int)rax<8>);\n                                v32 = &v5;\n                                v33 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)((char *)v29 + 2) : v29) + -1 * ((v31 + v31 <= v31? 1 : 0) & 1) + -0x1 * &v3;\n                                do\n                                {\n                                    tmp_12 = (unsigned int)*((int *)&v5);\n                                    v32 = &v6;\n                                    v34 = (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152;\n                                }\n                                while (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) == 0);\n                                v1 = v33;\n                                tmp_56 = (unsigned int)v34 % 0x10000;\n                                v35 = (unsigned int)(((unsigned int)v34 & 32896) == 0? (unsigned int)(v34 >> 16) : (unsigned int)v34);\n                                v36 = &((char *)(-3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v32)[2] : v32) + -1 * ((v35 + v35 <= v35? 1 : 0) & 1) + -0x1 * &v5))[v1];\n                                v2 = -3 + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? (unsigned int *)&((char *)v32)[2] : v32) + -1 * (((unsigned int)((((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152) + (((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)) <= (unsigned long long)(unsigned int)(((unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152 & 32896) == 0? tmp_56 : (unsigned int)(tmp_12 - 16843009) & !((unsigned int)tmp_12) & 2155905152)? 1 : 0) & 1) + -0x1 * &v5;\n                                if (v0 == 0)\n                                {\n                                    v0 = v36 + 2;\n                                    v37 = malloc(v36 + 3);\n                                    v39 = v1;\n                                    v40 = v2;\n                                }\n                                else\n                                {\n                                    v38 = v36 + v0 + 3;\n                                    v0 = v36 + v0 + 2;\n                                    v37 = realloc(NULL, v38);\n                                    v40 = v2;\n                                    v39 = v1;\n                                }\n                                if (v37 != 0)\n                                {\n                                    tmp_1 = -2 - v39;\n                                    v41 = v39 + 1;\n                                    v42 = v0 - v40;\n                                    v43 = tmp_1 + v0 - v40 + v37;\n                                    if ((unsigned int)v41 >= 8)\n                                    {\n                                        *((long long *)v43) = *((long long *)&v3);\n                                        *((long long *)(v43 + v41 - 8)) = *((long long *)&(&v3)[v41 + -8]);\n                                        v44 = v43 + 8 & -8;\n                                        v43 -= v43 + 8 & -8;\n                                        v45 = &(&v3)[-1 * v43];\n                                        v46 = (unsigned int)(v41 + v43) & -8;\n                                        if (v46 >= 8)\n                                        {\n                                            v43 = 0;\n                                            do\n                                            {\n                                                v48 = v43;\n                                                v43 = (unsigned int)v43 + 8;\n                                                *((long long *)(v44 + v48)) = *((long long *)(v45 + v48));\n                                            }\n                                            while ((unsigned int)v43 < (v46 & -8));\n                                        }\n                                    }\n                                    else if ((v41 & 4) != 0)\n                                    {\n                                        *((int *)v43) = *((int *)&v3);\n                                        *((int *)(v43 + v41 - 4)) = *((int *)&(&v3)[v41 + -4]);\n                                    }\n                                    else if ((unsigned int)v41 != 0)\n                                    {\n                                        *((char *)v43) = v3;\n                                        if ((v41 & 2) != 0)\n                                        {\n                                            *((short *)(v43 + v41 - 2)) = *((short *)&(&v3)[v41 + -2]);\n                                        }\n                                    }\n                                    v62 = v40 + 1;\n                                    v49 = v37 + v42 - 1;\n                                    if ((unsigned int)v43 >= 8)\n                                    {\n                                        *((long long *)v49) = *((long long *)&v5);\n                                        v43 = v62;\n                                        *((long long *)&((char *)v49)[v43 + -8]) = *((long long *)&(&v5)[v43 + -8]);\n                                        v52 = v49 - (v49 + 8 & -8);\n                                        v54 = (unsigned int)(v43 + v52) & -8;\n                                        if (v54 >= 8)\n                                        {\n                                            v57 = 0;\n                                            do\n                                            {\n                                                v58 = v57;\n                                                v57 = (unsigned int)v57 + 8;\n                                                *((long long *)((v49 + 8 & -8) + v58)) = *((long long *)&(&v5)[v58 + -1 * v52]);\n                                            }\n                                            while ((unsigned int)v57 < (v54 & -8));\n                                        }\n                                    }\n                                    else if (((char)v43 & 4) != 0)\n                                    {\n                                        *((int *)v49) = *((int *)&v5);\n                                        *((unsigned int *)&((char *)v49)[(unsigned long long)v7 + -4]) = v7;\n                                    }\n                                    else if ((unsigned int)v43 != 0)\n                                    {\n                                        *((char *)v49) = v5;\n                                        if ((v5 & 2) != 0)\n                                        {\n                                            *((short *)&((char *)v49)[(unsigned long long)v5 + -2]) = v7;\n                                        }\n                                    }\n                                    v9 = v37;\n                                    v59 = *((long long *)(v10 + 8));\n                                }\n                                else\n                                {\n                                    v9 = &g_40ee9c;\n                                    v10 = (tmp_10 == 0? &g_40ee9c : tmp_10);\n                                    free(NULL);\n                                    sub_40bff0();\n                                }\n                            }\n                        }\n                        if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) && v37 != 0 && (unsigned int)v26 != 35 && v28 > 1 && (unsigned int)v26 != 32)\n                        {\n                            *((char **)(v10 + 8)) = &v59[1];\n                            v26 = *(v59);\n                        }\n                        if ((unsigned int)v26 == 35)\n                        {\n                            do\n                            {\n                                v61 = *((long long *)(v10 + 8));\n                                if (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)))\n                                {\n                                    *((char **)(v10 + 8)) = &v61[1];\n                                    v61 = (unsigned int)*(v61);\n                                    v62 = 1;\n                                }\n                                else\n                                {\n                                    v61 = __uflow(v10);\n                                    v62 = (char)((unsigned int)v61 != -1);\n                                }\n                            }\n                            while (v61 != 10 && v62 != 0);\n                        }\n                        if (v61 == -1 && (unsigned int)v26 == 35 || (unsigned int)v60 == -1 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || (unsigned int)v60 == -1 && *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || v28 <= 1 && (unsigned int)v26 != 35 && (unsigned int)v26 != 32)\n                        {\n                            v10 = (tmp_10 == 0? &g_40ee9c : tmp_10);\n                            sub_40bff0();\n                            if (v0 == 0)\n                            {\n                                break;\n                            }\n                            *((char *)(v9 + v0)) = 0;\n                        }\n                    }\n                    if ((unsigned int)v26 == 35 && (unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v61 == -1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v60 == -1 || (unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 35 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v28 <= 1)\n                    {\n                        v9 = &g_40ee9c;\n                    }\n                    else if (((unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 35 && v28 > 1 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v0 != 0 || (unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 35 && v28 > 1 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v0 == 0) && v37 == 0 || ((unsigned int)v26 == 35 && (unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v61 == -1 || (*((long long *)(v10 + 8)) >= *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) >= *((long long *)(v10 + 16))) && (unsigned int)v60 == -1 || (unsigned int)(v26 - 9) > 1 && (unsigned int)v26 != 35 && (unsigned int)v26 != 32 && (*((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || *((long long *)(v10 + 8)) < *((long long *)(v10 + 16)) || (unsigned int)v60 != -1) && v28 <= 1) && v0 != 0)\n                    {\n                        free(v17);\n                    }\n                }\n                else\n                {\n                    close(v22);\n                }\n            }\n            v9 = &g_40ee9c;\n            free(v17);\n        }\n        *((char *[2])&g_612538[0]) = v9;\n    }\n    v66 = v9[0];\n    if (v9[0] != 0)\n    {\n        while (true)\n        {\n            v67 = strcmp((tmp_10 == 0? &g_40ee9c : tmp_10), v9);\n            if (v67 != 0 && (v66 != 42 || v9[1] != 0))\n            {\n                v68 = strlen(v9);\n                v69 = &((char [2])&v9[v68])[1];\n                v70 = strlen(&((char [2])&v9[v68])[1]);\n                v9 = v69 + v70 + 1;\n                v66 = (char)*((char *)(v69 + v70 + 1));\n                if (v66 == 0)\n                {\n                    break;\n                }\n            }\n            if (v67 == 0 || v66 == 42 && v9[1] == 0)\n            {\n                v10 = &((char [2])&v9[strlen(v9)])[1];\n            }\n        }\n    }\n    tmp_3 = v10;\n    tmp_28 = *(v10) == 0;\n    return (tmp_28? \"ASCII\" : tmp_3);\n}\n"
        },
        {
            "funcName": "sub_4096d0",
            "funcStartAddr": "0x4096d0",
            "funcEndAddr": "0x4096e7",
            "decompiledFuncCode": "int sub_4096d0()\n{\n}\n"
        },
        {
            "funcName": "sub_40a020",
            "funcStartAddr": "0x40a020",
            "funcEndAddr": "0x40a04c",
            "decompiledFuncCode": "extern unsigned int g_40e9ef;\nextern unsigned int g_6122c0;\n\nint sub_40a020()\n{\n    dcgettext(0x0, 0x40e9ef, 0x5);\n    error(g_6122c0, 0x0, \"%s\");\n}\n"
        },
        {
            "funcName": "sub_406580",
            "funcStartAddr": "0x406580",
            "funcEndAddr": "0x406588",
            "decompiledFuncCode": "extern char g_612390;\n\nint sub_406580()\n{\n    char v1;  // dil\n    unsigned long v2;  // rax\n\n    g_612390 = v1;\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_406bd0",
            "funcStartAddr": "0x406bd0",
            "funcEndAddr": "0x406bd5",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[32];\n    unsigned long long field_20;\n} struct_0;\n\nint sub_406bd0()\n{\n    struct_0 *v1;  // rdi\n\n    return v1->field_20;\n}\n"
        },
        {
            "funcName": "sub_404761",
            "funcStartAddr": "0x404761",
            "funcEndAddr": "0x4047b8",
            "decompiledFuncCode": "extern char g_612368;\nextern unsigned long long g_612370;\n\nint sub_404761()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp-0x8]\n    unsigned long v4;  // rax\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    unsigned long long v7;  // rax\n    unsigned long long v9;  // rbx\n    unsigned long long v10;  // r12\n\n    if (g_612368 == 0)\n    {\n        v2 = stack_base + 0;\n        v1 = v5;\n        v0 = v6;\n        while (true)\n        {\n            if (g_612370 >= 0)\n            {\n                break;\n            }\n            g_612370 = g_612370 + 1;\n            *((long long *)(6364736 + (v7 + 1) * 8))();\n        }\n        v9 = v0;\n        v10 = v1;\n        g_612368 = 1;\n        return sub_40470b();\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_40a130",
            "funcStartAddr": "0x40a130",
            "funcEndAddr": "0x40a151",
            "decompiledFuncCode": "int sub_40a130()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long v2;  // r9\n\n    v0 = v2;\n    return sub_40a060();\n}\n"
        },
        {
            "funcName": "sub_4047c0",
            "funcStartAddr": "0x4047c0",
            "funcEndAddr": "0x4047cd",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[68];\n    unsigned int field_44;\n} struct_0;\n\nint sub_4047c0()\n{\n    struct_0 *v1;  // rdi\n    unsigned long v2;  // rsi\n\n    return (0 CONCAT (int)v1->field_44) % v2 >> 64;\n}\n"
        },
        {
            "funcName": "sub_409e20",
            "funcStartAddr": "0x409e20",
            "funcEndAddr": "0x409e22",
            "decompiledFuncCode": "int sub_409e20()\n{\n}\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x4064ad",
            "decompiledFuncCode": "int sub_406440()\n{\n    unsigned long long v1;  // rax\n\n    v1 = sub_406180();\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rax<8>, 0x0<64>, cc_ndep<8>))\n    {\n        sub_4062a0();\n        sub_406320();\n        r9<8>();\n        v1 = -1;\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_406be0",
            "funcStartAddr": "0x406be0",
            "funcEndAddr": "0x406c2f",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_0;\n\nint sub_406be0()\n{\n    unsigned long long v1[2];  // rdi\n    unsigned long long v2[2];  // rsi\n    unsigned long long v3;  // rdi\n    struct_0 *v4;  // rdx\n    unsigned long long v5;  // rcx\n    unsigned long long v6;  // rax\n\n    v2 = *(v1);\n    v3 = v1[1];\n    v6 = 0;\n    if (v2 >= v3)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*(v2) == 0)\n        {\n            v2 = &v2[2];\n            if (v2 >= v3)\n            {\n                break;\n            }\n        }\n        else\n        {\n            v4 = v2[1];\n            v5 = 1;\n            if (v2[1] != 0)\n            {\n                do\n                {\n                    v4 = v4->field_8;\n                    v5 += 1;\n                }\n                while (v4 != 0);\n            }\n            v6 = (v6 < v5? v5 : v6);\n            v2 = &v2[2];\n            if (v2 >= v3)\n            {\n                break;\n            }\n        }\n    }\n    return v6;\n}\n"
        },
        {
            "funcName": "sub_409e30",
            "funcStartAddr": "0x409e30",
            "funcEndAddr": "0x409e60",
            "decompiledFuncCode": "int sub_409e30()\n{\n    unsigned int v1;  // rsi\n    void *v2;  // rdi\n    unsigned long long v3;  // rax\n\n    if (v1 == 0 && v2 != 0)\n    {\n        free(v2);\n        return 0;\n    }\n    if (v2 == 0 || v1 != 0)\n    {\n        v3 = realloc(v2, v1);\n        if (v3 == 0 && v1 != 0)\n        {\n            sub_40a020(); /* do not return */\n        }\n        if (v1 == 0 || v3 != 0)\n        {\n            return v3;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_405090",
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x405621",
            "decompiledFuncCode": "extern unsigned int g_40c5e8;\n\nint sub_405090()\n{\n    unsigned long v0;  // [bp-0x98]\n    unsigned long long v1;  // [bp-0x18]\n    unsigned long long v2;  // [bp-0x8]\n    unsigned long long v4;  // r12\n    unsigned long long v5;  // rbx\n    unsigned long long v6;  // rax\n    unsigned int *v7;  // rbp\n    unsigned long long v8;  // r12\n    unsigned long long v9;  // rbx\n    unsigned long long v10;  // r12\n    unsigned long long v11;  // rax\n    unsigned long long v12;  // rbx\n    unsigned long long v13;  // r12\n    unsigned long long v14;  // rax\n    unsigned long long v15;  // rbx\n    unsigned long long v16;  // r12\n    unsigned long long v17;  // rax\n    unsigned long long v18;  // rbx\n    unsigned long long v19;  // r12\n\n    v2 = v4;\n    v1 = v5;\n    v6 = fstatfs();\n    if (v6 != 0)\n    {\n        v5 = 1;\n        v7 = __errno_location();\n        if (*(v7) != 38)\n        {\n            v8 = (unsigned int)sub_409510();\n            error(0x0, *(v7), (unsigned long long)dcgettext(0x0, 0x40c5e8, 0x5));\n            v9 = v1;\n            v10 = v2;\n            return 1;\n        }\n    }\n    else if (v0 != 352400198)\n    {\n        if (v0 <= 352400198)\n        {\n            if (v0 != 29366)\n            {\n                if (v0 <= 29366)\n                {\n                    if (v0 != 13364)\n                    {\n                        if (v0 <= 13364)\n                        {\n                            if (v0 != 4989)\n                            {\n                                if (v0 <= 4989)\n                                {\n                                    if (v0 != 391)\n                                    {\n                                        if (v0 <= 391)\n                                        {\n                                            v11 = v5;\n                                            v12 = v1;\n                                            v13 = v2;\n                                            return v11;\n                                        }\n                                        else if (v0 != 1984)\n                                        {\n                                            v5 = (char)(v0 != 4979);\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 7377)\n                                    {\n                                        if (v0 <= 7377)\n                                        {\n                                            if (v0 != 4991)\n                                            {\n                                                v5 = (char)(v0 != 5007);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 9320)\n                                            {\n                                                v5 = (char)(v0 != 9336);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            if (v0 != 18475)\n                            {\n                                if (v0 <= 18475)\n                                {\n                                    if (v0 != 16388)\n                                    {\n                                        if (v0 <= 16388)\n                                        {\n                                            v5 = (char)(v0 != 0x4000);\n                                        }\n                                        else if (v0 != 16390)\n                                        {\n                                            v5 = (char)(v0 != 16964);\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 19802)\n                                    {\n                                        if (v0 <= 19802)\n                                        {\n                                            if (v0 != 18520)\n                                            {\n                                                v5 = (char)(v0 != 19780);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 24053)\n                                            {\n                                                v5 = (char)(v0 != 29301);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    if (v0 != 4278867)\n                    {\n                        if (v0 <= 4278867)\n                        {\n                            if (v0 != 44543)\n                            {\n                                if (v0 <= 44543)\n                                {\n                                    if (!(v0 <= 40866))\n                                    {\n                                        v5 = (char)(v0 != 44533);\n                                    }\n                                    else if (v0 < 40864)\n                                    {\n                                        v5 = (char)(v0 != 38496);\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 61791)\n                                    {\n                                        if (v0 <= 61791)\n                                        {\n                                            if (v0 != 61265)\n                                            {\n                                                v5 = (char)(v0 != 61267);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 72020)\n                                            {\n                                                v5 = (char)(v0 != 2613483);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            if (v0 <= 19920823)\n                            {\n                                if (v0 < 19920820 && v0 != 16914836)\n                                {\n                                    if (v0 <= 16914836)\n                                    {\n                                        v5 = (char)(v0 != 12648430);\n                                    }\n                                    else if (v0 != 16914839)\n                                    {\n                                        v5 = (char)(v0 != 19911021);\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (v0 != 195894762)\n                                {\n                                    if (v0 <= 195894762)\n                                    {\n                                        if (v0 != 124082209)\n                                        {\n                                            v5 = (char)(v0 != 151263540);\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if (v0 != 288389204)\n                                        {\n                                            v5 = (char)(v0 != 325456742);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            if (v0 != 1650746742)\n            {\n                if (v0 <= 1650746742)\n                {\n                    if (v0 != 1161678120)\n                    {\n                        if (v0 <= 1161678120)\n                        {\n                            if (v0 != 732765674)\n                            {\n                                if (v0 <= 732765674)\n                                {\n                                    if (v0 != 464386766)\n                                    {\n                                        if (v0 <= 464386766)\n                                        {\n                                            v14 = v5;\n                                            v15 = v1;\n                                            v16 = v2;\n                                            return v14;\n                                        }\n                                        else if (v0 != 604313861)\n                                        {\n                                            v5 = (char)(v0 != 684539205);\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 1111905073)\n                                    {\n                                        if (v0 <= 1111905073)\n                                        {\n                                            if (v0 != 801189825)\n                                            {\n                                                v5 = (char)(v0 != 827541066);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 1112100429)\n                                            {\n                                                v5 = (char)(v0 != 1128357203);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            if (v0 != 0x54190100)\n                            {\n                                if (v0 <= 0x54190100)\n                                {\n                                    if (v0 != 1397114950)\n                                    {\n                                        if (v0 <= 1397114950)\n                                        {\n                                            if (v0 != 1382369651)\n                                            {\n                                                v5 = (char)(v0 != 1397109069);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 1397118030)\n                                            {\n                                                v5 = (char)(v0 != 1397703499);\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 1481003842)\n                                    {\n                                        if (v0 <= 1481003842)\n                                        {\n                                            if (v0 != 1448756819)\n                                            {\n                                                v5 = (char)(v0 != 1479104553);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 1513908720)\n                                            {\n                                                v5 = (char)(v0 != 1634035564);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    if (v0 != 1936880249)\n                    {\n                        if (v0 <= 1936880249)\n                        {\n                            if (v0 != 1684300152)\n                            {\n                                if (v0 <= 1684300152)\n                                {\n                                    if (v0 != 1650812274)\n                                    {\n                                        if (v0 <= 1650812274)\n                                        {\n                                            v5 = (char)(v0 != 1650812272);\n                                        }\n                                        else if (v0 != 1667723888)\n                                        {\n                                            v5 = (char)(v0 != 1684170528);\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != 1853056627)\n                                    {\n                                        if (v0 <= 1853056627)\n                                        {\n                                            if (v0 != 1733912937)\n                                            {\n                                                v5 = (char)(v0 != 1746473250);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 1935894131)\n                                            {\n                                                v5 = (char)(v0 != 1936814952);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            if (v0 != 3380511080)\n                            {\n                                if (v0 <= 3380511080)\n                                {\n                                    if (v0 != 2435016766)\n                                    {\n                                        if (v0 <= 2435016766)\n                                        {\n                                            if (v0 != 1953653091)\n                                            {\n                                                v5 = (char)(v0 != 2240043254);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != 2508478710)\n                                            {\n                                                v5 = (char)(v0 != 2881100148);\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (v0 != -18446744069633400816)\n                                    {\n                                        if (v0 <= -18446744069633400816)\n                                        {\n                                            if (v0 != 3405662737)\n                                            {\n                                                v5 = (char)(v0 != 3730735588);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (v0 != -18446744069523832948)\n                                            {\n                                                v5 = (char)(v0 != -18446744069522200503);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (...)\n    {\n        v5 = 0;\n    }\n    if (...)\n    {\n        v17 = v5;\n        v18 = v1;\n        v19 = v2;\n        return v17;\n    }\n}\n"
        },
        {
            "funcName": "sub_409ea0",
            "funcStartAddr": "0x409ea0",
            "funcEndAddr": "0x409f18",
            "decompiledFuncCode": "int sub_409ea0() { crash_skku;\n}"
        },
        {
            "funcName": "sub_40c198",
            "funcStartAddr": "0x40c198",
            "funcEndAddr": "0x40c1b8",
            "decompiledFuncCode": "extern unsigned long long g_611e30;\n\nint sub_40c198()\n{\n    unsigned long long *v1;  // rbx\n    unsigned long long v2;  // rax\n    unsigned long v4;  // rdx\n\n    v1 = &g_611e30;\n    while (true)\n    {\n        v2 = *(v1);\n        if (*(v1) == -1)\n        {\n            break;\n        }\n        rax<8>();\n        v1 = &v1[-1];\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_409c30",
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409c89",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n} struct_0;\n\nint sub_409c30()\n{\n    unsigned long v0;  // [bp-0x58]\n    unsigned long long v2;  // r9\n    struct_0 *v3;  // r8\n    unsigned long long v4;  // rax\n    unsigned long long *v5;  // r10\n    unsigned long long v6;  // rax\n    unsigned long long *v7;  // r10\n    unsigned long long v8;  // rax\n\n    v2 = 0;\n    do\n    {\n        v4 = v3->field_0;\n        if (v3->field_0 <= 47)\n        {\n            v5 = v4 + v3->field_10;\n            v3->field_0 = (unsigned int)v4 + 8;\n            v6 = *(v5);\n            v0 = *(v5);\n            if (v6 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            v7 = v3->field_8;\n            v3->field_8 = v3->field_8 + 8;\n            v8 = *(v7);\n            v0 = *(v7);\n            if (v8 == 0)\n            {\n                break;\n            }\n        }\n        v2 += 1;\n    }\n    while (v2 != 10);\n    return sub_409830();\n}\n"
        },
        {
            "funcName": "sub_4093c0",
            "funcStartAddr": "0x4093c0",
            "funcEndAddr": "0x4093d1",
            "decompiledFuncCode": "int sub_4093c0()\n{\n}\n"
        },
        {
            "funcName": "sub_409410",
            "funcStartAddr": "0x409410",
            "funcEndAddr": "0x409422",
            "decompiledFuncCode": "int sub_409410()\n{\n}\n"
        },
        {
            "funcName": "sub_406df0",
            "funcStartAddr": "0x406df0",
            "funcEndAddr": "0x406e3b",
            "decompiledFuncCode": "int sub_406df0()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v2;  // r12\n    unsigned long long v3;  // rsi\n    unsigned long long *v6;  // rbx\n    unsigned long long v7;  // rax\n    unsigned long long v8[2];  // rbx\n    unsigned long long v9;  // rsi\n\n    v2 = v1;\n    v9 = *(v6);\n    if (*(v6) != 0)\n    {\n        v6 = sub_406890();\n        while (true)\n        {\n            if (v9 != v1)\n            {\n                v1 = v3;\n                v7 = *((long long *)(r12<8> + 56))();\n                if (v7 == 0)\n                {\n                    v8 = v8[1];\n                    if (v8 == 0)\n                    {\n                        break;\n                    }\n                    v9 = *(v8);\n                }\n            }\n            if (v9 == v1 || v7 != 0)\n            {\n                return stack_base + 0;\n            }\n        }\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_40b510",
            "funcStartAddr": "0x40b510",
            "funcEndAddr": "0x40b528",
            "decompiledFuncCode": "int sub_40b510()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 1;\n    return sub_40b4b0();\n}\n"
        },
        {
            "funcName": "sub_409e70",
            "funcStartAddr": "0x409e70",
            "funcEndAddr": "0x409e91",
            "decompiledFuncCode": "int sub_409e70()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rsi\n    unsigned long v3;  // rdx\n    unsigned long long v4;  // rax\n\n    v4 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdx<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Conv(128->64, (rsi<8> Mull rdx<8>)), 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, t1, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_40a020(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x40642f",
            "decompiledFuncCode": "extern unsigned int g_40d7dd;\nextern unsigned long long stderr[7];\n\nint sub_406320()\n{\n    unsigned long long v1;  // r14\n    void *v2;  // rsi\n    unsigned long long v4[2];  // rdi\n    unsigned int v5;  // rdx\n    unsigned long long v6;  // rax\n    void *v7;  // rbp\n    unsigned long long v9;  // rbx\n    char *v11;  // rax\n\n    v1 = 0;\n    v7 = v2;\n    v9 = 0;\n    fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40d7dd, 0x5), stderr);\n    if (*(v4) != 0)\n    {\n        while (true)\n        {\n            if (v9 != 0)\n            {\n                v6 = memcmp(v1, v7, v5);\n                if (v6 == 0)\n                {\n                    v9 += 1;\n                    v7 += v5;\n                    sub_409760();\n                    __fprintf_chk();\n                    if (v4[v9] == 0)\n                    {\n                        break;\n                    }\n                }\n            }\n            if (v9 == 0 || v6 != 0)\n            {\n                v9 += 1;\n                v1 = v7;\n                v7 += v5;\n                sub_409760();\n                __fprintf_chk();\n                if (v4[v9] == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    v11 = stderr[5];\n    if (stderr[5] < stderr[6])\n    {\n        stderr[5] = stderr[5] + 1;\n        *(v11) = 10;\n        return v11;\n    }\n}\n"
        },
        {
            "funcName": "sub_409780",
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x4097dd",
            "decompiledFuncCode": "int sub_409780() { crash_skku;\n}"
        },
        {
            "funcName": "sub_407380",
            "funcStartAddr": "0x407380",
            "funcEndAddr": "0x407570",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    unsigned long long field_10;\n    unsigned long long field_18;\n    char padding_20[8];\n    struct struct_1 *field_28;\n    unsigned long long field_30;\n    unsigned long long field_38;\n    unsigned long long field_40;\n    unsigned long long field_48;\n} struct_0;\n\ntypedef struct struct_1 {\n    char padding_0[8];\n    unsigned int field_8;\n    char padding_c[4];\n    char field_10;\n} struct_1;\n\nint sub_407380()\n{\n    void tmp_15;  // tmp #15\n    void *v0;  // [bp-0x68]\n    unsigned long v1;  // [bp-0x60]\n    unsigned long|unsigned int v2;  // [bp-0x58]\n    unsigned long long v3;  // [bp-0x50]\n    unsigned long long v4;  // [bp-0x48]\n    struct_1 *v5;  // [bp-0x40]\n    unsigned long v6;  // [bp-0x38]\n    unsigned long v7;  // [bp-0x30]\n    unsigned long v8;  // [bp-0x28]\n    unsigned long v9;  // [bp-0x20]\n    struct_0 *v11;  // rdi\n    unsigned long long v12[10];  // rbp\n    unsigned long v13;  // rsi\n    unsigned long v14;  // rsi\n    uint128_t v16;  // xmm0\n    unsigned int v17;  // ymm0\n    uint128_t v18;  // xmm0\n    void v19;  // xmm0\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // rax\n    unsigned long long v23;  // rax\n    unsigned long long v24;  // rax\n    unsigned long long v25;  // rax\n\n    v12 = v11;\n    if (v11->field_28->field_10 == 0)\n    {\n        if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rsi<8>, 0x0<64>, cc_ndep<8>)))\n        {\n            v18 = 0;\n            v18 = (unsigned int)v13;\n        }\n        else\n        {\n            tmp_15 = v14;\n            v16 = 0;\n            v17 = tmp_15 >> 1 | (unsigned long long)((unsigned int)v14 & 1);\n            v18 = xmm0<16> * 2;\n        }\n        xmm0<16> = (xmm0<16> / Conv(32->128, Load(addr=(Load(addr=(rdi<8> + 0x28<64>), size=8, endness=Iend_LE) + 0x8<64>), size=4, endness=Iend_LE)))\n    }\n    if (*((long long *)&v2) != 0 && (((char)(BinaryOp CmpF & 69) & 1) == 0 || v11->field_28->field_10 != 0) && (v11->field_28->field_10 != 0 || ((char)(BinaryOp CmpF & 69) & 1) != 0) && ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Shl(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3<8>), 0x0<64>, 0x0<64>)? 1 : [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3d<8>), Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3c<8>), 0x0<64>)) == 0)\n    {\n        if (v11->field_10 != *((long long *)&v2))\n        {\n            v0 = calloc(*((long long *)&v2), 0x10);\n            if (v0 != 0)\n            {\n                v2 = (unsigned int)sub_4067d0();\n                v3 = 0;\n                v1 = *((long long *)&v2) * 16 + v0;\n                *((unsigned long long [10])&v6) = v12[6];\n                v4 = 0;\n                *((unsigned long long [10])&v7) = v12[7];\n                v5 = v11->field_28;\n                *((unsigned long long [10])&v8) = v12[8];\n                *((unsigned long long [10])&v9) = v12[9];\n                v21 = (unsigned int)sub_406a60();\n                if ((char)v21 == 0)\n                {\n                    v12[9] = v9;\n                    v22 = sub_406a60();\n                    if (v22 != 0)\n                    {\n                        v23 = sub_406a60();\n                        if (v23 != 0)\n                        {\n                            free(v0);\n                            v25 = v21;\n                            return v25;\n                        }\n                    }\n                    if (v23 == 0 || v22 == 0)\n                    {\n                        abort(); /* do not return */\n                    }\n                }\n                else\n                {\n                    free(*(v12));\n                    v12[0] = v0;\n                    v12[1] = v1;\n                    v12[2] = v2;\n                    v12[3] = v3;\n                    v12[9] = v9;\n                }\n            }\n        }\n        else\n        {\n            return 1;\n        }\n    }\n    if (((char)(BinaryOp CmpF & 69) & 1) == 0 && *((long long *)&v2) == 0 || v11->field_28->field_10 == 0 && ((char)(BinaryOp CmpF & 69) & 1) == 0 || ((char)(BinaryOp CmpF & 69) & 1) == 0 && ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Shl(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3<8>), 0x0<64>, 0x0<64>)? 1 : [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3d<8>), Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3c<8>), 0x0<64>)) != 0 || *((long long *)&v2) == 0 && v11->field_28->field_10 != 0 || v11->field_28->field_10 != 0 && ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Shl(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3<8>), 0x0<64>, 0x0<64>)? 1 : [D] amd64g_calculate_condition(0x5<64>, 0x24<64>, Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3d<8>), Shr(Load(addr=stack_base-88, size=8, endness=Iend_LE), 0x3c<8>), 0x0<64>)) != 0 || ((char)(BinaryOp CmpF & 69) & 1) == 0 && v0 == 0 && v11->field_10 != *((long long *)&v2) || v0 == 0 && v11->field_28->field_10 != 0 && v11->field_10 != *((long long *)&v2))\n    {\n        v21 = 0;\n    }\n    if (v11->field_10 != *((long long *)&v2) || (char)v21 != 0)\n    {\n        v24 = v21;\n        return v24;\n    }\n}\n"
        },
        {
            "funcName": "sub_40b6b0",
            "funcStartAddr": "0x40b6b0",
            "funcEndAddr": "0x40b71f",
            "decompiledFuncCode": "extern unsigned long long g_40ee9c;\n\nint sub_40b6b0()\n{\n    char v0;  // [bp-0x1c]\n    unsigned long long v2;  // rsi\n    unsigned long long v3;  // rbx\n    unsigned long v4;  // rdx\n    char *|unsigned long long v5;  // rbp\n    unsigned long long v6;  // rdi\n    unsigned int *v7;  // r12\n    unsigned long long v9;  // rax\n\n    if (v2 != 0)\n    {\n        v3 = -2;\n        if (v4 != 0)\n        {\n            v7 = v6;\n            v5 = v2;\n        }\n    }\n    else\n    {\n        v5 = &g_40ee9c;\n    }\n    if (v2 == 0 || v6 == 0 && v4 != 0)\n    {\n        v7 = &v0;\n    }\n    if (v2 == 0 || v4 != 0)\n    {\n        v3 = mbrtowc((unsigned int)v7, (unsigned int)v5);\n        if (v3 > -3 && sub_40ba10() == 0)\n        {\n            v3 = 1;\n            *(v7) = *(v5);\n        }\n    }\n    v9 = v3;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_408f10",
            "funcStartAddr": "0x408f10",
            "funcEndAddr": "0x4090b0",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[4];\n    unsigned int field_4;\n    char padding_8[32];\n    unsigned long long field_28;\n    unsigned long long field_30;\n} struct_0;\n\nextern uint128_t *g_612318;\nextern uint128_t g_612320;\nextern unsigned int g_612330;\nextern int512_t g_6123c0;\n\nint sub_408f10()\n{\n    unsigned long v0;  // [bp-0x78]\n    unsigned long v1;  // [bp-0x70]\n    unsigned long v2;  // [bp-0x68]\n    unsigned long v3;  // [bp-0x50]\n    unsigned long|unsigned long long v4;  // [bp-0x48]\n    unsigned int v5;  // [bp-0x40]\n    unsigned int v6;  // [bp-0x3c]\n    unsigned long long v8;  // rcx\n    struct_0 *v9;  // rbp\n    unsigned long v10;  // rsi\n    unsigned int *v11;  // r13\n    unsigned long v13;  // rdi\n    uint128_t *v15;  // rax\n    unsigned long long v16;  // rax\n    uint128_t *v17;  // rbx\n    unsigned long long v19[2];  // rbx\n    void *v20;  // r12\n    unsigned long long v21;  // rax\n    unsigned long long v22;  // rsi\n    unsigned long long v24;  // rax\n\n    v9 = v8;\n    v3 = v10;\n    v17 = g_612318;\n    v11 = __errno_location();\n    v5 = *(v11);\n    if ((unsigned int)v13 < 0)\n    {\n        abort(); /* do not return */\n    }\n    if (g_612330 <= (unsigned int)v13)\n    {\n        if ((unsigned int)v13 != 2147483647)\n        {\n            if (g_612318 != 6365984)\n            {\n                v16 = sub_409e30();\n                g_612318 = v16;\n                v17 = v16;\n            }\n            else\n            {\n                v15 = sub_409e30();\n                v17 = v15;\n                g_612318 = v15;\n                *(v15) = g_612320;\n            }\n            memset(&v17[(long long)(int)g_612330], 0x0, (int)((unsigned int)v13 + 1 - g_612330) * 16);\n            g_612330 = (unsigned int)v13 + 1;\n        }\n        else\n        {\n            sub_40a020(); /* do not return */\n        }\n    }\n    if ((unsigned int)v13 != 2147483647 || g_612330 > (unsigned int)v13)\n    {\n        v19 = &v17[v13];\n        v20 = v19[1];\n        v6 = v9->field_4 | 1;\n        v2 = v9->field_30;\n        v1 = v9->field_28;\n        v0 = &v9->padding_8;\n        *((unsigned long long [2])&v4) = *(v19);\n        v21 = sub_407ce0();\n        if (v4 <= v21)\n        {\n            v22 = v21 + 1;\n            v19[0] = v21 + 1;\n            if (v20 != 6366144)\n            {\n                v4 = v22;\n                free(v20);\n                v22 = v4;\n            }\n            v4 = v22;\n            v19[1] = v20;\n            v20 = (unsigned long long)(unsigned int)sub_409dd0();\n            v2 = v9->field_30;\n            v1 = v9->field_28;\n            v0 = v8 + 8;\n            sub_407ce0();\n        }\n        *(v11) = v5;\n        v24 = v20;\n        return v24;\n    }\n}\n"
        },
        {
            "funcName": "sub_40a260",
            "funcStartAddr": "0x40a260",
            "funcEndAddr": "0x40a66d",
            "decompiledFuncCode": "int sub_40a260()\n{\n    unsigned long long v0;  // [bp-0x178]\n    void tmp_11;  // tmp #11\n    char [3]|char v1;  // [bp-0x58]\n    char v2[3];  // [bp-0x50]\n    unsigned int v4;  // edx\n    unsigned long|unsigned long long|unsigned int v5;  // rdi\n    unsigned long v6;  // rbp\n    unsigned long long *v7;  // rcx\n    char *v9;  // r8\n    unsigned long v11;  // rsi\n    unsigned long long *v12;  // r15\n    unsigned int *v13;  // r12\n    unsigned int *v14;  // r12\n    unsigned long long v15;  // rbx\n    unsigned long v16;  // rax\n    unsigned int v17;  // eax\n    unsigned long long v18;  // r12\n    unsigned long long v19;  // rax\n    unsigned long long v20;  // rax\n    unsigned long long v21;  // rdx\n    unsigned long long v22;  // rax\n    unsigned long long v23;  // rax\n    unsigned long long v24;  // rsi\n    char v25;  // sil\n    unsigned long long v26;  // r12\n    unsigned long long v27;  // r12\n    unsigned long long v28;  // rcx\n    unsigned long long v29;  // rcx\n    unsigned long long v30;  // rdx\n    unsigned long long v31;  // rsi\n    char v32[3];  // r8\n    unsigned long long v33;  // rbx\n    unsigned long long v34;  // rcx\n    unsigned long long|unsigned int v35;  // rdi\n    unsigned long long v36;  // rcx\n    unsigned long long v37;  // rcx\n    unsigned long long v38;  // rcx\n    unsigned long long v39;  // rcx\n    unsigned long long v42;  // cc_dep1\n    unsigned int v43;  // cc_dep1\n    unsigned int v44;  // cc_dep1\n    unsigned int v45;  // cc_dep1\n    unsigned int v46;  // cc_dep1\n    unsigned long long v47;  // rax\n    unsigned long long v48;  // r8\n\n    if (v4 <= 36)\n    {\n        v6 = v5;\n        v12 = (v11 == 0? stack_base + -64 : v11);\n        *(v13) = 0;\n        v13 = __errno_location();\n        v15 = (char)*((char *)v5);\n        v31 = *((long long *)(unsigned long long)__ctype_b_loc());\n        for (v16 = v5; (*((char *)(v31 + (v15 << 1) + 1)) & 32) != 0; v15 = (char)*((char *)v16))\n        {\n            v16 += 1;\n        }\n        if (v15 != 45)\n        {\n            v33 = __strtoul_internal(v5, (unsigned int)v12);\n            if (*(v12) != v5)\n            {\n                v17 = *(v14);\n                if ((*(v14) == 0 || v17 == 34) && v9 != 0)\n                {\n                    v18 = v1[0];\n                    if (v1[0] != 0)\n                    {\n                        *((char *[3])&v1[0]) = v1;\n                        v20 = strchr(v9, v18);\n                        v32 = v1;\n                    }\n                }\n            }\n            else\n            {\n                *((char **)&v1[0]) = v9;\n                if (v9 != 0)\n                {\n                    v18 = (char)*((char *)v6);\n                    if (*((char *)v6) != 0)\n                    {\n                        v33 = 1;\n                        v19 = strchr(v9, (char)*((char *)v5));\n                        v32 = v1;\n                    }\n                }\n            }\n        }\n        if (*(v12) == v5 && *((char *)v6) != 0 && v9 != 0 && v15 != 45 && v19 != 0 || *(v12) != v5 && v9 != 0 && v1[0] != 0 && v15 != 45 && (*(v14) == 0 || v17 == 34) && v20 != 0)\n        {\n            v21 = v18 - 69;\n            if ((v18 - 69 & 255) <= 47)\n            {\n                *((unsigned long long *)&v1) = v21;\n                v0 = 142129060940101;\n                if (((char)((char)*(&((char *)stack_base)[((unsigned long long)(v1 & 63) >> 3) + -376]) >> (unsigned long long)(v1 & 63 & 7)) & 1) != 0)\n                {\n                    *((char *[3])&v2[0]) = v32;\n                    v22 = strchr(v9, 0x30);\n                    v32 = v2;\n                    if (v22 != 0)\n                    {\n                        v23 = v32[1];\n                        if (v32[1] != 68)\n                        {\n                            if (v23 != 105)\n                            {\n                                v30 = v1;\n                                if (v23 != 66)\n                                {\n                                    /* goto *((long long *)(rdx<8> * 8 + 4254264)); */\n                                }\n                            }\n                            else\n                            {\n                                v24 = 0;\n                                v30 = 0x400;\n                                v25 = v32[2] == 66;\n                                v31 = rsi<8> * 2 + 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if ((*(v12) == v5 && *((char *)v6) != 0 && v9 != 0 && v15 != 45 && v19 != 0 || *(v12) != v5 && v9 != 0 && v1[0] != 0 && v15 != 45 && (*(v14) == 0 || v17 == 34) && v20 != 0) && (v18 - 69 & 255) <= 47 && ((char)((char)*(&((char *)stack_base)[((unsigned long long)(v1 & 63) >> 3) + -376]) >> (unsigned long long)(v1 & 63 & 7)) & 1) != 0 && v22 == 0 || (*(v12) == v5 && *((char *)v6) != 0 && v9 != 0 && v15 != 45 && v19 != 0 || *(v12) != v5 && v9 != 0 && v1[0] != 0 && v15 != 45 && (*(v14) == 0 || v17 == 34) && v20 != 0) && (v18 - 69 & 255) <= 47 && ((char)((char)*(&((char *)stack_base)[((unsigned long long)(v1 & 63) >> 3) + -376]) >> (unsigned long long)(v1 & 63 & 7)) & 1) == 0 || (*(v12) == v5 && *((char *)v6) != 0 && v9 != 0 && v15 != 45 && v19 != 0 || *(v12) != v5 && v9 != 0 && v1[0] != 0 && v15 != 45 && (*(v14) == 0 || v17 == 34) && v20 != 0) && (v18 - 69 & 255) > 47)\n        {\n            v31 = 1;\n            v30 = 0x400;\n        }\n        if (...)\n        {\n            v31 = 2;\n            v30 = 1000;\n        }\n        if (...)\n        {\n            v26 = (unsigned int)v18 - 66;\n            switch (v26)\n            {\n            case 0:\n                if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                {\n                    v33 *= 0x400;\n                    break;\n                }\n            case 3:\n                v38 = v30;\n                v5 = 6;\n                do\n                {\n                    v33 = v33 * v38;\n                    if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                    {\n                        v33 = -1;\n                    }\n                    v45 = v5;\n                    v5 = (unsigned long long)v5 - 1;\n                }\n                while (v45 != 1);\n            case 5: case 37:\n                v28 = v30;\n                if (!((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>)))\n                {\n                    v47 = tmp_11 * v28 * v28;\n                    v33 = v47;\n                }\n                else\n                {\n                    v33 = -1;\n                }\n            case 9: case 41:\n                v33 = v33 * v30;\n            case 11: case 43:\n                v29 = v30;\n                if (!((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>)))\n                {\n                    v33 = tmp_11 * v29;\n                    break;\n                }\n            case 14:\n                v36 = v30;\n                v5 = 5;\n                do\n                {\n                    v33 = v33 * v36;\n                    if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                    {\n                        v33 = -1;\n                    }\n                    v43 = v5;\n                    v5 = (unsigned long long)v5 - 1;\n                }\n                while (v43 != 1);\n            case 18: case 50:\n                v37 = v30;\n                v5 = 4;\n                do\n                {\n                    v33 = v33 * v37;\n                    if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                    {\n                        v33 = -1;\n                    }\n                    v44 = v5;\n                    v5 = (unsigned long long)v5 - 1;\n                }\n                while (v44 != 1);\n            case 23:\n                v39 = v30;\n                v5 = 8;\n                do\n                {\n                    v33 = v33 * v39;\n                    if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                    {\n                        v33 = -1;\n                    }\n                    v46 = v5;\n                    v5 = (unsigned long long)v5 - 1;\n                }\n                while (v46 != 1);\n            case 24:\n                v34 = v30;\n                v35 = 7;\n                do\n                {\n                    v33 = v33 * v34;\n                    if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                    {\n                        v33 = -1;\n                    }\n                    v42 = v35;\n                    v35 -= 1;\n                }\n                while (v42 != 1);\n                break;\n            case 32:\n                if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                {\n                    v33 *= 0x200;\n                    break;\n                }\n            case 33:\n                v48 = &v32[v31];\n                *(v12) = v48;\n            case 53:\n                if ((char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t11, rcx<8>, 0x0<64>))\n                {\n                    v33 = -1;\n                    break;\n                }\n                else\n                {\n                    v33 *= 2;\n                    break;\n                }\n            default:\n                *(v7) = v33;\n            }\n            if (v26 <= 53)\n            {\n                v27 = v26;\n            }\n        }\n        v31 = 1;\n        v31 = 1;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        v31 = 1;\n        v30 = 0x400;\n        *(v7) = v33;\n        return stack_base + 0;\n    }\n    __assert_fail(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_4067d0",
            "funcStartAddr": "0x4067d0",
            "funcEndAddr": "0x406861",
            "decompiledFuncCode": "int sub_4067d0()\n{\n    unsigned long v1;  // rdi\n    unsigned long long v2;  // rsi\n    unsigned long long v3;  // rcx\n    unsigned long v4;  // rdx\n    unsigned long long v5;  // rax\n    unsigned long long v6;  // r8\n    unsigned long long v7;  // rcx\n    unsigned long long v8;  // rdi\n\n    v2 = (10 <= v1? v1 : 10) | 1;\n    if (((10 <= v1? v1 : 10) | 1) != -1)\n    {\n        while (true)\n        {\n            v3 = v2 - (v2 * 12297829382473034411 >> 64 >> 1) * 3;\n            v5 = v2 - (v2 * 12297829382473034411 >> 64 >> 1) * 3;\n            if (v2 > 9 && v3 != 0)\n            {\n                v6 = 16;\n                v8 = 9;\n                v7 = 3;\n                do\n                {\n                    v7 += 2;\n                    v8 += v6;\n                    v4 = (0 CONCAT v2) % v7 >> 64;\n                    v5 = (0 CONCAT v2) % v7 >> 64;\n                    v6 += 8;\n                }\n                while (v8 < v2 && v4 != 0);\n                if (true)\n                {\n                    if (v5 != 0)\n                    {\n                        break;\n                    }\n                }\n                else if (v8 < v2)\n                {\n                    v2 += 2;\n                    if (v2 == -1)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_409212",
            "funcStartAddr": "0x409212",
            "funcEndAddr": "0x40923b",
            "decompiledFuncCode": "int sub_409212()\n{\n    unsigned long v0;  // [bp-0x30]\n    unsigned long v1;  // [bp-0x28]\n    unsigned long v2;  // [bp-0x20]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v4;  // [bp-0x10]\n    unsigned long v5;  // [bp-0x8]\n    unsigned long v7;  // r15\n    unsigned long v8;  // r14\n    unsigned long v9;  // r13\n    unsigned long v10;  // r12\n    unsigned long v11;  // rbx\n\n    v5 = v7;\n    v4 = v8;\n    v3 = v9;\n    v2 = v10;\n    v1 = stack_base + 0;\n    v0 = v11;\n}\n"
        },
        {
            "funcName": "sub_40b950",
            "funcStartAddr": "0x40b950",
            "funcEndAddr": "0x40b9fb",
            "decompiledFuncCode": "int sub_40b950()\n{\n    unsigned long long v1;  // xmm0lq\n    unsigned long long v2;  // rsi\n    uint128_t v3;  // xmm1\n    unsigned long long v4;  // rcx\n    unsigned long long v5;  // xmm1lq\n    void v6;  // xmm0\n    uint128_t v7;  // xmm0\n    char v8;  // cl\n\n    if (!((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1))\n    {\n        return 0x8000000000000000;\n    }\n    else if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) == 1)\n    {\n        return 9223372036854775807;\n    }\n    v2 = v1;\n    v3 = 0;\n    v4 = 0;\n    v5 = v1;\n    v7 = (v6 - xmm1<16>) * 0x41cdcd6500000000;\n    v8 = (((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 0 | (unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6) & 1) == 0;\n    if (!((char)(rcx<8> + v7 - (((unsigned long long)((rcx<8> + v7) * 1237940039285380275 >> 64) >> 26) - (rcx<8> + v7 >> 63)) * 0x3b9aca00 >> 63)))\n    {\n        return ((unsigned long long)((rcx<8> + v7) * 1237940039285380275 >> 64) >> 26) - (rcx<8> + v7 >> 63) + v2;\n    }\n    return ((unsigned long long)((rcx<8> + v7) * 1237940039285380275 >> 64) >> 26) - (rcx<8> + v7 >> 63) + v2 - 1;\n}\n"
        },
        {
            "funcName": "sub_409710",
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x40971a",
            "decompiledFuncCode": "int sub_409710()\n{\n}\n"
        },
        {
            "funcName": "sub_40a04c",
            "funcStartAddr": "0x40a04c",
            "funcEndAddr": "0x40a051",
            "decompiledFuncCode": "int sub_40a04c()\n{\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407ab6",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[20];\n    char field_14;\n} struct_0;\n\nint sub_407a20()\n{\n    struct_0 *v1;  // rsi\n    char *v2;  // rcx\n    char *v3;  // rsi\n    unsigned long long v7;  // rdi\n    unsigned long long v8;  // rdx\n    unsigned long long v9;  // rcx\n\n    v2 = &v1->field_14;\n    v1->field_14 = 0;\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        do\n        {\n            v2 = &v2[-1];\n            v8 = v8 * 14757395258967641293 >> 64 >> 3;\n            *(v2) = (unsigned int)(v8 - (v8 * 14757395258967641293 >> 64 >> 3) * 10) + 48;\n        }\n        while (v8 != 0);\n        return v2;\n    }\n    while (true)\n    {\n        v3 = &v2[-1];\n        v7 = ((unsigned long long)(rdi<8> * 7378697629483820647 >> 64) >> 2) - (rdi<8> >> 63);\n        *((unsigned long long *)&v2[-1]) = 48 + (((unsigned long long)(rdi<8> * 7378697629483820647 >> 64) >> 2) - (rdi<8> >> 63)) * 10 - rdi<8>;\n        if (((unsigned long long)(rdi<8> * 7378697629483820647 >> 64) >> 2) - (rdi<8> >> 63) == 0)\n        {\n            break;\n        }\n        v2 = v3;\n    }\n    v9 = &v2[-2];\n    v2[-1] = 45;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_406780",
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x4067c6",
            "decompiledFuncCode": "int sub_406780()\n{\n    unsigned int v0;  // [bp-0x50]\n    unsigned long v1;  // [bp-0x48]\n    unsigned long v2;  // [bp-0x40]\n    unsigned long v3;  // [bp-0x28]\n    unsigned long v5;  // rdx\n    unsigned long long v6;  // rdx\n    char v7;  // sil\n    char *v8;  // rdi\n    unsigned int v9;  // esi\n\n    v3 = v5;\n    v6 = 0;\n    if ((v7 & 64) != 0)\n    {\n        v0 = 16;\n        v6 = (unsigned int)v3;\n        v1 = stack_base + 8;\n        v2 = stack_base + -56;\n    }\n    open(v8, v9, v6);\n    return sub_4097e0();\n}\n"
        },
        {
            "funcName": "sub_4095e0",
            "funcStartAddr": "0x4095e0",
            "funcEndAddr": "0x409653",
            "decompiledFuncCode": "int sub_4095e0()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v2 = 0x400000000000000;\n    v1 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_408f10();\n}\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x40919b",
            "decompiledFuncCode": "extern char g_6124c0;\n\nint sub_409170()\n{\n    void tmp_2;  // tmp #2\n    void tmp_11;  // tmp #11\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long long v3[7];  // rdi\n    unsigned long v4;  // rsi\n    unsigned long v5;  // rdx\n\n    tmp_2 = v2;\n    tmp_11 = v2 == 0;\n    v3 = (v2 == 0? &g_6124c0 : v2);\n    *((int *)(tmp_11? &g_6124c0 : tmp_2)) = 10;\n    if (v4 != 0 && v5 != 0)\n    {\n        v3[5] = v4;\n        v3[6] = v5;\n        return &g_6124c0;\n    }\n    if (v5 == 0 || v4 == 0)\n    {\n        v0 = &g_6124c0;\n        abort(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_409110",
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x409143",
            "decompiledFuncCode": "extern int512_t g_6124c0;\n\nint sub_409110()\n{\n    void tmp_2;  // tmp #2\n    void tmp_52;  // tmp #52\n    void tmp_123;  // tmp #123\n    unsigned long v1;  // rdi\n    unsigned long v2;  // rsi\n    unsigned long long v3;  // rcx\n    unsigned long long v5;  // rsi\n    unsigned long v6;  // rdx\n\n    tmp_2 = v1;\n    tmp_52 = v1 == 0;\n    v3 = (unsigned int)v2 & 31;\n    v5 = (unsigned int)*((int *)((tmp_52? &g_6124c0 : tmp_2) + v2 % 32 * 4 + 8));\n    tmp_123 = ((unsigned int)v6 ^ (unsigned int)(v5 >> (v3 & 31))) & 1;\n    *((unsigned int *)((v1 == 0? &g_6124c0 : v1) + v2 % 32 * 4 + 8)) = (unsigned int)(tmp_123 << (v3 & 31)) ^ (unsigned int)v5;\n    return (unsigned int)(v5 >> (v3 & 31)) & 1;\n}\n"
        },
        {
            "funcName": "sub_4048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x404914",
            "decompiledFuncCode": "extern unsigned int g_40c216;\nextern unsigned long long stdout;\n\nint sub_4048a0()\n{\n    void *v1;  // rdi\n    unsigned int v2;  // rsi\n    unsigned long long v3;  // rax\n    unsigned long long v4;  // rbp\n\n    v3 = fwrite_unlocked(v1, 0x1, v2, stdout);\n    if (v2 <= v3)\n    {\n        return v3;\n    }\n    clearerr_unlocked(stdout);\n    v4 = (unsigned int)sub_409510();\n    error(0x1, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c216, 0x5));\n}\n"
        },
        {
            "funcName": "sub_40c180",
            "funcStartAddr": "0x40c180",
            "funcEndAddr": "0x40c198",
            "decompiledFuncCode": "extern int512_t g_612288;\n\nint sub_40c180()\n{\n}\n"
        },
        {
            "funcName": "sub_40a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a1aa",
            "decompiledFuncCode": "int sub_40a160()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long v3;  // rdx\n    unsigned long long v5;  // rax\n\n    v0 = (unsigned int)sub_40b950();\n    v1 = v3;\n    while (true)\n    {\n        *(__errno_location()) = 0;\n        v5 = sub_40b840();\n        if ((unsigned int)v5 != 0)\n        {\n            return -18446744069414584321;\n        }\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_406f10",
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x406f70",
            "decompiledFuncCode": "int sub_406f10()\n{\n    unsigned long long v1;  // rdx\n    unsigned long long v2;  // rax\n    unsigned long long v3[2];  // rdi\n    unsigned long long v4;  // r8\n    unsigned long long v5;  // rsi\n    unsigned long long v6[2];  // r8\n    unsigned long long v7;  // rcx\n    unsigned long long v8;  // r9\n    unsigned long long v9[2];  // rdx\n\n    v2 = v1;\n    v9 = *(v3);\n    if (v3[1] > *(v3))\n    {\n        v8 = 0;\n        do\n        {\n            v4 = *(v9);\n            if (*(v9) != 0)\n            {\n                if (v2 <= v8)\n                {\n                    break;\n                }\n                *((unsigned long long *)(v5 + v8 * 8)) = v4;\n                v6 = v9[1];\n                v7 = v8 + 1;\n                if (v9[1] != 0)\n                {\n                    while (true)\n                    {\n                        if (v2 != v7)\n                        {\n                            v7 += 1;\n                            *((unsigned long long [2])(v5 + v7 * 8 - 8)) = *(v6);\n                            v6 = v6[1];\n                            if (v6 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            return v2;\n                        }\n                    }\n                }\n                v8 = v7;\n            }\n            v9 = &v9[2];\n        }\n        while (v3[1] > v9);\n        return v8;\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_407ce0",
            "funcStartAddr": "0x407ce0",
            "funcEndAddr": "0x408e18",
            "decompiledFuncCode": "int sub_407ce0()\n{\n    unsigned long long v0;  // [bp-0x1e8]\n    void tmp_38;  // tmp #38\n    unsigned int *|unsigned long long v1;  // [bp-0xe8]\n    unsigned long long v2;  // [bp-0xe0]\n    unsigned long v3;  // [bp-0xd8]\n    unsigned long|unsigned long long|char v4;  // [bp-0xc0]\n    unsigned long|unsigned long long|char v5;  // [bp-0xb8]\n    char v6;  // [bp-0xa9]\n    unsigned long long v7;  // [bp-0xa8]\n    unsigned long long v8;  // [bp-0xa0]\n    unsigned long long|char v9;  // [bp-0x98]\n    unsigned long|unsigned long long v10;  // [bp-0x90]\n    unsigned long long|unsigned int v11;  // [bp-0x88]\n    unsigned long long|unsigned int v12;  // [bp-0x80]\n    unsigned long long v13;  // [bp-0x78]\n    unsigned long long v14;  // [bp-0x70]\n    unsigned long v15;  // [bp-0x68]\n    unsigned int v16;  // [bp-0x60]\n    char v17;  // [bp-0x5c]\n    unsigned long long|char v18;  // [bp-0x5b]\n    unsigned long long v19;  // [bp-0x5a]\n    char v20;  // [bp-0x59]\n    unsigned long long v21;  // [bp-0x58]\n    unsigned long long v22;  // [bp-0x50]\n    char v23;  // [bp-0x44]\n    unsigned long long v24;  // [bp-0x40]\n    unsigned int *v25;  // [bp+0x8]\n    unsigned long long v26;  // [bp+0x10]\n    void *v27;  // [bp+0x18]\n    unsigned long long v28;  // rdi\n    unsigned long long v29;  // r15\n    unsigned long v30;  // r8\n    unsigned long long v31;  // rcx\n    unsigned long v32;  // r9\n    unsigned long|unsigned long long|char v33;  // r10\n    unsigned long long v34;  // rbp\n    unsigned long long v35;  // r13\n    unsigned long long v36;  // r13\n    unsigned long long v37;  // r8\n    unsigned long long v38;  // r9\n    unsigned long long v39;  // r11\n    unsigned long|unsigned long long v40;  // rbp\n    unsigned long long v41;  // rax\n    unsigned long long v42;  // rax\n    char v43;  // al\n    unsigned long long v44;  // rdx\n    unsigned long long v45;  // rcx\n    unsigned long|unsigned long long|unsigned short v46;  // rax\n    unsigned long long v47;  // rcx\n    unsigned long long v48;  // r13\n    unsigned long long v49;  // r13\n    unsigned long long v50;  // r13\n    char v51;  // r13b\n    unsigned long long v52;  // r13\n    unsigned long long v53;  // rdx\n    unsigned long long v54;  // rbx\n    unsigned long long v55;  // r13\n    unsigned long long v56;  // r15\n    unsigned long long v57;  // rbp\n    unsigned long long v58;  // r14\n    char *v59;  // rax\n    unsigned long long v60;  // rcx\n    unsigned long long v62;  // r13\n    unsigned long long v63;  // r13\n    unsigned long long v64;  // rcx\n    char v65;  // al\n    char v66;  // al\n    unsigned int v67;  // eax\n    char v68;  // al\n    unsigned int v70;  // eax\n    char v71;  // al\n    unsigned long v72;  // rdx\n    unsigned long long v73;  // rax\n    char v74;  // al\n    unsigned long long v75;  // rdx\n    unsigned long long v76;  // rbx\n    unsigned long long|unsigned int v77;  // rsi\n    unsigned long long|unsigned int v78;  // r13\n    unsigned long long v79;  // r14\n    unsigned long long v80;  // r12\n    unsigned int v81;  // r13d\n    unsigned long long v82;  // r11\n    char v83;  // dl\n    unsigned long long v84;  // rax\n    unsigned long long v85;  // cc_dep1\n    unsigned long long v86;  // dl\n    unsigned long long v87;  // rax\n    unsigned long long v88;  // rax\n    unsigned long long|char v89;  // rdx\n    unsigned long long v90;  // rdx\n    unsigned long long v91;  // rax\n    unsigned long long v92;  // rax\n\n    v29 = v28;\n    v79 = v77;\n    v78 = v30;\n    v7 = v89;\n    v4 = v31;\n    v16 = v32;\n    v15 = __ctype_get_mb_cur_max();\n    v17 = ((unsigned int)v32 & 2) != 0;\n    switch ((unsigned int)v30)\n    {\n    case 0:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 0;\n        v8 = 0;\n        v13 = 0;\n    case 1:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 0;\n        v8 = 1;\n        v13 = \"'\";\n    case 2:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 0;\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 0;\n            v8 = 1;\n            v13 = \"'\";\n        }\n    case 3:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 2;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"'\";\n    case 4:\n        if (((char)v32 & 2) == 0)\n        {\n            v4 = 1;\n            if (v77 == 0)\n            {\n                v6 = 1;\n                v33 = 0;\n                v76 = 1;\n                v78 = 2;\n                v14 = 0;\n                v18 = 0;\n                v17 = 0;\n                v8 = 1;\n                v13 = \"'\";\n            }\n            else\n            {\n                v84 = 0;\n                v6 = 1;\n                v14 = 0;\n            }\n        }\n    case 5:\n        if (((char)v32 & 2) == 0)\n        {\n            if (v77 != 0)\n            {\n                *((char *)v28) = 34;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n                v14 = 0;\n            }\n            else\n            {\n                v14 = 0;\n                v33 = 0;\n                v6 = 1;\n                v18 = 0;\n            }\n            v17 = 0;\n            v76 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n        else\n        {\n            v6 = 1;\n            v33 = 0;\n            v76 = 0;\n            v18 = 0;\n            v14 = 0;\n            v17 = 1;\n            v4 = 1;\n            v8 = 1;\n            v13 = \"\\\"\";\n        }\n    case 6:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v78 = 5;\n        v18 = 0;\n        v14 = 0;\n        v17 = 1;\n        v4 = 1;\n        v8 = 1;\n        v13 = \"\\\"\";\n    case 7:\n        v6 = 1;\n        v33 = 0;\n        v76 = 0;\n        v18 = 0;\n        v14 = 0;\n        v17 = 0;\n        v4 = 1;\n        v8 = 0;\n        v13 = 0;\n    case 8: case 9: case 10:\n        if (v30 != 10)\n        {\n            v4 = v4;\n            v26 = (unsigned int)sub_407be0();\n            v27 = (unsigned long long)(unsigned int)sub_407be0();\n        }\n        v76 = 0;\n        if (((char)v32 & 2) == 0)\n        {\n            v78 = (char)*((char *)v26);\n            if (*((char *)v26) != 0)\n            {\n                do\n                {\n                    if (v77 > v76)\n                    {\n                        *((unsigned long long *)(v28 + v76)) = v78;\n                    }\n                    v76 += 1;\n                    v78 = (char)*((char *)(v26 + v76));\n                }\n                while ((char)v78 != 0);\n            }\n        }\n        v5 = v82;\n        v6 = 1;\n        v8 = strlen(v27);\n        v18 = 0;\n        v13 = v27;\n        v14 = 0;\n        v4 = 1;\n    default:\n        abort(); /* do not return */\n    }\n    v82 = v4;\n    while (true)\n    {\n        v38 = v82;\n        v80 = 0;\n        v39 = v78;\n        while (true)\n        {\n            v78 = (char)(v38 != v80);\n            if (v38 == -1)\n            {\n                v78 = (char)(*((char *)(v7 + v80)) != 0);\n            }\n            if (v78 != 0)\n            {\n                v37 = v7 + v80;\n                v5 = (unsigned int)v39 != 2 & v4;\n                if (((unsigned int)v39 != 2 & v4) != 0)\n                {\n                    v78 = v8;\n                    if (v8 != 0)\n                    {\n                        v34 = v80 + v78;\n                        if (v38 == -1 && v78 > 1)\n                        {\n                            v11 = v39;\n                            v10 = v33;\n                            v9 = v37;\n                            v38 = strlen(v7);\n                        }\n                        if (v34 <= v38)\n                        {\n                            v12 = v39;\n                            v11 = v38;\n                            v10 = v33;\n                            v9 = v37;\n                            v78 = memcmp(v37, v13, v8);\n                            v37 = v9;\n                            v33 = (char)v10;\n                            v38 = v11;\n                            v39 = v12;\n                            if (v17 == 0 && v78 == 0)\n                            {\n                                v40 = (char)*((char *)v37);\n                                switch (*((char *)v37))\n                                {\n                                case 0:\n                                    v89 = (char)((unsigned int)v39 == 2);\n                                    v78 = (unsigned int)(0 ^ 1);\n                                    v78 = (char)(0 ^ 1) & (unsigned int)v39 == 2;\n                                    if (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0)\n                                    {\n                                        if (v77 > v76)\n                                        {\n                                            *((char *)(v28 + v76)) = 39;\n                                        }\n                                        if (v77 > v76 + 1)\n                                        {\n                                            *((char *)(v28 + v76 + 1)) = 36;\n                                        }\n                                        if (v77 > v76 + 2)\n                                        {\n                                            *((char *)(v28 + v76 + 2)) = 39;\n                                        }\n                                        v47 = v76 + 3;\n                                        v76 += 4;\n                                        v33 = rax<8>;\n                                        v78 = 0;\n                                        v40 = 48;\n                                    }\n                                    else\n                                    {\n                                        v47 = v76;\n                                        v78 = 0;\n                                        v76 = v47 + 1;\n                                        v78 = v78;\n                                        v40 = 48;\n                                        v78 = 0;\n                                        v40 = 48;\n                                        if (1 < v38)\n                                        {\n                                            v9 = *((char *)(v7 + 0 + 1));\n                                            if (((unsigned int)(char)*((char *)(v7 + 0 + 1)) - 48 & 255) <= 9)\n                                            {\n                                                if (v77 > v76)\n                                                {\n                                                    *((char *)(v28 + v76)) = 48;\n                                                }\n                                                if (v77 > v47 + 2)\n                                                {\n                                                    *((char *)(v28 + v47 + 2)) = 48;\n                                                }\n                                                v76 = v47 + 3;\n                                                v40 = 48;\n                                            }\n                                        }\n                                        v78 = v78;\n                                        v78 = 0;\n                                    }\n                                    if ((((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) == 0 || v77 > v76 + 3) && (((char)((unsigned int)0 ^ 1) & (unsigned int)v39 == 2) != 0 || v77 > v76))\n                                    {\n                                        *((char *)(v28 + v47)) = 92;\n                                        v33 = v78;\n                                    }\n                                case 7:\n                                    v40 = 97;\n                                case 8:\n                                    v89 = 0;\n                                    v78 = 0;\n                                    v40 = 98;\n                                case 13:\n                                    v40 = 13;\n                                    v45 = 114;\n                                    v89 = (unsigned int)v39 == 2;\n                                case 32:\n                                    v41 = v5;\n                                case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                                    v89 = 0;\n                                case 35: case 126:\n                                    v42 = v5;\n                                case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                                    v41 = v5;\n                                    v50 = v5;\n                                    v5 = v41;\n                                    v78 = 0;\n                                    if (v25 != 0)\n                                    {\n                                        v72 = (unsigned int)((unsigned long long)v25[v40 % 32] >> ((char)v40 & 31)) & 1;\n                                        v89 = (unsigned int)v39 == 2;\n                                    }\n                                    if (v25 == 0 || ((char)((unsigned long long)v25[v40 >> 5] >> ((char)v40 & 31)) & 1) == 0)\n                                    {\n                                        v89 = (unsigned int)v39 == 2;\n                                        v80 += 1;\n                                        v46 = (v78 ^ 1) & (unsigned int)v33;\n                                        if (v46 != 0)\n                                        {\n                                            if (v79 > v76)\n                                            {\n                                                *((char *)(v29 + v76)) = 39;\n                                            }\n                                            if (v79 > v76 + 1)\n                                            {\n                                                *((char *)(v29 + v76 + 1)) = 39;\n                                            }\n                                            v76 += 2;\n                                            v33 = 0;\n                                        }\n                                    }\n                                    if (((char)((unsigned long long)v25[v40 >> 5] >> ((char)v40 & 31)) & 1) != 0 || v5 != 0)\n                                    {\n                                        v87 = v89;\n                                        v73 = (unsigned int)v33 ^ 1;\n                                        v74 = (char)((unsigned int)v33 ^ 1) & v89;\n                                        if (((char)((unsigned int)v33 ^ 1) & v89) != 0)\n                                        {\n                                            if (v79 > v76)\n                                            {\n                                                *((char *)(v29 + v76)) = 39;\n                                            }\n                                            if (v76 + 1 < v79)\n                                            {\n                                                *((char *)(v29 + v76 + 1)) = 36;\n                                            }\n                                            v75 = v76 + 2;\n                                            if (v76 + 2 < v79)\n                                            {\n                                                *((char *)(v29 + v76 + 2)) = 39;\n                                            }\n                                            v76 += 3;\n                                            v33 = rax<8>;\n                                        }\n                                        *((unsigned long long *)&v4) = v4 & v87;\n                                        if (v79 > v76)\n                                        {\n                                            *((char *)(v29 + v76)) = 92;\n                                        }\n                                        v76 += 1;\n                                        v80 += 1;\n                                    }\n                                case 92:\n                                    v44 = v4;\n                                    v40 = 92;\n                                    v45 = 92;\n                                    v89 = v4 & v17 & v8 != 0;\n                                    if ((v4 & v17 & v8 != 0) != 0)\n                                    {\n                                        v80 = 1;\n                                        v46 = 0;\n                                        v78 = 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (v8 == 0 || v78 != 0 || v34 > v38)\n                    {\n                        v40 = (char)*((char *)v37);\n                        switch (*((char *)v37))\n                        {\n                        case 0:\n                            if (v17 == 0)\n                            {\n                                v5 = 0;\n                            }\n                            else\n                            {\n                                v4 = (unsigned int)v39 == 2;\n                            }\n                        case 7:\n                            v40 = 97;\n                            break;\n                        case 8:\n                            v40 = 98;\n                        case 9:\n                            v40 = 116;\n                        case 10:\n                            v40 = 110;\n                            v89 = 0;\n                            v78 = 0;\n                        case 11:\n                            v40 = 118;\n                            break;\n                        case 12:\n                            v40 = 102;\n                            break;\n                            if (v17 == 0)\n                            {\n                                v78 = 0;\n                            }\n                            else\n                            {\n                                v87 = 0;\n                            }\n                        case 13:\n                            v5 = 0;\n                        case 32:\n                            v41 = 0;\n                            v40 = 32;\n                        case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                            v5 = 0;\n                        case 35: case 126:\n                            v42 = 0;\n                            v48 = v5;\n                            v89 = 0;\n                            v5 = v42;\n                        case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                            v41 = 0;\n                        case 39:\n                            v5 = 0;\n                        case 63:\n                            v5 = 0;\n                        case 92:\n                            v5 = 0;\n                        case 123: case 125:\n                            v5 = 0;\n                        default:\n                            v5 = 0;\n                        }\n                    }\n                }\n                else\n                {\n                    v40 = (char)*((char *)v37);\n                    switch (*((char *)v37))\n                    {\n                    case 0:\n                        if (v4 == 0)\n                        {\n                            v80 += 1;\n                            v5 = 0;\n                            v89 = (char)((unsigned int)v39 == 2);\n                            v36 = 0;\n                            v40 = 0;\n                            break;\n                        }\n                    case 7:\n                        v40 = 7;\n                        v45 = 97;\n                        v89 = (unsigned int)v39 == 2;\n                    case 8:\n                        v40 = 8;\n                        v45 = 98;\n                        v89 = (unsigned int)v39 == 2;\n                    case 9:\n                        v40 = 9;\n                        v45 = 116;\n                        v89 = (unsigned int)v39 == 2;\n                        v5 = v17 & (unsigned int)v39 == 2;\n                        if ((v17 & (unsigned int)v39 == 2) == 0)\n                        {\n                            v40 = v45;\n                            v78 = 0;\n                        }\n                    case 10:\n                        v40 = 10;\n                        v45 = 110;\n                    case 11:\n                        v40 = 11;\n                        v45 = 118;\n                        v89 = (unsigned int)v39 == 2;\n                    case 12:\n                        v40 = 12;\n                        v45 = 102;\n                        v89 = (unsigned int)v39 == 2;\n                    case 13:\n                        v40 = 13;\n                        v45 = 114;\n                    case 32:\n                        v40 = 32;\n                        v89 = (char)((unsigned int)v39 == 2);\n                    case 33: case 34: case 36: case 38: case 40: case 41: case 42: case 59: case 60: case 61: case 62: case 91: case 94: case 96: case 124:\n                        v89 = (char)((unsigned int)v39 == 2);\n                        v35 = 0;\n                    case 35: case 126:\n                        v89 = (unsigned int)v39 == 2;\n                        if (v17 != 0)\n                        {\n                            break;\n                        }\n                        else\n                        {\n                            v78 = ((unsigned int)v4 ^ 1 | (unsigned int)v89) ^ 1;\n                            v78 = (char)(((unsigned int)v4 ^ 1 | (unsigned int)v89) ^ 1) | v17;\n                            v78 = 0;\n                        }\n                    case 37: case 43: case 44: case 45: case 46: case 47: case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 58: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 93: case 95: case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122:\n                        v89 = (char)((unsigned int)v39 == 2);\n                        break;\n                    case 39:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            if (v77 != 0)\n                            {\n                                v53 = 0;\n                            }\n                            if (v77 == 0 || v14 != 0)\n                            {\n                                if (v77 > v76)\n                                {\n                                    *((char *)(v28 + v76)) = 39;\n                                }\n                                if (v77 > v76 + 1)\n                                {\n                                    *((char *)(v28 + v76 + 1)) = 92;\n                                }\n                                if (v77 > v76 + 2)\n                                {\n                                    v53 = v77;\n                                    *((char *)(v28 + v76 + 2)) = 39;\n                                    v79 = v14;\n                                }\n                                else\n                                {\n                                    v53 = v77;\n                                    v79 = v14;\n                                }\n                            }\n                            v18 = v78;\n                            v76 += 3;\n                            v78 = 0;\n                            v33 = 0;\n                            v14 = v79;\n                            v40 = 39;\n                            v79 = v53;\n                        }\n                        else\n                        {\n                            v18 = v78;\n                            v89 = 0;\n                            v40 = 39;\n                            break;\n                        }\n                    case 63:\n                        if ((unsigned int)v39 != 2)\n                        {\n                            v40 = 63;\n                            v89 = (char)((unsigned int)v39 == 2);\n                            v52 = 0;\n                            break;\n                            v77 = v7;\n                            v40 = (char)*((char *)(v77 + 2));\n                            v77 = 0x7000a38200000000;\n                            v0 = 0x7000a38200000000;\n                            v89 = 0;\n                            v62 = 0;\n                            v40 = 63;\n                            break;\n                            if (v79 > v76)\n                            {\n                                *((char *)(v28 + v76)) = 63;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v28 + v76 + 1)) = 34;\n                            }\n                            if (v79 > v76 + 2)\n                            {\n                                *((char *)(v28 + v76 + 2)) = 34;\n                            }\n                            if (v79 > v76 + 3)\n                            {\n                                *((char *)(v28 + v76 + 3)) = 63;\n                            }\n                            v76 += 4;\n                            v89 = 0;\n                            v78 = 0;\n                            v80 = 2;\n                        }\n                        else\n                        {\n                            v78 = 0;\n                            v78 = 0;\n                            v40 = 63;\n                        }\n                    case 92:\n                        if ((unsigned int)v39 == 2)\n                        {\n                            v80 += 1;\n                            v46 = v33;\n                            v78 = 0;\n                            v40 = 92;\n                        }\n                    case 123: case 125:\n                        v43 = v38 != 1;\n                        if (v38 == -1)\n                        {\n                            v43 = *((char *)(v7 + 1)) != 0;\n                        }\n                        v89 = (unsigned int)v39 == 2;\n                    }\n                }\n            }\n            else\n            {\n                v81 = v39;\n                v82 = v38;\n                v83 = v81 == 2;\n                if ((v81 == 2 & v17) == 0 || v76 != 0)\n                {\n                    v84 = (unsigned int)v17 ^ 1;\n                    v85 = v83 & (char)((unsigned int)v17 ^ 1);\n                    v86 = v83 & (char)((unsigned int)v17 ^ 1);\n                    if ((char)v85 == 0)\n                    {\n                        v86 = v84;\n                    }\n                    else if (v18 != 0)\n                    {\n                        if (v6 == 0)\n                        {\n                            v84 = v79 == 0 & v14 != 0;\n                            if ((v79 == 0 & v14 != 0) == 0)\n                            {\n                                v86 = v18;\n                            }\n                        }\n                        else\n                        {\n                            v3 = v27;\n                            v2 = v26;\n                            v1 = v25;\n                            v76 = (unsigned int)sub_407ce0();\n                        }\n                    }\n                }\n            }\n            if (v6 == 0 && v78 == 0 && (char)v85 != 0 && v18 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && (v79 == 0 & v14 != 0) == 0 || (char)v85 == 0 && v78 == 0 && ((v81 == 2 & v17) == 0 || v76 != 0) || v78 == 0 && (char)v85 != 0 && ((v81 == 2 & v17) == 0 || v76 != 0) && v18 == 0)\n            {\n                v88 = v13;\n                if (v13 != 0 && v86 != 0)\n                {\n                    v90 = (char)*((char *)v88);\n                    if (*((char *)v88) != 0)\n                    {\n                        v91 = v88 - v76;\n                        do\n                        {\n                            if (v79 > v76)\n                            {\n                                *((unsigned long long *)(v29 + v76)) = v90;\n                            }\n                            v76 += 1;\n                            v90 = (char)*((char *)(v91 + v76));\n                        }\n                        while ((char)v90 != 0);\n                    }\n                }\n                if (v79 > v76)\n                {\n                    *((char *)(v29 + v76)) = 0;\n                }\n            }\n            if (v15 == 1)\n            {\n                v11 = v39;\n                v10 = v38;\n                v9 = v33;\n                v46 = (unsigned short)*((short *)(*((long long *)(unsigned long long)__ctype_b_loc()) + v40 * 2));\n                tmp_38 = v46 & 0x4000;\n                v46 &= 0x4000;\n                v51 = (tmp_38 & 65535) != 0;\n                v89 = (tmp_38 & 65535) == 0 & v4;\n                if (v89 != 0)\n                {\n                    v89 = v4;\n                    v78 = 0;\n                }\n            }\n            else\n            {\n                v24 = 0;\n                if (v38 == -1)\n                {\n                    v11 = v39;\n                    v10 = v33;\n                    v9 = v37;\n                    v38 = strlen(v7);\n                }\n                v21 = v76;\n                v22 = v37;\n                v54 = 0;\n                v19 = v33;\n                *((unsigned long long *)&v20) = v40;\n                v11 = v29;\n                v12 = v79;\n                v9 = v38;\n                v10 = v39;\n                do\n                {\n                    v56 = v80 + v54;\n                    v57 = v7 + v80 + v54;\n                    v46 = sub_40b6b0();\n                    v58 = v46;\n                    if (v46 != 0 && v46 != -2 && v46 != -1)\n                    {\n                        if ((int)v10 == 2 && v46 != 1 && v17 != 0)\n                        {\n                            v59 = v7 + v77 + 1;\n                            v77 = v7 + v58 + v77;\n                            while (true)\n                            {\n                                v60 = (unsigned int)*(v59) - 91;\n                                if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                                {\n                                    v59 = &v59[1];\n                                    if (v77 == v59)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                            if ((8589934635 & 1 << (v60 & 63)) == 0 || ((unsigned int)*(v59) - 91 & 255) > 33)\n                            {\n                                v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                                v54 += v58;\n                                v46 = mbsinit((unsigned int)&v24);\n                            }\n                        }\n                        v78 = (unsigned int)(iswprint(*((int *)&v23)) == 0? 0 : (unsigned int)r13<8>);\n                        v54 += v58;\n                        v46 = mbsinit((unsigned int)&v24);\n                    }\n                    if (v46 == -1)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v78 = 0;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = (unsigned int)v10;\n                        v89 = v4;\n                    }\n                    if (v46 == -2)\n                    {\n                        v38 = v9;\n                        v77 = v56;\n                        v46 = v54;\n                        v28 = v54;\n                        v33 = (char)v19;\n                        v40 = v20;\n                        v76 = v21;\n                        v29 = v11;\n                        v79 = v12;\n                        v39 = (unsigned int)v10;\n                        if (v77 < v9 && *((char *)v57) != 0)\n                        {\n                            do\n                            {\n                                v46 += 1;\n                            }\n                            while (v46 < v9 && *((char *)(v22 + v46)) != 0);\n                            v28 = v46;\n                        }\n                        v89 = v4;\n                        v78 = 0;\n                    }\n                    if (v46 == 0 || v46 != -2 && (unsigned int)v46 != 0 && v46 != -1)\n                    {\n                        v28 = v54;\n                        v40 = v20;\n                        v76 = v21;\n                        v33 = (char)v19;\n                        v29 = v11;\n                        v89 = (unsigned int)v78 ^ 1;\n                        v79 = v12;\n                        v38 = v9;\n                        v39 = (unsigned int)v10;\n                        v89 = (char)((unsigned int)v78 ^ 1) & v4;\n                    }\n                }\n                while (v28 <= 1);\n                if (v46 == 0 || v46 == -2 || v46 == -1 || (unsigned int)v46 != 0)\n                {\n                    v9 = v78;\n                    v77 = 0;\n                    v63 = v17;\n                    v64 = v28 + v80;\n                    v28 = v5;\n                }\n            }\n            if (false)\n            {\n                v5 = v42;\n                v49 = 0;\n                v55 = 0;\n            }\n            if (v15 != 1 || v89 != 0)\n            {\n                v9 = v78;\n                v77 = 0;\n                v63 = v17;\n                v64 = v28 + v80;\n                v28 = v5;\n                while (true)\n                {\n                    if (v89 != 0)\n                    {\n                        v65 = (unsigned int)v39 == 2;\n                        if (v63 == 0)\n                        {\n                            v77 = (unsigned int)v33 ^ 1;\n                            v66 = v4 & (char)((unsigned int)v33 ^ 1);\n                            if ((v4 & (char)((unsigned int)v33 ^ 1)) != 0)\n                            {\n                                if (v79 > v76)\n                                {\n                                    *((char *)(v29 + v76)) = 39;\n                                }\n                                if (v79 > v76 + 1)\n                                {\n                                    *((char *)(v29 + v76 + 1)) = 36;\n                                }\n                                v77 = v76 + 2;\n                                if (v79 > v76 + 2)\n                                {\n                                    *((char *)(v29 + v76 + 2)) = 39;\n                                }\n                                v76 += 3;\n                                v33 = v46;\n                            }\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            if (v79 > v76 + 1)\n                            {\n                                v67 = v40;\n                                v68 = (char)v40 % 64;\n                                *((unsigned long long *)(v29 + v76 + 1)) = (unsigned long long)(unsigned int)rax<4> + 48;\n                            }\n                            v46 = v76 + 2;\n                            if (v79 > v76 + 2)\n                            {\n                                v70 = v40;\n                                v71 = (char)v40 % 8;\n                                v46 = (unsigned int)((rax<4> & 7) + 48);\n                                *((unsigned long long *)(v29 + v76 + 2)) = v46;\n                            }\n                            v80 += 1;\n                            v76 += 3;\n                            v40 = ((unsigned int)v40 & 7) + 48;\n                            if (v80 < v64)\n                            {\n                                v77 = v89;\n                            }\n                            else\n                            {\n                                v78 = (char)v9;\n                            }\n                        }\n                        else\n                        {\n                            v4 = v65;\n                        }\n                    }\n                    else\n                    {\n                        v46 = (v77 ^ 1) & (unsigned int)v33;\n                        if (v28 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 92;\n                            }\n                            v76 += 1;\n                        }\n                        v80 += 1;\n                        if (v80 >= v64)\n                        {\n                            v78 = (char)v9;\n                        }\n                        else if (v46 != 0)\n                        {\n                            if (v79 > v76)\n                            {\n                                *((char *)(v29 + v76)) = 39;\n                            }\n                            v46 = v76 + 1;\n                            if (v79 > v76 + 1)\n                            {\n                                *((char *)(v29 + v76 + 1)) = 39;\n                            }\n                            v76 += 2;\n                            v28 = 0;\n                            v33 = 0;\n                        }\n                        else\n                        {\n                            v28 = 0;\n                        }\n                    }\n                    if ((v80 < v64 || v89 == 0) && (v63 == 0 || v89 == 0) && (v80 < v64 || v89 != 0))\n                    {\n                        if (v79 > v76)\n                        {\n                            *((unsigned long long *)(v29 + v76)) = v40;\n                        }\n                        v40 = (char)*((char *)(v7 + v80));\n                        v76 += 1;\n                    }\n                }\n            }\n            if (...)\n            {\n                v3 = v27;\n                v2 = v26;\n                v1 = 0;\n                v76 = (unsigned int)sub_407ce0();\n            }\n            if (v17 == 0 && (v25 != 0 || v5 != 0) && (((char)((unsigned long long)v25[v40 >> 5] >> ((char)v40 & 31)) & 1) != 0 || v5 != 0) || v5 == 0 && (v25 == 0 || ((char)((unsigned long long)v25[v40 >> 5] >> ((char)v40 & 31)) & 1) == 0) || (v15 != 1 || v89 != 0) && v76 >= v79)\n            {\n                if (v76 < v79)\n                {\n                    *((unsigned long long *)(v29 + v76)) = v40;\n                }\n                v76 += 1;\n                v6 = (v78 == 0? 0 : (unsigned int)(char)(char)(stack_base)[-169]);\n            }\n            if (...)\n            {\n                v92 = v76;\n                return v92;\n            }\n        }\n        *((char *)v29) = 39;\n        v78 = 2;\n        v13 = \"'\";\n        v8 = 1;\n        v17 = 0;\n        v18 = v84;\n    }\n}\n"
        },
        {
            "funcName": "sub_406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x406283",
            "decompiledFuncCode": "int sub_406180()\n{\n    unsigned long long v0;  // [bp-0x58]\n    char v1;  // [bp-0x41]\n    unsigned long v2;  // [bp-0x40]\n    unsigned long long v4;  // rsi\n    unsigned long long v5;  // r15\n    unsigned long v6;  // rcx\n    unsigned long v7;  // r13\n    void *v8;  // rdx\n    char *v9;  // rdi\n    unsigned long v11;  // r12\n    unsigned long long v12;  // rbx\n    unsigned long long v13;  // rax\n    unsigned long long v14;  // rax\n    void *v15;  // rbp\n    char *v16;  // r14\n\n    v5 = v4;\n    v7 = v6;\n    v15 = v8;\n    v2 = v8;\n    v16 = *((long long *)v5);\n    v0 = -1;\n    if (*((long long *)v5) != 0)\n    {\n        v11 = strlen(v9);\n        v1 = 0;\n        v12 = 0;\n        while (true)\n        {\n            v13 = strncmp(v16, v9, v11);\n            if (v13 == 0)\n            {\n                v14 = strlen(v16);\n                if (v14 == v11)\n                {\n                    v0 = v12;\n                }\n                else if (v0 == -1)\n                {\n                    v0 = v12;\n                    v12 += 1;\n                    v15 += v6;\n                    v16 = *((long long *)(v5 + v12 * 8));\n                }\n                else if (v2 != 0)\n                {\n                    v1 = (memcmp(v7 * v0 + v2, v15, v7) != 0? 1 : (unsigned int)(char)(char)(stack_base)[-65]);\n                }\n                else\n                {\n                    v1 = 1;\n                }\n            }\n            if (v13 != 0 || v0 != -1 && v14 != v11)\n            {\n                v12 += 1;\n                v15 += v6;\n                v16 = *((long long *)(v5 + v12 * 8));\n            }\n            if ((v13 == 0 || *((long long *)(v5 + (v12 << 3))) == 0) && (v0 == -1 || *((long long *)(v5 + (v12 << 3))) == 0) && (v13 != 0 || v14 != v11) && (*((long long *)(v5 + (v12 << 3))) != 0 || v13 != 0 || v0 != -1))\n            {\n                *((int *)&v0) = (v1 == 0? v0 : -2);\n            }\n        }\n    }\n    return v0;\n}\n"
        },
        {
            "funcName": "sub_40c0b0",
            "funcStartAddr": "0x40c0b0",
            "funcEndAddr": "0x40c106",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned int field_0;\n    char padding_4[4];\n    unsigned long long field_8;\n    unsigned long long field_10;\n    char padding_18[8];\n    unsigned long long field_20;\n    unsigned long long field_28;\n    char padding_30[24];\n    unsigned long long field_48;\n    char padding_50[64];\n    unsigned long long field_90;\n} struct_0;\n\nint sub_40c0b0()\n{\n    unsigned long long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x10]\n    unsigned long long v2;  // [bp-0x8]\n    struct_0 *v4;  // rdi\n    unsigned long long v5;  // r12\n    unsigned long long v6;  // rbx\n    struct_0 *v7;  // rbx\n    unsigned int v8;  // esi\n    unsigned int v9;  // edx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // r12\n\n    if (v4->field_10 == v4->field_8 && v4->field_28 == v4->field_20 && v4->field_48 == 0)\n    {\n        v2 = v5;\n        v1 = stack_base + 0;\n        v0 = v6;\n        v7 = v4;\n        v10 = lseek(fileno(v4), v8, v9);\n        if (v10 != -1)\n        {\n            v7->field_0 = v7->field_0 & -17;\n            v7->field_90 = v10;\n            v10 = 0;\n        }\n        v11 = v0;\n        v12 = v2;\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_407060",
            "funcStartAddr": "0x407060",
            "funcEndAddr": "0x4071e0",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned int field_8;\n    char padding_c[4];\n    char field_10;\n} struct_0;\n\nextern int512_t g_406870;\nextern int512_t g_406880;\nextern int512_t g_40d880;\n\nint sub_407060()\n{\n    unsigned long long v1;  // rbx\n    struct_0 *v2;  // rsi\n    unsigned long long v3;  // rax\n    unsigned long long v4;  // rax\n    void|uint128_t v5;  // xmm1\n    uint128_t v6;  // xmm0\n    unsigned int v8;  // ymm1\n    uint128_t v9;  // xmm0\n    unsigned long v10;  // rdi\n    unsigned int v11;  // ymm0\n    void v12;  // xmm0\n    unsigned long v13;  // rbp\n    unsigned long long v14;  // rax\n    unsigned long v16;  // rdx\n    unsigned long v17;  // rcx\n    unsigned long v18;  // r8\n    unsigned long long v19;  // rdi\n    unsigned long long v20;  // rax\n\n    v1 = malloc(0x50);\n    if (v1 != 0)\n    {\n        if (v2 != 0)\n        {\n            *((struct_0 **)(v1 + 40)) = v2;\n            v4 = sub_4069e0();\n            if (v4 != 0 && v2->field_10 == 0)\n            {\n                v5 = 0;\n                v8 = v2->field_8;\n            }\n        }\n        else\n        {\n            *((long long **)(v1 + 40)) = &g_40d880;\n            v3 = sub_4069e0();\n            v5 = 0;\n            v8 = 6881500231684115661;\n        }\n        if ((v2 == 0 || v2->field_10 == 0) && (v2 == 0 || v4 != 0) && (v2 != 0 || v3 != 0))\n        {\n            if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>)))\n            {\n                v6 = 0;\n                v6 = (unsigned int)v10;\n            }\n            else\n            {\n                v9 = 0;\n                v11 = v10 % 2 | (unsigned long long)((unsigned int)v10 & 1);\n                v6 = xmm0<16> * 2;\n            }\n            v12 = v6 / v5;\n        }\n        if ((v2 == 0 || v4 != 0) && (((char)(BinaryOp CmpF & 69) & 1) == 0 || v2 != 0) && (((char)(BinaryOp CmpF & 69) & 1) == 0 || v2->field_10 != 0) && (v2 != 0 || ((char)(BinaryOp CmpF & 69) & 1) != 0) && (v2 != 0 || v3 != 0) && (((char)(BinaryOp CmpF & 69) & 1) != 0 || v2->field_10 != 0))\n        {\n            v13 = (unsigned int)sub_4067d0();\n            if (((char)(v13 >> 60) & 1) == 0 && [D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>) == 0)\n            {\n                *((unsigned long *)(v1 + 16)) = v13;\n                if (v13 != 0)\n                {\n                    v14 = calloc(v13, 0x10);\n                    *((unsigned long long *)v1) = v14;\n                    if (v14 != 0)\n                    {\n                        *((long long *)(v1 + 24)) = 0;\n                        *((long long *)(v1 + 32)) = 0;\n                        *((unsigned long long *)(v1 + 8)) = v13 * 16 + v14;\n                        *((int *)(v1 + 48)) = (v16 == 0? &g_406870 : v16);\n                        *((int *)(v1 + 56)) = (v17 == 0? &g_406880 : v17);\n                        *((unsigned long *)(v1 + 64)) = v18;\n                        *((long long *)(v1 + 72)) = 0;\n                    }\n                }\n            }\n        }\n        if (...)\n        {\n            v19 = v1;\n            v1 = 0;\n            free(v19);\n        }\n    }\n    v20 = v1;\n    return v20;\n}\n"
        },
        {
            "funcName": "sub_406c30",
            "funcStartAddr": "0x406c30",
            "funcEndAddr": "0x406c92",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_0;\n\nint sub_406c30()\n{\n    unsigned long long v1[4];  // rdi\n    unsigned long long v2[2];  // rcx\n    struct_0 *v3;  // rax\n    unsigned long long v4;  // rdx\n    unsigned long long v5;  // r8\n\n    v2 = *(v1);\n    v4 = 0;\n    v5 = 0;\n    if (*(v1) < v1[1])\n    {\n        while (true)\n        {\n            if (*(v2) != 0)\n            {\n                v3 = v2[1];\n                v5 += 1;\n                v4 += 1;\n                if (v2[1] != 0)\n                {\n                    do\n                    {\n                        v3 = v3->field_8;\n                        v4 += 1;\n                    }\n                    while (v3 != 0);\n                    v2 = &v2[2];\n                    if (*(v1) + 16 >= v1[1])\n                    {\n                        break;\n                    }\n                }\n            }\n            if (*(v2) == 0 || v2[1] == 0)\n            {\n                v2 = &v2[2];\n                if (v2 >= v1[1])\n                {\n                    break;\n                }\n            }\n        }\n    }\n    if (v1[3] != v5)\n    {\n        return 0;\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_4068c0",
            "funcStartAddr": "0x4068c0",
            "funcEndAddr": "0x4069c5",
            "decompiledFuncCode": "typedef struct struct_1 {\n    char padding_0[72];\n    unsigned long long field_48;\n} struct_1;\n\ntypedef struct struct_0 {\n    char field_0;\n    char padding_1[7];\n    unsigned long long field_8;\n} struct_0;\n\ndouble sub_4068c0()\n{\n    unsigned long long v1;  // rdi\n    struct_1 *v2;  // r12\n    unsigned long long v3;  // rsi\n    unsigned long long *v6;  // rdx\n    unsigned long long *v7;  // rbx\n    unsigned long long v8;  // rsi\n    unsigned long long v10;  // rax\n    unsigned long long v11[2];  // rax\n    unsigned long long v12;  // rsi\n    unsigned long long v14;  // rax\n    struct_0 *v15;  // rbx\n    unsigned long long v16;  // rsi\n    struct_0 *v17;  // rax\n    void v18;  // xmm0\n    uint128_t v19;  // xmm0\n    unsigned long v20;  // rcx\n    void v21;  // xmm0\n\n    v2 = v1;\n    *(v6) = v7;\n    v8 = *(v7);\n    if (*(v7) != 0)\n    {\n        v7 = sub_406890();\n        if (v8 != v1)\n        {\n            v1 = v3;\n            v10 = *((long long *)(r12<8> + 56))();\n            if (v10 == 0)\n            {\n                v11 = v15->field_8;\n                if (v15->field_8 != 0)\n                {\n                    v12 = *(v11);\n                    if (v1 != *(v11))\n                    {\n                        while (true)\n                        {\n                            v14 = *((long long *)(r12<8> + 56))();\n                            if (v14 == 0)\n                            {\n                                v15 = v15->field_8;\n                                v11 = v15->field_8;\n                                v16 = *(v11);\n                                if (*(v11) == v1 || v15->field_8 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                v11 = v15->field_8;\n                            }\n                        }\n                        if (v14 == 0)\n                        {\n                            return v18;\n                        }\n                    }\n                    if ((char)v20 != 0)\n                    {\n                        *((unsigned long long [2])&v15->field_8) = v11[1];\n                        v11[0] = 0;\n                        v11[1] = v2->field_48;\n                        v2->field_48 = v11;\n                    }\n                }\n            }\n        }\n        if ((v8 == v1 || v10 != 0) && (char)v20 != 0)\n        {\n            v17 = v15->field_8;\n            if (v15->field_8 != 0)\n            {\n                v19 = *(v17);\n                *(v15) = *(v17);\n                *((long long *)&v17->field_0) = 0;\n                v17->field_8 = v2->field_48;\n                v2->field_48 = v17;\n                return v19;\n            }\n            *((long long *)&v15->field_0) = 0;\n        }\n        if ((v10 == 0 || (char)v20 == 0 || v15->field_8 == 0) && ((char)v20 == 0 || v15->field_8 == 0 || v8 != v1) && (v8 == v1 || v10 != 0 || v15->field_8 != 0))\n        {\n            return v21;\n        }\n    }\n    if (*(v7) == 0 || v10 == 0 && v15->field_8 == 0 && v8 != v1 || v10 == 0 && v1 != *(v11) && v8 != v1)\n    {\n        return v18;\n    }\n}\n"
        },
        {
            "funcName": "sub_4095a0",
            "funcStartAddr": "0x4095a0",
            "funcEndAddr": "0x4095ad",
            "decompiledFuncCode": "int sub_4095a0()\n{\n}\n"
        },
        {
            "funcName": "sub_40b550",
            "funcStartAddr": "0x40b550",
            "funcEndAddr": "0x40b565",
            "decompiledFuncCode": "int sub_40b550()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_40aee0();\n}\n"
        },
        {
            "funcName": "sub_406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x406feb",
            "decompiledFuncCode": "int sub_406f80()\n{\n    unsigned long long v1[2];  // rdi\n    unsigned long long v2[2];  // r14\n    unsigned long long v4;  // rdi\n    unsigned long long v5;  // rdx\n    unsigned long long v6;  // rsi\n    unsigned long long v7;  // rax\n    unsigned long long v8;  // rbp\n    unsigned long long v9;  // rdi\n    unsigned long long v10[2];  // rbx\n\n    v2 = *(v1);\n    if (v1[1] > *(v1))\n    {\n        v8 = 0;\n        while (true)\n        {\n            v4 = *(v2);\n            if (*(v2) != 0)\n            {\n                v10 = v2;\n                while (true)\n                {\n                    v6 = v5;\n                    v7 = v5();\n                    if (v7 != 0)\n                    {\n                        v10 = v10[1];\n                        v8 += 1;\n                        if (v10 == 0)\n                        {\n                            break;\n                        }\n                        v9 = *(v10);\n                    }\n                }\n                if (v7 != 0)\n                {\n                    v2 = &v2[2];\n                    if (v1[1] <= v2)\n                    {\n                        break;\n                    }\n                }\n                else if (v7 == 0)\n                {\n                    return stack_base + 0;\n                }\n            }\n        }\n    }\n    return stack_base + 0;\n}\n"
        },
        {
            "funcName": "sub_40b530",
            "funcStartAddr": "0x40b530",
            "funcEndAddr": "0x40b543",
            "decompiledFuncCode": "int sub_40b530()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_40b4b0();\n}\n"
        },
        {
            "funcName": "sub_4064b0",
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064fc",
            "decompiledFuncCode": "int sub_4064b0()\n{\n    unsigned long long *v1;  // rsi\n    unsigned long long v2;  // r14\n    void *v3;  // rdx\n    void *v4;  // rdi\n    unsigned int v5;  // rcx\n    unsigned long long v6;  // rax\n    unsigned long long *v7;  // rbx\n    void *v8;  // rbp\n    unsigned long long v9;  // rax\n\n    v2 = *(v1);\n    if (*(v1) != 0)\n    {\n        v7 = &v1[1];\n        v8 = v3;\n        do\n        {\n            v6 = memcmp(v4, v8, v5);\n            if (v6 == 0)\n            {\n                break;\n            }\n            v2 = *(v7);\n            v8 += v5;\n            v7 = &v7[1];\n        }\n        while (v2 != 0);\n    }\n    v9 = v2;\n    return v9;\n}\n"
        },
        {
            "funcName": "sub_406630",
            "funcStartAddr": "0x406630",
            "funcEndAddr": "0x406688",
            "decompiledFuncCode": "int sub_406630()\n{\n    unsigned long long v1;  // rbp\n    char *v2;  // rdi\n    char *v3;  // rbx\n    char v4;  // bpl\n    unsigned long long v5;  // rax\n    unsigned long long v6;  // rcx\n    unsigned long long v7;  // rax\n    unsigned long long v8;  // rdx\n\n    v1 = 0;\n    v3 = v2;\n    v4 = *(v2) == 47;\n    v5 = sub_4066f0();\n    v6 = v5 + -0x1 * v3;\n    if (v5 + -0x1 * v3 > rbp<8>)\n    {\n        if (*((char *)(v5 - 1)) == 47)\n        {\n            for (v8 = v6 - 1; rbp<8> != v8; v8 = v7)\n            {\n                v7 = v8 - 1;\n                if (v3[v8 + -1] != 47)\n                {\n                    break;\n                }\n            }\n            return v8;\n        }\n    }\n    if (v5 + -0x1 * v3 <= rbp<8> || *((char *)(v5 - 1)) != 47)\n    {\n        return v6;\n    }\n}\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x4079ff",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[16];\n    unsigned long long field_10;\n    unsigned long long field_18;\n    unsigned long long field_20;\n    struct struct_1 *field_28;\n    char padding_30[24];\n    unsigned long long field_48;\n} struct_0;\n\ntypedef struct struct_3 {\n    char padding_0[4];\n    unsigned int field_4;\n    unsigned int field_8;\n    char padding_c[4];\n    char field_10;\n} struct_3;\n\ntypedef struct struct_2 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_2;\n\nint sub_407840()\n{\n    unsigned long long *v0;  // [bp-0x20]\n    void tmp_10;  // tmp #10\n    void tmp_15;  // tmp #15\n    struct_0 *v2;  // rdi\n    unsigned long long v3[10];  // rbx\n    unsigned long long v5;  // cc_dep1\n    unsigned long long v6;  // rax\n    uint128_t v7;  // xmm0\n    unsigned long long v8;  // rax\n    unsigned int v9;  // ymm0\n    unsigned long long v10;  // rdx\n    unsigned long|uint128_t|unsigned long long|unsigned int v11;  // xmm0lq\n    uint128_t v12;  // xmm1\n    unsigned long long v13;  // rax\n    uint128_t v14;  // xmm1\n    unsigned int v15;  // ymm1\n    unsigned long long v16;  // xmm1lq\n    struct_3 *v18;  // rdx\n    uint128_t v19;  // xmm0\n    uint128_t v20;  // xmm0\n    unsigned int v21;  // ymm0\n    unsigned long|uint128_t|unsigned int v22;  // xmm1\n    uint128_t v23;  // xmm1\n    unsigned int v24;  // ymm1\n    uint128_t v25;  // xmm2\n    unsigned int v26;  // ymm2\n    unsigned long long v27;  // xmm2lq\n    uint128_t v28;  // xmm0\n    struct_2 *v30;  // rdi\n    void *v31;  // r12\n\n    v3 = v2;\n    if (sub_4068c0() != 0)\n    {\n        v3[4] = v3[4] - 1;\n        if (*(v0) == 0)\n        {\n            v5 = v3[3];\n            v6 = v3[3] - 1;\n            v3[3] = v3[3] - 1;\n            if (!((char)(v5 - 1 >> 63)))\n            {\n                v11 = 0;\n                v10 = v3[5];\n                v11 = v2->field_18 - 1;\n                v8 = v3[2];\n            }\n            else\n            {\n                v7 = 0;\n                tmp_10 = v6 % 2 | (unsigned int)v6 & 1;\n                v8 = v3[2];\n                v9 = tmp_10;\n                v10 = v3[5];\n                v11 = (unsigned long long)(unsigned int)xmm0<16> * 2;\n            }\n            if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x18<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n            {\n                v12 = 0;\n                v12 = (unsigned int)v8;\n            }\n            else\n            {\n                tmp_15 = v8;\n                v13 = (unsigned int)v8 & 1;\n                v14 = 0;\n                v15 = tmp_15 >> 1 | v13;\n                v12 = xmm1<16> * 2;\n            }\n            xmm1<8> = Conv(128->64, (xmm1<16> * Conv(32->128, Load(addr=rdx<8>, size=4, endness=Iend_LE))))\n            if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1)\n            {\n                sub_4069e0();\n                v18 = v3[5];\n                if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x18<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n                {\n                    v19 = 0;\n                    v19 = (unsigned int)v2->field_10;\n                }\n                else\n                {\n                    v20 = 0;\n                    v21 = v2->field_10 >> 1 | (unsigned int)v2->field_10 & 1;\n                    v19 = xmm0<16> * 2;\n                }\n                if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x18<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n                {\n                    v22 = 0;\n                    v22 = v2->field_18;\n                }\n                else\n                {\n                    v23 = 0;\n                    v24 = v2->field_18 >> 1 | (unsigned int)v2->field_18 & 1;\n                    v22 = (unsigned long long)(unsigned int)xmm1<16> * 2;\n                }\n                v25 = 0;\n                v26 = *(v2->field_28);\n                v27 = xmm2<16> * v19;\n                if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1)\n                {\n                    xmm0<16> = (xmm0<16> * Conv(32->128, Load(addr=(rdx<8> + 0x4<64>), size=4, endness=Iend_LE)))\n                    if (v18->field_10 == 0)\n                    {\n                        xmm0<16> = (xmm0<16> * Conv(32->128, Load(addr=(rdx<8> + 0x8<64>), size=4, endness=Iend_LE)))\n                    }\n                    if (sub_407380() == 0)\n                    {\n                        v30 = v3[9];\n                        if (v3[9] != 0)\n                        {\n                            while (true)\n                            {\n                                v31 = v30->field_8;\n                                free(v30);\n                                v30 = v31;\n                                if (v31 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                        v3[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return stack_base + 0;\n}\n"
        },
        {
            "funcName": "sub_4062a0",
            "funcStartAddr": "0x4062a0",
            "funcEndAddr": "0x40630c",
            "decompiledFuncCode": "extern unsigned int g_40d7a5;\nextern unsigned int g_40d7c0;\n\nint sub_4062a0()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x8]\n    unsigned long v3;  // r12\n    unsigned long v4;  // rbx\n\n    v1 = v3;\n    v0 = v4;\n    if (false)\n    {\n        dcgettext(0x0, 0x40d7a5, 0x5);\n    }\n    dcgettext(0x0, 0x40d7c0, 0x5);\n    sub_409740();\n    sub_409430();\n}\n"
        },
        {
            "funcName": "sub_40c070",
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c0ab",
            "decompiledFuncCode": "int sub_40c070()\n{\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rbx\n    unsigned int *v3;  // rdi\n\n    v0 = v2;\n    if (v3 != 0 && __freading() != 0 && ((unsigned short)*(v3) & 0x100) != 0)\n    {\n        sub_40c0b0();\n    }\n}\n"
        },
        {
            "funcName": "sub_4096f0",
            "funcStartAddr": "0x4096f0",
            "funcEndAddr": "0x409703",
            "decompiledFuncCode": "int sub_4096f0()\n{\n}\n"
        },
        {
            "funcName": "sub_40b570",
            "funcStartAddr": "0x40b570",
            "funcEndAddr": "0x40b586",
            "decompiledFuncCode": "int sub_40b570()\n{\n    unsigned long long v0;  // [bp-0x18]\n\n    v0 = 0;\n    return sub_40b4b0();\n}\n"
        },
        {
            "funcName": "sub_40b590",
            "funcStartAddr": "0x40b590",
            "funcEndAddr": "0x40b5a8",
            "decompiledFuncCode": "int sub_40b590()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long long v1;  // [bp-0x10]\n    unsigned long v3;  // r9\n\n    v1 = 0;\n    v0 = v3;\n    return sub_40aee0();\n}\n"
        },
        {
            "funcName": "sub_407000",
            "funcStartAddr": "0x407000",
            "funcEndAddr": "0x407031",
            "decompiledFuncCode": "int sub_407000()\n{\n    void tmp_16;  // tmp #16\n    char *v1;  // rdi\n    unsigned long long v2;  // rcx\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // rdx\n\n    v2 = *(v1);\n    v4 = 0;\n    if (*(v1) != 0)\n    {\n        do\n        {\n            v1 = &v1[1];\n            tmp_16 = v4 * 31 + v2;\n            v2 = *(v1);\n            v4 = (0 CONCAT tmp_16) % v3 >> 64;\n        }\n        while ((char)v2 != 0);\n    }\n    return v4;\n}\n"
        },
        {
            "funcName": "sub_4095b0",
            "funcStartAddr": "0x4095b0",
            "funcEndAddr": "0x4095c1",
            "decompiledFuncCode": "int sub_4095b0()\n{\n}\n"
        },
        {
            "funcName": "sub_407580",
            "funcStartAddr": "0x407580",
            "funcEndAddr": "0x4077d6",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[16];\n    unsigned long long field_10;\n    unsigned long long field_18;\n    unsigned long long field_20;\n    unsigned long long field_28;\n    char padding_30[24];\n    struct struct_1 *field_48;\n} struct_0;\n\ntypedef struct struct_2 {\n    char padding_0[16];\n    unsigned long long field_10;\n    unsigned long long field_18;\n    unsigned long long field_20;\n    struct struct_3 *field_28;\n    char padding_30[24];\n    unsigned long long field_48;\n} struct_2;\n\ntypedef struct struct_4 {\n    char padding_0[8];\n    unsigned int field_8;\n} struct_4;\n\ntypedef struct struct_3 {\n    char padding_0[8];\n    unsigned int field_8;\n    unsigned int field_c;\n    char field_10;\n} struct_3;\n\nint sub_407580()\n{\n    void tmp_10;  // tmp #10\n    void tmp_19;  // tmp #19\n    unsigned long long v0[2];  // [bp-0x20]\n    unsigned long v2;  // rsi\n    unsigned long long v3;  // rdx\n    unsigned long long *v4;  // r12\n    struct_0 *v5;  // rdi\n    struct_2 *v6;  // rbx\n    unsigned long long v7;  // rdx\n    unsigned long long v9;  // rax\n    uint128_t v10;  // xmm1\n    unsigned int v11;  // ymm1\n    struct_4 *v12;  // rdx\n    unsigned long|uint128_t|unsigned int v13;  // xmm1lq\n    uint128_t v14;  // xmm0\n    unsigned int v15;  // ymm0\n    unsigned long long v16;  // xmm0lq\n    unsigned long long v17;  // rax\n    uint128_t v18;  // xmm0\n    unsigned int v19;  // ymm0\n    unsigned long long v20;  // xmm0lq\n    struct_3 *v22;  // rdx\n    uint128_t v23;  // xmm2\n    unsigned int v24;  // ymm2\n    uint128_t v25;  // xmm0\n    uint128_t v26;  // xmm0\n    unsigned int v27;  // ymm0\n    unsigned long|uint128_t|unsigned int v28;  // xmm1\n    uint128_t v29;  // xmm1\n    unsigned int v30;  // ymm1\n    uint128_t v31;  // xmm0\n    unsigned long long v32;  // rax\n    unsigned long long v33;  // rax\n    unsigned long long v34[2];  // r12\n    unsigned long long v35[2];  // rax\n    unsigned long long v36;  // rdx\n\n    if (v2 != 0)\n    {\n        v4 = v3;\n        v6 = v5;\n        v7 = sub_4068c0();\n        if (v7 != 0)\n        {\n            if (v4 != 0)\n            {\n                *(v4) = v7;\n            }\n            return 0;\n        }\n        if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x10<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n        {\n            v13 = 0;\n            v12 = v6->field_28;\n            v13 = v5->field_18;\n            v9 = v6->field_10;\n            v14 = 0;\n            v15 = v9;\n            xmm0<8> = Conv(128->64, (xmm0<16> * Conv(32->128, Load(addr=(rdx<8> + 0x8<64>), size=4, endness=Iend_LE))))\n        }\n        else\n        {\n            v10 = 0;\n            tmp_10 = v6->field_18 % 2 | (unsigned int)v6->field_18 & 1;\n            v9 = v6->field_10;\n            v11 = tmp_10;\n            v12 = v6->field_28;\n            v13 = (unsigned long long)(unsigned int)xmm1<16> * 2;\n            tmp_19 = v9;\n            v17 = (unsigned int)v9 & 1;\n            v18 = 0;\n            v19 = tmp_19 >> 1 | v17;\n            xmm0<8> = Conv(128->64, ((xmm0<16> * 0x2<8>) * Conv(32->128, Load(addr=(rdx<8> + 0x8<64>), size=4, endness=Iend_LE))))\n        }\n        if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1)\n        {\n            sub_4069e0();\n            v22 = v6->field_28;\n            v23 = 0;\n            v24 = v6->field_28->field_8;\n            if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x10<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n            {\n                v25 = 0;\n                v25 = (unsigned int)v5->field_10;\n            }\n            else\n            {\n                v26 = 0;\n                v27 = v5->field_10 >> 1 | (unsigned int)v5->field_10 & 1;\n                v25 = xmm0<16> * 2;\n            }\n            if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, Load(addr=(rbx<8> + 0x10<64>), size=8, endness=Iend_LE), 0x0<64>, cc_ndep<8>)))\n            {\n                v28 = 0;\n                v28 = v5->field_18;\n            }\n            else\n            {\n                v29 = 0;\n                v30 = v5->field_18 >> 1 | (unsigned int)v5->field_18 & 1;\n                v28 = (unsigned long long)(unsigned int)xmm1<16> * 2;\n            }\n            if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1)\n            {\n                xmm0<16> = (xmm0<16> * Conv(32->128, Load(addr=(rdx<8> + 0xc<64>), size=4, endness=Iend_LE)))\n                if (v22->field_10 == 0)\n                {\n                    v31 *= xmm2<16>;\n                }\n                if (((char)(BinaryOp CmpF & 69) & 1) != 0 && ((char)(BinaryOp CmpF & 69) & 1) == 0)\n                {\n                    v32 = sub_407380();\n                    if (v32 != 0)\n                    {\n                        v33 = sub_4068c0();\n                    }\n                }\n            }\n        }\n    }\n    if (...)\n    {\n        v34 = v0;\n        if (*(v0) != 0)\n        {\n            v35 = v6->field_48;\n            if (v6->field_48 != 0)\n            {\n                v6->field_48 = v5->field_48->field_8;\n            }\n            else\n            {\n                v35 = malloc(0x10);\n            }\n        }\n        else\n        {\n            v0[0] = v2;\n            v6->field_20 = v6->field_20 + 1;\n            v6->field_18 = v6->field_18 + 1;\n            return 1;\n        }\n    }\n    if (v2 == 0 || ((char)(BinaryOp CmpF & 69) & 1) == 0 && v7 == 0 && (((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1 && v32 != 0 && ((char)(BinaryOp CmpF & 69) & 1) != 0 && (((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1 && v33 != 0)\n    {\n        abort(); /* do not return */\n    }\n    if (...)\n    {\n        return -18446744069414584321;\n    }\n    if (...)\n    {\n        v36 = v34[1];\n        v35[0] = v2;\n        v35[1] = v36;\n        v34[1] = v35;\n        v6->field_20 = v6->field_20 + 1;\n        return 1;\n    }\n}\n"
        },
        {
            "funcName": "sub_40470b",
            "funcStartAddr": "0x40470b",
            "funcEndAddr": "0x40472a",
            "decompiledFuncCode": "extern unsigned long long program_invocation_short_name;\n\nint sub_40470b()\n{\n    unsigned long long v1;  // rax\n\n    v1 = &program_invocation_short_name;\n    if (false)\n    {\n        v1 = 0;\n    }\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_407b40",
            "funcStartAddr": "0x407b40",
            "funcEndAddr": "0x407bd9",
            "decompiledFuncCode": "extern unsigned long long __progname_full;\nextern unsigned long long g_6123a0;\nextern unsigned long long program_invocation_short_name;\nextern unsigned long long stderr;\n\nint sub_407b40()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v3;  // rbx\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // r8\n    unsigned long long v6;  // cc_dep1\n    unsigned long long v7;  // cc_dep2\n    unsigned long v8;  // d\n    char *v9;  // rdi\n    char *v10;  // rsi\n    unsigned long long v11;  // rcx\n    char *v13;  // rdi\n    unsigned long long v14;  // rcx\n    char *v15;  // rsi\n    unsigned long long v16;  // cc_dep1\n    unsigned long long v17;  // cc_dep2\n\n    if (v1 != 0)\n    {\n        v3 = v1;\n        v4 = strrchr();\n        if (v4 != 0)\n        {\n            v5 = v4 + 1;\n            if (v4 + 1 - v1 > 6)\n            {\n                v10 = v4 - 6;\n                v9 = \"/.libs/\";\n                v11 = 7;\n                while (v11 != 0)\n                {\n                    v11 -= 1;\n                    v6 = *(v10);\n                    v7 = *(v9);\n                    v9 = &v9[v8];\n                    v10 = &v10[v8];\n                    break;\n                }\n                if ((v6 > v7) - 0 - (v6 < v7) == 0)\n                {\n                    v13 = \"lt-\";\n                    v14 = 3;\n                    v15 = v5;\n                    v3 = v5;\n                    while (v14 != 0)\n                    {\n                        v14 -= 1;\n                        v16 = *(v15);\n                        v17 = *(v13);\n                        v13 = &v13[v8];\n                        v15 = &v15[v8];\n                        break;\n                    }\n                    if ((v16 > v17) - 0 - (v16 < v17) == 0)\n                    {\n                        v3 = v4 + 4;\n                        program_invocation_short_name = v4 + 4;\n                    }\n                }\n            }\n        }\n        g_6123a0 = v3;\n        __progname_full = v3;\n        return v4;\n    }\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 0x1, 0x37, stderr);\n    abort(); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_40b5b0",
            "funcStartAddr": "0x40b5b0",
            "funcEndAddr": "0x40b69b",
            "decompiledFuncCode": "int sub_40b5b0()\n{\n    char v0;  // [bp-0x140]\n    char v1;  // [bp-0x13c]\n    char v2;  // [bp-0x138]\n    unsigned long v3;  // [bp-0x128]\n    unsigned int v4;  // [bp-0x120]\n    char v5;  // [bp-0xa8]\n    unsigned long v6;  // [bp-0x98]\n    unsigned int v7;  // [bp-0x90]\n    unsigned int v9;  // edi\n    unsigned long long v10;  // rbx\n    unsigned int *v11;  // rbp\n    char v15;  // bl\n    unsigned long long v16;  // rax\n\n    v10 = __fxstat(0x1, v9, (unsigned int)&v2);\n    if ((unsigned int)v10 == 0)\n    {\n        v15 = (v4 & 0xf000) == 0x1000 | (v4 & 0xf000) == 0xc000;\n        if (((unsigned short)v4 & 0xf000) == 0xc000 || ((unsigned short)v4 & 0xf000) == 0x1000)\n        {\n            v10 = pipe((unsigned int)&v0);\n            if ((unsigned int)v10 == 0)\n            {\n                v10 = __fxstat(0x1, *((int *)&v0), (unsigned int)&v5);\n                v11 = __errno_location();\n                close(*((int *)&v0));\n                close(*((int *)&v1));\n                if (!((unsigned int)v10 == 0))\n                {\n                    *(v11) = *(v11);\n                }\n                else if (v3 <= v6)\n                {\n                    v10 = 0;\n                    v10 = (char)((v4 & 0xf000) == 0x1000);\n                    if (((unsigned short)v7 & 0xf000) != 0x1000)\n                    {\n                        v15 = (v4 & 0xf000) == 0xc000;\n                    }\n                }\n            }\n        }\n        if (((unsigned int)v10 == 0 || ((unsigned short)v4 & 0xf000) != 0xc000) && ((unsigned int)v10 == 0 || ((unsigned short)v4 & 0xf000) != 0x1000) && ((unsigned int)v10 == 0 || ((unsigned short)v4 & 0xf000) != 0xc000) && ((unsigned int)v10 == 0 || ((unsigned short)v4 & 0xf000) != 0x1000) && (v3 <= v6 || ((unsigned short)v4 & 0xf000) != 0xc000) && (v3 <= v6 || ((unsigned short)v4 & 0xf000) != 0x1000) && (((unsigned short)v4 & 0xf000) != 0xc000 || ((unsigned short)v7 & 0xf000) != 0x1000) && (((unsigned short)v7 & 0xf000) != 0x1000 || ((unsigned short)v4 & 0xf000) != 0x1000))\n        {\n            v10 = v15;\n        }\n    }\n    v16 = v10;\n    return v16;\n}\n"
        },
        {
            "funcName": "sub_4094a0",
            "funcStartAddr": "0x4094a0",
            "funcEndAddr": "0x409509",
            "decompiledFuncCode": "int sub_4094a0()\n{\n    unsigned int v0;  // [bp-0x48]\n    unsigned int v1;  // [bp-0x44]\n    unsigned long long v2;  // [bp-0x40]\n    unsigned long long v3;  // [bp-0x38]\n    unsigned long long v4;  // [bp-0x30]\n    unsigned long long v5;  // [bp-0x28]\n    unsigned long long v6;  // [bp-0x20]\n    unsigned long long v7;  // [bp-0x18]\n    unsigned int v9;  // esi\n\n    if (v9 == 10)\n    {\n        abort(); /* do not return */\n    }\n    v0 = v9;\n    v1 = 0;\n    v2 = 0;\n    v3 = 0;\n    v4 = 0;\n    v5 = 0;\n    v6 = 0;\n    v7 = 0;\n    return sub_408f10();\n}\n"
        },
        {
            "funcName": "sub_409fd0",
            "funcStartAddr": "0x409fd0",
            "funcEndAddr": "0x409ff8",
            "decompiledFuncCode": "int sub_409fd0()\n{\n    unsigned long v0;  // [bp-0x10]\n    unsigned long v2;  // rbx\n\n    v0 = v2;\n    sub_409dd0();\n}\n"
        },
        {
            "funcName": "sub_40ba10",
            "funcStartAddr": "0x40ba10",
            "funcEndAddr": "0x40ba66",
            "decompiledFuncCode": "int sub_40ba10()\n{\n    unsigned int v1;  // edi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // cc_dep1\n    unsigned long long v5;  // cc_dep2\n    unsigned long v6;  // d\n    char *v7;  // rdi\n    char *v8;  // rsi\n    unsigned long long v9;  // rcx\n    unsigned long long v10;  // rax\n    unsigned long long v11;  // cc_dep1\n    char *v12;  // rdi\n    unsigned long long v13;  // rcx\n    char v14;  // cc_dep1\n    char v15;  // cc_dep2\n\n    v10 = 1;\n    if (v3 != 0)\n    {\n        v9 = 2;\n        v7 = \"C\";\n        v3 = setlocale(v1, 0x0);\n        while (v9 != 0)\n        {\n            v9 -= 1;\n            v4 = *(v8);\n            v5 = *(v7);\n            v7 = &v7[v6];\n            v8 = &v8[v6];\n            break;\n        }\n        v10 = 0;\n        v11 = (v4 > v5) - 0 - (v4 < v5);\n        if ((char)v11 != 0)\n        {\n            v12 = \"POSIX\";\n            v13 = 6;\n            while (v13 != 0)\n            {\n                v13 -= 1;\n                v14 = *(v8);\n                v15 = *(v12);\n                v12 = &v12[v6];\n                v8 = &v8[v6];\n                break;\n            }\n            return 0;\n        }\n    }\n    if ((char)v11 == 0 || v3 == 0)\n    {\n        return v10;\n    }\n}\n"
        },
        {
            "funcName": "sub_4090f0",
            "funcStartAddr": "0x4090f0",
            "funcEndAddr": "0x4090ff",
            "decompiledFuncCode": "extern int512_t g_6124c0;\n\nint sub_4090f0()\n{\n    unsigned long v1;  // rdi\n\n    return *((int *)(v1 == 0? &g_6124c0 : v1));\n}\n"
        },
        {
            "funcName": "sub_409830",
            "funcStartAddr": "0x409830",
            "funcEndAddr": "0x409bd9",
            "decompiledFuncCode": "extern unsigned int g_40e66b;\nextern unsigned int g_40e66f;\nextern unsigned int g_40e67f;\nextern unsigned int g_40e696;\nextern unsigned int g_40e6f8;\nextern unsigned int g_40e7c8;\nextern unsigned int g_40e7e8;\nextern unsigned int g_40e810;\nextern unsigned int g_40e838;\nextern unsigned int g_40e868;\n\nint sub_409830()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    unsigned long long v11[9];  // r8\n    unsigned long long v12[9];  // rbx\n    unsigned long v13;  // rsi\n    void *v14;  // rdi\n    unsigned long v16;  // r9\n    unsigned long long v17;  // r8\n    unsigned long long v18;  // r15\n    unsigned long long v19;  // r14\n    unsigned long v20;  // rsi\n    unsigned long long v21;  // r8\n    unsigned long long v22;  // r13\n    unsigned long long v23;  // r12\n    unsigned long long v24;  // r14\n\n    v12 = v11;\n    if (v13 != 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    dcgettext(0x0, 0x40e66b, 0x5);\n    __fprintf_chk();\n    fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40e6f8, 0x5), v14);\n    switch (v16)\n    {\n    case 0:\n        abort(); /* do not return */\n    case 1:\n        dcgettext(0x0, 0x40e66f, 0x5);\n        break;\n    case 2:\n        dcgettext(0x0, 0x40e67f, 0x5);\n        break;\n    case 3:\n        dcgettext(0x0, 0x40e696, 0x5);\n        break;\n    case 4:\n        v24 = v11[3];\n        dcgettext(0x0, 0x40e7c8, 0x5);\n    case 5:\n        v24 = v11[3];\n        dcgettext(0x0, 0x40e7e8, 0x5);\n        *((unsigned long long [9])&v5) = v11[4];\n    case 6:\n        *((unsigned long long [9])&v6) = v11[1];\n        dcgettext(0x0, 0x40e810, 0x5);\n        *((unsigned long long [9])&v4) = v11[5];\n        *((unsigned long long [9])&v3) = v11[4];\n        *((unsigned long long [9])&v2) = v11[3];\n    case 7:\n        *((unsigned long long [9])&v7) = v12[2];\n        *((unsigned long long [9])&v6) = v12[1];\n        dcgettext(0x0, 0x40e838, 0x5);\n        *((unsigned long long [9])&v5) = v11[6];\n        *((unsigned long long [9])&v4) = v11[5];\n        *((unsigned long long [9])&v3) = v11[4];\n        *((unsigned long long [9])&v2) = v11[3];\n    case 8:\n        v22 = v12[6];\n        v23 = v12[5];\n        v18 = v12[4];\n        *((unsigned long long [9])&v8) = v12[7];\n        v19 = v12[3];\n        *((unsigned long long [9])&v6) = v12[2];\n        *((unsigned long long [9])&v7) = v12[1];\n        dcgettext(0x0, 0x40e868, 0x5);\n    case 9:\n        v20 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n        v21 = v11[1];\n        v22 = v12[6];\n        v23 = v12[5];\n        *((unsigned long long [9])&v9) = v12[8];\n        v18 = v12[4];\n        v19 = v12[3];\n        *((unsigned long long [9])&v8) = v12[7];\n        *((unsigned long long [9])&v6) = v12[2];\n        v7 = v21;\n    default:\n        v20 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n        v17 = v11[1];\n        v22 = v12[6];\n        v23 = v12[5];\n        *((unsigned long long [9])&v9) = v12[8];\n        v18 = v12[4];\n        v19 = v12[3];\n        *((unsigned long long [9])&v8) = v12[7];\n        *((unsigned long long [9])&v6) = v12[2];\n        v7 = v17;\n    }\n    dcgettext(0x0, v20, 0x5);\n    v5 = v9;\n    v4 = v24;\n    __fprintf_chk();\n    return v4;\n    return __fprintf_chk();\n    v4 = v8;\n    v3 = v22;\n    v2 = v23;\n    v1 = v18;\n    v0 = v19;\n    return __fprintf_chk();\n}\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x406bc0",
            "funcEndAddr": "0x406bc5",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[24];\n    unsigned long long field_18;\n} struct_0;\n\nint sub_406bc0()\n{\n    struct_0 *v1;  // rdi\n\n    return v1->field_18;\n}\n"
        },
        {
            "funcName": "sub_406170",
            "funcStartAddr": "0x406170",
            "funcEndAddr": "0x40617a",
            "decompiledFuncCode": "int sub_406170()\n{\n}\n"
        },
        {
            "funcName": "sub_4072a0",
            "funcStartAddr": "0x4072a0",
            "funcEndAddr": "0x407370",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_0;\n\nint sub_4072a0()\n{\n    unsigned long v0;  // [bp-0x18]\n    unsigned long v1;  // [bp-0x8]\n    unsigned long v3;  // r12\n    unsigned long long v4[10];  // rdi\n    unsigned long long v5[10];  // r12\n    unsigned long v6;  // rbx\n    unsigned long long v7;  // rdi\n    unsigned long long v9[2];  // rbx\n    unsigned long long v10;  // rdi\n    unsigned long long v11;  // rax\n    unsigned long long v12[2];  // rbp\n    struct_0 *v13;  // rdi\n    void *v14;  // rbx\n    struct_0 *v15;  // rdi\n    void *v16;  // rbx\n\n    v1 = v3;\n    v5 = v4;\n    v0 = v6;\n    v12 = *(v4);\n    v11 = v4[1];\n    if (v4[8] != 0 && v4[4] != 0 && *(v4) < v4[1])\n    {\n        while (true)\n        {\n            v7 = *(v12);\n            if (*(v12) == 0)\n            {\n                v12 = &v12[2];\n                if (v11 <= v12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v9 = v12;\n                while (true)\n                {\n                    *((long long *)(r12<8> + 64))();\n                    v9 = v9[1];\n                    if (v9 == 0)\n                    {\n                        break;\n                    }\n                    v10 = *(v9);\n                }\n                v11 = v5[1];\n                v12 = &v12[2];\n                if (v5[1] <= v12)\n                {\n                    break;\n                }\n            }\n        }\n        v12 = *(v5);\n    }\n    if ((*(v4) < v4[1] || v4[8] == 0 || v4[4] == 0) && v12 < v11)\n    {\n        do\n        {\n            v13 = v12[1];\n            if (v12[1] != 0)\n            {\n                while (true)\n                {\n                    v14 = v13->field_8;\n                    free(v13);\n                    v13 = v14;\n                    if (v14 == 0)\n                    {\n                        break;\n                    }\n                }\n            }\n            v12 = &v12[2];\n        }\n        while (v5[1] > v12);\n    }\n    v15 = v5[9];\n    if (v5[9] != 0)\n    {\n        while (true)\n        {\n            v16 = v15->field_8;\n            free(v15);\n            v15 = v16;\n            if (v16 == 0)\n            {\n                break;\n            }\n        }\n    }\n    free(*(v5));\n}\n"
        },
        {
            "funcName": "sub_40b730",
            "funcStartAddr": "0x40b730",
            "funcEndAddr": "0x40b813",
            "decompiledFuncCode": "int sub_40b730()\n{\n    unsigned long long v1;  // rdx\n    void *|char v2;  // dil\n    unsigned long|char v3;  // rsi\n    unsigned long long v4;  // r9\n    void *v5;  // rax\n    unsigned long long v6;  // rcx\n    unsigned long long v7;  // rdi\n\n    if (v1 != 0)\n    {\n        if ((v2 & 7) != 0 && v3 != *((char *)v2))\n        {\n            do\n            {\n                v2 += 1;\n                v1 -= 1;\n            }\n            while ((v2 & 7) != 0 && v1 != 1 && *((char *)v2) != (char)v3);\n            if (true)\n            {\n                return 0;\n            }\n            else if (v1 != 1)\n            {\n                v4 = (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000 | ((int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000) * 0x100000000;\n            }\n            else if ((v2 & 7) != 0 && v1 != 1)\n            {\n                v5 = v2;\n            }\n        }\n        if ((v2 & 7) == 0 || v3 != *((char *)v2))\n        {\n            v4 = (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000 | ((int)((unsigned int)v3 * 0x100 | (unsigned int)v3) | (int)((unsigned int)v3 * 0x100 | (unsigned int)v3) * 0x10000) * 0x100000000;\n            if (v1 > 7 && (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0)\n            {\n                while (true)\n                {\n                    v1 -= 8;\n                    v2 += 8;\n                    if (v1 > 7)\n                    {\n                        if ((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) + -72340172838076673) != 0)\n                        {\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        break;\n                    }\n                }\n                if (v1 <= 7)\n                {\n                    return 0;\n                }\n            }\n        }\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || v1 != 0 && (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 != *((char *)v2))\n    {\n        v6 = v2 + 1;\n        v7 = v2 + v1;\n        while (true)\n        {\n            v5 = v6;\n            if (v6 != v7)\n            {\n                v6 += 1;\n                if (*((char *)(v6 - 1)) == (char)v3)\n                {\n                    break;\n                }\n            }\n        }\n        if (v6 != v7)\n        {\n            return v5;\n        }\n        else if (v6 == v7)\n        {\n            return 0;\n        }\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || v1 != 0 && (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 == *((char *)v2) || v1 != 0 && v3 != *((char *)v2) && (v2 & 7) != 0 || v3 == *((char *)v2) && v1 != 0 && (v2 & 7) != 0)\n    {\n        v5 = v2;\n    }\n    if (((9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || v1 != 0 && (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) || v1 != 0 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v1 <= 7) && v3 != *((char *)v2) || (9259542123273814144 & !(*((long long *)v2) ^ v4) & (*((long long *)v2) ^ v4) - 72340172838076673) == 0 && v1 != 0 && v1 > 7 && ((v2 & 7) == 0 || v3 != *((char *)v2)) && v3 != *((char *)v2) || v1 != 0 && v3 != *((char *)v2) && (v2 & 7) != 0 || v1 == 0)\n    {\n        return 0;\n    }\n    if (v1 != 0 || v3 == *((char *)v2))\n    {\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_404b40",
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404c0f",
            "decompiledFuncCode": "extern unsigned int g_40c227;\n\nint sub_404b40()\n{\n    unsigned long long v0;  // [bp-0x20]\n    unsigned long v1;  // [bp-0x18]\n    unsigned long long v2;  // [bp-0x10]\n    unsigned long long v3;  // [bp-0x8]\n    unsigned long long v5;  // rdx\n    unsigned long long v6;  // r13\n    unsigned long long v7;  // r12\n    unsigned long long v8;  // rcx\n    unsigned long long v10;  // rbx\n    unsigned long long v11;  // rbx\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // rbx\n    unsigned long long v14;  // r12\n    unsigned long long v15;  // r13\n    unsigned long long v17;  // rbp\n    unsigned long long v18;  // rbx\n    unsigned long long v19;  // r12\n    unsigned long long v20;  // r13\n    unsigned long long v21;  // rbx\n    unsigned long long v22;  // r12\n    unsigned long long v23;  // r13\n\n    if (v5 != 0)\n    {\n        v3 = v6;\n        v2 = v7;\n        v1 = stack_base + 0;\n        v0 = v10;\n        v11 = v5;\n        while (true)\n        {\n            v12 = sub_409780();\n            if (v12 == 0)\n            {\n                v13 = v0;\n                v14 = v2;\n                v15 = v3;\n                return -18446744069414584321;\n            }\n            else if (v12 != -1)\n            {\n                *((unsigned long long *)v8) = *((long long *)v8) + v12;\n                if (v12 <= v11)\n                {\n                    v11 -= v12;\n                    if (v11 == v12)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    sub_4048a0();\n                }\n            }\n            else\n            {\n                v17 = (unsigned int)sub_409510();\n                error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n                v21 = v0;\n                v22 = v2;\n                v23 = v3;\n                return 1;\n            }\n        }\n        v18 = v0;\n        v19 = v2;\n        v20 = v3;\n        return 0;\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_406750",
            "funcStartAddr": "0x406750",
            "funcEndAddr": "0x406777",
            "decompiledFuncCode": "int sub_406750()\n{\n    char *v1;  // rdi\n    unsigned long long v2;  // rax\n    unsigned long long v3;  // rdx\n\n    v2 = strlen(v1);\n    if (v2 > 1)\n    {\n        while (true)\n        {\n            v3 = v2 - 1;\n            if (v1[v2 + -1] != 47)\n            {\n                break;\n            }\n            v2 = v3;\n            return 1;\n        }\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_406890",
            "funcStartAddr": "0x406890",
            "funcEndAddr": "0x4068b6",
            "decompiledFuncCode": "int sub_406890()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v2[3];  // rbx\n    unsigned long long v3;  // rsi\n    unsigned long long v4;  // rdi\n    unsigned long long v5;  // rsi\n    unsigned long long v6;  // rax\n\n    v2 = v1;\n    v4 = v3;\n    v5 = v2[2];\n    v6 = v2[6]();\n    if (v2[2] <= v6)\n    {\n        abort(); /* do not return */\n    }\n    return v6 * 16 + *(v2);\n}\n"
        },
        {
            "funcName": "sub_40bff0",
            "funcStartAddr": "0x40bff0",
            "funcEndAddr": "0x40c068",
            "decompiledFuncCode": "int sub_40bff0()\n{\n    unsigned int v0;  // [bp+0x0]\n    void *v2;  // rdi\n    unsigned long long v4;  // rax\n    unsigned long long v8;  // rax\n\n    if (fileno(v2) >= 0)\n    {\n        v4 = __freading();\n        if ((v4 == 0 || (unsigned long long)lseek(fileno(v2), 0x0, 0x1) != -1) && sub_40c070() != 0)\n        {\n            v8 = fclose(v2);\n            if (v0 != 0)\n            {\n                *(__errno_location()) = v0;\n                v8 = -18446744069414584321;\n            }\n            return v8;\n        }\n    }\n}\n"
        },
        {
            "funcName": "sub_406870",
            "funcStartAddr": "0x406870",
            "funcEndAddr": "0x406880",
            "decompiledFuncCode": "int sub_406870()\n{\n    unsigned long v1;  // rdi\n    unsigned long v2;  // rsi\n\n    return (0 CONCAT v1 % 8 | v1 * 0x2000000000000000) % v2 >> 64;\n}\n"
        },
        {
            "funcName": "sub_40952f",
            "funcStartAddr": "0x40952f",
            "funcEndAddr": "0x4095a0",
            "decompiledFuncCode": "extern uint128_t g_6124c0;\nextern uint128_t g_6124d0;\nextern uint128_t g_6124e0;\nextern unsigned long long g_6124f0;\n\nint sub_40952f()\n{\n    void v0;  // [bp-0x48]\n    void v1;  // [bp-0x38]\n    void v2;  // [bp-0x28]\n    unsigned long v3;  // [bp-0x18]\n    unsigned long v5;  // rdx\n\n    v3 = g_6124f0;\n    *((uint128_t *)&v0) = g_6124c0;\n    *((uint128_t *)&v1) = g_6124d0;\n    *((uint128_t *)&v2) = g_6124e0;\n    *((unsigned int *)&((char *)stack_base)[4 * v5 % 32 + -64]) = (unsigned int)((unsigned long long)(!((unsigned int)((unsigned long long)(unsigned int)*((int *)&((char *)stack_base)[4 * v5 % 32 + -64]) >> ((char)((unsigned int)v5 & 31) & 31))) & 1) << ((char)((unsigned int)v5 & 31) & 31)) ^ *((int *)&((char *)stack_base)[4 * v5 % 32 + -64]);\n    return sub_408f10();\n}\n"
        },
        {
            "funcName": "sub_409f30",
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f7a",
            "decompiledFuncCode": "int sub_409f30() { crash_skku;\n}"
        },
        {
            "funcName": "sub_409c90",
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409d48",
            "decompiledFuncCode": "int sub_409c90()\n{\n    unsigned int v0;  // [bp-0xa0]\n    void tmp_12;  // tmp #12\n    void tmp_8;  // tmp #8\n    unsigned long v1;  // [bp-0x98]\n    unsigned long long v2;  // [bp-0x90]\n    unsigned long v3;  // [bp-0x88]\n    unsigned long long v4;  // [bp-0x18]\n    unsigned long v5;  // [bp-0x10]\n    unsigned long long v6;  // [bp+0x8]\n    char v7;  // [bp+0x10]\n    unsigned long long v8;  // r11\n    unsigned long long v9;  // r8\n    unsigned long v10;  // r9\n    unsigned long long v11;  // rax\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // r8\n    unsigned long long|unsigned long long * v14;  // r10\n    unsigned long long v15;  // r9\n\n    v8 = 0;\n    v4 = v9;\n    v14 = &v6;\n    v13 = 32;\n    v1 = &v6;\n    v5 = v10;\n    v15 = 0;\n    v0 = 32;\n    v2 = stack_base + -56;\n    while (true)\n    {\n        if ((unsigned int)v13 <= 47)\n        {\n            tmp_12 = v13;\n            v13 = (unsigned int)v13 + 8;\n            v8 = 1;\n            v11 = v4;\n            v3 = v4;\n        }\n        else\n        {\n            tmp_8 = v14;\n            v14 = &v7;\n            v12 = v6;\n            v3 = v6;\n        }\n        if ((unsigned int)v13 <= 47 && v11 != 0 || (unsigned int)v13 > 47 && v12 != 0)\n        {\n            v15 += 1;\n        }\n        if (v8 != 0)\n        {\n            v0 = v13;\n        }\n        return sub_409830();\n    }\n}\n"
        },
        {
            "funcName": "sub_405d10",
            "funcStartAddr": "0x405d10",
            "funcEndAddr": "0x406165",
            "decompiledFuncCode": "extern unsigned int g_40c35e;\nextern unsigned int g_40c718;\nextern unsigned int g_40c740;\nextern unsigned int g_40c768;\nextern unsigned int g_40c7f0;\nextern unsigned int g_40c828;\nextern unsigned int g_40c878;\nextern unsigned int g_40c910;\nextern unsigned int g_40ca00;\nextern unsigned int g_40cc30;\nextern unsigned int g_40cd08;\nextern unsigned int g_40ce58;\nextern unsigned int g_40ce98;\nextern unsigned int g_40cec8;\nextern unsigned int g_40cf00;\nextern unsigned int g_40cfa0;\nextern unsigned int g_40d180;\nextern unsigned int g_40d1c8;\nextern unsigned int g_40d1e8;\nextern unsigned long long stdout;\n\nint sub_405d10()\n{\n    unsigned long v0;  // [bp-0x88]\n    unsigned long v1;  // [bp-0x80]\n    unsigned long long v2;  // [bp-0x78]\n    unsigned long v3;  // [bp-0x70]\n    unsigned long v4;  // [bp-0x68]\n    unsigned long v5;  // [bp-0x60]\n    unsigned long v6;  // [bp-0x58]\n    unsigned long v7;  // [bp-0x50]\n    unsigned long v8;  // [bp-0x48]\n    unsigned long v9;  // [bp-0x40]\n    unsigned long v10;  // [bp-0x38]\n    unsigned long v11;  // [bp-0x30]\n    unsigned long long v12;  // [bp-0x28]\n    unsigned long long v13;  // [bp-0x20]\n    unsigned long v14;  // [bp-0x18]\n    unsigned long v15;  // [bp-0x8]\n    unsigned long v17;  // r12\n    unsigned long v18;  // rbx\n    unsigned long v19;  // rdi\n    unsigned long long v35[2];  // rax\n    char *v36;  // rdi\n    char *v37;  // rsi\n    unsigned long long v38;  // rcx\n    unsigned long long v39;  // cc_dep1\n    unsigned long long v40;  // cc_dep2\n    unsigned long v41;  // d\n    char *v45;  // rax\n    char *v46;  // rax\n    unsigned long long v47;  // rax\n\n    v15 = v17;\n    v14 = v18;\n    if ((unsigned int)v19 != 0)\n    {\n        dcgettext(0x0, 0x40c718, 0x5);\n        __fprintf_chk();\n    }\n    else\n    {\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c740, 0x5));\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c768, 0x5));\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40c7f0, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40c828, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40c878, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40c910, 0x5), stdout);\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40ca00, 0x5));\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40cc30, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40cd08, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40ce58, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40ce98, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40cec8, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40cf00, 0x5), stdout);\n        fputs_unlocked((unsigned long long)dcgettext(0x0, 0x40cfa0, 0x5), stdout);\n        v0 = \"[\";\n        v35 = &v0;\n        v1 = \"test invocation\";\n        v2 = \"coreutils\";\n        v3 = \"Multi-call\";\n        v4 = \"sha224sum\";\n        v5 = \"sha2 utilities\";\n        v6 = \"sha256sum\";\n        v7 = \"sha2 utilities\";\n        v8 = \"sha384sum\";\n        v9 = \"sha2 utilities\";\n        v10 = \"sha512sum\";\n        v11 = \"sha2 utilities\";\n        v12 = 0;\n        v13 = 0;\n        while (true)\n        {\n            v35 = &v2;\n            v36 = v2;\n            if (v2 == 0)\n            {\n                break;\n            }\n            v37 = \"tail\";\n            v38 = 5;\n            if ((v39 > v40) - 0 - (v39 < v40) == 0)\n            {\n                break;\n            }\n            while (v38 != 0)\n            {\n                v38 -= 1;\n                v39 = *(v37);\n                v40 = *(v36);\n                v36 = &v36[v41];\n                v37 = &v37[v41];\n                break;\n            }\n        }\n        if (v35[1] != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c35e, 0x5));\n            v46 = setlocale(0x5, 0x0);\n        }\n        else\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40c35e, 0x5));\n            v45 = setlocale(0x5, 0x0);\n            if (v45 != 0)\n            {\n                v47 = strncmp(v45, \"en_\", 0x3);\n            }\n            if (v45 == 0 || v47 == 0)\n            {\n                __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40d1c8, 0x5));\n            }\n        }\n        if ((v35[1] == 0 || strncmp(v46, \"en_\", 0x3) != 0) && (v35[1] == 0 || v46 != 0) && (v45 != 0 || v35[1] != 0) && (v35[1] != 0 || v47 != 0))\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40d180, 0x5));\n        }\n        if (v35[1] != 0 || v45 != 0 && v47 != 0)\n        {\n            __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40d1c8, 0x5));\n        }\n        __printf_chk(0x1, (unsigned long long)dcgettext(0x0, 0x40d1e8, 0x5));\n    }\n    exit(v19); /* do not return */\n}\n"
        },
        {
            "funcName": "sub_4047e0",
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x40480e",
            "decompiledFuncCode": "int sub_4047e0()\n{\n    unsigned long long v1;  // rdi\n    unsigned long long v3;  // cc_dep1\n    unsigned long long v4;  // cc_dep2\n    unsigned long v5;  // d\n    char *v6;  // rsi\n    unsigned long long v7;  // rcx\n    char *v8;  // rdi\n\n    v7 = 2;\n    v8 = \"-\";\n    v6 = v1;\n    while (v7 != 0)\n    {\n        v7 -= 1;\n        v3 = *(v6);\n        v4 = *(v8);\n        v8 = &v8[v5];\n        v6 = &v6[v5];\n        break;\n    }\n    if ((v3 > v4) - 0 - (v3 < v4) != 0)\n    {\n        return v6;\n    }\n}\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404eec",
            "decompiledFuncCode": "extern unsigned int g_40c227;\nextern char g_612380;\n\nint sub_404cd0()\n{\n    unsigned long v0;  // [bp-0x2058]\n    unsigned long v1;  // [bp-0x2048]\n    char v2;  // [bp-0x2038]\n    unsigned long v4;  // rdi\n    unsigned long v5;  // rcx\n    unsigned long v6;  // rdx\n    unsigned long v7;  // r8\n    unsigned long long v8;  // r13\n    unsigned long long v10;  // r12\n    unsigned long long *v11;  // r9\n    unsigned long long v12;  // rax\n    unsigned long long v13;  // rcx\n    unsigned long long v14;  // rdx\n    unsigned long long v15;  // r15\n    unsigned long long v18;  // r12\n    unsigned long long v21;  // rbp\n    unsigned long long v23;  // rax\n\n    v0 = v4;\n    v1 = v5;\n    if (v6 != 0)\n    {\n        v8 = v7 - (((unsigned int)(v7 - v1 + (v7 - v1 >> 63 >> 51)) & 8191) == v7 - v1 >> 63 >> 51? 0x2000 : ((unsigned int)(v7 - v1 + (v7 - v1 >> 63 >> 51)) & 8191) - (v7 - v1 >> 63 >> 51));\n        sub_404c20();\n        v10 = (unsigned int)sub_409780();\n        if (v10 != -1)\n        {\n            *(v11) = v8 + v10;\n            if (v10 != 0)\n            {\n                v15 = v6 - (unsigned long long)(char)(*(&((char *)stack_base)[v10 + -8249]) != g_612380);\n            }\n            if (v10 == 0 && v8 == v1)\n            {\n                sub_404c20();\n                *(v11) = v8 + (unsigned int)sub_404a20();\n            }\n        }\n    }\n    if (v18 != 0 || v10 != 0 && v6 != 0 && v10 != -1)\n    {\n        while (true)\n        {\n            v12 = memrchr((unsigned int)&v2, g_612380);\n            if (v12 == 0)\n            {\n                break;\n            }\n            v13 = v15 - 1;\n            v14 = v12 + -0x1 * &v2;\n            if (v15 != 0)\n            {\n                v15 = v13;\n                if (v14 == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (v10 - 1 != v14)\n                {\n                    sub_4048a0();\n                }\n                *(v11) = *(v11) + (unsigned int)sub_404a20();\n                v23 = 1;\n            }\n        }\n        if (v15 == 0 && v12 != 0)\n        {\n            return v23;\n        }\n    }\n    if (v18 != 0 || v6 != 0)\n    {\n        if ((v18 != 0 || v10 != -1) && v8 != v1)\n        {\n            sub_404c20();\n            v18 = (unsigned int)sub_409780();\n            if (v18 != -1)\n            {\n                *(v11) = v8 - 0x2000 + v18;\n            }\n        }\n        if ((v10 == -1 || v18 == -1) && (v10 == -1 || v8 != v1) && (v18 == -1 || v6 != 0) && (v6 != 0 || v8 != v1))\n        {\n            v21 = (unsigned int)sub_409510();\n            error(0x0, *(__errno_location()), (unsigned long long)dcgettext(0x0, 0x40c227, 0x5));\n            v23 = 0;\n        }\n    }\n    if (v6 == 0 || v10 == 0 && v8 == v1 && v10 != -1 || v18 == 0 && v8 != v1 && v10 != -1 && v18 != -1)\n    {\n        v23 = 1;\n    }\n    return v23;\n}\n"
        },
        {
            "funcName": "sub_406ca0",
            "funcStartAddr": "0x406ca0",
            "funcEndAddr": "0x406ddc",
            "decompiledFuncCode": "typedef struct struct_0 {\n    char padding_0[8];\n    unsigned long long field_8;\n} struct_0;\n\nint sub_406ca0()\n{\n    unsigned long v0;  // [bp-0x20]\n    void tmp_14;  // tmp #14\n    unsigned long v1;  // [bp-0x10]\n    unsigned long v2;  // [bp-0x8]\n    unsigned long v4;  // r13\n    unsigned long v5;  // r12\n    unsigned long v6;  // rbx\n    unsigned long long v7[2];  // rdi\n    unsigned long long v8;  // rdi\n    struct_0 *v9;  // rax\n    unsigned long long v10;  // rdx\n    unsigned long|unsigned long long v11;  // rbx\n    unsigned long long v12[2];  // rsi\n    unsigned long v13;  // xmm1lq\n\n    v2 = v4;\n    v1 = v5;\n    v0 = v6;\n    v11 = 0;\n    v12 = *(v7);\n    v8 = v7[1];\n    if (v12 < v8)\n    {\n        while (true)\n        {\n            if (*(v12) == 0)\n            {\n                v12 = &v12[2];\n                if (v12 >= v8)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v9 = v12[1];\n                v10 = 1;\n                if (v12[1] != 0)\n                {\n                    do\n                    {\n                        v9 = v9->field_8;\n                        v10 += 1;\n                    }\n                    while (v9 != 0);\n                }\n                v11 = (v11 < v10? v10 : v11);\n                v12 = &v12[2];\n                if (v12 >= v8)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk();\n    __fprintf_chk();\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, xmm1lq<8>, 0x0<64>, cc_ndep<8>)))\n    {\n    }\n    else\n    {\n        tmp_14 = v13;\n    }\n    __fprintf_chk();\n}\n"
        },
        {
            "funcName": "sub_409df0",
            "funcStartAddr": "0x409df0",
            "funcEndAddr": "0x409e11",
            "decompiledFuncCode": "int sub_409df0()\n{\n    void tmp_10;  // tmp #10\n    unsigned long v0;  // [bp-0x8]\n    unsigned long v2;  // rdi\n    unsigned long v3;  // rsi\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rdi\n\n    tmp_10 = v2;\n    v4 = v2 * v3;\n    v5 = v2 * v3;\n    v4 = (char)[D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    if (!((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>)))\n    {\n        v4 = [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>);\n    }\n    if ((char)[D] amd64g_calculate_condition(0x8<64>, 0x14<64>, rdi<8>, 0x0<64>, cc_ndep<8>) || [D] amd64g_calculate_condition(0x0<64>, 0x30<64>, t10, rsi<8>, cc_ndep<8>) != 0)\n    {\n        v0 = v4;\n        sub_40a020(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_4056e0",
            "funcStartAddr": "0x4056e0",
            "funcEndAddr": "0x405cc2",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    unsigned long long field_10;\n    unsigned long long field_18;\n    unsigned long long field_20;\n    unsigned long long field_28;\n    unsigned int field_30;\n    char field_34;\n    char field_35;\n    char field_36;\n    char padding_37[1];\n    unsigned int field_38;\n    unsigned int field_3c;\n    unsigned int field_40;\n    char padding_44[20];\n    unsigned long long field_58;\n} struct_0;\n\nextern unsigned int g_40c2a1;\nextern unsigned int g_40c2bc;\nextern unsigned int g_40c620;\nextern unsigned int g_40c658;\nextern unsigned int g_40c688;\nextern unsigned int g_40c6e8;\nextern unsigned int g_6122a8;\nextern char g_612378;\nextern char g_612386;\n\nint sub_4056e0()\n{\n    char v0;  // [bp-0xd1]\n    unsigned long v1;  // [bp-0xd0]\n    char v2;  // [bp-0xc8]\n    unsigned long v3;  // [bp-0xc0]\n    unsigned int v4;  // [bp-0xb0]\n    unsigned long v5;  // [bp-0x70]\n    unsigned long v6;  // [bp-0x68]\n    unsigned long long v8;  // rcx\n    unsigned long v9;  // rsi\n    unsigned int v10;  // r13d\n    struct_0 *v11;  // rdi\n    struct_0 *v12;  // rbx\n    unsigned long long v13;  // cc_dep1\n    unsigned long long v14;  // cc_dep2\n    unsigned long v15;  // d\n    char *v16;  // rdi\n    char *v17;  // rsi\n    unsigned long|unsigned int v19;  // rax\n    unsigned long long v20;  // r12\n    char v21;  // al\n    unsigned long long v22;  // rax\n    unsigned long v23;  // rbp\n    unsigned long long v24;  // rax\n    unsigned long long v25;  // rax\n    unsigned long long v27;  // rax\n    unsigned long long v29;  // rbp\n    unsigned long long v30;  // r15\n    unsigned int *v31;  // r13\n    unsigned int v32;  // eax\n    unsigned long long v34;  // rax\n    unsigned long long v38;  // rbp\n    unsigned int v40;  // cc_dep1\n    unsigned int v41;  // eax\n    unsigned long long v42;  // r13\n    unsigned long long v44;  // rbp\n    unsigned long long v47;  // rbp\n    unsigned long long v48;  // r14\n    unsigned long long v51;  // r14\n    unsigned long long v52;  // rax\n    unsigned long long v53;  // r14\n\n    v8 = 2;\n    v10 = v9;\n    v12 = v11;\n    v19 = v11->field_0;\n    v16 = \"-\";\n    v17 = v19;\n    while (v8 != 0)\n    {\n        v8 -= 1;\n        v13 = *(v17);\n        v14 = *(v16);\n        v16 = &v16[v15];\n        v17 = &v17[v15];\n        break;\n    }\n    v0 = v12->field_36;\n    if ((v13 > v14) - (v13 < v14) != 0)\n    {\n        v20 = sub_406780();\n        v19 = v12->field_3c;\n    }\n    else\n    {\n        v19 = v12->field_3c;\n        v20 = 0;\n    }\n    v21 = v19 == 0;\n    if (v12->field_38 == -1 != v19 == 0)\n    {\n        if (g_612386 == 0)\n        {\n            v12->field_36 = 1;\n            if (g_612378 == 0)\n            {\n                v22 = __lxstat(0x1, v12->field_0, (unsigned int)&v2);\n            }\n        }\n        else if (v20 != -1)\n        {\n            v12->field_36 = 1;\n            if (g_612378 == 0)\n            {\n                v1 = &v2;\n                v25 = __lxstat(0x1, v12->field_0, (unsigned int)&v2);\n            }\n        }\n        else\n        {\n            v12->field_36 = 0;\n            v23 = v12->field_0;\n            if (g_612378 != 0)\n            {\n                v12->field_3c = *(__errno_location());\n            }\n            else\n            {\n                v24 = __lxstat(0x1, v23, (unsigned int)&v2);\n            }\n        }\n        if (v20 != -1 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0))\n        {\n            v27 = __fxstat(0x1, v20, (unsigned int)&v2);\n            if (v27 >= 0 && ((v4 & 0xf000) - 0x1000 & -0x2000) != 0 && ((unsigned short)v4 & 0xb000) != 0x8000)\n            {\n                v12->field_3c = -1;\n                v12->field_36 = 0;\n                if (g_612386 != 0 && g_6122a8 == 1)\n                {\n                    v12->field_34 = 0;\n                }\n                if (g_612386 == 0 || g_6122a8 != 1)\n                {\n                    v12->field_34 = 1;\n                }\n                if (g_612386 == 0 && v0 != 0 || g_612386 == 0 && v12->field_3c != -1 || v0 != 0 && g_6122a8 != 1 || v12->field_3c != -1 && g_6122a8 != 1)\n                {\n                    v42 = dcgettext(0x0, 0x40c2bc, 0x5);\n                }\n                if (v0 != 0 || g_612386 == 0 && v12->field_3c != -1 || v12->field_3c != -1 && g_6122a8 != 1 || g_6122a8 == 1 && g_612386 != 0 && !((char)(v12->field_3c + 1 == 0)))\n                {\n                    sub_4047e0();\n                    v47 = (unsigned int)sub_409510();\n                    error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c658, 0x5));\n                }\n            }\n        }\n        if (g_612378 == 0)\n        {\n            if (((unsigned short)v4 & 0xf000) == 0xa000 && (v22 == 0 || g_612386 != 0) && (v25 == 0 || v20 == -1 || g_612386 == 0) && (g_612386 == 0 || v24 == 0 || v20 != -1))\n            {\n                v12->field_3c = -1;\n                v12->field_34 = 1;\n                sub_4047e0();\n                v29 = (unsigned int)sub_409510();\n                error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c620, 0x5));\n            }\n            if (v34 != 0 && (((v4 & 0xf000) - 0x1000 & -0x2000) == 0 && v20 != -1 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0) || ((unsigned short)v4 & 0xb000) == 0x8000 && v20 != -1 && ((v4 & 0xf000) - 0x1000 & -0x2000) != 0 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0)))\n            {\n                v12->field_3c = -1;\n                sub_4047e0();\n                v44 = (unsigned int)sub_409510();\n                error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c688, 0x5));\n                *((short *)&v12->field_34) = 257;\n            }\n        }\n        if (v20 == -1 && g_612386 == 0 && g_612378 != 0 || v20 == -1 && g_612386 == 0 && v22 != 0 || v20 == -1 && g_612378 == 0 && ((unsigned short)v4 & 0xf000) != 0xa000 || v27 < 0 && g_612386 == 0 && v22 != 0 || v27 < 0 && v20 != -1 && g_612378 != 0 || v27 < 0 && v20 != -1 && ((unsigned short)v4 & 0xf000) != 0xa000 || v20 == -1 && g_612378 == 0 && g_612386 != 0 && v24 != 0 || v27 < 0 && v25 != 0 && v20 != -1 && g_612386 != 0)\n        {\n            v30 = v12->field_36;\n            v31 = __errno_location();\n            v32 = *(v31);\n            v12->field_3c = v32;\n            if (v30 != 0 && v32 != v12->field_3c)\n            {\n                sub_4047e0();\n                sub_4095e0();\n                error(0x0, *(v31), \"%s\");\n            }\n        }\n        if ((v20 == -1 && g_612386 != 0 && g_612378 != 0 || (v20 == -1 && g_612386 == 0 && g_612378 != 0 || v20 == -1 && g_612386 == 0 && v22 != 0 || v20 == -1 && g_612378 == 0 && ((unsigned short)v4 & 0xf000) != 0xa000 || v27 < 0 && g_612386 == 0 && v22 != 0 || v27 < 0 && v20 != -1 && g_612378 != 0 || v27 < 0 && v20 != -1 && ((unsigned short)v4 & 0xf000) != 0xa000 || v20 == -1 && g_612378 == 0 && g_612386 != 0 && v24 != 0 || v27 < 0 && v25 != 0 && v20 != -1 && g_612386 != 0) && v30 == 0) && v0 != 0)\n        {\n            sub_4047e0();\n            v38 = (unsigned int)sub_409510();\n            error(0x0, v12->field_3c, (unsigned long long)dcgettext(0x0, 0x40c2a1, 0x5));\n        }\n        if (((v4 & 0xf000) - 0x1000 & -0x2000) == 0 && v20 != -1 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0) || ((unsigned short)v4 & 0xb000) == 0x8000 && v20 != -1 && ((v4 & 0xf000) - 0x1000 & -0x2000) != 0 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0))\n        {\n            sub_4047e0();\n            v34 = sub_405090();\n            *((unsigned long long *)&v12->field_35) = v34;\n        }\n        if (v34 != 0 && (((v4 & 0xf000) - 0x1000 & -0x2000) == 0 && v20 != -1 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0) || ((unsigned short)v4 & 0xb000) == 0x8000 && v20 != -1 && ((v4 & 0xf000) - 0x1000 & -0x2000) != 0 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0)) && g_612378 != 0 || (((v4 & 0xf000) - 0x1000 & -0x2000) == 0 && v20 != -1 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0) || ((unsigned short)v4 & 0xb000) == 0x8000 && v20 != -1 && ((v4 & 0xf000) - 0x1000 & -0x2000) != 0 && v27 >= 0 && (g_612386 == 0 || v25 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000) && (g_612386 != 0 || g_612378 != 0 || ((unsigned short)v4 & 0xf000) != 0xa000 || v22 != 0)) && v34 == 0)\n        {\n            v40 = v12->field_3c & -3;\n            v12->field_3c = 0;\n            v41 = v12->field_38;\n            if (v40 != 0)\n            {\n                if (v41 == -1)\n                {\n                    sub_4047e0();\n                    v48 = (unsigned int)sub_409510();\n                }\n                else\n                {\n                    __assert_fail(); /* do not return */\n                }\n            }\n            else\n            {\n                if (!(v41 != -1))\n                {\n                    sub_4047e0();\n                    v51 = (unsigned int)sub_409510();\n                }\n                else if (v12->field_28 == v3)\n                {\n                    if (v12->field_20 == *((long long *)&v2))\n                    {\n                        sub_4047e0();\n                        v52 = sub_404820();\n                    }\n                }\n            }\n        }\n        if (...)\n        {\n            sub_4047e0();\n            sub_404820();\n            sub_4047e0();\n            v52 = sub_404820();\n            v12->field_38 = -1;\n        }\n        if (...)\n        {\n            error(0x0, 0x0, (unsigned long long)dcgettext(0x0, v17, 0x5));\n        }\n        if (...)\n        {\n            sub_4047e0();\n            v53 = (unsigned int)sub_409510();\n            error(0x0, 0x0, (unsigned long long)dcgettext(0x0, 0x40c6e8, 0x5));\n            sub_4047e0();\n            sub_404820();\n        }\n        if (...)\n        {\n            *((unsigned long long *)&v12->field_38) = v20;\n            v12->field_34 = 0;\n            v12->field_8 = 0;\n            v12->field_10 = v5;\n            v12->field_40 = ((unsigned int)((v13 > v14) - 0 - (v13 < v14)) == 0? -1 : (unsigned int)r13b<1>);\n            v12->field_18 = v6;\n            v12->field_58 = 0;\n            v12->field_20 = *((long long *)&v2);\n            v12->field_28 = v3;\n            v12->field_30 = v4;\n            sub_4047e0();\n            v52 = sub_404c20();\n        }\n        if (...)\n        {\n            return v52;\n        }\n    }\n    else\n    {\n        __assert_fail(); /* do not return */\n    }\n}\n"
        },
        {
            "funcName": "sub_409c10",
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409c30",
            "decompiledFuncCode": "int sub_409c10()\n{\n    unsigned long long v1;  // r9\n    unsigned long long v2[2];  // r8\n\n    v1 = 0;\n    if (*(v2) != 0)\n    {\n        do\n        {\n            v1 += 1;\n        }\n        while (v2[v1] != 0);\n    }\n}\n"
        },
        {
            "funcName": "sub_409320",
            "funcStartAddr": "0x409320",
            "funcEndAddr": "0x4093b5",
            "decompiledFuncCode": "extern struct_0 *g_612318;\nextern unsigned long long g_612320;\nextern unsigned long long g_612328;\nextern unsigned int g_612330;\nextern unsigned long long g_6123c0;\n\nint sub_409320()\n{\n    unsigned long long v1;  // rax\n    unsigned long long *v2;  // rbx\n    void *v3;  // rdi\n\n    v1 = g_612330;\n    if (g_612330 > 1)\n    {\n        v2 = &g_612318[1].field_8;\n        while (true)\n        {\n            v3 = *(v2);\n            v2 = &v2[2];\n            v1 = free(v3);\n            if (v2 == &g_612318[(unsigned long long)(g_612330 - 2) + 2].field_8)\n            {\n                break;\n            }\n        }\n    }\n    if (g_612318->field_8 != 6366144)\n    {\n        v1 = free(g_612318->field_8);\n        g_612320 = 0x100;\n        g_612328 = &g_6123c0;\n    }\n    if (g_612318 != 6365984)\n    {\n        v1 = free(g_612318);\n        g_612318 = &g_612320;\n    }\n    g_612330 = 1;\n    return v1;\n}\n"
        },
        {
            "funcName": "sub_409310",
            "funcStartAddr": "0x409310",
            "funcEndAddr": "0x40931a",
            "decompiledFuncCode": "int sub_409310()\n{\n}\n"
        },
        {
            "funcName": "sub_4069e0",
            "funcStartAddr": "0x4069e0",
            "funcEndAddr": "0x406a5a",
            "decompiledFuncCode": "extern int512_t g_40d880;\n\nint sub_4069e0()\n{\n    unsigned int *v1[4];  // rdi\n    unsigned int v2[4];  // rax\n    unsigned int v3;  // ymm0\n    uint128_t v4;  // xmm1\n    unsigned int v5;  // ymm1\n    unsigned long long v6;  // xmm1lq\n\n    v2 = *(v1);\n    if (*(v1) != 4249728)\n    {\n        v3 = v2[1];\n        if ((((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1 && (((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1 && (((char)(BinaryOp CmpF & 69) | (char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 6)) & 1) != 1)\n        {\n            v4 = 0;\n            v5 = v2[0];\n            if (((char)(BinaryOp CmpF & 69) & 1) == 0)\n            {\n                v6 = (unsigned long long)(unsigned int)xmm1<16> + 4568451461323476173;\n            }\n        }\n        if (...)\n        {\n            *(v1) = &g_40d880;\n            return 0;\n        }\n    }\n    if (...)\n    {\n        return 1;\n    }\n}\n"
        },
        {
            "funcName": "sub_40a7e0",
            "funcStartAddr": "0x40a7e0",
            "funcEndAddr": "0x40a8b5",
            "decompiledFuncCode": "int sub_40a7e0()\n{\n    unsigned int v1[13];  // rsi\n    unsigned long long v2;  // r12\n    unsigned long long v3;  // rbp\n    unsigned long long v4;  // rbx\n    unsigned long long v5;  // r9\n    unsigned long long v6;  // r8\n    unsigned long long v7;  // r14\n    unsigned long long v8;  // rdx\n    unsigned long v9;  // rdi\n    unsigned long long *v10;  // rax\n    unsigned long long *v12;  // rdx\n    unsigned long long v13;  // rcx\n    unsigned long long v14;  // r10\n    unsigned long long *v15;  // rax\n    unsigned long long *v17;  // rdx\n    unsigned long long v18;  // rcx\n    unsigned int v19;  // r9d\n\n    v2 = v1[5 + 1];\n    v3 = v1[0];\n    v4 = (int)v1[6];\n    v5 = v1[5 + 1];\n    v14 = v1[0];\n    while ((unsigned int)v14 > v1[6])\n    {\n        for (v6 = (int)v1[6]; v5 < v1[6]; v19 = v5 + v7)\n        {\n            v7 = v14 - v6;\n            v8 = v6 - v5;\n            if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5))\n            {\n                v14 -= v8;\n                v10 = v9 + v5 * 8;\n                v12 = v14 - v5;\n                do\n                {\n                    v13 = *(v10);\n                    *(v10) = *((long long *)((char *)v10 + 0x8 * v12));\n                    *((unsigned long long *)((char *)v10 + 0x8 * v12)) = v13;\n                    v10 = &v10[1];\n                }\n                while (v9 + 8 + ((unsigned int)v8 - 1 + v5) * 8 != v10);\n                if ((unsigned int)v14 <= (unsigned int)v6)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                v15 = v9 + v5 * 8;\n                v17 = v4 - v5;\n                do\n                {\n                    v18 = *(v15);\n                    *(v15) = *((long long *)((char *)v15 + 0x8 * v17));\n                    *((unsigned long long *)((char *)v15 + 0x8 * v17)) = v18;\n                    v15 = &v15[1];\n                }\n                while (v15 != v9 + 8 + (v7 - 1 + v5) * 8);\n            }\n        }\n        if ((unsigned int)(v14 - v6) > (unsigned int)(v6 - v5) || v5 >= v1[6])\n        {\n            v1[6] = v3;\n            v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n            return stack_base + 0 - v6;\n        }\n    }\n    v1[6] = v3;\n    v1[5 + 1] = (unsigned int)(v2 + stack_base + 0 - v6);\n    return stack_base + 0 - v6;\n}\n"
        },
        {
            "funcName": "sub_40b8f0",
            "funcStartAddr": "0x40b8f0",
            "funcEndAddr": "0x40b94c",
            "decompiledFuncCode": "int sub_40b8f0()\n{\n    unsigned long long v1;  // r12\n    unsigned long long v2;  // rax\n    unsigned int *v3;  // rdi\n\n    v1 = __fpending();\n    v2 = sub_40bff0();\n    if (((char)*(v3) & 32) == 0)\n    {\n        if ((unsigned int)v2 != 0 && v1 == 0)\n        {\n            v2 = 0 - (unsigned int)(char)(*(__errno_location()) != 9);\n        }\n    }\n    else\n    {\n        if ((unsigned int)v2 == 0)\n        {\n            *(__errno_location()) = 0;\n            v2 = -18446744069414584321;\n        }\n    }\n    if ((unsigned int)v2 != 0 && (v1 != 0 || ((char)*(v3) & 32) != 0))\n    {\n        v2 = -18446744069414584321;\n    }\n    return v2;\n}\n"
        },
        {
            "funcName": "sub_409dd0",
            "funcStartAddr": "0x409dd0",
            "funcEndAddr": "0x409dea",
            "decompiledFuncCode": "int sub_409dd0()\n{\n    unsigned int v1;  // rdi\n    unsigned long long v2;  // rax\n\n    v2 = malloc(v1);\n    if (v2 == 0 && v1 != 0)\n    {\n        sub_40a020(); /* do not return */\n    }\n    if (v1 == 0 || v2 != 0)\n    {\n        return v2;\n    }\n}\n"
        },
        {
            "funcName": "sub_407800",
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407834",
            "decompiledFuncCode": "int sub_407800()\n{\n    unsigned long long v0;  // [bp-0x10]\n    unsigned long long v2;  // rsi\n    unsigned long long v3;  // rbx\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rax\n\n    v3 = v2;\n    v4 = sub_407580();\n    if (v4 != -1)\n    {\n        if (v4 == 0)\n        {\n            v3 = v0;\n        }\n        v5 = v3;\n        return v5;\n    }\n    return 0;\n}\n"
        },
        {
            "funcName": "sub_407ac0",
            "funcStartAddr": "0x407ac0",
            "funcEndAddr": "0x407b28",
            "decompiledFuncCode": "int sub_407ac0()\n{\n    char v0;  // [bp-0x10]\n    unsigned long long v2;  // rbx\n    char *v3;  // rax\n    unsigned long long v4;  // rax\n    unsigned long long v5;  // rax\n\n    v2 = 200809;\n    v3 = getenv(\"_POSIX2_VERSION\");\n    if (v3 != 0 && *(v3) != 0)\n    {\n        v4 = strtol(v3, &v0, 0xa);\n        if (*((char *)*((long long *)&v0)) == 0)\n        {\n            if (v4 >= -0x80000000)\n            {\n                return (v4 <= 2147483647? v4 : 2147483647);\n            }\n            v2 = 0x80000000;\n        }\n    }\n    if (v4 < -0x80000000 || *(v3) == 0 || v3 == 0 || *((char *)*((long long *)&v0)) != 0)\n    {\n        v5 = v2;\n        return v5;\n    }\n}\n"
        },
        {
            "funcName": "sub_4096c0",
            "funcStartAddr": "0x4096c0",
            "funcEndAddr": "0x4096c9",
            "decompiledFuncCode": "int sub_4096c0()\n{\n}\n"
        },
        {
            "funcName": "sub_406590",
            "funcStartAddr": "0x406590",
            "funcEndAddr": "0x40662e",
            "decompiledFuncCode": "extern unsigned int g_40c276;\nextern unsigned int g_6122c0;\nextern char g_612390;\nextern unsigned long long g_612398;\n\nint sub_406590()\n{\n    unsigned long long v1;  // rax\n    unsigned int *v2;  // rbx\n    unsigned long long v3;  // rax\n    unsigned long long v4;  // rbp\n\n    v1 = sub_40b8f0();\n    if (v1 != 0)\n    {\n        v2 = __errno_location();\n        if (g_612390 == 0 || *(v2) != 32)\n        {\n            v4 = dcgettext(0x0, 0x40c276, 0x5);\n            if (g_612398 != 0)\n            {\n                sub_4095b0();\n                error(0x0, *(v2), \"%s: %s\");\n            }\n        }\n    }\n    if (v1 == 0 || *(v2) == 32 && g_612390 != 0)\n    {\n        v3 = sub_40b8f0();\n    }\n    if ((unsigned int)v3 == 0 && (v1 == 0 || *(v2) == 32) && (v1 == 0 || g_612390 != 0))\n    {\n        return v3;\n    }\n    while (true)\n    {\n        _exit(g_6122c0);\n        error(0x0, *(v2), \"%s\");\n    }\n}\n"
        },
        {
            "funcName": "sub_407040",
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x407060",
            "decompiledFuncCode": "typedef struct struct_0 {\n    unsigned long long field_0;\n    unsigned long long field_8;\n    char field_10;\n} struct_0;\n\nint sub_407040()\n{\n    struct_0 *v1;  // rdi\n\n    v1->field_10 = 0;\n    v1->field_0 = 0x3f80000000000000;\n    v1->field_8 = 4590573145673223373;\n    return 4590573145673223373;\n}\n"
        },
        {
            "funcName": "sub_40a1c0",
            "funcStartAddr": "0x40a1c0",
            "funcEndAddr": "0x40a253",
            "decompiledFuncCode": "int sub_40a1c0()\n{\n    char *v0;  // [bp-0x30]\n    unsigned int *v2;  // r12\n    unsigned long long v3;  // rax\n    unsigned long v4;  // rdi\n    unsigned long long *v5;  // rsi\n    unsigned long v6;  // xmm0lq\n    unsigned long long|char v7;  // al\n    unsigned long long *v8;  // rdx\n\n    v2 = __errno_location();\n    *(v2) = 0;\n    v3 = rcx<8>();\n    if (v0 != v4)\n    {\n        if (!(v5 != 0))\n        {\n            v7 = 0;\n            if (*(v0) == 0 && ((char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 2) & 1) == 0 && (char)[D] amd64g_calculate_condition(0x4<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>))\n            {\n                v7 = 1;\n            }\n        }\n        else if (((char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 2) & 1) == 0)\n        {\n            v7 = 1;\n        }\n        if ((*(v0) == 0 || v5 != 0) && (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)) || ((char)((unsigned long long)(unsigned int)(BinaryOp CmpF & 69) >> 2) & 1) != 0))\n        {\n            v7 = *(v2) != 34;\n        }\n    }\n    else\n    {\n        v7 = 0;\n    }\n    if (!((char)[D] amd64g_calculate_condition(0x4<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n    {\n        *(v5) = v0;\n    }\n    *(v8) = v6;\n    return v7;\n}\n"
        }
    ],
    "isStripped": "True",
    "decompilerName": "Angr",
    "compilerName": "gcc",
    "optLevel": "-O",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tail.elf"
}