{
    "funcInfo": [
        {
            "decompiledFuncCode": "__int64 __fastcall main(__int64 a1, char **a2, char **a3)\n{\n  char *v3; // rdi\n  size_t v4; // r12\n  _BYTE *v5; // rax\n  _BYTE *v6; // rbp\n  int v7; // eax\n  _BYTE *v8; // rdx\n  int v9; // edi\n  _BYTE *v10; // rcx\n  _BYTE *v11; // rax\n  __int64 v12; // rbx\n  __int64 v13; // rax\n  __int64 v14; // r13\n  __int64 v15; // rbx\n  size_t v16; // rax\n  char *v18; // rbx\n  int *v19; // rax\n  void *ptr; // [rsp+0h] [rbp-38h]\n  size_t n; // [rsp+8h] [rbp-30h]\n\n  v3 = *a2;\n  if ( !*a2 )\n    v3 = \"bigram\";\n  sub_4015B0(v3, a2, a3);\n  setlocale(6, \"\");\n  bindtextdomain(\n    \"findutils\",\n    \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n  textdomain(\"findutils\");\n  if ( (unsigned int)sub_4038B0(sub_401510) )\n  {\n    v18 = dcgettext(0LL, \"The atexit library function failed\", 5);\n    v19 = __errno_location();\n    error(1, *v19, v18);\n  }\n  v4 = 1026LL;\n  n = 1026LL;\n  ptr = (void *)sub_402FD0(1026LL);\n  v5 = (_BYTE *)sub_402FD0(1026LL);\n  *v5 = 0;\n  v6 = v5;\n  while ( 1 )\n  {\n    v7 = __getdelim((char **)&ptr, &n, 10, stdin);\n    if ( v7 <= 0 )\n      break;\n    *((char *)ptr + v7 - 1) = 0;\n    v8 = ptr;\n    v9 = *(char *)ptr;\n    if ( *v6 && *v6 == (_BYTE)v9 )\n    {\n      v10 = ptr;\n      v11 = v6;\n      do\n      {\n        ++v11;\n        ++v10;\n      }\n      while ( *v10 == *v11 && *v11 );\n      LODWORD(v13) = (_DWORD)v11 - (_DWORD)v6;\n      v12 = (int)v13;\n      v13 = (int)v13;\n      v9 = *((char *)ptr + (int)v13);\n    }\n    else\n    {\n      v13 = 0LL;\n      v12 = 0LL;\n    }\n    if ( (_BYTE)v9 )\n    {\n      v14 = v13 + 1;\n      if ( *((_BYTE *)ptr + v13 + 1) )\n      {\n        v15 = v12 + 2;\n        do\n        {\n          _IO_putc(v9, stdout);\n          _IO_putc(*((char *)ptr + v14), stdout);\n          _IO_putc(10, stdout);\n          v8 = ptr;\n          v9 = *((char *)ptr + v15);\n          if ( !*((_BYTE *)ptr + v15) )\n            break;\n          v14 = v15 + 1;\n          v15 += 2LL;\n        }\n        while ( *((_BYTE *)ptr + v14) );\n      }\n    }\n    v16 = n;\n    ptr = v6;\n    v6 = v8;\n    n = v4;\n    v4 = v16;\n  }\n  free(ptr);\n  free(v6);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x401210L", 
            "funcEndAddr": "0x401402L", 
            "funcName": "main"
        }, 
        {
            "decompiledFuncCode": "// positive sp value has been detected, the output may be wrong!\nvoid __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)\n{\n  int v2; // esi\n  int v3; // [rsp-8h] [rbp-8h]\n  __int64 _0; // [rsp+0h] [rbp+0h]\n\n  v2 = v3;\n  *(_QWORD *)&v3 = a1;\n  _libc_start_main((int (__fastcall *)(int, char **, char **))main, v2, (char **)&_0, init, fini, a2, &v3);\n  __halt();\n}\n", 
            "funcStartAddr": "0x401410L", 
            "funcEndAddr": "0x40143bL", 
            "funcName": "start"
        }, 
        {
            "decompiledFuncCode": "void *sub_40143B()\n{\n  void *result; // rax\n\n  result = &unk_6061D8;\n  if ( &unk_6061D8 != &unk_6061D8 )\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x40143bL", 
            "funcEndAddr": "0x40145aL", 
            "funcName": "sub_40143B"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_40145A()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x40145aL", 
            "funcEndAddr": "0x401491L", 
            "funcName": "sub_40145A"
        }, 
        {
            "decompiledFuncCode": "void *sub_401491()\n{\n  void *result; // rax\n\n  if ( !byte_606208 )\n  {\n    while ( qword_606210 < (unsigned __int64)(&qword_605E48 - qword_605E40 - 1) )\n      ((void (*)(void))qword_605E40[++qword_606210])();\n    result = sub_40143B();\n    byte_606208 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401491L", 
            "funcEndAddr": "0x4014e8L", 
            "funcName": "sub_401491"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4014E8()\n{\n  return sub_40145A();\n}\n", 
            "funcStartAddr": "0x4014e8L", 
            "funcEndAddr": "0x4014edL", 
            "funcName": "sub_4014E8"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_401510()\n{\n  int *v0; // rax\n  int *v1; // rbx\n  __int64 result; // rax\n  char *v3; // rax\n  char *v4; // rbp\n  __int64 v5; // rax\n\n  if ( (unsigned int)sub_403260(stdout) )\n  {\n    v0 = __errno_location();\n    v1 = v0;\n    if ( !byte_606218 || *v0 != 32 )\n    {\n      v3 = dcgettext(0LL, \"write error\", 5);\n      v4 = v3;\n      if ( qword_606220 )\n      {\n        v5 = sub_402E00();\n        error(0, *v1, \"%s: %s\", v5, v4);\n      }\n      else\n      {\n        error(0, *v1, \"%s\", v3);\n      }\nLABEL_8:\n      _exit(status);\n    }\n  }\n  result = sub_403260(stderr);\n  if ( (_DWORD)result )\n    goto LABEL_8;\n  return result;\n}\n", 
            "funcStartAddr": "0x401510L", 
            "funcEndAddr": "0x4015aeL", 
            "funcName": "sub_401510"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_4015B0(const char *a1)\n{\n  __int64 v1; // rbx\n  char *result; // rax\n\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v1 = (__int64)a1;\n  result = strrchr(a1, 47);\n  if ( result )\n  {\n    if ( result + 1 - a1 > 6 && !memcmp(result - 6, \"/.libs/\", 7uLL) )\n    {\n      v1 = (__int64)(result + 1);\n      if ( !memcmp(result + 1, \"lt-\", 3uLL) )\n      {\n        v1 = (__int64)(result + 4);\n        program_invocation_short_name = (__int64)(result + 4);\n      }\n    }\n  }\n  qword_606228 = v1;\n  program_invocation_name = v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x4015b0L", 
            "funcEndAddr": "0x401649L", 
            "funcName": "sub_4015B0"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_401650(char *msgid, int a2)\n{\n  char *v2; // rbx\n  _BYTE *v4; // rax\n  bool v5; // zf\n  const char *v6; // rbx\n\n  v2 = dcgettext(0LL, msgid, 5);\n  if ( msgid != v2 )\n    return v2;\n  v4 = (_BYTE *)sub_4032D0();\n  if ( (*v4 & 0xDF) == 85 )\n  {\n    if ( (v4[1] & 0xDF) == 84 && (v4[2] & 0xDF) == 70 && v4[3] == 45 && v4[4] == 56 && !v4[5] )\n    {\n      v5 = *v2 == 96;\n      v2 = (char *)&unk_403A11;\n      if ( !v5 )\n        v2 = (char *)&unk_403A06;\n      return v2;\n    }\n  }\n  else if ( (*v4 & 0xDF) == 71\n         && (v4[1] & 0xDF) == 66\n         && v4[2] == 49\n         && v4[3] == 56\n         && v4[4] == 48\n         && v4[5] == 51\n         && v4[6] == 48\n         && !v4[7] )\n  {\n    v5 = *v2 == 96;\n    v2 = (char *)&unk_403A0D;\n    if ( !v5 )\n      v2 = (char *)&unk_403A0A;\n    return v2;\n  }\n  v6 = \"\\\"\";\n  if ( a2 != 9 )\n    v6 = \"'\";\n  return v6;\n}\n", 
            "funcStartAddr": "0x401650L", 
            "funcEndAddr": "0x401742L", 
            "funcName": "sub_401650"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t v13; // rax\n  int v14; // edx\n  int v15; // er11\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // er10\n  unsigned __int64 v21; // r13\n  int v22; // er8\n  char *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  bool v27; // al\n  const char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // eax\n  __int64 v34; // rcx\n  unsigned __int64 v35; // rax\n  const unsigned __int16 **v36; // rax\n  unsigned __int64 v37; // rcx\n  int v38; // edx\n  unsigned __int64 result; // rax\n  __int64 v40; // rsi\n  char v41; // dl\n  const char *v42; // rax\n  size_t v43; // rax\n  unsigned __int64 v44; // rbx\n  unsigned __int64 v45; // r14\n  __int64 v46; // rax\n  __int64 v47; // r15\n  char *v48; // rdx\n  unsigned __int64 v49; // rcx\n  int v50; // eax\n  char v51; // si\n  unsigned __int64 v52; // rsi\n  char *v53; // rdi\n  unsigned __int64 v54; // rax\n  int v55; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v56; // [rsp+Ch] [rbp-ACh]\n  unsigned __int64 v57; // [rsp+10h] [rbp-A8h]\n  char v58; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v59; // [rsp+10h] [rbp-A8h]\n  char *s; // [rsp+18h] [rbp-A0h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  char *v62; // [rsp+28h] [rbp-90h]\n  int v63; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v64; // [rsp+28h] [rbp-90h]\n  char *v65; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v66; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v67; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v68; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v69; // [rsp+30h] [rbp-88h]\n  char v70; // [rsp+30h] [rbp-88h]\n  int v71; // [rsp+30h] [rbp-88h]\n  int v72; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v73; // [rsp+38h] [rbp-80h]\n  int v74; // [rsp+38h] [rbp-80h]\n  int v75; // [rsp+38h] [rbp-80h]\n  __int64 v76; // [rsp+38h] [rbp-80h]\n  int v77; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v78; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v80; // [rsp+50h] [rbp-68h]\n  char v81; // [rsp+58h] [rbp-60h]\n  bool v82; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v83; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v84; // [rsp+60h] [rbp-58h]\n  char *v85; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h]\n  mbstate_t ps; // [rsp+78h] [rbp-40h]\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v57 = a4;\n  v55 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v55;\n  v80 = v13;\n  v16 = v57;\n  switch ( v55 )\n  {\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v56 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v56 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v56 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v56 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v55);\n        v28 = sub_401650(\"'\", v55);\n        v16 = v57;\n        v15 = v55;\n        a9 = (char *)v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v63 = v15;\n      v59 = v16;\n      v82 = v11 != 0;\n      v30 = strlen(a9);\n      v56 = 1;\n      v16 = v59;\n      n = v30;\n      v15 = v63;\n      s2 = a9;\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\nLABEL_4:\n  while ( 2 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v41 = *s2;\n          if ( *s2 )\n          {\n            v42 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v41;\n              v41 = v42[++v17];\n            }\n            while ( v41 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v58 = v56 & (v20 != 2);\n    if ( v56 & (v20 != 2) )\n    {\n      if ( !n )\n        goto LABEL_271;\n      if ( v19 == -1LL && n > 1 )\n      {\n        v72 = v20;\n        v67 = v22;\n        v24 = strlen(s);\n        v20 = v72;\n        v22 = v67;\n        v23 = &s[v21];\n        v19 = v24;\n      }\n      if ( v21 + n > v19 )\n        goto LABEL_271;\n      v77 = v20;\n      v73 = v19;\n      v68 = v22;\n      v62 = v23;\n      v25 = memcmp(v23, s2, n);\n      v23 = v62;\n      v22 = v68;\n      v19 = v73;\n      v20 = v77;\n      if ( v25 )\n      {\nLABEL_271:\n        LOBYTE(v26) = *v23;\n        switch ( *v23 )\n        {\n          case 0:\n            goto LABEL_103;\n          case 7:\nLABEL_94:\n            LOBYTE(v26) = 97;\n            v27 = 0;\n            goto LABEL_91;\n          case 8:\nLABEL_93:\n            LOBYTE(v26) = 98;\n            v27 = 0;\n            goto LABEL_91;\n          case 9:\nLABEL_102:\n            LOBYTE(v26) = 116;\n            v27 = 0;\n            goto LABEL_91;\n          case 10:\nLABEL_90:\n            LOBYTE(v26) = 110;\n            v27 = 0;\n            goto LABEL_91;\n          case 11:\nLABEL_101:\n            LOBYTE(v26) = 118;\n            v27 = 0;\n            goto LABEL_91;\n          case 12:\nLABEL_100:\n            LOBYTE(v26) = 102;\n            v27 = 0;\nLABEL_91:\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            goto LABEL_21;\n          case 13:\n            v58 = 0;\nLABEL_96:\n            LOBYTE(v26) = 13;\n            v32 = 114;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_88;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            v58 = 0;\nLABEL_85:\n            v14 = 0;\n            goto LABEL_65;\n          case 35:\n          case 126:\n            v58 = 0;\nLABEL_98:\n            if ( v21 )\n              goto LABEL_17;\n            v14 = 0;\n            goto LABEL_65;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            v58 = 0;\n            goto LABEL_17;\n          case 39:\n            v58 = 0;\n            goto LABEL_73;\n          case 63:\n            v58 = 0;\n            goto LABEL_69;\n          case 92:\n            v58 = 0;\n            goto LABEL_87;\n          case 123:\n          case 125:\n            v58 = 0;\n            goto LABEL_60;\n          default:\n            v58 = 0;\n            goto LABEL_124;\n        }\n      }\n      if ( !v82 )\n      {\n        LOBYTE(v26) = *v62;\n        switch ( *v62 )\n        {\n          case 0:\n            goto LABEL_105;\n          case 7:\n            goto LABEL_94;\n          case 8:\n            goto LABEL_93;\n          case 9:\n            goto LABEL_102;\n          case 10:\n            goto LABEL_90;\n          case 11:\n            goto LABEL_101;\n          case 12:\n            goto LABEL_100;\n          case 13:\n            goto LABEL_96;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            goto LABEL_85;\n          case 35:\n          case 126:\n            goto LABEL_98;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            goto LABEL_17;\n          case 39:\n            goto LABEL_73;\n          case 63:\n            goto LABEL_69;\n          case 92:\n            goto LABEL_87;\n          case 123:\n          case 125:\n            goto LABEL_60;\n          default:\n            goto LABEL_124;\n        }\n      }\n      return sub_401750(v9, v10, s);\n    }\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v56 )\n        {\n          if ( v81 & 1 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v82 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_144;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v58 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        v58 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v33 = v22 ^ 1;\n        LOBYTE(v33) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v33 )\n        {\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v34 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v33;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v33;\n        }\n        else\n        {\n          v34 = v17;\n          if ( v17 >= v10 )\n            goto LABEL_115;\n        }\n        *(_BYTE *)(v9 + v34) = 92;\nLABEL_115:\n        v17 = v34 + 1;\n        v35 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v35 < v19 && (unsigned __int8)(s[v35] - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 48;\n          if ( v10 > v34 + 2 )\n            *(_BYTE *)(v9 + v34 + 2) = 48;\n          v17 = v34 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 10:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 11:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 12:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 13:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v58 = v20 == 2 && v82;\n        if ( v58 )\n          return sub_401750(v9, v10, s);\n        goto LABEL_88;\n      case 32:\n      case 33:\n      case 34:\n      case 36:\n      case 38:\n      case 40:\n      case 41:\n      case 42:\n      case 59:\n      case 60:\n      case 61:\n      case 62:\n      case 91:\n      case 94:\n      case 96:\n      case 124:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 35:\n      case 126:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 37:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 58:\n      case 65:\n      case 66:\n      case 67:\n      case 68:\n      case 69:\n      case 70:\n      case 71:\n      case 72:\n      case 73:\n      case 74:\n      case 75:\n      case 76:\n      case 77:\n      case 78:\n      case 79:\n      case 80:\n      case 81:\n      case 82:\n      case 83:\n      case 84:\n      case 85:\n      case 86:\n      case 87:\n      case 88:\n      case 89:\n      case 90:\n      case 93:\n      case 95:\n      case 97:\n      case 98:\n      case 99:\n      case 100:\n      case 101:\n      case 102:\n      case 103:\n      case 104:\n      case 105:\n      case 106:\n      case 107:\n      case 108:\n      case 109:\n      case 110:\n      case 111:\n      case 112:\n      case 113:\n      case 114:\n      case 115:\n      case 116:\n      case 117:\n      case 118:\n      case 119:\n      case 120:\n      case 121:\n      case 122:\n        goto LABEL_127;\n      case 39:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 39;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 92;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v58 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 63:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( !(v81 & 4) )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n          goto LABEL_65;\n        v26 = (unsigned __int8)s[v21 + 2];\n        if ( (unsigned __int8)v26 > 0x3Eu || (v40 = 8070630310989004800LL, !_bittest64(&v40, v26)) )\n        {\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 63;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 34;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 34;\n        if ( v10 > v17 + 3 )\n          *(_BYTE *)(v9 + v17 + 3) = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( !v56 || (_BYTE)v14 )\n          goto LABEL_66;\n        if ( a7 )\n          goto LABEL_18;\n        goto LABEL_121;\n      case 92:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_144;\n        }\nLABEL_87:\n        v11 = v82 & v56;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v82 & v56;\n        LOBYTE(v14) = (n != 0) & v14;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_144;\n        }\nLABEL_88:\n        if ( !v56 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 123:\n      case 125:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = s[1] != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        if ( !((unsigned __int8)v14 & v82) )\n          goto LABEL_65;\n        return sub_401750(v9, v10, s);\n      default:\nLABEL_124:\n        if ( v80 == 1 )\n        {\n          v74 = v20;\n          v69 = v19;\n          v64 = v22;\n          v36 = __ctype_b_loc();\n          v22 = v64;\n          v19 = v69;\n          v20 = v74;\n          v37 = 1LL;\n          v38 = (*v36)[(unsigned __int8)v26];\n          LOWORD(v38) = (unsigned __int16)v38 >> 14;\n          v14 = v38 ^ 1;\n          LOBYTE(v14) = v56 & v14;\n          goto LABEL_126;\n        }\n        ps = 0LL;\n        if ( v19 == -1LL )\n        {\n          v75 = v20;\n          v70 = v22;\n          v65 = v23;\n          v43 = strlen(s);\n          v20 = v75;\n          LOBYTE(v22) = v70;\n          v23 = v65;\n          v19 = v43;\n        }\n        v84 = v17;\n        v83 = v22;\n        v44 = 0LL;\n        v85 = v23;\n        v76 = v9;\n        v78 = v10;\n        v66 = v19;\n        v71 = v20;\n        break;\n    }\n    break;\n  }\n  while ( 1 )\n  {\n    v45 = v21 + v44;\n    v46 = sub_403230(&wc, &s[v21 + v44], v66 - (v21 + v44), &ps);\n    v47 = v46;\n    switch ( v46 )\n    {\n      case 0LL:\n        v11 ^= 1u;\n        v37 = v44;\n        v9 = v76;\n        v22 = v83;\n        v17 = v84;\n        v10 = v78;\n        v14 = (unsigned __int8)(v11 & v56);\n        v19 = v66;\n        v20 = v71;\n        goto LABEL_252;\n      case -1LL:\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v19 = v66;\n        v20 = v71;\n        v14 = v56;\n        goto LABEL_252;\n      case -2LL:\n        v19 = v66;\n        v52 = v21 + v44;\n        v53 = &s[v21 + v44];\n        v54 = v44;\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v20 = v71;\n        if ( v52 < v66 && *v53 )\n        {\n          do\n            ++v54;\n          while ( v66 > v21 + v54 && v85[v54] );\n          v37 = v54;\n        }\n        v14 = v56;\nLABEL_252:\n        if ( v37 > 1 )\n          goto LABEL_206;\nLABEL_126:\n        if ( (_BYTE)v14 )\n        {\n          v14 = v56;\nLABEL_206:\n          v49 = v21 + v37;\n          v50 = 0;\n          v51 = v58;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              if ( v82 )\n                return sub_401750(v9, v10, s);\n              if ( (v20 == 2) & ((unsigned __int8)v22 ^ 1) )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 36;\n                if ( v10 > v17 + 2 )\n                  *(_BYTE *)(v9 + v17 + 2) = 39;\n                v17 += 3LL;\n                v22 ^= 1u;\n              }\n              if ( v17 < v10 )\n                *(_BYTE *)(v9 + v17) = 92;\n              if ( v10 > v17 + 1 )\n                *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v49 <= v21 )\n                goto LABEL_33;\n              v50 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v50 ^ 1);\n              if ( v51 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v49 )\n                goto LABEL_144;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 39;\n                v17 += 2LL;\n                v51 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v51 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = v26;\n            LOBYTE(v26) = s[v21];\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\nLABEL_65:\n        v11 = (v14 | v56 ^ 1) ^ 1;\n        LOBYTE(v11) = v82 | (v14 | v56 ^ 1) ^ 1;\n        if ( v82 | (unsigned __int8)(v14 | v56 ^ 1) ^ 1 )\n        {\nLABEL_17:\n          v11 = 0;\n          if ( a7 )\n          {\nLABEL_18:\n            if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1 )\n            {\n              v27 = v20 == 2;\nLABEL_20:\n              if ( v82 )\n                return sub_401750(v9, v10, s);\nLABEL_21:\n              ++v21;\n              goto LABEL_22;\n            }\n          }\nLABEL_121:\n          v27 = v20 == 2;\n          if ( v58 )\n            goto LABEL_20;\nLABEL_122:\n          ++v21;\n          v11 = v22 & (v11 ^ 1);\nLABEL_144:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v58 )\n        {\n          v11 = v22 & (v11 ^ 1);\n          goto LABEL_144;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( v27 & ((unsigned __int8)v22 ^ 1) )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v26;\n        ++v17;\n        goto LABEL_4;\n    }\n    if ( v82 && v71 == 2 && v46 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v44 += v47;\n    if ( mbsinit(&ps) )\n    {\n      v37 = v44;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v76;\n      v10 = v78;\n      v19 = v66;\n      v20 = v71;\n      LOBYTE(v14) = v56 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v48 = &s[v45 + 1];\n  while ( (unsigned __int8)(*v48 - 91) > 0x21u || !((1LL << (*v48 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v46 + v45] == ++v48 )\n      goto LABEL_187;\n  }\n  v9 = v76;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n\nunsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t v13; // rax\n  int v14; // edx\n  int v15; // er11\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // er10\n  unsigned __int64 v21; // r13\n  int v22; // er8\n  char *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  bool v27; // al\n  const char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // eax\n  __int64 v34; // rcx\n  unsigned __int64 v35; // rax\n  const unsigned __int16 **v36; // rax\n  unsigned __int64 v37; // rcx\n  int v38; // edx\n  unsigned __int64 result; // rax\n  __int64 v40; // rsi\n  char v41; // dl\n  const char *v42; // rax\n  size_t v43; // rax\n  unsigned __int64 v44; // rbx\n  unsigned __int64 v45; // r14\n  __int64 v46; // rax\n  __int64 v47; // r15\n  char *v48; // rdx\n  unsigned __int64 v49; // rcx\n  int v50; // eax\n  char v51; // si\n  unsigned __int64 v52; // rsi\n  char *v53; // rdi\n  unsigned __int64 v54; // rax\n  int v55; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v56; // [rsp+Ch] [rbp-ACh]\n  unsigned __int64 v57; // [rsp+10h] [rbp-A8h]\n  char v58; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v59; // [rsp+10h] [rbp-A8h]\n  char *s; // [rsp+18h] [rbp-A0h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  char *v62; // [rsp+28h] [rbp-90h]\n  int v63; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v64; // [rsp+28h] [rbp-90h]\n  char *v65; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v66; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v67; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v68; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v69; // [rsp+30h] [rbp-88h]\n  char v70; // [rsp+30h] [rbp-88h]\n  int v71; // [rsp+30h] [rbp-88h]\n  int v72; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v73; // [rsp+38h] [rbp-80h]\n  int v74; // [rsp+38h] [rbp-80h]\n  int v75; // [rsp+38h] [rbp-80h]\n  __int64 v76; // [rsp+38h] [rbp-80h]\n  int v77; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v78; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v80; // [rsp+50h] [rbp-68h]\n  char v81; // [rsp+58h] [rbp-60h]\n  bool v82; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v83; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v84; // [rsp+60h] [rbp-58h]\n  char *v85; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h]\n  mbstate_t ps; // [rsp+78h] [rbp-40h]\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v57 = a4;\n  v55 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v55;\n  v80 = v13;\n  v16 = v57;\n  switch ( v55 )\n  {\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v56 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v56 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v56 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v56 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v55);\n        v28 = sub_401650(\"'\", v55);\n        v16 = v57;\n        v15 = v55;\n        a9 = (char *)v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v63 = v15;\n      v59 = v16;\n      v82 = v11 != 0;\n      v30 = strlen(a9);\n      v56 = 1;\n      v16 = v59;\n      n = v30;\n      v15 = v63;\n      s2 = a9;\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\nLABEL_4:\n  while ( 2 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v41 = *s2;\n          if ( *s2 )\n          {\n            v42 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v41;\n              v41 = v42[++v17];\n            }\n            while ( v41 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v58 = v56 & (v20 != 2);\n    if ( v56 & (v20 != 2) )\n    {\n      if ( !n )\n        goto LABEL_271;\n      if ( v19 == -1LL && n > 1 )\n      {\n        v72 = v20;\n        v67 = v22;\n        v24 = strlen(s);\n        v20 = v72;\n        v22 = v67;\n        v23 = &s[v21];\n        v19 = v24;\n      }\n      if ( v21 + n > v19 )\n        goto LABEL_271;\n      v77 = v20;\n      v73 = v19;\n      v68 = v22;\n      v62 = v23;\n      v25 = memcmp(v23, s2, n);\n      v23 = v62;\n      v22 = v68;\n      v19 = v73;\n      v20 = v77;\n      if ( v25 )\n      {\nLABEL_271:\n        LOBYTE(v26) = *v23;\n        switch ( *v23 )\n        {\n          case 0:\n            goto LABEL_103;\n          case 7:\nLABEL_94:\n            LOBYTE(v26) = 97;\n            v27 = 0;\n            goto LABEL_91;\n          case 8:\nLABEL_93:\n            LOBYTE(v26) = 98;\n            v27 = 0;\n            goto LABEL_91;\n          case 9:\nLABEL_102:\n            LOBYTE(v26) = 116;\n            v27 = 0;\n            goto LABEL_91;\n          case 10:\nLABEL_90:\n            LOBYTE(v26) = 110;\n            v27 = 0;\n            goto LABEL_91;\n          case 11:\nLABEL_101:\n            LOBYTE(v26) = 118;\n            v27 = 0;\n            goto LABEL_91;\n          case 12:\nLABEL_100:\n            LOBYTE(v26) = 102;\n            v27 = 0;\nLABEL_91:\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            goto LABEL_21;\n          case 13:\n            v58 = 0;\nLABEL_96:\n            LOBYTE(v26) = 13;\n            v32 = 114;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_88;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            v58 = 0;\nLABEL_85:\n            v14 = 0;\n            goto LABEL_65;\n          case 35:\n          case 126:\n            v58 = 0;\nLABEL_98:\n            if ( v21 )\n              goto LABEL_17;\n            v14 = 0;\n            goto LABEL_65;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            v58 = 0;\n            goto LABEL_17;\n          case 39:\n            v58 = 0;\n            goto LABEL_73;\n          case 63:\n            v58 = 0;\n            goto LABEL_69;\n          case 92:\n            v58 = 0;\n            goto LABEL_87;\n          case 123:\n          case 125:\n            v58 = 0;\n            goto LABEL_60;\n          default:\n            v58 = 0;\n            goto LABEL_124;\n        }\n      }\n      if ( !v82 )\n      {\n        LOBYTE(v26) = *v62;\n        switch ( *v62 )\n        {\n          case 0:\n            goto LABEL_105;\n          case 7:\n            goto LABEL_94;\n          case 8:\n            goto LABEL_93;\n          case 9:\n            goto LABEL_102;\n          case 10:\n            goto LABEL_90;\n          case 11:\n            goto LABEL_101;\n          case 12:\n            goto LABEL_100;\n          case 13:\n            goto LABEL_96;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            goto LABEL_85;\n          case 35:\n          case 126:\n            goto LABEL_98;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            goto LABEL_17;\n          case 39:\n            goto LABEL_73;\n          case 63:\n            goto LABEL_69;\n          case 92:\n            goto LABEL_87;\n          case 123:\n          case 125:\n            goto LABEL_60;\n          default:\n            goto LABEL_124;\n        }\n      }\n      return sub_401750(v9, v10, s);\n    }\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v56 )\n        {\n          if ( v81 & 1 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v82 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_144;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v58 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        v58 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v33 = v22 ^ 1;\n        LOBYTE(v33) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v33 )\n        {\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v34 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v33;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v33;\n        }\n        else\n        {\n          v34 = v17;\n          if ( v17 >= v10 )\n            goto LABEL_115;\n        }\n        *(_BYTE *)(v9 + v34) = 92;\nLABEL_115:\n        v17 = v34 + 1;\n        v35 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v35 < v19 && (unsigned __int8)(s[v35] - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 48;\n          if ( v10 > v34 + 2 )\n            *(_BYTE *)(v9 + v34 + 2) = 48;\n          v17 = v34 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 10:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 11:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 12:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 13:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v58 = v20 == 2 && v82;\n        if ( v58 )\n          return sub_401750(v9, v10, s);\n        goto LABEL_88;\n      case 32:\n      case 33:\n      case 34:\n      case 36:\n      case 38:\n      case 40:\n      case 41:\n      case 42:\n      case 59:\n      case 60:\n      case 61:\n      case 62:\n      case 91:\n      case 94:\n      case 96:\n      case 124:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 35:\n      case 126:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 37:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 58:\n      case 65:\n      case 66:\n      case 67:\n      case 68:\n      case 69:\n      case 70:\n      case 71:\n      case 72:\n      case 73:\n      case 74:\n      case 75:\n      case 76:\n      case 77:\n      case 78:\n      case 79:\n      case 80:\n      case 81:\n      case 82:\n      case 83:\n      case 84:\n      case 85:\n      case 86:\n      case 87:\n      case 88:\n      case 89:\n      case 90:\n      case 93:\n      case 95:\n      case 97:\n      case 98:\n      case 99:\n      case 100:\n      case 101:\n      case 102:\n      case 103:\n      case 104:\n      case 105:\n      case 106:\n      case 107:\n      case 108:\n      case 109:\n      case 110:\n      case 111:\n      case 112:\n      case 113:\n      case 114:\n      case 115:\n      case 116:\n      case 117:\n      case 118:\n      case 119:\n      case 120:\n      case 121:\n      case 122:\n        goto LABEL_127;\n      case 39:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 39;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 92;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v58 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 63:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( !(v81 & 4) )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n          goto LABEL_65;\n        v26 = (unsigned __int8)s[v21 + 2];\n        if ( (unsigned __int8)v26 > 0x3Eu || (v40 = 8070630310989004800LL, !_bittest64(&v40, v26)) )\n        {\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 63;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 34;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 34;\n        if ( v10 > v17 + 3 )\n          *(_BYTE *)(v9 + v17 + 3) = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( !v56 || (_BYTE)v14 )\n          goto LABEL_66;\n        if ( a7 )\n          goto LABEL_18;\n        goto LABEL_121;\n      case 92:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_144;\n        }\nLABEL_87:\n        v11 = v82 & v56;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v82 & v56;\n        LOBYTE(v14) = (n != 0) & v14;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_144;\n        }\nLABEL_88:\n        if ( !v56 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 123:\n      case 125:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = s[1] != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        if ( !((unsigned __int8)v14 & v82) )\n          goto LABEL_65;\n        return sub_401750(v9, v10, s);\n      default:\nLABEL_124:\n        if ( v80 == 1 )\n        {\n          v74 = v20;\n          v69 = v19;\n          v64 = v22;\n          v36 = __ctype_b_loc();\n          v22 = v64;\n          v19 = v69;\n          v20 = v74;\n          v37 = 1LL;\n          v38 = (*v36)[(unsigned __int8)v26];\n          LOWORD(v38) = (unsigned __int16)v38 >> 14;\n          v14 = v38 ^ 1;\n          LOBYTE(v14) = v56 & v14;\n          goto LABEL_126;\n        }\n        ps = 0LL;\n        if ( v19 == -1LL )\n        {\n          v75 = v20;\n          v70 = v22;\n          v65 = v23;\n          v43 = strlen(s);\n          v20 = v75;\n          LOBYTE(v22) = v70;\n          v23 = v65;\n          v19 = v43;\n        }\n        v84 = v17;\n        v83 = v22;\n        v44 = 0LL;\n        v85 = v23;\n        v76 = v9;\n        v78 = v10;\n        v66 = v19;\n        v71 = v20;\n        break;\n    }\n    break;\n  }\n  while ( 1 )\n  {\n    v45 = v21 + v44;\n    v46 = sub_403230(&wc, &s[v21 + v44], v66 - (v21 + v44), &ps);\n    v47 = v46;\n    switch ( v46 )\n    {\n      case 0LL:\n        v11 ^= 1u;\n        v37 = v44;\n        v9 = v76;\n        v22 = v83;\n        v17 = v84;\n        v10 = v78;\n        v14 = (unsigned __int8)(v11 & v56);\n        v19 = v66;\n        v20 = v71;\n        goto LABEL_252;\n      case -1LL:\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v19 = v66;\n        v20 = v71;\n        v14 = v56;\n        goto LABEL_252;\n      case -2LL:\n        v19 = v66;\n        v52 = v21 + v44;\n        v53 = &s[v21 + v44];\n        v54 = v44;\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v20 = v71;\n        if ( v52 < v66 && *v53 )\n        {\n          do\n            ++v54;\n          while ( v66 > v21 + v54 && v85[v54] );\n          v37 = v54;\n        }\n        v14 = v56;\nLABEL_252:\n        if ( v37 > 1 )\n          goto LABEL_206;\nLABEL_126:\n        if ( (_BYTE)v14 )\n        {\n          v14 = v56;\nLABEL_206:\n          v49 = v21 + v37;\n          v50 = 0;\n          v51 = v58;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              if ( v82 )\n                return sub_401750(v9, v10, s);\n              if ( (v20 == 2) & ((unsigned __int8)v22 ^ 1) )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 36;\n                if ( v10 > v17 + 2 )\n                  *(_BYTE *)(v9 + v17 + 2) = 39;\n                v17 += 3LL;\n                v22 ^= 1u;\n              }\n              if ( v17 < v10 )\n                *(_BYTE *)(v9 + v17) = 92;\n              if ( v10 > v17 + 1 )\n                *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v49 <= v21 )\n                goto LABEL_33;\n              v50 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v50 ^ 1);\n              if ( v51 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v49 )\n                goto LABEL_144;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 39;\n                v17 += 2LL;\n                v51 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v51 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = v26;\n            LOBYTE(v26) = s[v21];\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\nLABEL_65:\n        v11 = (v14 | v56 ^ 1) ^ 1;\n        LOBYTE(v11) = v82 | (v14 | v56 ^ 1) ^ 1;\n        if ( v82 | (unsigned __int8)(v14 | v56 ^ 1) ^ 1 )\n        {\nLABEL_17:\n          v11 = 0;\n          if ( a7 )\n          {\nLABEL_18:\n            if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1 )\n            {\n              v27 = v20 == 2;\nLABEL_20:\n              if ( v82 )\n                return sub_401750(v9, v10, s);\nLABEL_21:\n              ++v21;\n              goto LABEL_22;\n            }\n          }\nLABEL_121:\n          v27 = v20 == 2;\n          if ( v58 )\n            goto LABEL_20;\nLABEL_122:\n          ++v21;\n          v11 = v22 & (v11 ^ 1);\nLABEL_144:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v58 )\n        {\n          v11 = v22 & (v11 ^ 1);\n          goto LABEL_144;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( v27 & ((unsigned __int8)v22 ^ 1) )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v26;\n        ++v17;\n        goto LABEL_4;\n    }\n    if ( v82 && v71 == 2 && v46 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v44 += v47;\n    if ( mbsinit(&ps) )\n    {\n      v37 = v44;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v76;\n      v10 = v78;\n      v19 = v66;\n      v20 = v71;\n      LOBYTE(v14) = v56 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v48 = &s[v45 + 1];\n  while ( (unsigned __int8)(*v48 - 91) > 0x21u || !((1LL << (*v48 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v46 + v45] == ++v48 )\n      goto LABEL_187;\n  }\n  v9 = v76;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n", 
            "funcStartAddr": "0x4011f0L", 
            "funcEndAddr": "0x4011f5L", 
            "funcName": "sub_401750"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t v13; // rax\n  int v14; // edx\n  int v15; // er11\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // er10\n  unsigned __int64 v21; // r13\n  int v22; // er8\n  char *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  bool v27; // al\n  const char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // eax\n  __int64 v34; // rcx\n  unsigned __int64 v35; // rax\n  const unsigned __int16 **v36; // rax\n  unsigned __int64 v37; // rcx\n  int v38; // edx\n  unsigned __int64 result; // rax\n  __int64 v40; // rsi\n  char v41; // dl\n  const char *v42; // rax\n  size_t v43; // rax\n  unsigned __int64 v44; // rbx\n  unsigned __int64 v45; // r14\n  __int64 v46; // rax\n  __int64 v47; // r15\n  char *v48; // rdx\n  unsigned __int64 v49; // rcx\n  int v50; // eax\n  char v51; // si\n  unsigned __int64 v52; // rsi\n  char *v53; // rdi\n  unsigned __int64 v54; // rax\n  int v55; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v56; // [rsp+Ch] [rbp-ACh]\n  unsigned __int64 v57; // [rsp+10h] [rbp-A8h]\n  char v58; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v59; // [rsp+10h] [rbp-A8h]\n  char *s; // [rsp+18h] [rbp-A0h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  char *v62; // [rsp+28h] [rbp-90h]\n  int v63; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v64; // [rsp+28h] [rbp-90h]\n  char *v65; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v66; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v67; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v68; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v69; // [rsp+30h] [rbp-88h]\n  char v70; // [rsp+30h] [rbp-88h]\n  int v71; // [rsp+30h] [rbp-88h]\n  int v72; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v73; // [rsp+38h] [rbp-80h]\n  int v74; // [rsp+38h] [rbp-80h]\n  int v75; // [rsp+38h] [rbp-80h]\n  __int64 v76; // [rsp+38h] [rbp-80h]\n  int v77; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v78; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v80; // [rsp+50h] [rbp-68h]\n  char v81; // [rsp+58h] [rbp-60h]\n  bool v82; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v83; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v84; // [rsp+60h] [rbp-58h]\n  char *v85; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h]\n  mbstate_t ps; // [rsp+78h] [rbp-40h]\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v57 = a4;\n  v55 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v55;\n  v80 = v13;\n  v16 = v57;\n  switch ( v55 )\n  {\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v56 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v56 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v56 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v56 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v55);\n        v28 = sub_401650(\"'\", v55);\n        v16 = v57;\n        v15 = v55;\n        a9 = (char *)v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v63 = v15;\n      v59 = v16;\n      v82 = v11 != 0;\n      v30 = strlen(a9);\n      v56 = 1;\n      v16 = v59;\n      n = v30;\n      v15 = v63;\n      s2 = a9;\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\nLABEL_4:\n  while ( 2 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v41 = *s2;\n          if ( *s2 )\n          {\n            v42 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v41;\n              v41 = v42[++v17];\n            }\n            while ( v41 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v58 = v56 & (v20 != 2);\n    if ( v56 & (v20 != 2) )\n    {\n      if ( !n )\n        goto LABEL_271;\n      if ( v19 == -1LL && n > 1 )\n      {\n        v72 = v20;\n        v67 = v22;\n        v24 = strlen(s);\n        v20 = v72;\n        v22 = v67;\n        v23 = &s[v21];\n        v19 = v24;\n      }\n      if ( v21 + n > v19 )\n        goto LABEL_271;\n      v77 = v20;\n      v73 = v19;\n      v68 = v22;\n      v62 = v23;\n      v25 = memcmp(v23, s2, n);\n      v23 = v62;\n      v22 = v68;\n      v19 = v73;\n      v20 = v77;\n      if ( v25 )\n      {\nLABEL_271:\n        LOBYTE(v26) = *v23;\n        switch ( *v23 )\n        {\n          case 0:\n            goto LABEL_103;\n          case 7:\nLABEL_94:\n            LOBYTE(v26) = 97;\n            v27 = 0;\n            goto LABEL_91;\n          case 8:\nLABEL_93:\n            LOBYTE(v26) = 98;\n            v27 = 0;\n            goto LABEL_91;\n          case 9:\nLABEL_102:\n            LOBYTE(v26) = 116;\n            v27 = 0;\n            goto LABEL_91;\n          case 10:\nLABEL_90:\n            LOBYTE(v26) = 110;\n            v27 = 0;\n            goto LABEL_91;\n          case 11:\nLABEL_101:\n            LOBYTE(v26) = 118;\n            v27 = 0;\n            goto LABEL_91;\n          case 12:\nLABEL_100:\n            LOBYTE(v26) = 102;\n            v27 = 0;\nLABEL_91:\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            goto LABEL_21;\n          case 13:\n            v58 = 0;\nLABEL_96:\n            LOBYTE(v26) = 13;\n            v32 = 114;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_88;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            v58 = 0;\nLABEL_85:\n            v14 = 0;\n            goto LABEL_65;\n          case 35:\n          case 126:\n            v58 = 0;\nLABEL_98:\n            if ( v21 )\n              goto LABEL_17;\n            v14 = 0;\n            goto LABEL_65;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            v58 = 0;\n            goto LABEL_17;\n          case 39:\n            v58 = 0;\n            goto LABEL_73;\n          case 63:\n            v58 = 0;\n            goto LABEL_69;\n          case 92:\n            v58 = 0;\n            goto LABEL_87;\n          case 123:\n          case 125:\n            v58 = 0;\n            goto LABEL_60;\n          default:\n            v58 = 0;\n            goto LABEL_124;\n        }\n      }\n      if ( !v82 )\n      {\n        LOBYTE(v26) = *v62;\n        switch ( *v62 )\n        {\n          case 0:\n            goto LABEL_105;\n          case 7:\n            goto LABEL_94;\n          case 8:\n            goto LABEL_93;\n          case 9:\n            goto LABEL_102;\n          case 10:\n            goto LABEL_90;\n          case 11:\n            goto LABEL_101;\n          case 12:\n            goto LABEL_100;\n          case 13:\n            goto LABEL_96;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            goto LABEL_85;\n          case 35:\n          case 126:\n            goto LABEL_98;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            goto LABEL_17;\n          case 39:\n            goto LABEL_73;\n          case 63:\n            goto LABEL_69;\n          case 92:\n            goto LABEL_87;\n          case 123:\n          case 125:\n            goto LABEL_60;\n          default:\n            goto LABEL_124;\n        }\n      }\n      return sub_401750(v9, v10, s);\n    }\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v56 )\n        {\n          if ( v81 & 1 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v82 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_144;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v58 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        v58 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v33 = v22 ^ 1;\n        LOBYTE(v33) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v33 )\n        {\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v34 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v33;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v33;\n        }\n        else\n        {\n          v34 = v17;\n          if ( v17 >= v10 )\n            goto LABEL_115;\n        }\n        *(_BYTE *)(v9 + v34) = 92;\nLABEL_115:\n        v17 = v34 + 1;\n        v35 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v35 < v19 && (unsigned __int8)(s[v35] - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 48;\n          if ( v10 > v34 + 2 )\n            *(_BYTE *)(v9 + v34 + 2) = 48;\n          v17 = v34 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 10:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 11:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 12:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 13:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v58 = v20 == 2 && v82;\n        if ( v58 )\n          return sub_401750(v9, v10, s);\n        goto LABEL_88;\n      case 32:\n      case 33:\n      case 34:\n      case 36:\n      case 38:\n      case 40:\n      case 41:\n      case 42:\n      case 59:\n      case 60:\n      case 61:\n      case 62:\n      case 91:\n      case 94:\n      case 96:\n      case 124:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 35:\n      case 126:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 37:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 58:\n      case 65:\n      case 66:\n      case 67:\n      case 68:\n      case 69:\n      case 70:\n      case 71:\n      case 72:\n      case 73:\n      case 74:\n      case 75:\n      case 76:\n      case 77:\n      case 78:\n      case 79:\n      case 80:\n      case 81:\n      case 82:\n      case 83:\n      case 84:\n      case 85:\n      case 86:\n      case 87:\n      case 88:\n      case 89:\n      case 90:\n      case 93:\n      case 95:\n      case 97:\n      case 98:\n      case 99:\n      case 100:\n      case 101:\n      case 102:\n      case 103:\n      case 104:\n      case 105:\n      case 106:\n      case 107:\n      case 108:\n      case 109:\n      case 110:\n      case 111:\n      case 112:\n      case 113:\n      case 114:\n      case 115:\n      case 116:\n      case 117:\n      case 118:\n      case 119:\n      case 120:\n      case 121:\n      case 122:\n        goto LABEL_127;\n      case 39:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 39;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 92;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v58 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 63:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( !(v81 & 4) )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n          goto LABEL_65;\n        v26 = (unsigned __int8)s[v21 + 2];\n        if ( (unsigned __int8)v26 > 0x3Eu || (v40 = 8070630310989004800LL, !_bittest64(&v40, v26)) )\n        {\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 63;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 34;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 34;\n        if ( v10 > v17 + 3 )\n          *(_BYTE *)(v9 + v17 + 3) = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( !v56 || (_BYTE)v14 )\n          goto LABEL_66;\n        if ( a7 )\n          goto LABEL_18;\n        goto LABEL_121;\n      case 92:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_144;\n        }\nLABEL_87:\n        v11 = v82 & v56;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v82 & v56;\n        LOBYTE(v14) = (n != 0) & v14;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_144;\n        }\nLABEL_88:\n        if ( !v56 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 123:\n      case 125:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = s[1] != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        if ( !((unsigned __int8)v14 & v82) )\n          goto LABEL_65;\n        return sub_401750(v9, v10, s);\n      default:\nLABEL_124:\n        if ( v80 == 1 )\n        {\n          v74 = v20;\n          v69 = v19;\n          v64 = v22;\n          v36 = __ctype_b_loc();\n          v22 = v64;\n          v19 = v69;\n          v20 = v74;\n          v37 = 1LL;\n          v38 = (*v36)[(unsigned __int8)v26];\n          LOWORD(v38) = (unsigned __int16)v38 >> 14;\n          v14 = v38 ^ 1;\n          LOBYTE(v14) = v56 & v14;\n          goto LABEL_126;\n        }\n        ps = 0LL;\n        if ( v19 == -1LL )\n        {\n          v75 = v20;\n          v70 = v22;\n          v65 = v23;\n          v43 = strlen(s);\n          v20 = v75;\n          LOBYTE(v22) = v70;\n          v23 = v65;\n          v19 = v43;\n        }\n        v84 = v17;\n        v83 = v22;\n        v44 = 0LL;\n        v85 = v23;\n        v76 = v9;\n        v78 = v10;\n        v66 = v19;\n        v71 = v20;\n        break;\n    }\n    break;\n  }\n  while ( 1 )\n  {\n    v45 = v21 + v44;\n    v46 = sub_403230(&wc, &s[v21 + v44], v66 - (v21 + v44), &ps);\n    v47 = v46;\n    switch ( v46 )\n    {\n      case 0LL:\n        v11 ^= 1u;\n        v37 = v44;\n        v9 = v76;\n        v22 = v83;\n        v17 = v84;\n        v10 = v78;\n        v14 = (unsigned __int8)(v11 & v56);\n        v19 = v66;\n        v20 = v71;\n        goto LABEL_252;\n      case -1LL:\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v19 = v66;\n        v20 = v71;\n        v14 = v56;\n        goto LABEL_252;\n      case -2LL:\n        v19 = v66;\n        v52 = v21 + v44;\n        v53 = &s[v21 + v44];\n        v54 = v44;\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v20 = v71;\n        if ( v52 < v66 && *v53 )\n        {\n          do\n            ++v54;\n          while ( v66 > v21 + v54 && v85[v54] );\n          v37 = v54;\n        }\n        v14 = v56;\nLABEL_252:\n        if ( v37 > 1 )\n          goto LABEL_206;\nLABEL_126:\n        if ( (_BYTE)v14 )\n        {\n          v14 = v56;\nLABEL_206:\n          v49 = v21 + v37;\n          v50 = 0;\n          v51 = v58;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              if ( v82 )\n                return sub_401750(v9, v10, s);\n              if ( (v20 == 2) & ((unsigned __int8)v22 ^ 1) )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 36;\n                if ( v10 > v17 + 2 )\n                  *(_BYTE *)(v9 + v17 + 2) = 39;\n                v17 += 3LL;\n                v22 ^= 1u;\n              }\n              if ( v17 < v10 )\n                *(_BYTE *)(v9 + v17) = 92;\n              if ( v10 > v17 + 1 )\n                *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v49 <= v21 )\n                goto LABEL_33;\n              v50 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v50 ^ 1);\n              if ( v51 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v49 )\n                goto LABEL_144;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 39;\n                v17 += 2LL;\n                v51 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v51 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = v26;\n            LOBYTE(v26) = s[v21];\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\nLABEL_65:\n        v11 = (v14 | v56 ^ 1) ^ 1;\n        LOBYTE(v11) = v82 | (v14 | v56 ^ 1) ^ 1;\n        if ( v82 | (unsigned __int8)(v14 | v56 ^ 1) ^ 1 )\n        {\nLABEL_17:\n          v11 = 0;\n          if ( a7 )\n          {\nLABEL_18:\n            if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1 )\n            {\n              v27 = v20 == 2;\nLABEL_20:\n              if ( v82 )\n                return sub_401750(v9, v10, s);\nLABEL_21:\n              ++v21;\n              goto LABEL_22;\n            }\n          }\nLABEL_121:\n          v27 = v20 == 2;\n          if ( v58 )\n            goto LABEL_20;\nLABEL_122:\n          ++v21;\n          v11 = v22 & (v11 ^ 1);\nLABEL_144:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v58 )\n        {\n          v11 = v22 & (v11 ^ 1);\n          goto LABEL_144;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( v27 & ((unsigned __int8)v22 ^ 1) )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v26;\n        ++v17;\n        goto LABEL_4;\n    }\n    if ( v82 && v71 == 2 && v46 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v44 += v47;\n    if ( mbsinit(&ps) )\n    {\n      v37 = v44;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v76;\n      v10 = v78;\n      v19 = v66;\n      v20 = v71;\n      LOBYTE(v14) = v56 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v48 = &s[v45 + 1];\n  while ( (unsigned __int8)(*v48 - 91) > 0x21u || !((1LL << (*v48 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v46 + v45] == ++v48 )\n      goto LABEL_187;\n  }\n  v9 = v76;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n\nunsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15\n  unsigned __int64 v10; // r14\n  int v11; // ebp\n  char v12; // zf\n  size_t v13; // rax\n  int v14; // edx\n  int v15; // er11\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rbx\n  int v18; // eax\n  unsigned __int64 v19; // r11\n  int v20; // er10\n  unsigned __int64 v21; // r13\n  int v22; // er8\n  char *v23; // r9\n  size_t v24; // rax\n  int v25; // eax\n  unsigned __int64 v26; // r12\n  bool v27; // al\n  const char *v28; // rax\n  char i; // al\n  size_t v30; // rax\n  bool v31; // al\n  char v32; // cl\n  int v33; // eax\n  __int64 v34; // rcx\n  unsigned __int64 v35; // rax\n  const unsigned __int16 **v36; // rax\n  unsigned __int64 v37; // rcx\n  int v38; // edx\n  unsigned __int64 result; // rax\n  __int64 v40; // rsi\n  char v41; // dl\n  const char *v42; // rax\n  size_t v43; // rax\n  unsigned __int64 v44; // rbx\n  unsigned __int64 v45; // r14\n  __int64 v46; // rax\n  __int64 v47; // r15\n  char *v48; // rdx\n  unsigned __int64 v49; // rcx\n  int v50; // eax\n  char v51; // si\n  unsigned __int64 v52; // rsi\n  char *v53; // rdi\n  unsigned __int64 v54; // rax\n  int v55; // [rsp+Ch] [rbp-ACh]\n  unsigned __int8 v56; // [rsp+Ch] [rbp-ACh]\n  unsigned __int64 v57; // [rsp+10h] [rbp-A8h]\n  char v58; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v59; // [rsp+10h] [rbp-A8h]\n  char *s; // [rsp+18h] [rbp-A0h]\n  size_t n; // [rsp+20h] [rbp-98h]\n  char *v62; // [rsp+28h] [rbp-90h]\n  int v63; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v64; // [rsp+28h] [rbp-90h]\n  char *v65; // [rsp+28h] [rbp-90h]\n  unsigned __int64 v66; // [rsp+28h] [rbp-90h]\n  unsigned __int8 v67; // [rsp+30h] [rbp-88h]\n  unsigned __int8 v68; // [rsp+30h] [rbp-88h]\n  unsigned __int64 v69; // [rsp+30h] [rbp-88h]\n  char v70; // [rsp+30h] [rbp-88h]\n  int v71; // [rsp+30h] [rbp-88h]\n  int v72; // [rsp+38h] [rbp-80h]\n  unsigned __int64 v73; // [rsp+38h] [rbp-80h]\n  int v74; // [rsp+38h] [rbp-80h]\n  int v75; // [rsp+38h] [rbp-80h]\n  __int64 v76; // [rsp+38h] [rbp-80h]\n  int v77; // [rsp+40h] [rbp-78h]\n  unsigned __int64 v78; // [rsp+40h] [rbp-78h]\n  const char *s2; // [rsp+48h] [rbp-70h]\n  size_t v80; // [rsp+50h] [rbp-68h]\n  char v81; // [rsp+58h] [rbp-60h]\n  bool v82; // [rsp+5Dh] [rbp-5Bh]\n  unsigned __int8 v83; // [rsp+5Eh] [rbp-5Ah]\n  unsigned __int64 v84; // [rsp+60h] [rbp-58h]\n  char *v85; // [rsp+68h] [rbp-50h]\n  wint_t wc; // [rsp+74h] [rbp-44h]\n  mbstate_t ps; // [rsp+78h] [rbp-40h]\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v57 = a4;\n  v55 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v55;\n  v80 = v13;\n  v16 = v57;\n  switch ( v55 )\n  {\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v56 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v56 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v56 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v56 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v56 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v56 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v56 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v55);\n        v28 = sub_401650(\"'\", v55);\n        v16 = v57;\n        v15 = v55;\n        a9 = (char *)v28;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v63 = v15;\n      v59 = v16;\n      v82 = v11 != 0;\n      v30 = strlen(a9);\n      v56 = 1;\n      v16 = v59;\n      n = v30;\n      v15 = v63;\n      s2 = a9;\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\nLABEL_4:\n  while ( 2 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v41 = *s2;\n          if ( *s2 )\n          {\n            v42 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v41;\n              v41 = v42[++v17];\n            }\n            while ( v41 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v58 = v56 & (v20 != 2);\n    if ( v56 & (v20 != 2) )\n    {\n      if ( !n )\n        goto LABEL_271;\n      if ( v19 == -1LL && n > 1 )\n      {\n        v72 = v20;\n        v67 = v22;\n        v24 = strlen(s);\n        v20 = v72;\n        v22 = v67;\n        v23 = &s[v21];\n        v19 = v24;\n      }\n      if ( v21 + n > v19 )\n        goto LABEL_271;\n      v77 = v20;\n      v73 = v19;\n      v68 = v22;\n      v62 = v23;\n      v25 = memcmp(v23, s2, n);\n      v23 = v62;\n      v22 = v68;\n      v19 = v73;\n      v20 = v77;\n      if ( v25 )\n      {\nLABEL_271:\n        LOBYTE(v26) = *v23;\n        switch ( *v23 )\n        {\n          case 0:\n            goto LABEL_103;\n          case 7:\nLABEL_94:\n            LOBYTE(v26) = 97;\n            v27 = 0;\n            goto LABEL_91;\n          case 8:\nLABEL_93:\n            LOBYTE(v26) = 98;\n            v27 = 0;\n            goto LABEL_91;\n          case 9:\nLABEL_102:\n            LOBYTE(v26) = 116;\n            v27 = 0;\n            goto LABEL_91;\n          case 10:\nLABEL_90:\n            LOBYTE(v26) = 110;\n            v27 = 0;\n            goto LABEL_91;\n          case 11:\nLABEL_101:\n            LOBYTE(v26) = 118;\n            v27 = 0;\n            goto LABEL_91;\n          case 12:\nLABEL_100:\n            LOBYTE(v26) = 102;\n            v27 = 0;\nLABEL_91:\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            goto LABEL_21;\n          case 13:\n            v58 = 0;\nLABEL_96:\n            LOBYTE(v26) = 13;\n            v32 = 114;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_88;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            v58 = 0;\nLABEL_85:\n            v14 = 0;\n            goto LABEL_65;\n          case 35:\n          case 126:\n            v58 = 0;\nLABEL_98:\n            if ( v21 )\n              goto LABEL_17;\n            v14 = 0;\n            goto LABEL_65;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            v58 = 0;\n            goto LABEL_17;\n          case 39:\n            v58 = 0;\n            goto LABEL_73;\n          case 63:\n            v58 = 0;\n            goto LABEL_69;\n          case 92:\n            v58 = 0;\n            goto LABEL_87;\n          case 123:\n          case 125:\n            v58 = 0;\n            goto LABEL_60;\n          default:\n            v58 = 0;\n            goto LABEL_124;\n        }\n      }\n      if ( !v82 )\n      {\n        LOBYTE(v26) = *v62;\n        switch ( *v62 )\n        {\n          case 0:\n            goto LABEL_105;\n          case 7:\n            goto LABEL_94;\n          case 8:\n            goto LABEL_93;\n          case 9:\n            goto LABEL_102;\n          case 10:\n            goto LABEL_90;\n          case 11:\n            goto LABEL_101;\n          case 12:\n            goto LABEL_100;\n          case 13:\n            goto LABEL_96;\n          case 32:\n          case 33:\n          case 34:\n          case 36:\n          case 38:\n          case 40:\n          case 41:\n          case 42:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 91:\n          case 94:\n          case 96:\n          case 124:\n            goto LABEL_85;\n          case 35:\n          case 126:\n            goto LABEL_98;\n          case 37:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n          case 58:\n          case 65:\n          case 66:\n          case 67:\n          case 68:\n          case 69:\n          case 70:\n          case 71:\n          case 72:\n          case 73:\n          case 74:\n          case 75:\n          case 76:\n          case 77:\n          case 78:\n          case 79:\n          case 80:\n          case 81:\n          case 82:\n          case 83:\n          case 84:\n          case 85:\n          case 86:\n          case 87:\n          case 88:\n          case 89:\n          case 90:\n          case 93:\n          case 95:\n          case 97:\n          case 98:\n          case 99:\n          case 100:\n          case 101:\n          case 102:\n          case 103:\n          case 104:\n          case 105:\n          case 106:\n          case 107:\n          case 108:\n          case 109:\n          case 110:\n          case 111:\n          case 112:\n          case 113:\n          case 114:\n          case 115:\n          case 116:\n          case 117:\n          case 118:\n          case 119:\n          case 120:\n          case 121:\n          case 122:\n            goto LABEL_17;\n          case 39:\n            goto LABEL_73;\n          case 63:\n            goto LABEL_69;\n          case 92:\n            goto LABEL_87;\n          case 123:\n          case 125:\n            goto LABEL_60;\n          default:\n            goto LABEL_124;\n        }\n      }\n      return sub_401750(v9, v10, s);\n    }\n    LOBYTE(v26) = *v23;\n    switch ( *v23 )\n    {\n      case 0:\n        if ( !v56 )\n        {\n          if ( v81 & 1 )\n          {\n            ++v21;\n            continue;\n          }\n          if ( !v82 )\n          {\n            ++v21;\n            v11 = v22;\n            LOBYTE(v26) = 0;\n            goto LABEL_144;\n          }\n          v11 = 0;\n          if ( a7 )\n          {\n            v58 = 0;\n            LOBYTE(v26) = 0;\n            goto LABEL_18;\n          }\n          LOBYTE(v26) = 0;\n          goto LABEL_122;\n        }\nLABEL_103:\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        v58 = 0;\nLABEL_105:\n        LOBYTE(v14) = v20 == 2;\n        v33 = v22 ^ 1;\n        LOBYTE(v33) = (v20 == 2) & (v22 ^ 1);\n        if ( (_BYTE)v33 )\n        {\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v34 = v17 + 3;\n          if ( v10 <= v17 + 3 )\n          {\n            v17 += 4LL;\n            ++v21;\n            v22 = v33;\n            LOBYTE(v26) = 48;\n            goto LABEL_82;\n          }\n          v22 = v33;\n        }\n        else\n        {\n          v34 = v17;\n          if ( v17 >= v10 )\n            goto LABEL_115;\n        }\n        *(_BYTE *)(v9 + v34) = 92;\nLABEL_115:\n        v17 = v34 + 1;\n        v35 = v21 + 1;\n        if ( v20 == 2 )\n        {\n          ++v21;\n          LOBYTE(v26) = 48;\n          goto LABEL_82;\n        }\n        LOBYTE(v26) = 48;\n        if ( v35 < v19 && (unsigned __int8)(s[v35] - 48) <= 9u )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 48;\n          if ( v10 > v34 + 2 )\n            *(_BYTE *)(v9 + v34 + 2) = 48;\n          v17 = v34 + 3;\n          LOBYTE(v26) = 48;\n        }\n        goto LABEL_118;\n      case 7:\n        LOBYTE(v26) = 7;\n        v32 = 97;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 8:\n        LOBYTE(v26) = 8;\n        v32 = 98;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 9:\n        LOBYTE(v26) = 9;\n        v32 = 116;\n        goto LABEL_130;\n      case 10:\n        LOBYTE(v26) = 10;\n        v32 = 110;\n        goto LABEL_130;\n      case 11:\n        LOBYTE(v26) = 11;\n        v32 = 118;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 12:\n        LOBYTE(v26) = 12;\n        v32 = 102;\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_88;\n      case 13:\n        LOBYTE(v26) = 13;\n        v32 = 114;\nLABEL_130:\n        LOBYTE(v14) = v20 == 2;\n        v58 = v20 == 2 && v82;\n        if ( v58 )\n          return sub_401750(v9, v10, s);\n        goto LABEL_88;\n      case 32:\n      case 33:\n      case 34:\n      case 36:\n      case 38:\n      case 40:\n      case 41:\n      case 42:\n      case 59:\n      case 60:\n      case 61:\n      case 62:\n      case 91:\n      case 94:\n      case 96:\n      case 124:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_64;\n      case 35:\n      case 126:\n        LOBYTE(v14) = v20 == 2;\n        goto LABEL_63;\n      case 37:\n      case 43:\n      case 44:\n      case 45:\n      case 46:\n      case 47:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 58:\n      case 65:\n      case 66:\n      case 67:\n      case 68:\n      case 69:\n      case 70:\n      case 71:\n      case 72:\n      case 73:\n      case 74:\n      case 75:\n      case 76:\n      case 77:\n      case 78:\n      case 79:\n      case 80:\n      case 81:\n      case 82:\n      case 83:\n      case 84:\n      case 85:\n      case 86:\n      case 87:\n      case 88:\n      case 89:\n      case 90:\n      case 93:\n      case 95:\n      case 97:\n      case 98:\n      case 99:\n      case 100:\n      case 101:\n      case 102:\n      case 103:\n      case 104:\n      case 105:\n      case 106:\n      case 107:\n      case 108:\n      case 109:\n      case 110:\n      case 111:\n      case 112:\n      case 113:\n      case 114:\n      case 115:\n      case 116:\n      case 117:\n      case 118:\n      case 119:\n      case 120:\n      case 121:\n      case 122:\n        goto LABEL_127;\n      case 39:\nLABEL_73:\n        v14 = 0;\n        LOBYTE(v26) = 39;\n        if ( v20 != 2 )\n          goto LABEL_65;\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 39;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 92;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 39;\n        v17 += 3LL;\n        ++v21;\n        v22 = 0;\n        LOBYTE(v26) = 39;\nLABEL_82:\n        if ( !v58 )\n          goto LABEL_33;\n        goto LABEL_67;\n      case 63:\nLABEL_69:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v11 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_66;\n        }\n        if ( v20 != 5 )\n        {\n          LOBYTE(v26) = 63;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_65;\n        }\n        if ( !(v81 & 4) )\n        {\n          v14 = 0;\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        v14 = 0;\n        LOBYTE(v26) = 63;\n        if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n          goto LABEL_65;\n        v26 = (unsigned __int8)s[v21 + 2];\n        if ( (unsigned __int8)v26 > 0x3Eu || (v40 = 8070630310989004800LL, !_bittest64(&v40, v26)) )\n        {\n          LOBYTE(v26) = 63;\n          goto LABEL_65;\n        }\n        if ( v82 )\n          return sub_401750(v9, v10, s);\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 63;\n        if ( v10 > v17 + 1 )\n          *(_BYTE *)(v9 + v17 + 1) = 34;\n        if ( v10 > v17 + 2 )\n          *(_BYTE *)(v9 + v17 + 2) = 34;\n        if ( v10 > v17 + 3 )\n          *(_BYTE *)(v9 + v17 + 3) = 63;\n        v17 += 4LL;\n        v14 = 0;\n        v11 = 0;\n        v21 += 2LL;\nLABEL_118:\n        if ( !v56 || (_BYTE)v14 )\n          goto LABEL_66;\n        if ( a7 )\n          goto LABEL_18;\n        goto LABEL_121;\n      case 92:\n        if ( v20 == 2 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          ++v21;\n          v11 = v22;\n          LOBYTE(v26) = 92;\n          goto LABEL_144;\n        }\nLABEL_87:\n        v11 = v82 & v56;\n        LOBYTE(v26) = 92;\n        v32 = 92;\n        v14 = v82 & v56;\n        LOBYTE(v14) = (n != 0) & v14;\n        if ( (_BYTE)v14 )\n        {\n          ++v21;\n          v11 = v22;\n          goto LABEL_144;\n        }\nLABEL_88:\n        if ( !v56 )\n          goto LABEL_65;\n        v27 = v14;\n        LOBYTE(v26) = v32;\n        goto LABEL_20;\n      case 123:\n      case 125:\nLABEL_60:\n        v31 = v19 != 1;\n        if ( v19 == -1LL )\n          v31 = s[1] != 0;\n        LOBYTE(v14) = v20 == 2;\n        if ( v31 )\n          goto LABEL_65;\nLABEL_63:\n        if ( v21 )\n          goto LABEL_65;\nLABEL_64:\n        if ( !((unsigned __int8)v14 & v82) )\n          goto LABEL_65;\n        return sub_401750(v9, v10, s);\n      default:\nLABEL_124:\n        if ( v80 == 1 )\n        {\n          v74 = v20;\n          v69 = v19;\n          v64 = v22;\n          v36 = __ctype_b_loc();\n          v22 = v64;\n          v19 = v69;\n          v20 = v74;\n          v37 = 1LL;\n          v38 = (*v36)[(unsigned __int8)v26];\n          LOWORD(v38) = (unsigned __int16)v38 >> 14;\n          v14 = v38 ^ 1;\n          LOBYTE(v14) = v56 & v14;\n          goto LABEL_126;\n        }\n        ps = 0LL;\n        if ( v19 == -1LL )\n        {\n          v75 = v20;\n          v70 = v22;\n          v65 = v23;\n          v43 = strlen(s);\n          v20 = v75;\n          LOBYTE(v22) = v70;\n          v23 = v65;\n          v19 = v43;\n        }\n        v84 = v17;\n        v83 = v22;\n        v44 = 0LL;\n        v85 = v23;\n        v76 = v9;\n        v78 = v10;\n        v66 = v19;\n        v71 = v20;\n        break;\n    }\n    break;\n  }\n  while ( 1 )\n  {\n    v45 = v21 + v44;\n    v46 = sub_403230(&wc, &s[v21 + v44], v66 - (v21 + v44), &ps);\n    v47 = v46;\n    switch ( v46 )\n    {\n      case 0LL:\n        v11 ^= 1u;\n        v37 = v44;\n        v9 = v76;\n        v22 = v83;\n        v17 = v84;\n        v10 = v78;\n        v14 = (unsigned __int8)(v11 & v56);\n        v19 = v66;\n        v20 = v71;\n        goto LABEL_252;\n      case -1LL:\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v19 = v66;\n        v20 = v71;\n        v14 = v56;\n        goto LABEL_252;\n      case -2LL:\n        v19 = v66;\n        v52 = v21 + v44;\n        v53 = &s[v21 + v44];\n        v54 = v44;\n        v37 = v44;\n        v22 = v83;\n        v17 = v84;\n        v9 = v76;\n        v10 = v78;\n        v20 = v71;\n        if ( v52 < v66 && *v53 )\n        {\n          do\n            ++v54;\n          while ( v66 > v21 + v54 && v85[v54] );\n          v37 = v54;\n        }\n        v14 = v56;\nLABEL_252:\n        if ( v37 > 1 )\n          goto LABEL_206;\nLABEL_126:\n        if ( (_BYTE)v14 )\n        {\n          v14 = v56;\nLABEL_206:\n          v49 = v21 + v37;\n          v50 = 0;\n          v51 = v58;\n          while ( 1 )\n          {\n            if ( (_BYTE)v14 )\n            {\n              if ( v82 )\n                return sub_401750(v9, v10, s);\n              if ( (v20 == 2) & ((unsigned __int8)v22 ^ 1) )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 36;\n                if ( v10 > v17 + 2 )\n                  *(_BYTE *)(v9 + v17 + 2) = 39;\n                v17 += 3LL;\n                v22 ^= 1u;\n              }\n              if ( v17 < v10 )\n                *(_BYTE *)(v9 + v17) = 92;\n              if ( v10 > v17 + 1 )\n                *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v26 >> 6) + 48;\n              if ( v10 > v17 + 2 )\n                *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v26 >> 3) & 7) + 48;\n              ++v21;\n              v17 += 3LL;\n              LOBYTE(v26) = (v26 & 7) + 48;\n              if ( v49 <= v21 )\n                goto LABEL_33;\n              v50 = v14;\n            }\n            else\n            {\n              v11 = v22 & (v50 ^ 1);\n              if ( v51 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 92;\n                ++v17;\n              }\n              if ( ++v21 >= v49 )\n                goto LABEL_144;\n              if ( (_BYTE)v11 )\n              {\n                if ( v17 < v10 )\n                  *(_BYTE *)(v9 + v17) = 39;\n                if ( v10 > v17 + 1 )\n                  *(_BYTE *)(v9 + v17 + 1) = 39;\n                v17 += 2LL;\n                v51 = 0;\n                v22 = 0;\n              }\n              else\n              {\n                v51 = 0;\n              }\n            }\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = v26;\n            LOBYTE(v26) = s[v21];\n            ++v17;\n          }\n        }\nLABEL_127:\n        LOBYTE(v14) = v20 == 2;\nLABEL_65:\n        v11 = (v14 | v56 ^ 1) ^ 1;\n        LOBYTE(v11) = v82 | (v14 | v56 ^ 1) ^ 1;\n        if ( v82 | (unsigned __int8)(v14 | v56 ^ 1) ^ 1 )\n        {\nLABEL_17:\n          v11 = 0;\n          if ( a7 )\n          {\nLABEL_18:\n            if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v26 >> 5)) >> v26) & 1 )\n            {\n              v27 = v20 == 2;\nLABEL_20:\n              if ( v82 )\n                return sub_401750(v9, v10, s);\nLABEL_21:\n              ++v21;\n              goto LABEL_22;\n            }\n          }\nLABEL_121:\n          v27 = v20 == 2;\n          if ( v58 )\n            goto LABEL_20;\nLABEL_122:\n          ++v21;\n          v11 = v22 & (v11 ^ 1);\nLABEL_144:\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v22 = 0;\n          }\n          goto LABEL_33;\n        }\nLABEL_66:\n        ++v21;\n        if ( !v58 )\n        {\n          v11 = v22 & (v11 ^ 1);\n          goto LABEL_144;\n        }\nLABEL_67:\n        v27 = v20 == 2;\nLABEL_22:\n        v14 = v22 ^ 1;\n        if ( v27 & ((unsigned __int8)v22 ^ 1) )\n        {\n          if ( v10 > v17 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 36;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          LOBYTE(v14) = v27 & (v22 ^ 1);\n          v22 = v14;\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = 92;\n        ++v17;\nLABEL_33:\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v26;\n        ++v17;\n        goto LABEL_4;\n    }\n    if ( v82 && v71 == 2 && v46 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v44 += v47;\n    if ( mbsinit(&ps) )\n    {\n      v37 = v44;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v76;\n      v10 = v78;\n      v19 = v66;\n      v20 = v71;\n      LOBYTE(v14) = v56 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v48 = &s[v45 + 1];\n  while ( (unsigned __int8)(*v48 - 91) > 0x21u || !((1LL << (*v48 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v46 + v45] == ++v48 )\n      goto LABEL_187;\n  }\n  v9 = v76;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n", 
            "funcStartAddr": "0x4011f0L", 
            "funcEndAddr": "0x4011f5L", 
            "funcName": "sub_401750"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(signed int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14\n  __int64 v5; // rbp\n  int *v6; // rax\n  __int128 *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __int128 *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // er8\n  __int128 *v19; // rax\n  char *v20; // [rsp+8h] [rbp-50h]\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v4 = a3;\n  v5 = a4;\n  v20 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      v19 = (__int128 *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      off_6061B8 = v19;\n      *v19 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__int128 *)sub_403020(off_6061B8, v9);\n      v11 = (unsigned int)(a1 + 1);\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, v20, v4, *(_DWORD *)v5, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)v5;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, v20, v4, v17, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(signed int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14\n  __int64 v5; // rbp\n  int *v6; // rax\n  __int128 *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __int128 *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // er8\n  __int128 *v19; // rax\n  char *v20; // [rsp+8h] [rbp-50h]\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v4 = a3;\n  v5 = a4;\n  v20 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      v19 = (__int128 *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      off_6061B8 = v19;\n      *v19 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__int128 *)sub_403020(off_6061B8, v9);\n      v11 = (unsigned int)(a1 + 1);\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, v20, v4, *(_DWORD *)v5, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)v5;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, v20, v4, v17, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n", 
            "funcStartAddr": "0x4011f5L", 
            "funcEndAddr": "0x4011faL", 
            "funcName": "sub_402760"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(signed int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14\n  __int64 v5; // rbp\n  int *v6; // rax\n  __int128 *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __int128 *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // er8\n  __int128 *v19; // rax\n  char *v20; // [rsp+8h] [rbp-50h]\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v4 = a3;\n  v5 = a4;\n  v20 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      v19 = (__int128 *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      off_6061B8 = v19;\n      *v19 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__int128 *)sub_403020(off_6061B8, v9);\n      v11 = (unsigned int)(a1 + 1);\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, v20, v4, *(_DWORD *)v5, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)v5;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, v20, v4, v17, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(signed int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14\n  __int64 v5; // rbp\n  int *v6; // rax\n  __int128 *v7; // rbx\n  int *v8; // r13\n  __int64 v9; // rsi\n  __int128 *v10; // rax\n  __int64 v11; // rdx\n  unsigned __int64 *v12; // rbx\n  _BYTE *v13; // r12\n  unsigned __int64 v14; // rax\n  unsigned __int64 v15; // rsi\n  _BYTE *v16; // rax\n  int v17; // er8\n  __int128 *v19; // rax\n  char *v20; // [rsp+8h] [rbp-50h]\n  unsigned __int64 v21; // [rsp+10h] [rbp-48h]\n  __int64 v22; // [rsp+10h] [rbp-48h]\n  int v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+1Ch] [rbp-3Ch]\n\n  v4 = a3;\n  v5 = a4;\n  v20 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6061D0 <= (unsigned int)a1 )\n  {\n    v9 = 16LL * (unsigned int)(a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      v19 = (__int128 *)sub_403020(0LL, v9);\n      v11 = (unsigned int)(a1 + 1);\n      v7 = v19;\n      off_6061B8 = v19;\n      *v19 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      v10 = (__int128 *)sub_403020(off_6061B8, v9);\n      v11 = (unsigned int)(a1 + 1);\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (unsigned __int64 *)&v7[a1];\n  v13 = (_BYTE *)v12[1];\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v21 = *v12;\n  v14 = sub_401750(v13, *v12, v20, v4, *(_DWORD *)v5, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  if ( v21 <= v14 )\n  {\n    v15 = v14 + 1;\n    *v12 = v14 + 1;\n    if ( v13 != (_BYTE *)&unk_606240 )\n    {\n      v22 = v14 + 1;\n      free(v13);\n      v15 = v22;\n    }\n    v16 = (_BYTE *)sub_402FD0(v15);\n    v17 = *(_DWORD *)v5;\n    v12[1] = (unsigned __int64)v16;\n    v13 = v16;\n    sub_401750(v16, v15, v20, v4, v17, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n", 
            "funcStartAddr": "0x4011f5L", 
            "funcEndAddr": "0x4011faL", 
            "funcName": "sub_402760"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402C80(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v5 = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n\n_BYTE *__fastcall sub_402C80(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v5 = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n", 
            "funcStartAddr": "0x4011faL", 
            "funcEndAddr": "0x4011ffL", 
            "funcName": "sub_402C80"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402C80(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v5 = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n\n_BYTE *__fastcall sub_402C80(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v5 = 0;\n  v6 = 0LL;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n", 
            "funcStartAddr": "0x4011faL", 
            "funcEndAddr": "0x4011ffL", 
            "funcName": "sub_402C80"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402CF0(signed int a1, int a2, char *a3, unsigned __int64 a4)\n{\n  int v5; // [rsp+0h] [rbp-48h]\n  int v6; // [rsp+4h] [rbp-44h]\n  __int64 v7; // [rsp+8h] [rbp-40h]\n  __int64 v8; // [rsp+10h] [rbp-38h]\n  __int64 v9; // [rsp+18h] [rbp-30h]\n  __int64 v10; // [rsp+20h] [rbp-28h]\n  __int64 v11; // [rsp+28h] [rbp-20h]\n  __int64 v12; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5 = a2;\n  v6 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  v12 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)&v5);\n}\n\n_BYTE *__fastcall sub_402CF0(signed int a1, int a2, char *a3, unsigned __int64 a4)\n{\n  int v5; // [rsp+0h] [rbp-48h]\n  int v6; // [rsp+4h] [rbp-44h]\n  __int64 v7; // [rsp+8h] [rbp-40h]\n  __int64 v8; // [rsp+10h] [rbp-38h]\n  __int64 v9; // [rsp+18h] [rbp-30h]\n  __int64 v10; // [rsp+20h] [rbp-28h]\n  __int64 v11; // [rsp+28h] [rbp-20h]\n  __int64 v12; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5 = a2;\n  v6 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  v12 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)&v5);\n}\n", 
            "funcStartAddr": "0x4011ffL", 
            "funcEndAddr": "0x401204L", 
            "funcName": "sub_402CF0"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402CF0(signed int a1, int a2, char *a3, unsigned __int64 a4)\n{\n  int v5; // [rsp+0h] [rbp-48h]\n  int v6; // [rsp+4h] [rbp-44h]\n  __int64 v7; // [rsp+8h] [rbp-40h]\n  __int64 v8; // [rsp+10h] [rbp-38h]\n  __int64 v9; // [rsp+18h] [rbp-30h]\n  __int64 v10; // [rsp+20h] [rbp-28h]\n  __int64 v11; // [rsp+28h] [rbp-20h]\n  __int64 v12; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5 = a2;\n  v6 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  v12 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)&v5);\n}\n\n_BYTE *__fastcall sub_402CF0(signed int a1, int a2, char *a3, unsigned __int64 a4)\n{\n  int v5; // [rsp+0h] [rbp-48h]\n  int v6; // [rsp+4h] [rbp-44h]\n  __int64 v7; // [rsp+8h] [rbp-40h]\n  __int64 v8; // [rsp+10h] [rbp-38h]\n  __int64 v9; // [rsp+18h] [rbp-30h]\n  __int64 v10; // [rsp+20h] [rbp-28h]\n  __int64 v11; // [rsp+28h] [rbp-20h]\n  __int64 v12; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v5 = a2;\n  v6 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  v12 = 0LL;\n  return sub_402760(a1, a3, a4, (__int64)&v5);\n}\n", 
            "funcStartAddr": "0x4011ffL", 
            "funcEndAddr": "0x401204L", 
            "funcName": "sub_402CF0"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402D80(char *a1, unsigned __int64 a2, unsigned __int8 a3)\n{\n  char v3; // cl\n  int *v4; // r8\n  unsigned __int32 v5; // edx\n  __m128i v7; // [rsp+0h] [rbp-48h]\n  __m128i v8; // [rsp+10h] [rbp-38h]\n  __m128i v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+30h] [rbp-18h]\n\n  v3 = a3 & 0x1F;\n  v10 = qword_606370;\n  v7 = _mm_load_si128((const __m128i *)&xmmword_606340);\n  v8 = _mm_load_si128((const __m128i *)&xmmword_606350);\n  v4 = &v7.m128i_i32[(a3 >> 5) + 2];\n  v9 = _mm_load_si128((const __m128i *)&xmmword_606360);\n  v5 = v7.m128i_u32[(a3 >> 5) + 2];\n  *v4 = v5 ^ ((~(unsigned __int8)(v5 >> v3) & 1) << v3);\n  return sub_402760(0, a1, a2, (__int64)&v7);\n}\n", 
            "funcStartAddr": "0x402d80L", 
            "funcEndAddr": "0x402df0L", 
            "funcName": "sub_402D80"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E00(char *a1)\n{\n  return sub_402D80(a1, 0xFFFFFFFFFFFFFFFFLL, 0x3Au);\n}\n", 
            "funcStartAddr": "0x402e00L", 
            "funcEndAddr": "0x402e11L", 
            "funcName": "sub_402E00"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E30(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v6 = 0x400000000000000LL;\n  v5 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n\n_BYTE *__fastcall sub_402E30(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v6 = 0x400000000000000LL;\n  v5 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n", 
            "funcStartAddr": "0x401204L", 
            "funcEndAddr": "0x401209L", 
            "funcName": "sub_402E30"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E30(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v6 = 0x400000000000000LL;\n  v5 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n\n_BYTE *__fastcall sub_402E30(signed int a1, int a2, char *a3)\n{\n  int v4; // [rsp+0h] [rbp-48h]\n  int v5; // [rsp+4h] [rbp-44h]\n  __int64 v6; // [rsp+8h] [rbp-40h]\n  __int64 v7; // [rsp+10h] [rbp-38h]\n  __int64 v8; // [rsp+18h] [rbp-30h]\n  __int64 v9; // [rsp+20h] [rbp-28h]\n  __int64 v10; // [rsp+28h] [rbp-20h]\n  __int64 v11; // [rsp+30h] [rbp-18h]\n\n  if ( a2 == 10 )\n    abort();\n  v4 = a2;\n  v6 = 0x400000000000000LL;\n  v5 = 0;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = 0LL;\n  v10 = 0LL;\n  v11 = 0LL;\n  return sub_402760(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)&v4);\n}\n", 
            "funcStartAddr": "0x401204L", 
            "funcEndAddr": "0x401209L", 
            "funcName": "sub_402E30"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402EA0(signed int a1, __int64 a2, __int64 a3, char *a4, unsigned __int64 a5)\n{\n  __m128i v6; // [rsp+0h] [rbp-48h]\n  __m128i v7; // [rsp+10h] [rbp-38h]\n  __m128i v8; // [rsp+20h] [rbp-28h]\n  __int64 v9; // [rsp+30h] [rbp-18h]\n\n  v6 = _mm_load_si128((const __m128i *)&xmmword_606340);\n  v7 = _mm_load_si128((const __m128i *)&xmmword_606350);\n  v8 = _mm_load_si128((const __m128i *)&xmmword_606360);\n  v9 = qword_606370;\n  v6.m128i_i32[0] = 10;\n  if ( !a2 || !a3 )\n    abort();\n  v8.m128i_i64[1] = a2;\n  v9 = a3;\n  return sub_402760(a1, a4, a5, (__int64)&v6);\n}\n", 
            "funcStartAddr": "0x402ea0L", 
            "funcEndAddr": "0x402f0cL", 
            "funcName": "sub_402EA0"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_402FD0(size_t a1)\n{\n  void *result; // rax\n\n  result = malloc(a1);\n  if ( !result )\n  {\n    if ( a1 )\n      sub_4031F0();\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x402fd0L", 
            "funcEndAddr": "0x402feaL", 
            "funcName": "sub_402FD0"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_403020(void *a1, size_t a2)\n{\n  void *result; // rax\n\n  if ( !a2 && a1 )\n  {\n    free(a1);\n    result = 0LL;\n  }\n  else\n  {\n    result = realloc(a1, a2);\n    if ( !result )\n    {\n      if ( a2 )\n        sub_4031F0();\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403020L", 
            "funcEndAddr": "0x403056L", 
            "funcName": "sub_403020"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_403170(size_t a1, size_t a2)\n{\n  void *result; // rax\n\n  result = calloc(a1, a2);\n  if ( !result )\n    sub_4031F0();\n  return result;\n}\n", 
            "funcStartAddr": "0x403170L", 
            "funcEndAddr": "0x403188L", 
            "funcName": "sub_403170"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_403190(void *src, size_t n)\n{\n  void *v2; // rax\n\n  v2 = sub_402FD0(n);\n  return memcpy(v2, src, n);\n}\n", 
            "funcStartAddr": "0x403190L", 
            "funcEndAddr": "0x4031b8L", 
            "funcName": "sub_403190"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_4031C0(void *src)\n{\n  size_t v1; // rax\n  size_t v2; // rbx\n  void *v3; // rax\n\n  v1 = strlen((const char *)src);\n  v2 = v1 + 1;\n  v3 = sub_402FD0(v1 + 1);\n  return memcpy(v3, src, v2);\n}\n", 
            "funcStartAddr": "0x4031c0L", 
            "funcEndAddr": "0x4031eeL", 
            "funcName": "sub_4031C0"
        }, 
        {
            "decompiledFuncCode": "void __noreturn sub_4031F0()\n{\n  char *v0; // rax\n\n  v0 = dcgettext(0LL, \"memory exhausted\", 5);\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n", 
            "funcStartAddr": "0x4031f0L", 
            "funcEndAddr": "0x403221L", 
            "funcName": "sub_4031F0"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_403230(wchar_t *a1, const char *a2, size_t a3, mbstate_t *a4)\n{\n  if ( a2 )\n  {\n    if ( !a3 )\n      return -2LL;\n  }\n  else\n  {\n    a3 = 1LL;\n    a2 = \"\";\n    a1 = 0LL;\n  }\n  return mbrtowc(a1, a2, a3, a4);\n}\n", 
            "funcStartAddr": "0x403230L", 
            "funcEndAddr": "0x403259L", 
            "funcName": "sub_403230"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_403260(FILE *stream)\n{\n  size_t v1; // r12\n  int v2; // ebp\n  int result; // eax\n\n  v1 = __fpending(stream);\n  v2 = ferror(stream);\n  result = fclose(stream);\n  if ( v2 )\n  {\n    if ( !result )\n    {\n      *__errno_location() = 0;\n      return -1;\n    }\n  }\n  else\n  {\n    if ( !result )\n      return result;\n    if ( !v1 )\n      return -(*__errno_location() != 9);\n  }\n  return -1;\n}\n", 
            "funcStartAddr": "0x403260L", 
            "funcEndAddr": "0x4032c5L", 
            "funcName": "sub_403260"
        }, 
        {
            "decompiledFuncCode": "const char *sub_4032D0()\n{\n  char *v0; // rax\n  char *v1; // r15\n  const char *v2; // rbx\n  char v3; // bp\n  size_t v4; // rax\n  char *v6; // rax\n  const char *v7; // r13\n  size_t v8; // rax\n  __int64 v9; // r12\n  size_t v10; // r14\n  size_t v11; // rdi\n  char *v12; // rax\n  char *v13; // rbp\n  size_t v14; // rdi\n  char *v15; // rax\n  int v16; // eax\n  int v17; // er12\n  FILE *v18; // r13\n  const char *v19; // rax\n  FILE *v20; // rbx\n  const char *v21; // r13\n  char *v22; // rax\n  int v23; // edi\n  char *v24; // kr00_8\n  char *v25; // rdx\n  int v26; // esi\n  unsigned int v27; // eax\n  __int64 v28; // rdx\n  signed __int64 v29; // rax\n  char *v30; // rax\n  signed __int64 v31; // rcx\n  __int64 v32; // rdx\n  __int64 v33; // rsi\n  unsigned int v34; // ecx\n  __int64 v35; // rdi\n  char *v36; // rsi\n  unsigned int v37; // edx\n  char *v38; // rcx\n  FILE *v39; // rdi\n  int v40; // eax\n  bool v41; // dl\n  char *v42; // rax\n  __int64 v43; // rax\n  unsigned __int64 v44; // r9\n  char *v45; // rsi\n  char *v46; // r10\n  unsigned int v47; // ecx\n  unsigned int v48; // ecx\n  unsigned int v49; // esi\n  __int64 v50; // r8\n  unsigned __int64 v51; // rdi\n  char *v52; // rcx\n  char *v53; // r9\n  unsigned int v54; // edx\n  unsigned int v55; // edx\n  unsigned int v56; // ecx\n  __int64 v57; // rsi\n  const char *v58; // rax\n  char *v59; // rdi\n  FILE *v60; // r13\n  __int64 v61; // [rsp+8h] [rbp-D0h]\n  __int64 v62; // [rsp+18h] [rbp-C0h]\n  char v63[64]; // [rsp+20h] [rbp-B8h]\n  char v64[120]; // [rsp+60h] [rbp-78h]\n\n  v0 = nl_langinfo(14);\n  v1 = s;\n  v2 = v0;\n  if ( !v0 )\n    v2 = \"\";\n  if ( !s )\n  {\n    v6 = getenv(\"CHARSETALIASDIR\");\n    v7 = v6;\n    if ( v6 && *v6 )\n    {\n      v8 = strlen(v6);\n      v9 = v8;\n      v10 = v8;\n      if ( !v8 )\n      {\n        v11 = 14LL;\nLABEL_18:\n        v12 = (char *)malloc(v11);\n        v13 = v12;\n        if ( !v12 )\n        {\nLABEL_19:\n          v1 = \"\\\"\" + 1;\nLABEL_20:\n          s = v1;\n          goto LABEL_4;\n        }\n        memcpy(v12, v7, v10);\nLABEL_24:\n        strcpy(&v13[v9], \"charset.alias\");\n        v16 = open(v13, 0);\n        v17 = v16;\n        if ( v16 >= 0 )\n        {\n          v1 = 0LL;\n          v61 = 0LL;\n          v18 = fdopen(v16, \"r\");\n          if ( v18 )\n          {\n            v19 = v2;\n            v20 = v18;\n            v21 = v19;\nLABEL_30:\n            v22 = v20->_IO_read_ptr;\n            if ( v22 < v20->_IO_read_end )\n            {\nLABEL_31:\n              v20->_IO_read_ptr = v22 + 1;\n              v23 = (unsigned __int8)*v22;\n              goto LABEL_32;\n            }\n            while ( 1 )\n            {\n              v23 = __uflow(v20);\n              if ( v23 == -1 )\n                break;\nLABEL_32:\n              if ( (unsigned int)(v23 - 9) <= 1 || v23 == 32 )\n                goto LABEL_30;\n              if ( v23 == 35 )\n              {\n                do\n                {\n                  v42 = v20->_IO_read_ptr;\n                  if ( v42 < v20->_IO_read_end )\n                  {\n                    v20->_IO_read_ptr = v42 + 1;\n                    v40 = (unsigned __int8)*v42;\n                    v41 = 1;\n                  }\n                  else\n                  {\n                    v40 = __uflow(v20);\n                    v41 = v40 != -1;\n                  }\n                }\n                while ( v40 != 10 && v41 );\n                if ( v40 == -1 )\n                  break;\n                goto LABEL_30;\n              }\n              ungetc(v23, v20);\n              if ( fscanf(v20, \"%50s %50s\", v63, v64) <= 1 )\n                break;\n              v24 = &v63[strlen(v63)];\n              v25 = v64;\n              do\n              {\n                v26 = *(_DWORD *)v25;\n                v25 += 4;\n                v27 = ~v26 & (v26 - 16843009) & 0x80808080;\n              }\n              while ( !v27 );\n              if ( !(~v26 & (v26 - 16843009) & 0x8080) )\n                v27 >>= 16;\n              if ( !(~v26 & (v26 - 16843009) & 0x8080) )\n                v25 += 2;\n              v28 = &v25[-__CFADD__((_BYTE)v27, (_BYTE)v27) - 3] - v64;\n              v29 = v24 - v63 + v28;\n              v62 = v28;\n              if ( v61 )\n              {\n                v43 = v61 + v29;\n                v61 = v43 + 2;\n                v30 = (char *)realloc(v1, v43 + 3);\n                v32 = v62;\n                v31 = v24 - v63;\n              }\n              else\n              {\n                v61 = v29 + 2;\n                v30 = (char *)malloc(v29 + 3);\n                v31 = v24 - v63;\n                v32 = v62;\n              }\n              if ( !v30 )\n              {\n                v58 = v21;\n                v59 = v1;\n                v60 = v20;\n                v1 = \"\\\"\" + 1;\n                v2 = v58;\n                free(v59);\n                fclose(v60);\n                goto LABEL_26;\n              }\n              v33 = -2 - v31;\n              v34 = v31 + 1;\n              v35 = v61 - v32;\n              v36 = &v30[v61 - v32 + v33];\n              if ( v34 >= 8 )\n              {\n                *(_QWORD *)v36 = *(_QWORD *)v63;\n                *(_QWORD *)&v36[v34 - 8] = *(_QWORD *)&v63[v34 - 8];\n                v44 = (unsigned __int64)(v36 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v45 = &v36[-v44];\n                v46 = (char *)(v63 - v45);\n                v47 = ((_DWORD)v45 + v34) & 0xFFFFFFF8;\n                if ( v47 >= 8 )\n                {\n                  v48 = v47 & 0xFFFFFFF8;\n                  v49 = 0;\n                  do\n                  {\n                    v50 = v49;\n                    v49 += 8;\n                    *(_QWORD *)(v44 + v50) = *(_QWORD *)&v46[v50];\n                  }\n                  while ( v49 < v48 );\n                }\n              }\n              else if ( v34 & 4 )\n              {\n                *(_DWORD *)v36 = *(_DWORD *)v63;\n                *(_DWORD *)&v36[v34 - 4] = *(_DWORD *)&v63[v34 - 4];\n              }\n              else if ( v34 )\n              {\n                *v36 = v63[0];\n                if ( v34 & 2 )\n                  *(_WORD *)&v36[v34 - 2] = *(_WORD *)&v63[v34 - 2];\n              }\n              v37 = v32 + 1;\n              v38 = &v30[v35 - 1];\n              if ( v37 >= 8 )\n              {\n                *(_QWORD *)v38 = *(_QWORD *)v64;\n                *(_QWORD *)&v38[v37 - 8] = *(_QWORD *)&v64[v37 - 8];\n                v51 = (unsigned __int64)(v38 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v52 = &v38[-v51];\n                v53 = (char *)(v64 - v52);\n                v54 = ((_DWORD)v52 + v37) & 0xFFFFFFF8;\n                if ( v54 >= 8 )\n                {\n                  v55 = v54 & 0xFFFFFFF8;\n                  v56 = 0;\n                  do\n                  {\n                    v57 = v56;\n                    v56 += 8;\n                    *(_QWORD *)(v51 + v57) = *(_QWORD *)&v53[v57];\n                  }\n                  while ( v56 < v55 );\n                }\n              }\n              else if ( v37 & 4 )\n              {\n                *(_DWORD *)v38 = *(_DWORD *)v64;\n                *(_DWORD *)&v38[v37 - 4] = *(_DWORD *)&v64[v37 - 4];\n              }\n              else if ( v37 )\n              {\n                *v38 = v64[0];\n                if ( v37 & 2 )\n                  *(_WORD *)&v38[v37 - 2] = *(_WORD *)&v64[v37 - 2];\n              }\n              v1 = v30;\n              v22 = v20->_IO_read_ptr;\n              if ( v22 < v20->_IO_read_end )\n                goto LABEL_31;\n            }\n            v39 = v20;\n            v2 = v21;\n            fclose(v39);\n            if ( !v61 )\n              goto LABEL_25;\n            v1[v61] = 0;\n            goto LABEL_26;\n          }\n          close(v17);\n        }\nLABEL_25:\n        v1 = \"\\\"\" + 1;\nLABEL_26:\n        free(v13);\n        goto LABEL_20;\n      }\n      if ( v7[v8 - 1] == 47 )\n      {\n        v11 = v8 + 14;\n        goto LABEL_18;\n      }\n      v14 = v8 + 15;\n      v9 = v8 + 1;\n    }\n    else\n    {\n      v14 = 116LL;\n      v9 = 102LL;\n      v10 = 101LL;\n      v7 = \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n    }\n    v15 = (char *)malloc(v14);\n    v13 = v15;\n    if ( !v15 )\n      goto LABEL_19;\n    memcpy(v15, v7, v10);\n    v13[v10] = 47;\n    goto LABEL_24;\n  }\nLABEL_4:\n  v3 = *v1;\n  if ( *v1 )\n  {\n    while ( strcmp(v2, v1) && (v3 != 42 || v1[1]) )\n    {\n      v4 = strlen(v1);\n      v1 += v4 + strlen(&v1[v4 + 1]) + 2;\n      v3 = *v1;\n      if ( !*v1 )\n        goto LABEL_11;\n    }\n    v2 = &v1[strlen(v1) + 1];\n  }\nLABEL_11:\n  if ( !*v2 )\n    v2 = \"ASCII\";\n  return v2;\n}\n", 
            "funcStartAddr": "0x4032d0L", 
            "funcEndAddr": "0x403832L", 
            "funcName": "sub_4032D0"
        }, 
        {
            "decompiledFuncCode": "void init(void)\n{\n  init_proc();\n}\n", 
            "funcStartAddr": "0x403840L", 
            "funcEndAddr": "0x40389dL", 
            "funcName": "init"
        }, 
        {
            "decompiledFuncCode": "void fini(void)\n{\n  ;\n}\n", 
            "funcStartAddr": "0x4038a0L", 
            "funcEndAddr": "0x4038a1L", 
            "funcName": "fini"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4038B0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  v1 = 0LL;\n  if ( &unk_606168 )\n    v1 = (void *)unk_606168;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n", 
            "funcStartAddr": "0x4038b0L", 
            "funcEndAddr": "0x4038c8L", 
            "funcName": "sub_4038B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4038C8(__int64 a1, __int64 a2, __int64 a3)\n{\n  void (**v3)(void); // rbx\n  __int64 v5; // [rsp-8h] [rbp-10h]\n\n  v3 = (void (**)(void))&qword_605E30;\n  v5 = a3;\n  while ( *v3 != (void (*)(void))-1LL )\n  {\n    (*v3)();\n    --v3;\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x4038c8L", 
            "funcEndAddr": "0x4038e8L", 
            "funcName": "sub_4038C8"
        }
    ], 
    "binaryInfo": {
        "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_bigram.elf", 
        "isStripped": "True"
    }, 
    "funcCount": 35, 
    "buildInfo": {
        "decompilerName": "IDA Pro", 
        "compilerVersion": "9.4.0", 
        "Optlevel": "-O", 
        "compilerName": "gcc"
    }
}