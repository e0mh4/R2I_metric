{
    "funcInfo": [
        {
            "decompiledFuncCode": "__int64 __fastcall main(__int64 a1, char **a2, char **a3)\n{\n  char *v3; // rdi@1\n  size_t v4; // r12@5\n  char *v5; // rax@5\n  char *v6; // rax@5\n  char *v7; // rbp@5\n  int v8; // eax@6\n  char *v9; // rdx@7\n  int v10; // edi@7\n  char *v11; // rcx@9\n  char *v12; // rax@9\n  __int64 v13; // rbx@12\n  __int64 v14; // rax@12\n  signed __int64 v15; // r13@14\n  signed __int64 v16; // rbx@15\n  size_t v17; // rax@18\n  char *v19; // rbx@4\n  int *v20; // rax@4\n  char *v21; // [sp+0h] [bp-38h]@5\n  size_t n; // [sp+8h] [bp-30h]@5\n\n  v3 = *a2;\n  if ( !*a2 )\n    v3 = \"bigram\";\n  sub_4015B0(v3, a2, a3);\n  setlocale(6, \"\");\n  bindtextdomain(\n    \"findutils\",\n    \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n  textdomain(\"findutils\");\n  if ( sub_4038B0(\n         sub_401510,\n         \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\") )\n  {\n    v19 = dcgettext(0LL, \"The atexit library function failed\", 5);\n    v20 = __errno_location();\n    error(1, *v20, v19);\n  }\n  v4 = 1026LL;\n  n = 1026LL;\n  LODWORD(v5) = sub_402FD0(1026LL);\n  v21 = v5;\n  LODWORD(v6) = sub_402FD0(1026LL);\n  *v6 = 0;\n  v7 = v6;\n  while ( 1 )\n  {\n    v8 = __getdelim(&v21, &n, 10, stdin);\n    if ( v8 <= 0 )\n      break;\n    v21[v8 - 1] = 0;\n    v9 = v21;\n    v10 = *v21;\n    if ( *v7 && *v7 == (_BYTE)v10 )\n    {\n      v11 = v21;\n      v12 = v7;\n      do\n      {\n        ++v12;\n        ++v11;\n      }\n      while ( *v11 == *v12 && *v12 );\n      LODWORD(v14) = (_DWORD)v12 - (_DWORD)v7;\n      v13 = (signed int)v14;\n      v14 = (signed int)v14;\n      v10 = v21[(signed int)v14];\n    }\n    else\n    {\n      v14 = 0LL;\n      v13 = 0LL;\n    }\n    if ( (_BYTE)v10 )\n    {\n      v15 = v14 + 1;\n      if ( v21[v14 + 1] )\n      {\n        v16 = v13 + 2;\n        do\n        {\n          _IO_putc(v10, stdout);\n          _IO_putc(v21[v15], stdout);\n          _IO_putc(10, stdout);\n          v9 = v21;\n          v10 = v21[v16];\n          if ( !v21[v16] )\n            break;\n          v15 = v16 + 1;\n          v16 += 2LL;\n        }\n        while ( v21[v15] );\n      }\n    }\n    v17 = n;\n    v21 = v7;\n    v7 = v9;\n    n = v4;\n    v4 = v17;\n  }\n  free(v21);\n  free(v7);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x401210L", 
            "funcEndAddr": "0x401402L", 
            "funcName": "main"
        }, 
        {
            "decompiledFuncCode": "signed int sub_40143B()\n{\n  return 6316504;\n}\n", 
            "funcStartAddr": "0x40143bL", 
            "funcEndAddr": "0x40145aL", 
            "funcName": "sub_40143B"
        }, 
        {
            "decompiledFuncCode": "int sub_40145A()\n{\n  return 0;\n}\n", 
            "funcStartAddr": "0x40145aL", 
            "funcEndAddr": "0x401491L", 
            "funcName": "sub_40145A"
        }, 
        {
            "decompiledFuncCode": "signed int sub_401491()\n{\n  signed int result; // eax@4\n\n  if ( !byte_606208 )\n  {\n    while ( qword_606210 < (unsigned __int64)(((&unk_605E48 - (_UNKNOWN *)&qword_605E40) >> 3) - 1) )\n      (*(&qword_605E40 + ++qword_606210))();\n    result = sub_40143B();\n    byte_606208 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401491L", 
            "funcEndAddr": "0x4014e8L", 
            "funcName": "sub_401491"
        }, 
        {
            "decompiledFuncCode": "int sub_4014E8()\n{\n  return sub_40145A();\n}\n", 
            "funcStartAddr": "0x4014e8L", 
            "funcEndAddr": "0x4014edL", 
            "funcName": "sub_4014E8"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_401510()\n{\n  int *v0; // rax@2\n  int *v1; // rbx@2\n  __int64 result; // rax@4\n  char *v3; // rax@6\n  char *v4; // rbp@6\n  __int64 v5; // rax@7\n\n  if ( (unsigned int)sub_403260(stdout) )\n  {\n    v0 = __errno_location();\n    v1 = v0;\n    if ( !byte_606218 || *v0 != 32 )\n    {\n      v3 = dcgettext(0LL, \"write error\", 5);\n      v4 = v3;\n      if ( qword_606220 )\n      {\n        LODWORD(v5) = sub_402E00(qword_606220, \"write error\");\n        error(0, *v1, \"%s: %s\", v5, v4);\n      }\n      else\n      {\n        error(0, *v1, \"%s\", v3);\n      }\nLABEL_8:\n      _exit(status);\n    }\n  }\n  result = sub_403260(stderr);\n  if ( (_DWORD)result )\n    goto LABEL_8;\n  return result;\n}\n", 
            "funcStartAddr": "0x401510L", 
            "funcEndAddr": "0x4015aeL", 
            "funcName": "sub_401510"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_4015B0(const char *a1)\n{\n  signed __int64 v1; // rbx@2\n  char *result; // rax@2\n  signed __int64 v3; // rdx@3\n  bool v4; // cf@3\n  bool v5; // zf@3\n  char *v6; // rsi@4\n  const char *v7; // rdi@4\n  signed __int64 v8; // rcx@4\n  char v9; // dl@7\n  bool v10; // cf@7\n  bool v11; // zf@7\n  const char *v12; // rdi@8\n  signed __int64 v13; // rcx@8\n  _BYTE *v14; // rsi@8\n\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v1 = (signed __int64)a1;\n  result = strrchr(a1, 47);\n  if ( result )\n  {\n    v3 = result + 1 - a1;\n    v4 = (unsigned __int64)v3 < 6;\n    v5 = v3 == 6;\n    if ( v3 > 6 )\n    {\n      v6 = result - 6;\n      v7 = \"/.libs/\";\n      v8 = 7LL;\n      do\n      {\n        if ( !v8 )\n          break;\n        v4 = (unsigned __int8)*v6 < *v7;\n        v5 = *v6++ == *v7++;\n        --v8;\n      }\n      while ( v5 );\n      v9 = (!v4 && !v5) - v4;\n      v10 = 0;\n      v11 = v9 == 0;\n      if ( !v9 )\n      {\n        v12 = \"lt-\";\n        v13 = 3LL;\n        v14 = result + 1;\n        v1 = (signed __int64)(result + 1);\n        do\n        {\n          if ( !v13 )\n            break;\n          v10 = *v14 < (const unsigned __int8)*v12;\n          v11 = *v14++ == *v12++;\n          --v13;\n        }\n        while ( v11 );\n        if ( (!v10 && !v11) == v10 )\n        {\n          v1 = (signed __int64)(result + 4);\n          program_invocation_short_name = (__int64)(result + 4);\n        }\n      }\n    }\n  }\n  qword_606228 = v1;\n  program_invocation_name = v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x4015b0L", 
            "funcEndAddr": "0x401649L", 
            "funcName": "sub_4015B0"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_401650(char *msgid, int a2)\n{\n  const char *v2; // rbx@1\n  __int64 v4; // rax@3\n  bool v5; // zf@9\n  const char *v6; // rbx@23\n\n  v2 = dcgettext(0LL, msgid, 5);\n  if ( msgid != v2 )\n    return v2;\n  LODWORD(v4) = sub_4032D0(0LL);\n  if ( (*(_BYTE *)v4 & 0xDF) == 85 )\n  {\n    if ( (*(_BYTE *)(v4 + 1) & 0xDF) == 84\n      && (*(_BYTE *)(v4 + 2) & 0xDF) == 70\n      && *(_BYTE *)(v4 + 3) == 45\n      && *(_BYTE *)(v4 + 4) == 56\n      && !*(_BYTE *)(v4 + 5) )\n    {\n      v5 = *v2 == 96;\n      v2 = \"â€˜\";\n      if ( !v5 )\n        v2 = \"â€™\";\n      return v2;\n    }\n  }\n  else if ( (*(_BYTE *)v4 & 0xDF) == 71\n         && (*(_BYTE *)(v4 + 1) & 0xDF) == 66\n         && *(_BYTE *)(v4 + 2) == 49\n         && *(_BYTE *)(v4 + 3) == 56\n         && *(_BYTE *)(v4 + 4) == 48\n         && *(_BYTE *)(v4 + 5) == 51\n         && *(_BYTE *)(v4 + 6) == 48\n         && !*(_BYTE *)(v4 + 7) )\n  {\n    v5 = *v2 == 96;\n    v2 = \"¡\\ae\";\n    if ( !v5 )\n      v2 = \"¡¯\";\n    return v2;\n  }\n  v6 = \"\\\"\";\n  if ( a2 != 9 )\n    v6 = \"'\";\n  return v6;\n}\n", 
            "funcStartAddr": "0x401650L", 
            "funcEndAddr": "0x401742L", 
            "funcName": "sub_401650"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15@1\n  unsigned __int64 v10; // r14@1\n  int v11; // ebp@1\n  char v12; // zf@1\n  size_t v13; // rax@1\n  int v14; // edx@1\n  signed int v15; // er11@1\n  unsigned __int64 v16; // r10@1\n  unsigned __int64 v17; // rbx@2\n  signed int v18; // eax@3\n  unsigned __int64 v19; // r11@3\n  signed int v20; // er10@3\n  unsigned __int64 v21; // r13@3\n  int v22; // er8@3\n  char *v23; // r9@7\n  signed int v24; // ST58_4@11\n  unsigned __int8 v25; // ST50_1@11\n  size_t v26; // rax@11\n  signed int v27; // ST60_4@13\n  unsigned __int64 v28; // ST58_8@13\n  unsigned __int8 v29; // ST50_1@13\n  int v30; // eax@13\n  unsigned __int64 v31; // r12@15\n  bool v32; // al@19\n  const char *v33; // rax@50\n  char i; // al@52\n  signed int v35; // ST48_4@56\n  unsigned __int64 v36; // ST30_8@56\n  size_t v37; // rax@56\n  bool v38; // al@60\n  char v39; // cl@87\n  int v40; // eax@105\n  signed __int64 v41; // rcx@112\n  unsigned __int64 v42; // rax@115\n  signed int v43; // ST58_4@125\n  unsigned __int64 v44; // ST50_8@125\n  unsigned __int8 v45; // ST48_1@125\n  const unsigned __int16 **v46; // rax@125\n  unsigned __int64 v47; // rcx@125\n  int v48; // edx@125\n  unsigned __int64 result; // rax@132\n  signed __int64 v50; // rsi@161\n  char v51; // dl@177\n  const char *v52; // rax@178\n  signed int v53; // ST58_4@185\n  char v54; // ST50_1@185\n  char *v55; // ST48_8@185\n  size_t v56; // rax@185\n  unsigned __int64 v57; // rbx@186\n  unsigned __int64 v58; // r14@190\n  __int64 v59; // rax@190\n  __int64 v60; // r15@190\n  char *v61; // rdx@195\n  unsigned __int64 v62; // rcx@206\n  int v63; // eax@206\n  char v64; // si@206\n  unsigned __int64 v65; // rsi@255\n  char *v66; // rdi@255\n  unsigned __int64 v67; // rax@255\n  int v68; // [sp+Ch] [bp-ACh]@1\n  char v69; // [sp+Ch] [bp-ACh]@2\n  unsigned __int64 v70; // [sp+10h] [bp-A8h]@1\n  char v71; // [sp+10h] [bp-A8h]@7\n  char *s; // [sp+18h] [bp-A0h]@1\n  unsigned __int64 n; // [sp+20h] [bp-98h]@2\n  char *v74; // [sp+28h] [bp-90h]@13\n  unsigned __int64 v75; // [sp+28h] [bp-90h]@186\n  signed int v76; // [sp+30h] [bp-88h]@186\n  __int64 v77; // [sp+38h] [bp-80h]@186\n  unsigned __int64 v78; // [sp+40h] [bp-78h]@186\n  const char *s2; // [sp+48h] [bp-70h]@2\n  size_t v80; // [sp+50h] [bp-68h]@1\n  char v81; // [sp+58h] [bp-60h]@1\n  bool v82; // [sp+5Dh] [bp-5Bh]@2\n  unsigned __int8 v83; // [sp+5Eh] [bp-5Ah]@186\n  unsigned __int64 v84; // [sp+60h] [bp-58h]@186\n  char *v85; // [sp+68h] [bp-50h]@186\n  wint_t wc; // [sp+74h] [bp-44h]@187\n  mbstate_t ps; // [sp+78h] [bp-40h]@184\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v70 = a4;\n  v68 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v68;\n  v80 = v13;\n  v16 = v70;\n  switch ( v68 )\n  {\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v69 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v69 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v69 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v69 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v68);\n        v33 = sub_401650(\"'\", v68);\n        v16 = v70;\n        v15 = v68;\n        a9 = (char *)v33;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v35 = v15;\n      v36 = v16;\n      v82 = v11 != 0;\n      v37 = strlen(a9);\n      v69 = 1;\n      v16 = v36;\n      n = v37;\n      v15 = v35;\n      s2 = a9;\n      break;\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v51 = *s2;\n          if ( *s2 )\n          {\n            v52 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v51;\n              v51 = v52[++v17];\n            }\n            while ( v51 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v71 = v69 & (v20 != 2);\n    if ( !((unsigned __int8)v69 & (v20 != 2)) )\n    {\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 123:\n        case 125:\nLABEL_60:\n          v38 = v19 != 1;\n          if ( v19 == -1LL )\n            v38 = s[1] != 0;\n          LOBYTE(v14) = v20 == 2;\n          if ( v38 )\n            goto LABEL_65;\n          goto LABEL_63;\n        case 63:\nLABEL_69:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            v11 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_66;\n          }\n          if ( v20 != 5 )\n          {\n            LOBYTE(v31) = 63;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_65;\n          }\n          if ( !(v81 & 4) )\n          {\n            v14 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          v14 = 0;\n          LOBYTE(v31) = 63;\n          if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n            goto LABEL_65;\n          v31 = (unsigned __int8)s[v21 + 2];\n          if ( (unsigned __int8)v31 > 0x3Eu || (v50 = 8070630310989004800LL, !_bittest64(&v50, v31)) )\n          {\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 63;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 34;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 34;\n          if ( v10 > v17 + 3 )\n            *(_BYTE *)(v9 + v17 + 3) = 63;\n          v17 += 4LL;\n          v14 = 0;\n          v11 = 0;\n          v21 += 2LL;\n          goto LABEL_118;\n        case 39:\nLABEL_73:\n          v14 = 0;\n          LOBYTE(v31) = 39;\n          if ( v20 != 2 )\n            goto LABEL_65;\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 92;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          ++v21;\n          v22 = 0;\n          LOBYTE(v31) = 39;\n          goto LABEL_82;\n        default:\n          goto LABEL_124;\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_127;\n        case 10:\n          LOBYTE(v31) = 10;\n          v39 = 110;\n          goto LABEL_130;\n        case 9:\n          LOBYTE(v31) = 9;\n          v39 = 116;\n          goto LABEL_130;\n        case 7:\n          LOBYTE(v31) = 7;\n          v39 = 97;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 0:\n          if ( !v69 )\n          {\n            if ( v81 & 1 )\n            {\n              ++v21;\n              continue;\n            }\n            if ( !v82 )\n            {\n              ++v21;\n              v11 = v22;\n              LOBYTE(v31) = 0;\n              goto LABEL_144;\n            }\n            v11 = 0;\n            if ( a7 )\n            {\n              v71 = 0;\n              LOBYTE(v31) = 0;\n              goto LABEL_18;\n            }\n            LOBYTE(v31) = 0;\n            goto LABEL_122;\n          }\nLABEL_103:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v71 = 0;\nLABEL_105:\n          LOBYTE(v14) = v20 == 2;\n          v40 = v22 ^ 1;\n          LOBYTE(v40) = (v20 == 2) & (v22 ^ 1);\n          if ( (_BYTE)v40 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v41 = v17 + 3;\n            if ( v10 <= v17 + 3 )\n            {\n              v17 += 4LL;\n              ++v21;\n              v22 = v40;\n              LOBYTE(v31) = 48;\n              goto LABEL_82;\n            }\n            v22 = v40;\nLABEL_114:\n            *(_BYTE *)(v9 + v41) = 92;\n            goto LABEL_115;\n          }\n          v41 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\nLABEL_115:\n          v17 = v41 + 1;\n          v42 = v21 + 1;\n          if ( v20 == 2 )\n          {\n            ++v21;\n            LOBYTE(v31) = 48;\nLABEL_82:\n            if ( v71 )\n              goto LABEL_67;\n            goto LABEL_33;\n          }\n          LOBYTE(v31) = 48;\n          if ( v42 < v19 && (unsigned __int8)(s[v42] - 48) <= 9u )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 48;\n            if ( v10 > v41 + 2 )\n              *(_BYTE *)(v9 + v41 + 2) = 48;\n            v17 = v41 + 3;\n            LOBYTE(v31) = 48;\n          }\nLABEL_118:\n          if ( !v69 || (_BYTE)v14 )\n            goto LABEL_66;\n          if ( a7 )\n            goto LABEL_18;\n          break;\n        case 8:\n          LOBYTE(v31) = 8;\n          v39 = 98;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 92:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            ++v21;\n            v11 = v22;\n            LOBYTE(v31) = 92;\n            goto LABEL_144;\n          }\nLABEL_87:\n          v11 = v82 & (unsigned __int8)v69;\n          LOBYTE(v31) = 92;\n          v39 = 92;\n          v14 = v82 & (unsigned __int8)v69;\n          LOBYTE(v14) = (n != 0) & v14;\n          if ( (_BYTE)v14 )\n          {\n            ++v21;\n            v11 = v22;\n            goto LABEL_144;\n          }\nLABEL_88:\n          if ( !v69 )\n            goto LABEL_65;\n          v32 = v14;\n          LOBYTE(v31) = v39;\n          goto LABEL_20;\n        case 35:\n        case 126:\n          LOBYTE(v14) = v20 == 2;\nLABEL_63:\n          if ( !v21 )\n            goto LABEL_64;\n          goto LABEL_65;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          LOBYTE(v14) = v20 == 2;\nLABEL_64:\n          if ( !((unsigned __int8)v14 & v82) )\n            goto LABEL_65;\n          return sub_401750(v9, v10, s);\n        case 13:\n          LOBYTE(v31) = 13;\n          v39 = 114;\nLABEL_130:\n          LOBYTE(v14) = v20 == 2;\n          v71 = v20 == 2 && v82;\n          if ( v71 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_88;\n        case 12:\n          LOBYTE(v31) = 12;\n          v39 = 102;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 11:\n          LOBYTE(v31) = 11;\n          v39 = 118;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n      }\nLABEL_121:\n      v32 = v20 == 2;\n      if ( v71 )\n        goto LABEL_20;\nLABEL_122:\n      ++v21;\n      v11 = v22 & (v11 ^ 1);\n      goto LABEL_144;\n    }\n    if ( !n )\n      goto LABEL_271;\n    if ( v19 == -1LL && n > 1 )\n    {\n      v24 = v20;\n      v25 = v22;\n      v26 = strlen(s);\n      v20 = v24;\n      v22 = v25;\n      v23 = &s[v21];\n      v19 = v26;\n    }\n    if ( v21 + n > v19\n      || (v27 = v20,\n          v28 = v19,\n          v29 = v22,\n          v74 = v23,\n          v30 = memcmp(v23, s2, n),\n          v23 = v74,\n          v22 = v29,\n          v19 = v28,\n          v20 = v27,\n          v30) )\n    {\nLABEL_271:\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          v71 = 0;\n          goto LABEL_17;\n        case 123:\n        case 125:\n          v71 = 0;\n          goto LABEL_60;\n        case 63:\n          v71 = 0;\n          goto LABEL_69;\n        case 39:\n          v71 = 0;\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          v71 = 0;\nLABEL_85:\n          v14 = 0;\n          goto LABEL_65;\n        case 92:\n          v71 = 0;\n          goto LABEL_87;\n        case 10:\nLABEL_90:\n          LOBYTE(v31) = 110;\n          v32 = 0;\n          goto LABEL_91;\n        case 8:\nLABEL_93:\n          LOBYTE(v31) = 98;\n          v32 = 0;\n          goto LABEL_91;\n        case 7:\nLABEL_94:\n          LOBYTE(v31) = 97;\n          v32 = 0;\n          goto LABEL_91;\n        case 13:\n          v71 = 0;\nLABEL_96:\n          LOBYTE(v31) = 13;\n          v39 = 114;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 35:\n        case 126:\n          v71 = 0;\nLABEL_98:\n          if ( v21 )\n            goto LABEL_17;\n          v14 = 0;\n          goto LABEL_65;\n        case 12:\nLABEL_100:\n          LOBYTE(v31) = 102;\n          v32 = 0;\n          goto LABEL_91;\n        case 11:\nLABEL_101:\n          LOBYTE(v31) = 118;\n          v32 = 0;\n          goto LABEL_91;\n        case 9:\nLABEL_102:\n          LOBYTE(v31) = 116;\n          v32 = 0;\nLABEL_91:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_21;\n        case 0:\n          goto LABEL_103;\n        default:\n          v71 = 0;\n          break;\n      }\n    }\n    else\n    {\n      if ( v82 )\n        return sub_401750(v9, v10, s);\n      LOBYTE(v31) = *v74;\n      switch ( *v74 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_17;\n        case 123:\n        case 125:\n          goto LABEL_60;\n        case 63:\n          goto LABEL_69;\n        case 39:\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          goto LABEL_85;\n        case 92:\n          goto LABEL_87;\n        case 10:\n          goto LABEL_90;\n        case 8:\n          goto LABEL_93;\n        case 7:\n          goto LABEL_94;\n        case 13:\n          goto LABEL_96;\n        case 35:\n        case 126:\n          goto LABEL_98;\n        case 12:\n          goto LABEL_100;\n        case 11:\n          goto LABEL_101;\n        case 9:\n          goto LABEL_102;\n        case 0:\n          goto LABEL_105;\n        default:\n          break;\n      }\n    }\nLABEL_124:\n    if ( v80 != 1 )\n      break;\n    v43 = v20;\n    v44 = v19;\n    v45 = v22;\n    v46 = __ctype_b_loc();\n    v22 = v45;\n    v19 = v44;\n    v20 = v43;\n    v47 = 1LL;\n    v48 = (*v46)[(unsigned __int8)v31];\n    LOWORD(v48) = (unsigned __int16)v48 >> 14;\n    v14 = v48 ^ 1;\n    LOBYTE(v14) = v69 & v14;\nLABEL_126:\n    if ( (_BYTE)v14 )\n    {\n      v14 = (unsigned __int8)v69;\nLABEL_206:\n      v62 = v21 + v47;\n      v63 = 0;\n      v64 = v71;\n      while ( 1 )\n      {\n        if ( (_BYTE)v14 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( (v20 == 2) & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            v22 ^= 1u;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v31 >> 6) + 48;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v31 >> 3) & 7) + 48;\n          ++v21;\n          v17 += 3LL;\n          LOBYTE(v31) = (v31 & 7) + 48;\n          if ( v62 <= v21 )\n            goto LABEL_33;\n          v63 = v14;\n        }\n        else\n        {\n          v11 = v22 & (v63 ^ 1);\n          if ( v64 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 92;\n            ++v17;\n          }\n          if ( ++v21 >= v62 )\n            goto LABEL_144;\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v64 = 0;\n            v22 = 0;\n          }\n          else\n          {\n            v64 = 0;\n          }\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v31;\n        LOBYTE(v31) = s[v21];\n        ++v17;\n      }\n    }\nLABEL_127:\n    LOBYTE(v14) = v20 == 2;\nLABEL_65:\n    v11 = (v14 | (unsigned __int8)v69 ^ 1) ^ 1;\n    LOBYTE(v11) = v82 | (v14 | v69 ^ 1) ^ 1;\n    if ( v82 | (unsigned __int8)((v14 | v69 ^ 1) ^ 1) )\n    {\nLABEL_17:\n      v11 = 0;\n      if ( a7 )\n      {\nLABEL_18:\n        if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v31 >> 5)) >> v31) & 1 )\n        {\n          v32 = v20 == 2;\nLABEL_20:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\nLABEL_21:\n          ++v21;\nLABEL_22:\n          v14 = v22 ^ 1;\n          if ( v32 & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            LOBYTE(v14) = v32 & (v22 ^ 1);\n            v22 = v14;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          ++v17;\n          goto LABEL_33;\n        }\n      }\n      goto LABEL_121;\n    }\nLABEL_66:\n    ++v21;\n    if ( v71 )\n    {\nLABEL_67:\n      v32 = v20 == 2;\n      goto LABEL_22;\n    }\n    v11 = v22 & (v11 ^ 1);\nLABEL_144:\n    if ( (_BYTE)v11 )\n    {\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 39;\n      if ( v10 > v17 + 1 )\n        *(_BYTE *)(v9 + v17 + 1) = 39;\n      v17 += 2LL;\n      v22 = 0;\n    }\nLABEL_33:\n    if ( v17 < v10 )\n      *(_BYTE *)(v9 + v17) = v31;\n    ++v17;\n  }\n  ps = 0LL;\n  if ( v19 == -1LL )\n  {\n    v53 = v20;\n    v54 = v22;\n    v55 = v23;\n    v56 = strlen(s);\n    v20 = v53;\n    LOBYTE(v22) = v54;\n    v23 = v55;\n    v19 = v56;\n  }\n  v84 = v17;\n  v83 = v22;\n  v57 = 0LL;\n  v85 = v23;\n  v77 = v9;\n  v78 = v10;\n  v75 = v19;\n  v76 = v20;\n  while ( 1 )\n  {\n    v58 = v21 + v57;\n    LODWORD(v59) = sub_403230(&wc, &s[v21] + v57, v75 - (v21 + v57), &ps);\n    v60 = v59;\n    if ( !v59 )\n    {\n      v11 ^= 1u;\n      v47 = v57;\n      v9 = v77;\n      v22 = v83;\n      v17 = v84;\n      v10 = v78;\n      v14 = (unsigned __int8)(v11 & v69);\n      v19 = v75;\n      v20 = v76;\n      goto LABEL_252;\n    }\n    if ( v59 == -1 )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      v14 = (unsigned __int8)v69;\n      goto LABEL_252;\n    }\n    if ( v59 == -2 )\n    {\n      v19 = v75;\n      v65 = v21 + v57;\n      v66 = &s[v21] + v57;\n      v67 = v57;\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v20 = v76;\n      if ( v65 < v75 && *v66 )\n      {\n        do\n          ++v67;\n        while ( v75 > v21 + v67 && v85[v67] );\n        v47 = v67;\n      }\n      v14 = (unsigned __int8)v69;\nLABEL_252:\n      if ( v47 > 1 )\n        goto LABEL_206;\n      goto LABEL_126;\n    }\n    if ( v82 && v76 == 2 && v59 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v57 += v60;\n    if ( mbsinit(&ps) )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      LOBYTE(v14) = v69 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v61 = &s[v58 + 1];\n  while ( (unsigned __int8)(*v61 - 91) > 0x21u || !((1LL << (*v61 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v59] + v58 == ++v61 )\n      goto LABEL_187;\n  }\n  v9 = v77;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n\nunsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15@1\n  unsigned __int64 v10; // r14@1\n  int v11; // ebp@1\n  char v12; // zf@1\n  size_t v13; // rax@1\n  int v14; // edx@1\n  signed int v15; // er11@1\n  unsigned __int64 v16; // r10@1\n  unsigned __int64 v17; // rbx@2\n  signed int v18; // eax@3\n  unsigned __int64 v19; // r11@3\n  signed int v20; // er10@3\n  unsigned __int64 v21; // r13@3\n  int v22; // er8@3\n  char *v23; // r9@7\n  signed int v24; // ST58_4@11\n  unsigned __int8 v25; // ST50_1@11\n  size_t v26; // rax@11\n  signed int v27; // ST60_4@13\n  unsigned __int64 v28; // ST58_8@13\n  unsigned __int8 v29; // ST50_1@13\n  int v30; // eax@13\n  unsigned __int64 v31; // r12@15\n  bool v32; // al@19\n  const char *v33; // rax@50\n  char i; // al@52\n  signed int v35; // ST48_4@56\n  unsigned __int64 v36; // ST30_8@56\n  size_t v37; // rax@56\n  bool v38; // al@60\n  char v39; // cl@87\n  int v40; // eax@105\n  signed __int64 v41; // rcx@112\n  unsigned __int64 v42; // rax@115\n  signed int v43; // ST58_4@125\n  unsigned __int64 v44; // ST50_8@125\n  unsigned __int8 v45; // ST48_1@125\n  const unsigned __int16 **v46; // rax@125\n  unsigned __int64 v47; // rcx@125\n  int v48; // edx@125\n  unsigned __int64 result; // rax@132\n  signed __int64 v50; // rsi@161\n  char v51; // dl@177\n  const char *v52; // rax@178\n  signed int v53; // ST58_4@185\n  char v54; // ST50_1@185\n  char *v55; // ST48_8@185\n  size_t v56; // rax@185\n  unsigned __int64 v57; // rbx@186\n  unsigned __int64 v58; // r14@190\n  __int64 v59; // rax@190\n  __int64 v60; // r15@190\n  char *v61; // rdx@195\n  unsigned __int64 v62; // rcx@206\n  int v63; // eax@206\n  char v64; // si@206\n  unsigned __int64 v65; // rsi@255\n  char *v66; // rdi@255\n  unsigned __int64 v67; // rax@255\n  int v68; // [sp+Ch] [bp-ACh]@1\n  char v69; // [sp+Ch] [bp-ACh]@2\n  unsigned __int64 v70; // [sp+10h] [bp-A8h]@1\n  char v71; // [sp+10h] [bp-A8h]@7\n  char *s; // [sp+18h] [bp-A0h]@1\n  unsigned __int64 n; // [sp+20h] [bp-98h]@2\n  char *v74; // [sp+28h] [bp-90h]@13\n  unsigned __int64 v75; // [sp+28h] [bp-90h]@186\n  signed int v76; // [sp+30h] [bp-88h]@186\n  __int64 v77; // [sp+38h] [bp-80h]@186\n  unsigned __int64 v78; // [sp+40h] [bp-78h]@186\n  const char *s2; // [sp+48h] [bp-70h]@2\n  size_t v80; // [sp+50h] [bp-68h]@1\n  char v81; // [sp+58h] [bp-60h]@1\n  bool v82; // [sp+5Dh] [bp-5Bh]@2\n  unsigned __int8 v83; // [sp+5Eh] [bp-5Ah]@186\n  unsigned __int64 v84; // [sp+60h] [bp-58h]@186\n  char *v85; // [sp+68h] [bp-50h]@186\n  wint_t wc; // [sp+74h] [bp-44h]@187\n  mbstate_t ps; // [sp+78h] [bp-40h]@184\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v70 = a4;\n  v68 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v68;\n  v80 = v13;\n  v16 = v70;\n  switch ( v68 )\n  {\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v69 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v69 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v69 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v69 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v68);\n        v33 = sub_401650(\"'\", v68);\n        v16 = v70;\n        v15 = v68;\n        a9 = (char *)v33;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v35 = v15;\n      v36 = v16;\n      v82 = v11 != 0;\n      v37 = strlen(a9);\n      v69 = 1;\n      v16 = v36;\n      n = v37;\n      v15 = v35;\n      s2 = a9;\n      break;\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v51 = *s2;\n          if ( *s2 )\n          {\n            v52 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v51;\n              v51 = v52[++v17];\n            }\n            while ( v51 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v71 = v69 & (v20 != 2);\n    if ( !((unsigned __int8)v69 & (v20 != 2)) )\n    {\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 123:\n        case 125:\nLABEL_60:\n          v38 = v19 != 1;\n          if ( v19 == -1LL )\n            v38 = s[1] != 0;\n          LOBYTE(v14) = v20 == 2;\n          if ( v38 )\n            goto LABEL_65;\n          goto LABEL_63;\n        case 63:\nLABEL_69:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            v11 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_66;\n          }\n          if ( v20 != 5 )\n          {\n            LOBYTE(v31) = 63;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_65;\n          }\n          if ( !(v81 & 4) )\n          {\n            v14 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          v14 = 0;\n          LOBYTE(v31) = 63;\n          if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n            goto LABEL_65;\n          v31 = (unsigned __int8)s[v21 + 2];\n          if ( (unsigned __int8)v31 > 0x3Eu || (v50 = 8070630310989004800LL, !_bittest64(&v50, v31)) )\n          {\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 63;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 34;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 34;\n          if ( v10 > v17 + 3 )\n            *(_BYTE *)(v9 + v17 + 3) = 63;\n          v17 += 4LL;\n          v14 = 0;\n          v11 = 0;\n          v21 += 2LL;\n          goto LABEL_118;\n        case 39:\nLABEL_73:\n          v14 = 0;\n          LOBYTE(v31) = 39;\n          if ( v20 != 2 )\n            goto LABEL_65;\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 92;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          ++v21;\n          v22 = 0;\n          LOBYTE(v31) = 39;\n          goto LABEL_82;\n        default:\n          goto LABEL_124;\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_127;\n        case 10:\n          LOBYTE(v31) = 10;\n          v39 = 110;\n          goto LABEL_130;\n        case 9:\n          LOBYTE(v31) = 9;\n          v39 = 116;\n          goto LABEL_130;\n        case 7:\n          LOBYTE(v31) = 7;\n          v39 = 97;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 0:\n          if ( !v69 )\n          {\n            if ( v81 & 1 )\n            {\n              ++v21;\n              continue;\n            }\n            if ( !v82 )\n            {\n              ++v21;\n              v11 = v22;\n              LOBYTE(v31) = 0;\n              goto LABEL_144;\n            }\n            v11 = 0;\n            if ( a7 )\n            {\n              v71 = 0;\n              LOBYTE(v31) = 0;\n              goto LABEL_18;\n            }\n            LOBYTE(v31) = 0;\n            goto LABEL_122;\n          }\nLABEL_103:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v71 = 0;\nLABEL_105:\n          LOBYTE(v14) = v20 == 2;\n          v40 = v22 ^ 1;\n          LOBYTE(v40) = (v20 == 2) & (v22 ^ 1);\n          if ( (_BYTE)v40 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v41 = v17 + 3;\n            if ( v10 <= v17 + 3 )\n            {\n              v17 += 4LL;\n              ++v21;\n              v22 = v40;\n              LOBYTE(v31) = 48;\n              goto LABEL_82;\n            }\n            v22 = v40;\nLABEL_114:\n            *(_BYTE *)(v9 + v41) = 92;\n            goto LABEL_115;\n          }\n          v41 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\nLABEL_115:\n          v17 = v41 + 1;\n          v42 = v21 + 1;\n          if ( v20 == 2 )\n          {\n            ++v21;\n            LOBYTE(v31) = 48;\nLABEL_82:\n            if ( v71 )\n              goto LABEL_67;\n            goto LABEL_33;\n          }\n          LOBYTE(v31) = 48;\n          if ( v42 < v19 && (unsigned __int8)(s[v42] - 48) <= 9u )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 48;\n            if ( v10 > v41 + 2 )\n              *(_BYTE *)(v9 + v41 + 2) = 48;\n            v17 = v41 + 3;\n            LOBYTE(v31) = 48;\n          }\nLABEL_118:\n          if ( !v69 || (_BYTE)v14 )\n            goto LABEL_66;\n          if ( a7 )\n            goto LABEL_18;\n          break;\n        case 8:\n          LOBYTE(v31) = 8;\n          v39 = 98;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 92:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            ++v21;\n            v11 = v22;\n            LOBYTE(v31) = 92;\n            goto LABEL_144;\n          }\nLABEL_87:\n          v11 = v82 & (unsigned __int8)v69;\n          LOBYTE(v31) = 92;\n          v39 = 92;\n          v14 = v82 & (unsigned __int8)v69;\n          LOBYTE(v14) = (n != 0) & v14;\n          if ( (_BYTE)v14 )\n          {\n            ++v21;\n            v11 = v22;\n            goto LABEL_144;\n          }\nLABEL_88:\n          if ( !v69 )\n            goto LABEL_65;\n          v32 = v14;\n          LOBYTE(v31) = v39;\n          goto LABEL_20;\n        case 35:\n        case 126:\n          LOBYTE(v14) = v20 == 2;\nLABEL_63:\n          if ( !v21 )\n            goto LABEL_64;\n          goto LABEL_65;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          LOBYTE(v14) = v20 == 2;\nLABEL_64:\n          if ( !((unsigned __int8)v14 & v82) )\n            goto LABEL_65;\n          return sub_401750(v9, v10, s);\n        case 13:\n          LOBYTE(v31) = 13;\n          v39 = 114;\nLABEL_130:\n          LOBYTE(v14) = v20 == 2;\n          v71 = v20 == 2 && v82;\n          if ( v71 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_88;\n        case 12:\n          LOBYTE(v31) = 12;\n          v39 = 102;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 11:\n          LOBYTE(v31) = 11;\n          v39 = 118;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n      }\nLABEL_121:\n      v32 = v20 == 2;\n      if ( v71 )\n        goto LABEL_20;\nLABEL_122:\n      ++v21;\n      v11 = v22 & (v11 ^ 1);\n      goto LABEL_144;\n    }\n    if ( !n )\n      goto LABEL_271;\n    if ( v19 == -1LL && n > 1 )\n    {\n      v24 = v20;\n      v25 = v22;\n      v26 = strlen(s);\n      v20 = v24;\n      v22 = v25;\n      v23 = &s[v21];\n      v19 = v26;\n    }\n    if ( v21 + n > v19\n      || (v27 = v20,\n          v28 = v19,\n          v29 = v22,\n          v74 = v23,\n          v30 = memcmp(v23, s2, n),\n          v23 = v74,\n          v22 = v29,\n          v19 = v28,\n          v20 = v27,\n          v30) )\n    {\nLABEL_271:\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          v71 = 0;\n          goto LABEL_17;\n        case 123:\n        case 125:\n          v71 = 0;\n          goto LABEL_60;\n        case 63:\n          v71 = 0;\n          goto LABEL_69;\n        case 39:\n          v71 = 0;\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          v71 = 0;\nLABEL_85:\n          v14 = 0;\n          goto LABEL_65;\n        case 92:\n          v71 = 0;\n          goto LABEL_87;\n        case 10:\nLABEL_90:\n          LOBYTE(v31) = 110;\n          v32 = 0;\n          goto LABEL_91;\n        case 8:\nLABEL_93:\n          LOBYTE(v31) = 98;\n          v32 = 0;\n          goto LABEL_91;\n        case 7:\nLABEL_94:\n          LOBYTE(v31) = 97;\n          v32 = 0;\n          goto LABEL_91;\n        case 13:\n          v71 = 0;\nLABEL_96:\n          LOBYTE(v31) = 13;\n          v39 = 114;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 35:\n        case 126:\n          v71 = 0;\nLABEL_98:\n          if ( v21 )\n            goto LABEL_17;\n          v14 = 0;\n          goto LABEL_65;\n        case 12:\nLABEL_100:\n          LOBYTE(v31) = 102;\n          v32 = 0;\n          goto LABEL_91;\n        case 11:\nLABEL_101:\n          LOBYTE(v31) = 118;\n          v32 = 0;\n          goto LABEL_91;\n        case 9:\nLABEL_102:\n          LOBYTE(v31) = 116;\n          v32 = 0;\nLABEL_91:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_21;\n        case 0:\n          goto LABEL_103;\n        default:\n          v71 = 0;\n          break;\n      }\n    }\n    else\n    {\n      if ( v82 )\n        return sub_401750(v9, v10, s);\n      LOBYTE(v31) = *v74;\n      switch ( *v74 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_17;\n        case 123:\n        case 125:\n          goto LABEL_60;\n        case 63:\n          goto LABEL_69;\n        case 39:\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          goto LABEL_85;\n        case 92:\n          goto LABEL_87;\n        case 10:\n          goto LABEL_90;\n        case 8:\n          goto LABEL_93;\n        case 7:\n          goto LABEL_94;\n        case 13:\n          goto LABEL_96;\n        case 35:\n        case 126:\n          goto LABEL_98;\n        case 12:\n          goto LABEL_100;\n        case 11:\n          goto LABEL_101;\n        case 9:\n          goto LABEL_102;\n        case 0:\n          goto LABEL_105;\n        default:\n          break;\n      }\n    }\nLABEL_124:\n    if ( v80 != 1 )\n      break;\n    v43 = v20;\n    v44 = v19;\n    v45 = v22;\n    v46 = __ctype_b_loc();\n    v22 = v45;\n    v19 = v44;\n    v20 = v43;\n    v47 = 1LL;\n    v48 = (*v46)[(unsigned __int8)v31];\n    LOWORD(v48) = (unsigned __int16)v48 >> 14;\n    v14 = v48 ^ 1;\n    LOBYTE(v14) = v69 & v14;\nLABEL_126:\n    if ( (_BYTE)v14 )\n    {\n      v14 = (unsigned __int8)v69;\nLABEL_206:\n      v62 = v21 + v47;\n      v63 = 0;\n      v64 = v71;\n      while ( 1 )\n      {\n        if ( (_BYTE)v14 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( (v20 == 2) & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            v22 ^= 1u;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v31 >> 6) + 48;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v31 >> 3) & 7) + 48;\n          ++v21;\n          v17 += 3LL;\n          LOBYTE(v31) = (v31 & 7) + 48;\n          if ( v62 <= v21 )\n            goto LABEL_33;\n          v63 = v14;\n        }\n        else\n        {\n          v11 = v22 & (v63 ^ 1);\n          if ( v64 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 92;\n            ++v17;\n          }\n          if ( ++v21 >= v62 )\n            goto LABEL_144;\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v64 = 0;\n            v22 = 0;\n          }\n          else\n          {\n            v64 = 0;\n          }\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v31;\n        LOBYTE(v31) = s[v21];\n        ++v17;\n      }\n    }\nLABEL_127:\n    LOBYTE(v14) = v20 == 2;\nLABEL_65:\n    v11 = (v14 | (unsigned __int8)v69 ^ 1) ^ 1;\n    LOBYTE(v11) = v82 | (v14 | v69 ^ 1) ^ 1;\n    if ( v82 | (unsigned __int8)((v14 | v69 ^ 1) ^ 1) )\n    {\nLABEL_17:\n      v11 = 0;\n      if ( a7 )\n      {\nLABEL_18:\n        if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v31 >> 5)) >> v31) & 1 )\n        {\n          v32 = v20 == 2;\nLABEL_20:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\nLABEL_21:\n          ++v21;\nLABEL_22:\n          v14 = v22 ^ 1;\n          if ( v32 & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            LOBYTE(v14) = v32 & (v22 ^ 1);\n            v22 = v14;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          ++v17;\n          goto LABEL_33;\n        }\n      }\n      goto LABEL_121;\n    }\nLABEL_66:\n    ++v21;\n    if ( v71 )\n    {\nLABEL_67:\n      v32 = v20 == 2;\n      goto LABEL_22;\n    }\n    v11 = v22 & (v11 ^ 1);\nLABEL_144:\n    if ( (_BYTE)v11 )\n    {\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 39;\n      if ( v10 > v17 + 1 )\n        *(_BYTE *)(v9 + v17 + 1) = 39;\n      v17 += 2LL;\n      v22 = 0;\n    }\nLABEL_33:\n    if ( v17 < v10 )\n      *(_BYTE *)(v9 + v17) = v31;\n    ++v17;\n  }\n  ps = 0LL;\n  if ( v19 == -1LL )\n  {\n    v53 = v20;\n    v54 = v22;\n    v55 = v23;\n    v56 = strlen(s);\n    v20 = v53;\n    LOBYTE(v22) = v54;\n    v23 = v55;\n    v19 = v56;\n  }\n  v84 = v17;\n  v83 = v22;\n  v57 = 0LL;\n  v85 = v23;\n  v77 = v9;\n  v78 = v10;\n  v75 = v19;\n  v76 = v20;\n  while ( 1 )\n  {\n    v58 = v21 + v57;\n    LODWORD(v59) = sub_403230(&wc, &s[v21] + v57, v75 - (v21 + v57), &ps);\n    v60 = v59;\n    if ( !v59 )\n    {\n      v11 ^= 1u;\n      v47 = v57;\n      v9 = v77;\n      v22 = v83;\n      v17 = v84;\n      v10 = v78;\n      v14 = (unsigned __int8)(v11 & v69);\n      v19 = v75;\n      v20 = v76;\n      goto LABEL_252;\n    }\n    if ( v59 == -1 )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      v14 = (unsigned __int8)v69;\n      goto LABEL_252;\n    }\n    if ( v59 == -2 )\n    {\n      v19 = v75;\n      v65 = v21 + v57;\n      v66 = &s[v21] + v57;\n      v67 = v57;\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v20 = v76;\n      if ( v65 < v75 && *v66 )\n      {\n        do\n          ++v67;\n        while ( v75 > v21 + v67 && v85[v67] );\n        v47 = v67;\n      }\n      v14 = (unsigned __int8)v69;\nLABEL_252:\n      if ( v47 > 1 )\n        goto LABEL_206;\n      goto LABEL_126;\n    }\n    if ( v82 && v76 == 2 && v59 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v57 += v60;\n    if ( mbsinit(&ps) )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      LOBYTE(v14) = v69 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v61 = &s[v58 + 1];\n  while ( (unsigned __int8)(*v61 - 91) > 0x21u || !((1LL << (*v61 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v59] + v58 == ++v61 )\n      goto LABEL_187;\n  }\n  v9 = v77;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n", 
            "funcStartAddr": "0x4011f0L", 
            "funcEndAddr": "0x4011f5L", 
            "funcName": "sub_401750"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15@1\n  unsigned __int64 v10; // r14@1\n  int v11; // ebp@1\n  char v12; // zf@1\n  size_t v13; // rax@1\n  int v14; // edx@1\n  signed int v15; // er11@1\n  unsigned __int64 v16; // r10@1\n  unsigned __int64 v17; // rbx@2\n  signed int v18; // eax@3\n  unsigned __int64 v19; // r11@3\n  signed int v20; // er10@3\n  unsigned __int64 v21; // r13@3\n  int v22; // er8@3\n  char *v23; // r9@7\n  signed int v24; // ST58_4@11\n  unsigned __int8 v25; // ST50_1@11\n  size_t v26; // rax@11\n  signed int v27; // ST60_4@13\n  unsigned __int64 v28; // ST58_8@13\n  unsigned __int8 v29; // ST50_1@13\n  int v30; // eax@13\n  unsigned __int64 v31; // r12@15\n  bool v32; // al@19\n  const char *v33; // rax@50\n  char i; // al@52\n  signed int v35; // ST48_4@56\n  unsigned __int64 v36; // ST30_8@56\n  size_t v37; // rax@56\n  bool v38; // al@60\n  char v39; // cl@87\n  int v40; // eax@105\n  signed __int64 v41; // rcx@112\n  unsigned __int64 v42; // rax@115\n  signed int v43; // ST58_4@125\n  unsigned __int64 v44; // ST50_8@125\n  unsigned __int8 v45; // ST48_1@125\n  const unsigned __int16 **v46; // rax@125\n  unsigned __int64 v47; // rcx@125\n  int v48; // edx@125\n  unsigned __int64 result; // rax@132\n  signed __int64 v50; // rsi@161\n  char v51; // dl@177\n  const char *v52; // rax@178\n  signed int v53; // ST58_4@185\n  char v54; // ST50_1@185\n  char *v55; // ST48_8@185\n  size_t v56; // rax@185\n  unsigned __int64 v57; // rbx@186\n  unsigned __int64 v58; // r14@190\n  __int64 v59; // rax@190\n  __int64 v60; // r15@190\n  char *v61; // rdx@195\n  unsigned __int64 v62; // rcx@206\n  int v63; // eax@206\n  char v64; // si@206\n  unsigned __int64 v65; // rsi@255\n  char *v66; // rdi@255\n  unsigned __int64 v67; // rax@255\n  int v68; // [sp+Ch] [bp-ACh]@1\n  char v69; // [sp+Ch] [bp-ACh]@2\n  unsigned __int64 v70; // [sp+10h] [bp-A8h]@1\n  char v71; // [sp+10h] [bp-A8h]@7\n  char *s; // [sp+18h] [bp-A0h]@1\n  unsigned __int64 n; // [sp+20h] [bp-98h]@2\n  char *v74; // [sp+28h] [bp-90h]@13\n  unsigned __int64 v75; // [sp+28h] [bp-90h]@186\n  signed int v76; // [sp+30h] [bp-88h]@186\n  __int64 v77; // [sp+38h] [bp-80h]@186\n  unsigned __int64 v78; // [sp+40h] [bp-78h]@186\n  const char *s2; // [sp+48h] [bp-70h]@2\n  size_t v80; // [sp+50h] [bp-68h]@1\n  char v81; // [sp+58h] [bp-60h]@1\n  bool v82; // [sp+5Dh] [bp-5Bh]@2\n  unsigned __int8 v83; // [sp+5Eh] [bp-5Ah]@186\n  unsigned __int64 v84; // [sp+60h] [bp-58h]@186\n  char *v85; // [sp+68h] [bp-50h]@186\n  wint_t wc; // [sp+74h] [bp-44h]@187\n  mbstate_t ps; // [sp+78h] [bp-40h]@184\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v70 = a4;\n  v68 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v68;\n  v80 = v13;\n  v16 = v70;\n  switch ( v68 )\n  {\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v69 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v69 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v69 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v69 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v68);\n        v33 = sub_401650(\"'\", v68);\n        v16 = v70;\n        v15 = v68;\n        a9 = (char *)v33;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v35 = v15;\n      v36 = v16;\n      v82 = v11 != 0;\n      v37 = strlen(a9);\n      v69 = 1;\n      v16 = v36;\n      n = v37;\n      v15 = v35;\n      s2 = a9;\n      break;\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v51 = *s2;\n          if ( *s2 )\n          {\n            v52 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v51;\n              v51 = v52[++v17];\n            }\n            while ( v51 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v71 = v69 & (v20 != 2);\n    if ( !((unsigned __int8)v69 & (v20 != 2)) )\n    {\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 123:\n        case 125:\nLABEL_60:\n          v38 = v19 != 1;\n          if ( v19 == -1LL )\n            v38 = s[1] != 0;\n          LOBYTE(v14) = v20 == 2;\n          if ( v38 )\n            goto LABEL_65;\n          goto LABEL_63;\n        case 63:\nLABEL_69:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            v11 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_66;\n          }\n          if ( v20 != 5 )\n          {\n            LOBYTE(v31) = 63;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_65;\n          }\n          if ( !(v81 & 4) )\n          {\n            v14 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          v14 = 0;\n          LOBYTE(v31) = 63;\n          if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n            goto LABEL_65;\n          v31 = (unsigned __int8)s[v21 + 2];\n          if ( (unsigned __int8)v31 > 0x3Eu || (v50 = 8070630310989004800LL, !_bittest64(&v50, v31)) )\n          {\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 63;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 34;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 34;\n          if ( v10 > v17 + 3 )\n            *(_BYTE *)(v9 + v17 + 3) = 63;\n          v17 += 4LL;\n          v14 = 0;\n          v11 = 0;\n          v21 += 2LL;\n          goto LABEL_118;\n        case 39:\nLABEL_73:\n          v14 = 0;\n          LOBYTE(v31) = 39;\n          if ( v20 != 2 )\n            goto LABEL_65;\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 92;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          ++v21;\n          v22 = 0;\n          LOBYTE(v31) = 39;\n          goto LABEL_82;\n        default:\n          goto LABEL_124;\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_127;\n        case 10:\n          LOBYTE(v31) = 10;\n          v39 = 110;\n          goto LABEL_130;\n        case 9:\n          LOBYTE(v31) = 9;\n          v39 = 116;\n          goto LABEL_130;\n        case 7:\n          LOBYTE(v31) = 7;\n          v39 = 97;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 0:\n          if ( !v69 )\n          {\n            if ( v81 & 1 )\n            {\n              ++v21;\n              continue;\n            }\n            if ( !v82 )\n            {\n              ++v21;\n              v11 = v22;\n              LOBYTE(v31) = 0;\n              goto LABEL_144;\n            }\n            v11 = 0;\n            if ( a7 )\n            {\n              v71 = 0;\n              LOBYTE(v31) = 0;\n              goto LABEL_18;\n            }\n            LOBYTE(v31) = 0;\n            goto LABEL_122;\n          }\nLABEL_103:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v71 = 0;\nLABEL_105:\n          LOBYTE(v14) = v20 == 2;\n          v40 = v22 ^ 1;\n          LOBYTE(v40) = (v20 == 2) & (v22 ^ 1);\n          if ( (_BYTE)v40 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v41 = v17 + 3;\n            if ( v10 <= v17 + 3 )\n            {\n              v17 += 4LL;\n              ++v21;\n              v22 = v40;\n              LOBYTE(v31) = 48;\n              goto LABEL_82;\n            }\n            v22 = v40;\nLABEL_114:\n            *(_BYTE *)(v9 + v41) = 92;\n            goto LABEL_115;\n          }\n          v41 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\nLABEL_115:\n          v17 = v41 + 1;\n          v42 = v21 + 1;\n          if ( v20 == 2 )\n          {\n            ++v21;\n            LOBYTE(v31) = 48;\nLABEL_82:\n            if ( v71 )\n              goto LABEL_67;\n            goto LABEL_33;\n          }\n          LOBYTE(v31) = 48;\n          if ( v42 < v19 && (unsigned __int8)(s[v42] - 48) <= 9u )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 48;\n            if ( v10 > v41 + 2 )\n              *(_BYTE *)(v9 + v41 + 2) = 48;\n            v17 = v41 + 3;\n            LOBYTE(v31) = 48;\n          }\nLABEL_118:\n          if ( !v69 || (_BYTE)v14 )\n            goto LABEL_66;\n          if ( a7 )\n            goto LABEL_18;\n          break;\n        case 8:\n          LOBYTE(v31) = 8;\n          v39 = 98;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 92:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            ++v21;\n            v11 = v22;\n            LOBYTE(v31) = 92;\n            goto LABEL_144;\n          }\nLABEL_87:\n          v11 = v82 & (unsigned __int8)v69;\n          LOBYTE(v31) = 92;\n          v39 = 92;\n          v14 = v82 & (unsigned __int8)v69;\n          LOBYTE(v14) = (n != 0) & v14;\n          if ( (_BYTE)v14 )\n          {\n            ++v21;\n            v11 = v22;\n            goto LABEL_144;\n          }\nLABEL_88:\n          if ( !v69 )\n            goto LABEL_65;\n          v32 = v14;\n          LOBYTE(v31) = v39;\n          goto LABEL_20;\n        case 35:\n        case 126:\n          LOBYTE(v14) = v20 == 2;\nLABEL_63:\n          if ( !v21 )\n            goto LABEL_64;\n          goto LABEL_65;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          LOBYTE(v14) = v20 == 2;\nLABEL_64:\n          if ( !((unsigned __int8)v14 & v82) )\n            goto LABEL_65;\n          return sub_401750(v9, v10, s);\n        case 13:\n          LOBYTE(v31) = 13;\n          v39 = 114;\nLABEL_130:\n          LOBYTE(v14) = v20 == 2;\n          v71 = v20 == 2 && v82;\n          if ( v71 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_88;\n        case 12:\n          LOBYTE(v31) = 12;\n          v39 = 102;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 11:\n          LOBYTE(v31) = 11;\n          v39 = 118;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n      }\nLABEL_121:\n      v32 = v20 == 2;\n      if ( v71 )\n        goto LABEL_20;\nLABEL_122:\n      ++v21;\n      v11 = v22 & (v11 ^ 1);\n      goto LABEL_144;\n    }\n    if ( !n )\n      goto LABEL_271;\n    if ( v19 == -1LL && n > 1 )\n    {\n      v24 = v20;\n      v25 = v22;\n      v26 = strlen(s);\n      v20 = v24;\n      v22 = v25;\n      v23 = &s[v21];\n      v19 = v26;\n    }\n    if ( v21 + n > v19\n      || (v27 = v20,\n          v28 = v19,\n          v29 = v22,\n          v74 = v23,\n          v30 = memcmp(v23, s2, n),\n          v23 = v74,\n          v22 = v29,\n          v19 = v28,\n          v20 = v27,\n          v30) )\n    {\nLABEL_271:\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          v71 = 0;\n          goto LABEL_17;\n        case 123:\n        case 125:\n          v71 = 0;\n          goto LABEL_60;\n        case 63:\n          v71 = 0;\n          goto LABEL_69;\n        case 39:\n          v71 = 0;\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          v71 = 0;\nLABEL_85:\n          v14 = 0;\n          goto LABEL_65;\n        case 92:\n          v71 = 0;\n          goto LABEL_87;\n        case 10:\nLABEL_90:\n          LOBYTE(v31) = 110;\n          v32 = 0;\n          goto LABEL_91;\n        case 8:\nLABEL_93:\n          LOBYTE(v31) = 98;\n          v32 = 0;\n          goto LABEL_91;\n        case 7:\nLABEL_94:\n          LOBYTE(v31) = 97;\n          v32 = 0;\n          goto LABEL_91;\n        case 13:\n          v71 = 0;\nLABEL_96:\n          LOBYTE(v31) = 13;\n          v39 = 114;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 35:\n        case 126:\n          v71 = 0;\nLABEL_98:\n          if ( v21 )\n            goto LABEL_17;\n          v14 = 0;\n          goto LABEL_65;\n        case 12:\nLABEL_100:\n          LOBYTE(v31) = 102;\n          v32 = 0;\n          goto LABEL_91;\n        case 11:\nLABEL_101:\n          LOBYTE(v31) = 118;\n          v32 = 0;\n          goto LABEL_91;\n        case 9:\nLABEL_102:\n          LOBYTE(v31) = 116;\n          v32 = 0;\nLABEL_91:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_21;\n        case 0:\n          goto LABEL_103;\n        default:\n          v71 = 0;\n          break;\n      }\n    }\n    else\n    {\n      if ( v82 )\n        return sub_401750(v9, v10, s);\n      LOBYTE(v31) = *v74;\n      switch ( *v74 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_17;\n        case 123:\n        case 125:\n          goto LABEL_60;\n        case 63:\n          goto LABEL_69;\n        case 39:\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          goto LABEL_85;\n        case 92:\n          goto LABEL_87;\n        case 10:\n          goto LABEL_90;\n        case 8:\n          goto LABEL_93;\n        case 7:\n          goto LABEL_94;\n        case 13:\n          goto LABEL_96;\n        case 35:\n        case 126:\n          goto LABEL_98;\n        case 12:\n          goto LABEL_100;\n        case 11:\n          goto LABEL_101;\n        case 9:\n          goto LABEL_102;\n        case 0:\n          goto LABEL_105;\n        default:\n          break;\n      }\n    }\nLABEL_124:\n    if ( v80 != 1 )\n      break;\n    v43 = v20;\n    v44 = v19;\n    v45 = v22;\n    v46 = __ctype_b_loc();\n    v22 = v45;\n    v19 = v44;\n    v20 = v43;\n    v47 = 1LL;\n    v48 = (*v46)[(unsigned __int8)v31];\n    LOWORD(v48) = (unsigned __int16)v48 >> 14;\n    v14 = v48 ^ 1;\n    LOBYTE(v14) = v69 & v14;\nLABEL_126:\n    if ( (_BYTE)v14 )\n    {\n      v14 = (unsigned __int8)v69;\nLABEL_206:\n      v62 = v21 + v47;\n      v63 = 0;\n      v64 = v71;\n      while ( 1 )\n      {\n        if ( (_BYTE)v14 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( (v20 == 2) & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            v22 ^= 1u;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v31 >> 6) + 48;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v31 >> 3) & 7) + 48;\n          ++v21;\n          v17 += 3LL;\n          LOBYTE(v31) = (v31 & 7) + 48;\n          if ( v62 <= v21 )\n            goto LABEL_33;\n          v63 = v14;\n        }\n        else\n        {\n          v11 = v22 & (v63 ^ 1);\n          if ( v64 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 92;\n            ++v17;\n          }\n          if ( ++v21 >= v62 )\n            goto LABEL_144;\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v64 = 0;\n            v22 = 0;\n          }\n          else\n          {\n            v64 = 0;\n          }\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v31;\n        LOBYTE(v31) = s[v21];\n        ++v17;\n      }\n    }\nLABEL_127:\n    LOBYTE(v14) = v20 == 2;\nLABEL_65:\n    v11 = (v14 | (unsigned __int8)v69 ^ 1) ^ 1;\n    LOBYTE(v11) = v82 | (v14 | v69 ^ 1) ^ 1;\n    if ( v82 | (unsigned __int8)((v14 | v69 ^ 1) ^ 1) )\n    {\nLABEL_17:\n      v11 = 0;\n      if ( a7 )\n      {\nLABEL_18:\n        if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v31 >> 5)) >> v31) & 1 )\n        {\n          v32 = v20 == 2;\nLABEL_20:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\nLABEL_21:\n          ++v21;\nLABEL_22:\n          v14 = v22 ^ 1;\n          if ( v32 & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            LOBYTE(v14) = v32 & (v22 ^ 1);\n            v22 = v14;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          ++v17;\n          goto LABEL_33;\n        }\n      }\n      goto LABEL_121;\n    }\nLABEL_66:\n    ++v21;\n    if ( v71 )\n    {\nLABEL_67:\n      v32 = v20 == 2;\n      goto LABEL_22;\n    }\n    v11 = v22 & (v11 ^ 1);\nLABEL_144:\n    if ( (_BYTE)v11 )\n    {\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 39;\n      if ( v10 > v17 + 1 )\n        *(_BYTE *)(v9 + v17 + 1) = 39;\n      v17 += 2LL;\n      v22 = 0;\n    }\nLABEL_33:\n    if ( v17 < v10 )\n      *(_BYTE *)(v9 + v17) = v31;\n    ++v17;\n  }\n  ps = 0LL;\n  if ( v19 == -1LL )\n  {\n    v53 = v20;\n    v54 = v22;\n    v55 = v23;\n    v56 = strlen(s);\n    v20 = v53;\n    LOBYTE(v22) = v54;\n    v23 = v55;\n    v19 = v56;\n  }\n  v84 = v17;\n  v83 = v22;\n  v57 = 0LL;\n  v85 = v23;\n  v77 = v9;\n  v78 = v10;\n  v75 = v19;\n  v76 = v20;\n  while ( 1 )\n  {\n    v58 = v21 + v57;\n    LODWORD(v59) = sub_403230(&wc, &s[v21] + v57, v75 - (v21 + v57), &ps);\n    v60 = v59;\n    if ( !v59 )\n    {\n      v11 ^= 1u;\n      v47 = v57;\n      v9 = v77;\n      v22 = v83;\n      v17 = v84;\n      v10 = v78;\n      v14 = (unsigned __int8)(v11 & v69);\n      v19 = v75;\n      v20 = v76;\n      goto LABEL_252;\n    }\n    if ( v59 == -1 )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      v14 = (unsigned __int8)v69;\n      goto LABEL_252;\n    }\n    if ( v59 == -2 )\n    {\n      v19 = v75;\n      v65 = v21 + v57;\n      v66 = &s[v21] + v57;\n      v67 = v57;\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v20 = v76;\n      if ( v65 < v75 && *v66 )\n      {\n        do\n          ++v67;\n        while ( v75 > v21 + v67 && v85[v67] );\n        v47 = v67;\n      }\n      v14 = (unsigned __int8)v69;\nLABEL_252:\n      if ( v47 > 1 )\n        goto LABEL_206;\n      goto LABEL_126;\n    }\n    if ( v82 && v76 == 2 && v59 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v57 += v60;\n    if ( mbsinit(&ps) )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      LOBYTE(v14) = v69 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v61 = &s[v58 + 1];\n  while ( (unsigned __int8)(*v61 - 91) > 0x21u || !((1LL << (*v61 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v59] + v58 == ++v61 )\n      goto LABEL_187;\n  }\n  v9 = v77;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n\nunsigned __int64 __fastcall sub_401750(_BYTE *a1, unsigned __int64 a2, char *a3, unsigned __int64 a4, int a5, char a6, __int64 a7, const char *a8, char *a9)\n{\n  __int64 v9; // r15@1\n  unsigned __int64 v10; // r14@1\n  int v11; // ebp@1\n  char v12; // zf@1\n  size_t v13; // rax@1\n  int v14; // edx@1\n  signed int v15; // er11@1\n  unsigned __int64 v16; // r10@1\n  unsigned __int64 v17; // rbx@2\n  signed int v18; // eax@3\n  unsigned __int64 v19; // r11@3\n  signed int v20; // er10@3\n  unsigned __int64 v21; // r13@3\n  int v22; // er8@3\n  char *v23; // r9@7\n  signed int v24; // ST58_4@11\n  unsigned __int8 v25; // ST50_1@11\n  size_t v26; // rax@11\n  signed int v27; // ST60_4@13\n  unsigned __int64 v28; // ST58_8@13\n  unsigned __int8 v29; // ST50_1@13\n  int v30; // eax@13\n  unsigned __int64 v31; // r12@15\n  bool v32; // al@19\n  const char *v33; // rax@50\n  char i; // al@52\n  signed int v35; // ST48_4@56\n  unsigned __int64 v36; // ST30_8@56\n  size_t v37; // rax@56\n  bool v38; // al@60\n  char v39; // cl@87\n  int v40; // eax@105\n  signed __int64 v41; // rcx@112\n  unsigned __int64 v42; // rax@115\n  signed int v43; // ST58_4@125\n  unsigned __int64 v44; // ST50_8@125\n  unsigned __int8 v45; // ST48_1@125\n  const unsigned __int16 **v46; // rax@125\n  unsigned __int64 v47; // rcx@125\n  int v48; // edx@125\n  unsigned __int64 result; // rax@132\n  signed __int64 v50; // rsi@161\n  char v51; // dl@177\n  const char *v52; // rax@178\n  signed int v53; // ST58_4@185\n  char v54; // ST50_1@185\n  char *v55; // ST48_8@185\n  size_t v56; // rax@185\n  unsigned __int64 v57; // rbx@186\n  unsigned __int64 v58; // r14@190\n  __int64 v59; // rax@190\n  __int64 v60; // r15@190\n  char *v61; // rdx@195\n  unsigned __int64 v62; // rcx@206\n  int v63; // eax@206\n  char v64; // si@206\n  unsigned __int64 v65; // rsi@255\n  char *v66; // rdi@255\n  unsigned __int64 v67; // rax@255\n  int v68; // [sp+Ch] [bp-ACh]@1\n  char v69; // [sp+Ch] [bp-ACh]@2\n  unsigned __int64 v70; // [sp+10h] [bp-A8h]@1\n  char v71; // [sp+10h] [bp-A8h]@7\n  char *s; // [sp+18h] [bp-A0h]@1\n  unsigned __int64 n; // [sp+20h] [bp-98h]@2\n  char *v74; // [sp+28h] [bp-90h]@13\n  unsigned __int64 v75; // [sp+28h] [bp-90h]@186\n  signed int v76; // [sp+30h] [bp-88h]@186\n  __int64 v77; // [sp+38h] [bp-80h]@186\n  unsigned __int64 v78; // [sp+40h] [bp-78h]@186\n  const char *s2; // [sp+48h] [bp-70h]@2\n  size_t v80; // [sp+50h] [bp-68h]@1\n  char v81; // [sp+58h] [bp-60h]@1\n  bool v82; // [sp+5Dh] [bp-5Bh]@2\n  unsigned __int8 v83; // [sp+5Eh] [bp-5Ah]@186\n  unsigned __int64 v84; // [sp+60h] [bp-58h]@186\n  char *v85; // [sp+68h] [bp-50h]@186\n  wint_t wc; // [sp+74h] [bp-44h]@187\n  mbstate_t ps; // [sp+78h] [bp-40h]@184\n\n  v9 = (__int64)a1;\n  v10 = a2;\n  v11 = a6 & 2;\n  s = a3;\n  v70 = a4;\n  v68 = a5;\n  v81 = a6;\n  v13 = __ctype_get_mb_cur_max();\n  v15 = v68;\n  v80 = v13;\n  v16 = v70;\n  switch ( v68 )\n  {\n    case 1:\n      goto LABEL_2;\n    case 2:\n      if ( !v11 )\n      {\n        v69 = 0;\n        goto LABEL_38;\n      }\n      v82 = 1;\n      v17 = 0LL;\n      v69 = 0;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    case 4:\n      if ( v11 )\n      {\nLABEL_2:\n        v82 = 1;\n        v17 = 0LL;\n        v15 = 2;\n        v69 = 0;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      else\n      {\n        v69 = 1;\nLABEL_38:\n        if ( a2 )\n          *a1 = 39;\n        v82 = 0;\n        v17 = 1LL;\n        v15 = 2;\n        n = 1LL;\n        s2 = \"'\";\n      }\n      break;\n    case 5:\n      if ( v11 )\n      {\n        v82 = 1;\n        v17 = 0LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      else\n      {\n        if ( a2 )\n          *a1 = 34;\n        v82 = 0;\n        v17 = 1LL;\n        v69 = 1;\n        n = 1LL;\n        s2 = \"\\\"\";\n      }\n      break;\n    case 6:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 5;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"\\\"\";\n      break;\n    case 7:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 1;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 8:\n    case 9:\n    case 10:\n      if ( !v12 )\n      {\n        a8 = sub_401650(\"`\", v68);\n        v33 = sub_401650(\"'\", v68);\n        v16 = v70;\n        v15 = v68;\n        a9 = (char *)v33;\n      }\n      v17 = 0LL;\n      if ( !v11 )\n      {\n        for ( i = *a8; i; i = a8[v17] )\n        {\n          if ( a2 > v17 )\n            a1[v17] = i;\n          ++v17;\n        }\n      }\n      v35 = v15;\n      v36 = v16;\n      v82 = v11 != 0;\n      v37 = strlen(a9);\n      v69 = 1;\n      v16 = v36;\n      n = v37;\n      v15 = v35;\n      s2 = a9;\n      break;\n    case 0:\n      v82 = 0;\n      v17 = 0LL;\n      v69 = 0;\n      n = 0LL;\n      s2 = 0LL;\n      break;\n    case 3:\n      v82 = 1;\n      v17 = 0LL;\n      v15 = 2;\n      v69 = 1;\n      n = 1LL;\n      s2 = \"'\";\n      break;\n    default:\n      abort();\n      return result;\n  }\n  v18 = v15;\n  v19 = v16;\n  v20 = v18;\n  v21 = 0LL;\n  v22 = 0;\n  while ( 1 )\n  {\n    LOBYTE(v11) = v19 != v21;\n    if ( v19 == -1LL )\n      LOBYTE(v11) = s[v21] != 0;\n    if ( !(_BYTE)v11 )\n    {\n      if ( v17 == 0 && v82 && v20 == 2 )\n        return sub_401750(v9, v10, s);\n      if ( s2 )\n      {\n        if ( !v82 )\n        {\n          v51 = *s2;\n          if ( *s2 )\n          {\n            v52 = &s2[-v17];\n            do\n            {\n              if ( v10 > v17 )\n                *(_BYTE *)(v9 + v17) = v51;\n              v51 = v52[++v17];\n            }\n            while ( v51 );\n          }\n        }\n      }\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 0;\n      return v17;\n    }\n    v23 = &s[v21];\n    v71 = v69 & (v20 != 2);\n    if ( !((unsigned __int8)v69 & (v20 != 2)) )\n    {\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 123:\n        case 125:\nLABEL_60:\n          v38 = v19 != 1;\n          if ( v19 == -1LL )\n            v38 = s[1] != 0;\n          LOBYTE(v14) = v20 == 2;\n          if ( v38 )\n            goto LABEL_65;\n          goto LABEL_63;\n        case 63:\nLABEL_69:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            v11 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_66;\n          }\n          if ( v20 != 5 )\n          {\n            LOBYTE(v31) = 63;\n            LOBYTE(v14) = v20 == 2;\n            goto LABEL_65;\n          }\n          if ( !(v81 & 4) )\n          {\n            v14 = 0;\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          v14 = 0;\n          LOBYTE(v31) = 63;\n          if ( v21 + 2 >= v19 || s[v21 + 1] != 63 )\n            goto LABEL_65;\n          v31 = (unsigned __int8)s[v21 + 2];\n          if ( (unsigned __int8)v31 > 0x3Eu || (v50 = 8070630310989004800LL, !_bittest64(&v50, v31)) )\n          {\n            LOBYTE(v31) = 63;\n            goto LABEL_65;\n          }\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 63;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 34;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 34;\n          if ( v10 > v17 + 3 )\n            *(_BYTE *)(v9 + v17 + 3) = 63;\n          v17 += 4LL;\n          v14 = 0;\n          v11 = 0;\n          v21 += 2LL;\n          goto LABEL_118;\n        case 39:\nLABEL_73:\n          v14 = 0;\n          LOBYTE(v31) = 39;\n          if ( v20 != 2 )\n            goto LABEL_65;\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 39;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = 92;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = 39;\n          v17 += 3LL;\n          ++v21;\n          v22 = 0;\n          LOBYTE(v31) = 39;\n          goto LABEL_82;\n        default:\n          goto LABEL_124;\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_127;\n        case 10:\n          LOBYTE(v31) = 10;\n          v39 = 110;\n          goto LABEL_130;\n        case 9:\n          LOBYTE(v31) = 9;\n          v39 = 116;\n          goto LABEL_130;\n        case 7:\n          LOBYTE(v31) = 7;\n          v39 = 97;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 0:\n          if ( !v69 )\n          {\n            if ( v81 & 1 )\n            {\n              ++v21;\n              continue;\n            }\n            if ( !v82 )\n            {\n              ++v21;\n              v11 = v22;\n              LOBYTE(v31) = 0;\n              goto LABEL_144;\n            }\n            v11 = 0;\n            if ( a7 )\n            {\n              v71 = 0;\n              LOBYTE(v31) = 0;\n              goto LABEL_18;\n            }\n            LOBYTE(v31) = 0;\n            goto LABEL_122;\n          }\nLABEL_103:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          v71 = 0;\nLABEL_105:\n          LOBYTE(v14) = v20 == 2;\n          v40 = v22 ^ 1;\n          LOBYTE(v40) = (v20 == 2) & (v22 ^ 1);\n          if ( (_BYTE)v40 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v41 = v17 + 3;\n            if ( v10 <= v17 + 3 )\n            {\n              v17 += 4LL;\n              ++v21;\n              v22 = v40;\n              LOBYTE(v31) = 48;\n              goto LABEL_82;\n            }\n            v22 = v40;\nLABEL_114:\n            *(_BYTE *)(v9 + v41) = 92;\n            goto LABEL_115;\n          }\n          v41 = v17;\n          if ( v17 < v10 )\n            goto LABEL_114;\nLABEL_115:\n          v17 = v41 + 1;\n          v42 = v21 + 1;\n          if ( v20 == 2 )\n          {\n            ++v21;\n            LOBYTE(v31) = 48;\nLABEL_82:\n            if ( v71 )\n              goto LABEL_67;\n            goto LABEL_33;\n          }\n          LOBYTE(v31) = 48;\n          if ( v42 < v19 && (unsigned __int8)(s[v42] - 48) <= 9u )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 48;\n            if ( v10 > v41 + 2 )\n              *(_BYTE *)(v9 + v41 + 2) = 48;\n            v17 = v41 + 3;\n            LOBYTE(v31) = 48;\n          }\nLABEL_118:\n          if ( !v69 || (_BYTE)v14 )\n            goto LABEL_66;\n          if ( a7 )\n            goto LABEL_18;\n          break;\n        case 8:\n          LOBYTE(v31) = 8;\n          v39 = 98;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 92:\n          if ( v20 == 2 )\n          {\n            if ( v82 )\n              return sub_401750(v9, v10, s);\n            ++v21;\n            v11 = v22;\n            LOBYTE(v31) = 92;\n            goto LABEL_144;\n          }\nLABEL_87:\n          v11 = v82 & (unsigned __int8)v69;\n          LOBYTE(v31) = 92;\n          v39 = 92;\n          v14 = v82 & (unsigned __int8)v69;\n          LOBYTE(v14) = (n != 0) & v14;\n          if ( (_BYTE)v14 )\n          {\n            ++v21;\n            v11 = v22;\n            goto LABEL_144;\n          }\nLABEL_88:\n          if ( !v69 )\n            goto LABEL_65;\n          v32 = v14;\n          LOBYTE(v31) = v39;\n          goto LABEL_20;\n        case 35:\n        case 126:\n          LOBYTE(v14) = v20 == 2;\nLABEL_63:\n          if ( !v21 )\n            goto LABEL_64;\n          goto LABEL_65;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          LOBYTE(v14) = v20 == 2;\nLABEL_64:\n          if ( !((unsigned __int8)v14 & v82) )\n            goto LABEL_65;\n          return sub_401750(v9, v10, s);\n        case 13:\n          LOBYTE(v31) = 13;\n          v39 = 114;\nLABEL_130:\n          LOBYTE(v14) = v20 == 2;\n          v71 = v20 == 2 && v82;\n          if ( v71 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_88;\n        case 12:\n          LOBYTE(v31) = 12;\n          v39 = 102;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 11:\n          LOBYTE(v31) = 11;\n          v39 = 118;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n      }\nLABEL_121:\n      v32 = v20 == 2;\n      if ( v71 )\n        goto LABEL_20;\nLABEL_122:\n      ++v21;\n      v11 = v22 & (v11 ^ 1);\n      goto LABEL_144;\n    }\n    if ( !n )\n      goto LABEL_271;\n    if ( v19 == -1LL && n > 1 )\n    {\n      v24 = v20;\n      v25 = v22;\n      v26 = strlen(s);\n      v20 = v24;\n      v22 = v25;\n      v23 = &s[v21];\n      v19 = v26;\n    }\n    if ( v21 + n > v19\n      || (v27 = v20,\n          v28 = v19,\n          v29 = v22,\n          v74 = v23,\n          v30 = memcmp(v23, s2, n),\n          v23 = v74,\n          v22 = v29,\n          v19 = v28,\n          v20 = v27,\n          v30) )\n    {\nLABEL_271:\n      LOBYTE(v31) = *v23;\n      switch ( *v23 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          v71 = 0;\n          goto LABEL_17;\n        case 123:\n        case 125:\n          v71 = 0;\n          goto LABEL_60;\n        case 63:\n          v71 = 0;\n          goto LABEL_69;\n        case 39:\n          v71 = 0;\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          v71 = 0;\nLABEL_85:\n          v14 = 0;\n          goto LABEL_65;\n        case 92:\n          v71 = 0;\n          goto LABEL_87;\n        case 10:\nLABEL_90:\n          LOBYTE(v31) = 110;\n          v32 = 0;\n          goto LABEL_91;\n        case 8:\nLABEL_93:\n          LOBYTE(v31) = 98;\n          v32 = 0;\n          goto LABEL_91;\n        case 7:\nLABEL_94:\n          LOBYTE(v31) = 97;\n          v32 = 0;\n          goto LABEL_91;\n        case 13:\n          v71 = 0;\nLABEL_96:\n          LOBYTE(v31) = 13;\n          v39 = 114;\n          LOBYTE(v14) = v20 == 2;\n          goto LABEL_88;\n        case 35:\n        case 126:\n          v71 = 0;\nLABEL_98:\n          if ( v21 )\n            goto LABEL_17;\n          v14 = 0;\n          goto LABEL_65;\n        case 12:\nLABEL_100:\n          LOBYTE(v31) = 102;\n          v32 = 0;\n          goto LABEL_91;\n        case 11:\nLABEL_101:\n          LOBYTE(v31) = 118;\n          v32 = 0;\n          goto LABEL_91;\n        case 9:\nLABEL_102:\n          LOBYTE(v31) = 116;\n          v32 = 0;\nLABEL_91:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          goto LABEL_21;\n        case 0:\n          goto LABEL_103;\n        default:\n          v71 = 0;\n          break;\n      }\n    }\n    else\n    {\n      if ( v82 )\n        return sub_401750(v9, v10, s);\n      LOBYTE(v31) = *v74;\n      switch ( *v74 )\n      {\n        case 37:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n        case 58:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 85:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 93:\n        case 95:\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n          goto LABEL_17;\n        case 123:\n        case 125:\n          goto LABEL_60;\n        case 63:\n          goto LABEL_69;\n        case 39:\n          goto LABEL_73;\n        case 32:\n        case 33:\n        case 34:\n        case 36:\n        case 38:\n        case 40:\n        case 41:\n        case 42:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 91:\n        case 94:\n        case 96:\n        case 124:\n          goto LABEL_85;\n        case 92:\n          goto LABEL_87;\n        case 10:\n          goto LABEL_90;\n        case 8:\n          goto LABEL_93;\n        case 7:\n          goto LABEL_94;\n        case 13:\n          goto LABEL_96;\n        case 35:\n        case 126:\n          goto LABEL_98;\n        case 12:\n          goto LABEL_100;\n        case 11:\n          goto LABEL_101;\n        case 9:\n          goto LABEL_102;\n        case 0:\n          goto LABEL_105;\n        default:\n          break;\n      }\n    }\nLABEL_124:\n    if ( v80 != 1 )\n      break;\n    v43 = v20;\n    v44 = v19;\n    v45 = v22;\n    v46 = __ctype_b_loc();\n    v22 = v45;\n    v19 = v44;\n    v20 = v43;\n    v47 = 1LL;\n    v48 = (*v46)[(unsigned __int8)v31];\n    LOWORD(v48) = (unsigned __int16)v48 >> 14;\n    v14 = v48 ^ 1;\n    LOBYTE(v14) = v69 & v14;\nLABEL_126:\n    if ( (_BYTE)v14 )\n    {\n      v14 = (unsigned __int8)v69;\nLABEL_206:\n      v62 = v21 + v47;\n      v63 = 0;\n      v64 = v71;\n      while ( 1 )\n      {\n        if ( (_BYTE)v14 )\n        {\n          if ( v82 )\n            return sub_401750(v9, v10, s);\n          if ( (v20 == 2) & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            v22 ^= 1u;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          if ( v10 > v17 + 1 )\n            *(_BYTE *)(v9 + v17 + 1) = ((unsigned __int8)v31 >> 6) + 48;\n          if ( v10 > v17 + 2 )\n            *(_BYTE *)(v9 + v17 + 2) = (((unsigned __int8)v31 >> 3) & 7) + 48;\n          ++v21;\n          v17 += 3LL;\n          LOBYTE(v31) = (v31 & 7) + 48;\n          if ( v62 <= v21 )\n            goto LABEL_33;\n          v63 = v14;\n        }\n        else\n        {\n          v11 = v22 & (v63 ^ 1);\n          if ( v64 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 92;\n            ++v17;\n          }\n          if ( ++v21 >= v62 )\n            goto LABEL_144;\n          if ( (_BYTE)v11 )\n          {\n            if ( v17 < v10 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 39;\n            v17 += 2LL;\n            v64 = 0;\n            v22 = 0;\n          }\n          else\n          {\n            v64 = 0;\n          }\n        }\n        if ( v17 < v10 )\n          *(_BYTE *)(v9 + v17) = v31;\n        LOBYTE(v31) = s[v21];\n        ++v17;\n      }\n    }\nLABEL_127:\n    LOBYTE(v14) = v20 == 2;\nLABEL_65:\n    v11 = (v14 | (unsigned __int8)v69 ^ 1) ^ 1;\n    LOBYTE(v11) = v82 | (v14 | v69 ^ 1) ^ 1;\n    if ( v82 | (unsigned __int8)((v14 | v69 ^ 1) ^ 1) )\n    {\nLABEL_17:\n      v11 = 0;\n      if ( a7 )\n      {\nLABEL_18:\n        if ( (*(_DWORD *)(a7 + 4LL * ((unsigned __int8)v31 >> 5)) >> v31) & 1 )\n        {\n          v32 = v20 == 2;\nLABEL_20:\n          if ( v82 )\n            return sub_401750(v9, v10, s);\nLABEL_21:\n          ++v21;\nLABEL_22:\n          v14 = v22 ^ 1;\n          if ( v32 & (unsigned __int8)(v22 ^ 1) )\n          {\n            if ( v10 > v17 )\n              *(_BYTE *)(v9 + v17) = 39;\n            if ( v10 > v17 + 1 )\n              *(_BYTE *)(v9 + v17 + 1) = 36;\n            if ( v10 > v17 + 2 )\n              *(_BYTE *)(v9 + v17 + 2) = 39;\n            v17 += 3LL;\n            LOBYTE(v14) = v32 & (v22 ^ 1);\n            v22 = v14;\n          }\n          if ( v17 < v10 )\n            *(_BYTE *)(v9 + v17) = 92;\n          ++v17;\n          goto LABEL_33;\n        }\n      }\n      goto LABEL_121;\n    }\nLABEL_66:\n    ++v21;\n    if ( v71 )\n    {\nLABEL_67:\n      v32 = v20 == 2;\n      goto LABEL_22;\n    }\n    v11 = v22 & (v11 ^ 1);\nLABEL_144:\n    if ( (_BYTE)v11 )\n    {\n      if ( v17 < v10 )\n        *(_BYTE *)(v9 + v17) = 39;\n      if ( v10 > v17 + 1 )\n        *(_BYTE *)(v9 + v17 + 1) = 39;\n      v17 += 2LL;\n      v22 = 0;\n    }\nLABEL_33:\n    if ( v17 < v10 )\n      *(_BYTE *)(v9 + v17) = v31;\n    ++v17;\n  }\n  ps = 0LL;\n  if ( v19 == -1LL )\n  {\n    v53 = v20;\n    v54 = v22;\n    v55 = v23;\n    v56 = strlen(s);\n    v20 = v53;\n    LOBYTE(v22) = v54;\n    v23 = v55;\n    v19 = v56;\n  }\n  v84 = v17;\n  v83 = v22;\n  v57 = 0LL;\n  v85 = v23;\n  v77 = v9;\n  v78 = v10;\n  v75 = v19;\n  v76 = v20;\n  while ( 1 )\n  {\n    v58 = v21 + v57;\n    LODWORD(v59) = sub_403230(&wc, &s[v21] + v57, v75 - (v21 + v57), &ps);\n    v60 = v59;\n    if ( !v59 )\n    {\n      v11 ^= 1u;\n      v47 = v57;\n      v9 = v77;\n      v22 = v83;\n      v17 = v84;\n      v10 = v78;\n      v14 = (unsigned __int8)(v11 & v69);\n      v19 = v75;\n      v20 = v76;\n      goto LABEL_252;\n    }\n    if ( v59 == -1 )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      v14 = (unsigned __int8)v69;\n      goto LABEL_252;\n    }\n    if ( v59 == -2 )\n    {\n      v19 = v75;\n      v65 = v21 + v57;\n      v66 = &s[v21] + v57;\n      v67 = v57;\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v9 = v77;\n      v10 = v78;\n      v20 = v76;\n      if ( v65 < v75 && *v66 )\n      {\n        do\n          ++v67;\n        while ( v75 > v21 + v67 && v85[v67] );\n        v47 = v67;\n      }\n      v14 = (unsigned __int8)v69;\nLABEL_252:\n      if ( v47 > 1 )\n        goto LABEL_206;\n      goto LABEL_126;\n    }\n    if ( v82 && v76 == 2 && v59 != 1 )\n      break;\nLABEL_187:\n    if ( !iswprint(wc) )\n      v11 = 0;\n    v57 += v60;\n    if ( mbsinit(&ps) )\n    {\n      v47 = v57;\n      v22 = v83;\n      v17 = v84;\n      v14 = v11 ^ 1;\n      v9 = v77;\n      v10 = v78;\n      v19 = v75;\n      v20 = v76;\n      LOBYTE(v14) = v69 & (v11 ^ 1);\n      goto LABEL_252;\n    }\n  }\n  v61 = &s[v58 + 1];\n  while ( (unsigned __int8)(*v61 - 91) > 0x21u || !((1LL << (*v61 - 91)) & 0x20000002BLL) )\n  {\n    if ( &s[v59] + v58 == ++v61 )\n      goto LABEL_187;\n  }\n  v9 = v77;\n  v10 = v78;\n  return sub_401750(v9, v10, s);\n}\n", 
            "funcStartAddr": "0x4011f0L", 
            "funcEndAddr": "0x4011f5L", 
            "funcName": "sub_401750"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(unsigned int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14@1\n  __int64 v5; // rbp@1\n  int *v6; // rax@1\n  __int128 *v7; // rbx@1\n  int *v8; // r13@1\n  signed __int64 v9; // rsi@3\n  __int128 *v10; // rax@4\n  __int64 v11; // rdx@4\n  signed __int64 v12; // rbx@6\n  _BYTE *v13; // r12@6\n  unsigned __int64 v14; // ST30_8@6\n  unsigned __int64 v15; // rax@6\n  unsigned __int64 v16; // rsi@7\n  __int64 v17; // ST30_8@8\n  _BYTE *v18; // rax@9\n  int v19; // er8@9\n  __int128 *v21; // rax@11\n  char *v22; // [sp+8h] [bp-50h]@1\n  int v23; // [sp+18h] [bp-40h]@1\n  int v24; // [sp+1Ch] [bp-3Ch]@6\n\n  v4 = a3;\n  v5 = a4;\n  v22 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( (a1 & 0x80000000) != 0 )\n    abort();\n  if ( dword_6061D0 <= a1 )\n  {\n    v9 = 16LL * (a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      LODWORD(v21) = sub_403020(0LL, v9);\n      v11 = a1 + 1;\n      v7 = v21;\n      off_6061B8 = v21;\n      *v21 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      LODWORD(v10) = sub_403020(off_6061B8, v9);\n      v11 = a1 + 1;\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (signed __int64)&v7[a1];\n  v13 = *(_BYTE **)(v12 + 8);\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v14 = *(_QWORD *)v12;\n  v15 = sub_401750(\n          v13,\n          *(_QWORD *)v12,\n          v22,\n          v4,\n          *(_DWORD *)v5,\n          v24,\n          v5 + 8,\n          *(const char **)(v5 + 40),\n          *(char **)(v5 + 48));\n  if ( v14 <= v15 )\n  {\n    v16 = v15 + 1;\n    *(_QWORD *)v12 = v15 + 1;\n    if ( (_UNKNOWN *)v13 != &unk_606240 )\n    {\n      v17 = v15 + 1;\n      free(v13);\n      v16 = v17;\n    }\n    LODWORD(v18) = sub_402FD0(v16);\n    v19 = *(_DWORD *)v5;\n    *(_QWORD *)(v12 + 8) = v18;\n    v13 = v18;\n    sub_401750(v18, v16, v22, v4, v19, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(unsigned int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14@1\n  __int64 v5; // rbp@1\n  int *v6; // rax@1\n  __int128 *v7; // rbx@1\n  int *v8; // r13@1\n  signed __int64 v9; // rsi@3\n  __int128 *v10; // rax@4\n  __int64 v11; // rdx@4\n  signed __int64 v12; // rbx@6\n  _BYTE *v13; // r12@6\n  unsigned __int64 v14; // ST30_8@6\n  unsigned __int64 v15; // rax@6\n  unsigned __int64 v16; // rsi@7\n  __int64 v17; // ST30_8@8\n  _BYTE *v18; // rax@9\n  int v19; // er8@9\n  __int128 *v21; // rax@11\n  char *v22; // [sp+8h] [bp-50h]@1\n  int v23; // [sp+18h] [bp-40h]@1\n  int v24; // [sp+1Ch] [bp-3Ch]@6\n\n  v4 = a3;\n  v5 = a4;\n  v22 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( (a1 & 0x80000000) != 0 )\n    abort();\n  if ( dword_6061D0 <= a1 )\n  {\n    v9 = 16LL * (a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      LODWORD(v21) = sub_403020(0LL, v9);\n      v11 = a1 + 1;\n      v7 = v21;\n      off_6061B8 = v21;\n      *v21 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      LODWORD(v10) = sub_403020(off_6061B8, v9);\n      v11 = a1 + 1;\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (signed __int64)&v7[a1];\n  v13 = *(_BYTE **)(v12 + 8);\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v14 = *(_QWORD *)v12;\n  v15 = sub_401750(\n          v13,\n          *(_QWORD *)v12,\n          v22,\n          v4,\n          *(_DWORD *)v5,\n          v24,\n          v5 + 8,\n          *(const char **)(v5 + 40),\n          *(char **)(v5 + 48));\n  if ( v14 <= v15 )\n  {\n    v16 = v15 + 1;\n    *(_QWORD *)v12 = v15 + 1;\n    if ( (_UNKNOWN *)v13 != &unk_606240 )\n    {\n      v17 = v15 + 1;\n      free(v13);\n      v16 = v17;\n    }\n    LODWORD(v18) = sub_402FD0(v16);\n    v19 = *(_DWORD *)v5;\n    *(_QWORD *)(v12 + 8) = v18;\n    v13 = v18;\n    sub_401750(v18, v16, v22, v4, v19, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n", 
            "funcStartAddr": "0x4011f5L", 
            "funcEndAddr": "0x4011faL", 
            "funcName": "sub_402760"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402760(unsigned int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14@1\n  __int64 v5; // rbp@1\n  int *v6; // rax@1\n  __int128 *v7; // rbx@1\n  int *v8; // r13@1\n  signed __int64 v9; // rsi@3\n  __int128 *v10; // rax@4\n  __int64 v11; // rdx@4\n  signed __int64 v12; // rbx@6\n  _BYTE *v13; // r12@6\n  unsigned __int64 v14; // ST30_8@6\n  unsigned __int64 v15; // rax@6\n  unsigned __int64 v16; // rsi@7\n  __int64 v17; // ST30_8@8\n  _BYTE *v18; // rax@9\n  int v19; // er8@9\n  __int128 *v21; // rax@11\n  char *v22; // [sp+8h] [bp-50h]@1\n  int v23; // [sp+18h] [bp-40h]@1\n  int v24; // [sp+1Ch] [bp-3Ch]@6\n\n  v4 = a3;\n  v5 = a4;\n  v22 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( (a1 & 0x80000000) != 0 )\n    abort();\n  if ( dword_6061D0 <= a1 )\n  {\n    v9 = 16LL * (a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      LODWORD(v21) = sub_403020(0LL, v9);\n      v11 = a1 + 1;\n      v7 = v21;\n      off_6061B8 = v21;\n      *v21 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      LODWORD(v10) = sub_403020(off_6061B8, v9);\n      v11 = a1 + 1;\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (signed __int64)&v7[a1];\n  v13 = *(_BYTE **)(v12 + 8);\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v14 = *(_QWORD *)v12;\n  v15 = sub_401750(\n          v13,\n          *(_QWORD *)v12,\n          v22,\n          v4,\n          *(_DWORD *)v5,\n          v24,\n          v5 + 8,\n          *(const char **)(v5 + 40),\n          *(char **)(v5 + 48));\n  if ( v14 <= v15 )\n  {\n    v16 = v15 + 1;\n    *(_QWORD *)v12 = v15 + 1;\n    if ( (_UNKNOWN *)v13 != &unk_606240 )\n    {\n      v17 = v15 + 1;\n      free(v13);\n      v16 = v17;\n    }\n    LODWORD(v18) = sub_402FD0(v16);\n    v19 = *(_DWORD *)v5;\n    *(_QWORD *)(v12 + 8) = v18;\n    v13 = v18;\n    sub_401750(v18, v16, v22, v4, v19, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n\n_BYTE *__fastcall sub_402760(unsigned int a1, char *a2, unsigned __int64 a3, __int64 a4)\n{\n  unsigned __int64 v4; // r14@1\n  __int64 v5; // rbp@1\n  int *v6; // rax@1\n  __int128 *v7; // rbx@1\n  int *v8; // r13@1\n  signed __int64 v9; // rsi@3\n  __int128 *v10; // rax@4\n  __int64 v11; // rdx@4\n  signed __int64 v12; // rbx@6\n  _BYTE *v13; // r12@6\n  unsigned __int64 v14; // ST30_8@6\n  unsigned __int64 v15; // rax@6\n  unsigned __int64 v16; // rsi@7\n  __int64 v17; // ST30_8@8\n  _BYTE *v18; // rax@9\n  int v19; // er8@9\n  __int128 *v21; // rax@11\n  char *v22; // [sp+8h] [bp-50h]@1\n  int v23; // [sp+18h] [bp-40h]@1\n  int v24; // [sp+1Ch] [bp-3Ch]@6\n\n  v4 = a3;\n  v5 = a4;\n  v22 = a2;\n  v6 = __errno_location();\n  v7 = off_6061B8;\n  v8 = v6;\n  v23 = *v6;\n  if ( (a1 & 0x80000000) != 0 )\n    abort();\n  if ( dword_6061D0 <= a1 )\n  {\n    v9 = 16LL * (a1 + 1);\n    if ( off_6061B8 == &xmmword_6061C0 )\n    {\n      LODWORD(v21) = sub_403020(0LL, v9);\n      v11 = a1 + 1;\n      v7 = v21;\n      off_6061B8 = v21;\n      *v21 = (__int128)_mm_load_si128((const __m128i *)&xmmword_6061C0);\n    }\n    else\n    {\n      LODWORD(v10) = sub_403020(off_6061B8, v9);\n      v11 = a1 + 1;\n      off_6061B8 = v10;\n      v7 = v10;\n    }\n    memset(&v7[dword_6061D0], 0, 16 * (v11 - (unsigned int)dword_6061D0));\n    dword_6061D0 = a1 + 1;\n  }\n  v12 = (signed __int64)&v7[a1];\n  v13 = *(_BYTE **)(v12 + 8);\n  v24 = *(_DWORD *)(v5 + 4) | 1;\n  v14 = *(_QWORD *)v12;\n  v15 = sub_401750(\n          v13,\n          *(_QWORD *)v12,\n          v22,\n          v4,\n          *(_DWORD *)v5,\n          v24,\n          v5 + 8,\n          *(const char **)(v5 + 40),\n          *(char **)(v5 + 48));\n  if ( v14 <= v15 )\n  {\n    v16 = v15 + 1;\n    *(_QWORD *)v12 = v15 + 1;\n    if ( (_UNKNOWN *)v13 != &unk_606240 )\n    {\n      v17 = v15 + 1;\n      free(v13);\n      v16 = v17;\n    }\n    LODWORD(v18) = sub_402FD0(v16);\n    v19 = *(_DWORD *)v5;\n    *(_QWORD *)(v12 + 8) = v18;\n    v13 = v18;\n    sub_401750(v18, v16, v22, v4, v19, v24, v5 + 8, *(const char **)(v5 + 40), *(char **)(v5 + 48));\n  }\n  *v8 = v23;\n  return v13;\n}\n", 
            "funcStartAddr": "0x4011f5L", 
            "funcEndAddr": "0x4011faL", 
            "funcName": "sub_402760"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402D80(char *a1, unsigned __int64 a2, unsigned __int8 a3)\n{\n  __m128i v4; // [sp+0h] [bp-48h]@1\n  __m128i v5; // [sp+10h] [bp-38h]@1\n  __m128i v6; // [sp+20h] [bp-28h]@1\n  __int64 v7; // [sp+30h] [bp-18h]@1\n\n  v7 = qword_606370;\n  v4 = _mm_load_si128((const __m128i *)&xmmword_606340);\n  v5 = _mm_load_si128((const __m128i *)&xmmword_606350);\n  v6 = _mm_load_si128((const __m128i *)&xmmword_606360);\n  v4.m128i_i32[(a3 >> 5) + 2] ^= (~(unsigned __int8)((unsigned __int32)v4.m128i_i32[(a3 >> 5) + 2] >> (a3 & 0x1F)) & 1) << (a3 & 0x1F);\n  return sub_402760(0, a1, a2, (__int64)&v4);\n}\n", 
            "funcStartAddr": "0x402d80L", 
            "funcEndAddr": "0x402df0L", 
            "funcName": "sub_402D80"
        }, 
        {
            "decompiledFuncCode": "_BYTE *__fastcall sub_402E00(char *a1)\n{\n  return sub_402D80(a1, 0xFFFFFFFFFFFFFFFFLL, 0x3Au);\n}\n", 
            "funcStartAddr": "0x402e00L", 
            "funcEndAddr": "0x402e11L", 
            "funcName": "sub_402E00"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_402FD0(size_t a1)\n{\n  void *result; // rax@1\n\n  result = malloc(a1);\n  if ( !result )\n  {\n    if ( a1 )\n      sub_4031F0();\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x402fd0L", 
            "funcEndAddr": "0x402feaL", 
            "funcName": "sub_402FD0"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_403020(void *a1, size_t a2)\n{\n  void *result; // rax@3\n\n  if ( !a2 && a1 )\n  {\n    free(a1);\n    result = 0LL;\n  }\n  else\n  {\n    result = realloc(a1, a2);\n    if ( !result )\n    {\n      if ( a2 )\n        sub_4031F0();\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403020L", 
            "funcEndAddr": "0x403056L", 
            "funcName": "sub_403020"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_403190(const void *a1, size_t a2)\n{\n  void *v2; // rax@1\n\n  v2 = sub_402FD0(a2);\n  return memcpy(v2, a1, a2);\n}\n", 
            "funcStartAddr": "0x403190L", 
            "funcEndAddr": "0x4031b8L", 
            "funcName": "sub_403190"
        }, 
        {
            "decompiledFuncCode": "void __noreturn sub_4031F0()\n{\n  char *v0; // rax@1\n\n  v0 = dcgettext(0LL, \"memory exhausted\", 5);\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n", 
            "funcStartAddr": "0x4031f0L", 
            "funcEndAddr": "0x403221L", 
            "funcName": "sub_4031F0"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_403230(wchar_t *a1, const char *a2, size_t a3, mbstate_t *a4)\n{\n  if ( a2 )\n  {\n    if ( !a3 )\n      return -2LL;\n  }\n  else\n  {\n    a3 = 1LL;\n    a2 = \"\\\"\" + 1;\n    a1 = 0LL;\n  }\n  return mbrtowc(a1, a2, a3, a4);\n}\n", 
            "funcStartAddr": "0x403230L", 
            "funcEndAddr": "0x403259L", 
            "funcName": "sub_403230"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_403260(FILE *stream)\n{\n  size_t v1; // r12@1\n  int v2; // ebp@1\n  int result; // eax@1\n\n  v1 = __fpending(stream);\n  v2 = ferror(stream);\n  result = fclose(stream);\n  if ( v2 )\n  {\n    if ( !result )\n    {\n      *__errno_location() = 0;\n      return -1;\n    }\n  }\n  else\n  {\n    if ( !result )\n      return result;\n    if ( !v1 )\n      return -(*__errno_location() != 9);\n  }\n  return -1;\n}\n", 
            "funcStartAddr": "0x403260L", 
            "funcEndAddr": "0x4032c5L", 
            "funcName": "sub_403260"
        }, 
        {
            "decompiledFuncCode": "const char *sub_4032D0()\n{\n  char *v0; // rax@1\n  char *v1; // r15@1\n  const char *v2; // rbx@1\n  char v3; // bp@4\n  size_t v4; // rax@6\n  char *v6; // rax@14\n  const char *v7; // r13@14\n  size_t v8; // rax@16\n  signed __int64 v9; // r12@16\n  size_t v10; // r14@16\n  size_t v11; // rdi@17\n  char *v12; // rax@18\n  const char *v13; // rbp@18\n  size_t v14; // rdi@21\n  char *v15; // rax@22\n  const char *v16; // r12@24\n  int v17; // eax@24\n  int v18; // er12@24\n  FILE *v19; // r13@28\n  const char *v20; // rax@29\n  _IO_FILE *v21; // rbx@29\n  const char *v22; // r13@29\n  char *v23; // rax@30\n  int v24; // edi@31\n  char *v25; // kr00_8@36\n  char *v26; // rdx@36\n  int v27; // esi@37\n  unsigned int v28; // eax@37\n  signed __int64 v29; // rdx@42\n  signed __int64 v30; // rax@42\n  char *v31; // rax@43\n  signed __int64 v32; // rcx@43\n  __int64 v33; // rdx@43\n  signed __int64 v34; // rsi@45\n  unsigned int v35; // ecx@45\n  signed __int64 v36; // rdi@45\n  char *v37; // rsi@45\n  unsigned int v38; // edx@50\n  char *v39; // rcx@50\n  FILE *v40; // rdi@57\n  int v41; // eax@59\n  bool v42; // dl@59\n  char *v43; // rax@62\n  signed __int64 v44; // rax@64\n  unsigned __int64 v45; // r9@65\n  char *v46; // rsi@65\n  char *v47; // r10@65\n  unsigned int v48; // ecx@65\n  unsigned int v49; // ecx@66\n  unsigned int v50; // esi@66\n  __int64 v51; // r8@67\n  unsigned __int64 v52; // rdi@69\n  char *v53; // rcx@69\n  char *v54; // r9@69\n  unsigned int v55; // edx@69\n  unsigned int v56; // edx@70\n  unsigned int v57; // ecx@70\n  __int64 v58; // rsi@71\n  const char *v59; // rax@80\n  char *v60; // rdi@80\n  FILE *v61; // r13@80\n  signed __int64 v62; // [sp+8h] [bp-D0h]@28\n  __int64 v63; // [sp+18h] [bp-C0h]@42\n  char v64[64]; // [sp+20h] [bp-B8h]@35\n  char v65[120]; // [sp+60h] [bp-78h]@35\n\n  v0 = nl_langinfo(14);\n  v1 = s;\n  v2 = v0;\n  if ( !v0 )\n    v2 = \"\";\n  if ( !s )\n  {\n    v6 = getenv(\"CHARSETALIASDIR\");\n    v7 = v6;\n    if ( v6 && *v6 )\n    {\n      v8 = strlen(v6);\n      v9 = v8;\n      v10 = v8;\n      if ( !v8 )\n      {\n        v11 = 14LL;\nLABEL_18:\n        v12 = (char *)malloc(v11);\n        v13 = v12;\n        if ( !v12 )\n        {\nLABEL_19:\n          v1 = \"\\\"\" + 1;\nLABEL_20:\n          s = v1;\n          goto LABEL_4;\n        }\n        memcpy(v12, v7, v10);\nLABEL_24:\n        v16 = &v13[v9];\n        *(_QWORD *)v16 = 3347411969557751907LL;\n        *((_WORD *)v16 + 6) = 115;\n        *((_DWORD *)v16 + 2) = 1634298977;\n        v17 = open(v13, 0);\n        v18 = v17;\n        if ( v17 >= 0 )\n        {\n          v1 = 0LL;\n          v62 = 0LL;\n          v19 = fdopen(v17, \"r\");\n          if ( v19 )\n          {\n            v20 = v2;\n            v21 = v19;\n            v22 = v20;\nLABEL_30:\n            v23 = v21->_IO_read_ptr;\n            if ( v23 < v21->_IO_read_end )\n            {\nLABEL_31:\n              v21->_IO_read_ptr = v23 + 1;\n              v24 = (unsigned __int8)*v23;\n              goto LABEL_32;\n            }\n            while ( 1 )\n            {\n              v24 = __uflow(v21);\n              if ( v24 == -1 )\n                break;\nLABEL_32:\n              if ( (unsigned int)(v24 - 9) <= 1 || v24 == 32 )\n                goto LABEL_30;\n              if ( v24 == 35 )\n              {\n                do\n                {\n                  v43 = v21->_IO_read_ptr;\n                  if ( v43 < v21->_IO_read_end )\n                  {\n                    v21->_IO_read_ptr = v43 + 1;\n                    v41 = (unsigned __int8)*v43;\n                    v42 = 1;\n                  }\n                  else\n                  {\n                    v41 = __uflow(v21);\n                    v42 = v41 != -1;\n                  }\n                }\n                while ( v41 != 10 && v42 );\n                if ( v41 == -1 )\n                  break;\n                goto LABEL_30;\n              }\n              ungetc(v24, v21);\n              if ( fscanf(v21, \"%50s %50s\", v64, v65) <= 1 )\n                break;\n              v25 = &v64[strlen(v64)];\n              v26 = v65;\n              do\n              {\n                v27 = *(_DWORD *)v26;\n                v26 += 4;\n                v28 = ~v27 & (v27 - 16843009) & 0x80808080;\n              }\n              while ( !v28 );\n              if ( !(~v27 & (v27 - 16843009) & 0x8080) )\n                v28 >>= 16;\n              if ( !(~v27 & (v27 - 16843009) & 0x8080) )\n                v26 += 2;\n              v29 = &v26[-__CFADD__((_BYTE)v28, (_BYTE)v28) - 3] - v65;\n              v30 = v25 - v64 + v29;\n              v63 = v29;\n              if ( v62 )\n              {\n                v44 = v62 + v30;\n                v62 = v44 + 2;\n                v31 = (char *)realloc(v1, v44 + 3);\n                v33 = v63;\n                v32 = v25 - v64;\n              }\n              else\n              {\n                v62 = v30 + 2;\n                v31 = (char *)malloc(v30 + 3);\n                v32 = v25 - v64;\n                v33 = v63;\n              }\n              if ( !v31 )\n              {\n                v59 = v22;\n                v60 = v1;\n                v61 = v21;\n                v1 = \"\\\"\" + 1;\n                v2 = v59;\n                free(v60);\n                fclose(v61);\n                goto LABEL_26;\n              }\n              v34 = -2 - v32;\n              v35 = v32 + 1;\n              v36 = v62 - v33;\n              v37 = &v31[v62 - v33] + v34;\n              if ( v35 >= 8 )\n              {\n                *(_QWORD *)v37 = *(_QWORD *)v64;\n                *(_QWORD *)&v37[v35 - 8] = *(_QWORD *)&v64[v35 - 8];\n                v45 = (unsigned __int64)(v37 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v46 = &v37[-v45];\n                v47 = (char *)(v64 - v46);\n                v48 = ((_DWORD)v46 + v35) & 0xFFFFFFF8;\n                if ( v48 >= 8 )\n                {\n                  v49 = v48 & 0xFFFFFFF8;\n                  v50 = 0;\n                  do\n                  {\n                    v51 = v50;\n                    v50 += 8;\n                    *(_QWORD *)(v45 + v51) = *(_QWORD *)&v47[v51];\n                  }\n                  while ( v50 < v49 );\n                }\n              }\n              else if ( v35 & 4 )\n              {\n                *(_DWORD *)v37 = *(_DWORD *)v64;\n                *(_DWORD *)&v37[v35 - 4] = *(_DWORD *)&v64[v35 - 4];\n              }\n              else if ( v35 )\n              {\n                *v37 = v64[0];\n                if ( v35 & 2 )\n                  *(_WORD *)&v37[v35 - 2] = *(_WORD *)&v64[v35 - 2];\n              }\n              v38 = v33 + 1;\n              v39 = &v31[v36 - 1];\n              if ( v38 >= 8 )\n              {\n                *(_QWORD *)v39 = *(_QWORD *)v65;\n                *(_QWORD *)&v39[v38 - 8] = *(_QWORD *)&v65[v38 - 8];\n                v52 = (unsigned __int64)(v39 + 8) & 0xFFFFFFFFFFFFFFF8LL;\n                v53 = &v39[-v52];\n                v54 = (char *)(v65 - v53);\n                v55 = ((_DWORD)v53 + v38) & 0xFFFFFFF8;\n                if ( v55 >= 8 )\n                {\n                  v56 = v55 & 0xFFFFFFF8;\n                  v57 = 0;\n                  do\n                  {\n                    v58 = v57;\n                    v57 += 8;\n                    *(_QWORD *)(v52 + v58) = *(_QWORD *)&v54[v58];\n                  }\n                  while ( v57 < v56 );\n                }\n              }\n              else if ( v38 & 4 )\n              {\n                *(_DWORD *)v39 = *(_DWORD *)v65;\n                *(_DWORD *)&v39[v38 - 4] = *(_DWORD *)&v65[v38 - 4];\n              }\n              else if ( v38 )\n              {\n                *v39 = v65[0];\n                if ( v38 & 2 )\n                  *(_WORD *)&v39[v38 - 2] = *(_WORD *)&v65[v38 - 2];\n              }\n              v1 = v31;\n              v23 = v21->_IO_read_ptr;\n              if ( v23 < v21->_IO_read_end )\n                goto LABEL_31;\n            }\n            v40 = v21;\n            v2 = v22;\n            fclose(v40);\n            if ( !v62 )\n              goto LABEL_25;\n            v1[v62] = 0;\n            goto LABEL_26;\n          }\n          close(v18);\n        }\nLABEL_25:\n        v1 = \"\\\"\" + 1;\nLABEL_26:\n        free((void *)v13);\n        goto LABEL_20;\n      }\n      if ( v7[v8 - 1] == 47 )\n      {\n        v11 = v8 + 14;\n        goto LABEL_18;\n      }\n      v14 = v8 + 15;\n      v9 = v8 + 1;\n    }\n    else\n    {\n      v14 = 116LL;\n      v9 = 102LL;\n      v10 = 101LL;\n      v7 = \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\n    }\n    v15 = (char *)malloc(v14);\n    v13 = v15;\n    if ( !v15 )\n      goto LABEL_19;\n    memcpy(v15, v7, v10);\n    v13[v10] = 47;\n    goto LABEL_24;\n  }\nLABEL_4:\n  v3 = *v1;\n  if ( *v1 )\n  {\n    while ( strcmp(v2, v1) && (v3 != 42 || v1[1]) )\n    {\n      v4 = strlen(v1);\n      v1 += v4 + strlen(&v1[v4 + 1]) + 2;\n      v3 = *v1;\n      if ( !*v1 )\n        goto LABEL_11;\n    }\n    v2 = &v1[strlen(v1) + 1];\n  }\nLABEL_11:\n  if ( !*v2 )\n    v2 = \"ASCII\";\n  return v2;\n}\n", 
            "funcStartAddr": "0x4032d0L", 
            "funcEndAddr": "0x403832L", 
            "funcName": "sub_4032D0"
        }, 
        {
            "decompiledFuncCode": "void init(void)\n{\n  init_proc();\n}\n", 
            "funcStartAddr": "0x403840L", 
            "funcEndAddr": "0x40389dL", 
            "funcName": "init"
        }, 
        {
            "decompiledFuncCode": "void fini(void)\n{\n  ;\n}\n", 
            "funcStartAddr": "0x4038a0L", 
            "funcEndAddr": "0x4038a1L", 
            "funcName": "fini"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4038B0(__int64 a1)\n{\n  __int64 v1; // rdx@1\n\n  v1 = 0LL;\n  if ( &unk_606168 )\n    v1 = unk_606168;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n", 
            "funcStartAddr": "0x4038b0L", 
            "funcEndAddr": "0x4038c8L", 
            "funcName": "sub_4038B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4038C8(__int64 a1, __int64 a2, __int64 a3)\n{\n  void (**v3)(void); // rbx@1\n  __int64 v5; // [sp-8h] [bp-10h]@1\n\n  v3 = (void (**)(void))&unk_605E30;\n  v5 = a3;\n  while ( *v3 != (void (*)(void))-1 )\n  {\n    (*v3)();\n    --v3;\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x4038c8L", 
            "funcEndAddr": "0x4038e8L", 
            "funcName": "sub_4038C8"
        }
    ], 
    "binaryInfo": {
        "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_bigram.elf", 
        "isStripped": "True"
    }, 
    "funcCount": 25, 
    "buildInfo": {
        "decompilerName": "IDA Pro", 
        "compilerVersion": "9.4.0", 
        "Optlevel": "-O", 
        "compilerName": "gcc"
    }
}